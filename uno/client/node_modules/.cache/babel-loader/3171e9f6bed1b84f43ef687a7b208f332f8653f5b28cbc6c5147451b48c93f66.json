{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\uno\\\\src\\\\Components\\\\Users\\\\Users.jsx\";\nimport classNames from 'classnames';\nimport styles from './styles.module.css';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Users = () => {\n  const data = [];\n  for (let i = 0; i < 50; i++) {\n    data.push({\n      'Наименование': 'UM System Group',\n      \"E-mail\": 'example@mail.ru',\n      \"Телефон\": '+77007007070',\n      \"Роль\": 'admin',\n      \"Франшиза\": 'Шымкент, Сарыагаш',\n      \"баланс\": '250000'\n    });\n  }\n  const headers = ['#'].concat(Object.keys(data[0]));\n  return data ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.table,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.table_header,\n      children: headers.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(styles.table_cell, styles.table_title),\n          children: el.toUpperCase()\n        }, nanoid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.table_content,\n      children: data.map((el, index) => {\n        const cellsValues = Object.values(el);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.table_row,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames(styles.table_cell, styles.table_cell_count),\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), cellsValues.map((cell, idx) => {\n            if (idx === cellsValues.length - 1) {\n              const balance = cell.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.table_cell,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.table_cell__balance,\n                  children: balance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 94\n                }, this)\n              }, nanoid(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 44\n              }, this);\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.table_cell,\n              children: cell\n            }, nanoid(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 40\n            }, this);\n          })]\n        }, nanoid(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"no data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 11\n  }, this);\n};\n_c = Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["classNames","styles","nanoid","Users","data","i","push","headers","concat","Object","keys","table","table_header","map","el","table_cell","table_title","toUpperCase","table_content","index","cellsValues","values","table_row","table_cell_count","cell","idx","length","balance","replace","table_cell__balance"],"sources":["C:/Development/uno/src/Components/Users/Users.jsx"],"sourcesContent":["import classNames from 'classnames'\r\nimport styles from './styles.module.css'\r\nimport { nanoid } from 'nanoid'\r\n\r\nexport const Users = () => {\r\n    const data = []\r\n\r\n    for (let i=0; i< 50; i++) {\r\n        data.push({'Наименование': 'UM System Group',\r\n        \"E-mail\": 'example@mail.ru',\r\n        \"Телефон\": '+77007007070',\r\n        \"Роль\": 'admin',\r\n        \"Франшиза\": 'Шымкент, Сарыагаш',\r\n        \"баланс\": '250000'})\r\n    }\r\n\r\n    const headers = ['#'].concat(Object.keys(data[0]))\r\n    \r\n    return (\r\n        data\r\n        ? <div className={styles.table}>\r\n            <div className={styles.table_header}>\r\n                {headers.map(el => {\r\n                    return (\r\n                        <div key={nanoid()} className={classNames(styles.table_cell, styles.table_title)}>{el.toUpperCase()}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className={styles.table_content}>\r\n                {data.map((el, index) => {\r\n                    const cellsValues = Object.values(el);\r\n\r\n                    return (\r\n                        <div key={nanoid()} className={styles.table_row}>\r\n                            <div className={classNames(styles.table_cell, styles.table_cell_count)}>{index+1}</div>\r\n                            {cellsValues.map((cell, idx) => {\r\n                                if (idx===cellsValues.length-1) {\r\n                                    const balance = cell.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                                    return <div key={nanoid()} className={styles.table_cell}><div className={styles.table_cell__balance}>{balance}</div></div>\r\n                                }\r\n                                return <div key={nanoid()} className={styles.table_cell}>{cell}</div>\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n        : <div>no data</div>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,MAAM,QAAQ,QAAQ;AAAA;AAE/B,OAAO,MAAMC,KAAK,GAAG,MAAM;EACvB,MAAMC,IAAI,GAAG,EAAE;EAEf,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAE,EAAE,EAAEA,CAAC,EAAE,EAAE;IACtBD,IAAI,CAACE,IAAI,CAAC;MAAC,cAAc,EAAE,iBAAiB;MAC5C,QAAQ,EAAE,iBAAiB;MAC3B,SAAS,EAAE,cAAc;MACzB,MAAM,EAAE,OAAO;MACf,UAAU,EAAE,mBAAmB;MAC/B,QAAQ,EAAE;IAAQ,CAAC,CAAC;EACxB;EAEA,MAAMC,OAAO,GAAG,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACN,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAElD,OACIA,IAAI,gBACF;IAAK,SAAS,EAAEH,MAAM,CAACU,KAAM;IAAA,wBAC3B;MAAK,SAAS,EAAEV,MAAM,CAACW,YAAa;MAAA,UAC/BL,OAAO,CAACM,GAAG,CAACC,EAAE,IAAI;QACf,oBACI;UAAoB,SAAS,EAAEd,UAAU,CAACC,MAAM,CAACc,UAAU,EAAEd,MAAM,CAACe,WAAW,CAAE;UAAA,UAAEF,EAAE,CAACG,WAAW;QAAE,GAAzFf,MAAM,EAAE;UAAA;UAAA;UAAA;QAAA,QAAwF;MAElH,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAK,SAAS,EAAED,MAAM,CAACiB,aAAc;MAAA,UAChCd,IAAI,CAACS,GAAG,CAAC,CAACC,EAAE,EAAEK,KAAK,KAAK;QACrB,MAAMC,WAAW,GAAGX,MAAM,CAACY,MAAM,CAACP,EAAE,CAAC;QAErC,oBACI;UAAoB,SAAS,EAAEb,MAAM,CAACqB,SAAU;UAAA,wBAC5C;YAAK,SAAS,EAAEtB,UAAU,CAACC,MAAM,CAACc,UAAU,EAAEd,MAAM,CAACsB,gBAAgB,CAAE;YAAA,UAAEJ,KAAK,GAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QAAO,EACtFC,WAAW,CAACP,GAAG,CAAC,CAACW,IAAI,EAAEC,GAAG,KAAK;YAC5B,IAAIA,GAAG,KAAGL,WAAW,CAACM,MAAM,GAAC,CAAC,EAAE;cAC5B,MAAMC,OAAO,GAAGH,IAAI,CAACI,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;cAC1D,oBAAO;gBAAoB,SAAS,EAAE3B,MAAM,CAACc,UAAW;gBAAA,uBAAC;kBAAK,SAAS,EAAEd,MAAM,CAAC4B,mBAAoB;kBAAA,UAAEF;gBAAO;kBAAA;kBAAA;kBAAA;gBAAA;cAAO,GAAnGzB,MAAM,EAAE;gBAAA;gBAAA;gBAAA;cAAA,QAAiG;YAC9H;YACA,oBAAO;cAAoB,SAAS,EAAED,MAAM,CAACc,UAAW;cAAA,UAAES;YAAI,GAA7CtB,MAAM,EAAE;cAAA;cAAA;cAAA;YAAA,QAA4C;UACzE,CAAC,CAAC;QAAA,GARIA,MAAM,EAAE;UAAA;UAAA;UAAA;QAAA,QASZ;MAEd,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ,gBACJ;IAAA,UAAK;EAAO;IAAA;IAAA;IAAA;EAAA,QAAM;AAE5B,CAAC;AAAA,KA7CYC,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}