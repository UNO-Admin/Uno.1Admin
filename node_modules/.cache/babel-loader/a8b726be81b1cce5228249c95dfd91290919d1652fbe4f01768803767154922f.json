{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\11312\\\\client\\\\src\\\\Components\\\\Objects\\\\Objects.js\",\n  _s = $RefreshSig$();\nimport classNames from \"classnames\";\nimport { nanoid } from \"nanoid\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectObjectData, selectObjectsIds, selectObjectsIsLoading } from \"../../store/Objects/selectors\";\nimport { getObjects } from \"../../store/Objects/Thunks/getObjects\";\nimport styles from \"./styles.module.css\";\nimport { Object } from \"../Object/Object\";\nimport { selectUserId } from \"../../store/Auth/selectors\";\nimport { UserData } from \"../UserData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Objects = () => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => selectObjectsIsLoading(state));\n  const objectsIds = useSelector(state => selectObjectsIds(state));\n  const objectsData = useSelector(state => selectObjectData(state));\n  const [isRowSelected, setIsRowSelected] = useState(false);\n  let userId = useSelector(state => selectUserId(state));\n  if (localStorage.userId) {\n    userId = localStorage.userId;\n  }\n  useEffect(() => {\n    dispatch(getObjects({\n      userId\n    }));\n  }, []);\n  const headers = [\"ID\", \"Название\", \"Город\", \"Телефон\", \"Дата\", \"Партнер\", \"Баланс\"];\n  const userStyles = {\n    cell: styles.table_cell,\n    cell_num: classNames(styles.table_cell, styles.table_cell__num),\n    row: styles.table_row,\n    cell__balance: styles.table_cell__balance\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.objects_wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: styles.table_header,\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: styles.table_row,\n          children: headers === null || headers === void 0 ? void 0 : headers.map(el => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              className: classNames(styles.table_cell, styles.table_cell__header),\n              children: el\n            }, nanoid(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: styles.table_content,\n        children: objectsIds.map(id => /*#__PURE__*/_jsxDEV(UserData, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), isRowSelected && /*#__PURE__*/_jsxDEV(Object, {\n        toggleObject: setIsRowSelected,\n        id: isRowSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Objects, \"7k0FZVOSWUfsmg25usJfw7XNEyY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Objects;\nvar _c;\n$RefreshReg$(_c, \"Objects\");","map":{"version":3,"names":["classNames","nanoid","useEffect","useState","useDispatch","useSelector","selectObjectData","selectObjectsIds","selectObjectsIsLoading","getObjects","styles","Object","selectUserId","UserData","Objects","dispatch","isLoading","state","objectsIds","objectsData","isRowSelected","setIsRowSelected","userId","localStorage","headers","userStyles","cell","table_cell","cell_num","table_cell__num","row","table_row","cell__balance","table_cell__balance","objects_wrapper","table","table_header","map","el","table_cell__header","table_content","id"],"sources":["C:/Development/11312/client/src/Components/Objects/Objects.js"],"sourcesContent":["import classNames from \"classnames\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectObjectData,\r\n  selectObjectsIds,\r\n  selectObjectsIsLoading,\r\n} from \"../../store/Objects/selectors\";\r\nimport { getObjects } from \"../../store/Objects/Thunks/getObjects\";\r\nimport styles from \"./styles.module.css\";\r\nimport { Object } from \"../Object/Object\";\r\nimport { selectUserId } from \"../../store/Auth/selectors\";\r\nimport { UserData } from \"../UserData\";\r\n\r\nexport const Objects = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => selectObjectsIsLoading(state));\r\n  const objectsIds = useSelector((state) => selectObjectsIds(state));\r\n  const objectsData = useSelector((state) => selectObjectData(state));\r\n  const [isRowSelected, setIsRowSelected] = useState(false);\r\n  let userId = useSelector(state => selectUserId(state))\r\n  if (localStorage.userId) {\r\n    userId = localStorage.userId;\r\n  }\r\n  useEffect(() => {\r\n    dispatch(getObjects({userId}));\r\n  }, []);\r\n\r\n  const headers = [\r\n    \"ID\",\r\n    \"Название\",\r\n    \"Город\",\r\n    \"Телефон\",\r\n    \"Дата\",\r\n    \"Партнер\",\r\n    \"Баланс\",\r\n  ];\r\n  const userStyles = {\r\n    cell: styles.table_cell,\r\n    cell_num: classNames(\r\n      styles.table_cell,\r\n      styles.table_cell__num\r\n    ),\r\n    row: styles.table_row,\r\n    cell__balance: styles.table_cell__balance,\r\n  }\r\n\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className={styles.objects_wrapper}>\r\n        <table className={styles.table}>\r\n          <thead className={styles.table_header}>\r\n            <tr className={styles.table_row}>\r\n              {headers?.map((el) => {\r\n                return (\r\n                  <th\r\n                    key={nanoid()}\r\n                    className={classNames(\r\n                      styles.table_cell,\r\n                      styles.table_cell__header\r\n                    )}>\r\n                    {el}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody className={styles.table_content}>\r\n            {objectsIds.map(id => <UserData />)}\r\n            {/* {objectsIds?.map((el, row) => {\r\n              const object = objectsData[el];\r\n              const { IDSRV, AMOUNT, CITY, NAME, PHONE, DT } = object;\r\n\r\n              return (\r\n                <tr\r\n                  key={el}\r\n                  className={classNames(styles.table_row)}\r\n                  onClick={() => setIsRowSelected(IDSRV)}>\r\n                  {headers.map((_, idx) => {\r\n                    switch (idx) {\r\n                      default:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={styles.table_cell}></td>\r\n                        );\r\n                      case 0:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={classNames(\r\n                              styles.table_cell,\r\n                              styles.table_cell__num\r\n                            )}>\r\n                            {IDSRV}\r\n                          </td>\r\n                        );\r\n                      case 1:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={styles.table_cell}>\r\n                            {NAME}\r\n                          </td>\r\n                        );\r\n                      case 2:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={styles.table_cell}>\r\n                            {CITY}\r\n                          </td>\r\n                        );\r\n                      case 3:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={styles.table_cell}>\r\n                            {PHONE}\r\n                          </td>\r\n                        );\r\n                      case 4:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={classNames(\r\n                              styles.table_cell,\r\n                              styles.table_cell__num\r\n                            )}>\r\n                            {DT.substr(0, DT.indexOf(\"T\"))}\r\n                          </td>\r\n                        );\r\n                      case 5:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={styles.table_cell}>\r\n                            {\"UM System Group\"}\r\n                          </td>\r\n                        );\r\n                      case 6:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={classNames(\r\n                              styles.table_cell,\r\n                              styles.table_cell__num\r\n                            )}>\r\n                            <div className={styles.table_cell__balance}>\r\n                              {AMOUNT}\r\n                            </div>\r\n                          </td>\r\n                        );\r\n                    }\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}*/}\r\n          </tbody> \r\n          {isRowSelected && <Object toggleObject={setIsRowSelected} id={isRowSelected}/>}\r\n        </table>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,gBAAgB,EAChBC,gBAAgB,EAChBC,sBAAsB,QACjB,+BAA+B;AACtC,SAASC,UAAU,QAAQ,uCAAuC;AAClE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,QAAQ,QAAQ,aAAa;AAAC;AAEvC,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EAC3B,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,SAAS,GAAGX,WAAW,CAAEY,KAAK,IAAKT,sBAAsB,CAACS,KAAK,CAAC,CAAC;EACvE,MAAMC,UAAU,GAAGb,WAAW,CAAEY,KAAK,IAAKV,gBAAgB,CAACU,KAAK,CAAC,CAAC;EAClE,MAAME,WAAW,GAAGd,WAAW,CAAEY,KAAK,IAAKX,gBAAgB,CAACW,KAAK,CAAC,CAAC;EACnE,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACzD,IAAImB,MAAM,GAAGjB,WAAW,CAACY,KAAK,IAAIL,YAAY,CAACK,KAAK,CAAC,CAAC;EACtD,IAAIM,YAAY,CAACD,MAAM,EAAE;IACvBA,MAAM,GAAGC,YAAY,CAACD,MAAM;EAC9B;EACApB,SAAS,CAAC,MAAM;IACda,QAAQ,CAACN,UAAU,CAAC;MAACa;IAAM,CAAC,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,OAAO,GAAG,CACd,IAAI,EACJ,UAAU,EACV,OAAO,EACP,SAAS,EACT,MAAM,EACN,SAAS,EACT,QAAQ,CACT;EACD,MAAMC,UAAU,GAAG;IACjBC,IAAI,EAAEhB,MAAM,CAACiB,UAAU;IACvBC,QAAQ,EAAE5B,UAAU,CAClBU,MAAM,CAACiB,UAAU,EACjBjB,MAAM,CAACmB,eAAe,CACvB;IACDC,GAAG,EAAEpB,MAAM,CAACqB,SAAS;IACrBC,aAAa,EAAEtB,MAAM,CAACuB;EACxB,CAAC;EAGD,IAAIjB,SAAS,EAAE;IACb,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAC9B;EACA,oBACE;IAAK,SAAS,EAAEN,MAAM,CAACwB,eAAgB;IAAA,uBACnC;MAAO,SAAS,EAAExB,MAAM,CAACyB,KAAM;MAAA,wBAC7B;QAAO,SAAS,EAAEzB,MAAM,CAAC0B,YAAa;QAAA,uBACpC;UAAI,SAAS,EAAE1B,MAAM,CAACqB,SAAU;UAAA,UAC7BP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEa,GAAG,CAAEC,EAAE,IAAK;YACpB,oBACE;cAEE,SAAS,EAAEtC,UAAU,CACnBU,MAAM,CAACiB,UAAU,EACjBjB,MAAM,CAAC6B,kBAAkB,CACzB;cAAA,UACDD;YAAE,GALErC,MAAM,EAAE;cAAA;cAAA;cAAA;YAAA,QAMV;UAET,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MACC;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAO,SAAS,EAAES,MAAM,CAAC8B,aAAc;QAAA,UACpCtB,UAAU,CAACmB,GAAG,CAACI,EAAE,iBAAI,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG;MAAC;QAAA;QAAA;QAAA;MAAA,QA0F7B,EACPrB,aAAa,iBAAI,QAAC,MAAM;QAAC,YAAY,EAAEC,gBAAiB;QAAC,EAAE,EAAED;MAAc;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EACxE;IAAA;IAAA;IAAA;EAAA,QACN;AAEV,CAAC;AAAC,GAxJWN,OAAO;EAAA,QACDV,WAAW,EACVC,WAAW,EACVA,WAAW,EACVA,WAAW,EAElBA,WAAW;AAAA;AAAA,KANbS,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}