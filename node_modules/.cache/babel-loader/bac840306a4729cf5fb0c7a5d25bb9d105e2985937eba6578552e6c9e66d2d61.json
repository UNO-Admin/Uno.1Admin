{"ast":null,"code":"/* Tabulator v5.0.10 (c) Oliver Folkerd 2021 */\nclass CoreFeature {\n  constructor(table) {\n    this.table = table;\n  }\n\n  //////////////////////////////////////////\n  /////////////// DataLoad /////////////////\n  //////////////////////////////////////////\n\n  reloadData(data, silent) {\n    return this.table.dataLoader.load(data, undefined, undefined, undefined, silent);\n  }\n\n  //////////////////////////////////////////\n  ///////////// Localization ///////////////\n  //////////////////////////////////////////\n\n  langText() {\n    return this.table.modules.localize.getText(...arguments);\n  }\n  langBind() {\n    return this.table.modules.localize.bind(...arguments);\n  }\n  langLocale() {\n    return this.table.modules.localize.getLocale(...arguments);\n  }\n\n  //////////////////////////////////////////\n  ////////// Inter Table Comms /////////////\n  //////////////////////////////////////////\n\n  commsConnections() {\n    return this.table.modules.comms.getConnections(...arguments);\n  }\n  commsSend() {\n    return this.table.modules.comms.send(...arguments);\n  }\n\n  //////////////////////////////////////////\n  //////////////// Layout  /////////////////\n  //////////////////////////////////////////\n\n  layoutMode() {\n    return this.table.modules.layout.getMode();\n  }\n  layoutRefresh() {\n    return this.table.modules.layout.layout();\n  }\n\n  //////////////////////////////////////////\n  /////////////// Event Bus ////////////////\n  //////////////////////////////////////////\n\n  subscribe() {\n    return this.table.eventBus.subscribe(...arguments);\n  }\n  unsubscribe() {\n    return this.table.eventBus.unsubscribe(...arguments);\n  }\n  subscribed(key) {\n    return this.table.eventBus.subscribed(key);\n  }\n  subscriptionChange() {\n    return this.table.eventBus.subscriptionChange(...arguments);\n  }\n  dispatch() {\n    return this.table.eventBus.dispatch(...arguments);\n  }\n  chain() {\n    return this.table.eventBus.chain(...arguments);\n  }\n  confirm() {\n    return this.table.eventBus.confirm(...arguments);\n  }\n  dispatchExternal() {\n    return this.table.externalEvents.dispatch(...arguments);\n  }\n  subscribedExternal(key) {\n    return this.table.externalEvents.subscribed(key);\n  }\n  subscriptionChangeExternal() {\n    return this.table.externalEvents.subscriptionChange(...arguments);\n  }\n\n  //////////////////////////////////////////\n  //////////////// Options /////////////////\n  //////////////////////////////////////////\n\n  options(key) {\n    return this.table.options[key];\n  }\n  setOption(key, value) {\n    if (typeof value !== \"undefined\") {\n      this.table.options[key] = value;\n    }\n    return this.table.options[key];\n  }\n\n  //////////////////////////////////////////\n  //////////////// Modules /////////////////\n  //////////////////////////////////////////\n\n  module(key) {\n    return this.table.module(key);\n  }\n}\nclass Module extends CoreFeature {\n  constructor(table, name) {\n    super(table);\n    this._handler = null;\n  }\n  initialize() {\n    // setup module when table is initialized, to be overriden in module\n  }\n\n  ///////////////////////////////////\n  ////// Options Registration ///////\n  ///////////////////////////////////\n\n  registerTableOption(key, value) {\n    this.table.optionsList.register(key, value);\n  }\n  registerColumnOption(key, value) {\n    this.table.columnManager.optionsList.register(key, value);\n  }\n\n  ///////////////////////////////////\n  /// Public Function Registation ///\n  ///////////////////////////////////\n\n  registerTableFunction(name, func) {\n    if (typeof this.table[name] === \"undefined\") {\n      this.table[name] = func;\n    } else {\n      console.warn(\"Unable to bind table function, name already in use\", name);\n    }\n  }\n  registerComponentFunction(component, func, handler) {\n    return this.table.componentFunctionBinder.bind(component, func, handler);\n  }\n\n  ///////////////////////////////////\n  ////////// Data Pipeline //////////\n  ///////////////////////////////////\n\n  registerDataHandler(handler, priority) {\n    this.table.rowManager.registerDataPipelineHandler(handler, priority);\n    this._handler = handler;\n  }\n  registerDisplayHandler(handler, priority) {\n    this.table.rowManager.registerDisplayPipelineHandler(handler, priority);\n    this._handler = handler;\n  }\n  refreshData(renderInPosition, handler) {\n    if (!handler) {\n      handler = this._handler;\n    }\n    if (handler) {\n      this.table.rowManager.refreshActiveData(handler, false, renderInPosition);\n    }\n  }\n}\nclass Helpers {\n  static elVisible(el) {\n    return !(el.offsetWidth <= 0 && el.offsetHeight <= 0);\n  }\n  static elOffset(el) {\n    var box = el.getBoundingClientRect();\n    return {\n      top: box.top + window.pageYOffset - document.documentElement.clientTop,\n      left: box.left + window.pageXOffset - document.documentElement.clientLeft\n    };\n  }\n  static deepClone(obj, clone) {\n    let list = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var objectProto = {}.__proto__,\n      arrayProto = [].__proto__;\n    if (!clone) {\n      clone = Object.assign(Array.isArray(obj) ? [] : {}, obj);\n    }\n    for (var i in obj) {\n      let subject = obj[i],\n        match,\n        copy;\n      if (subject != null && typeof subject === \"object\" && (subject.__proto__ === objectProto || subject.__proto__ === arrayProto)) {\n        match = list.findIndex(item => {\n          return item.subject === subject;\n        });\n        if (match > -1) {\n          clone[i] = list[match].copy;\n        } else {\n          copy = Object.assign(Array.isArray(subject) ? [] : {}, subject);\n          list.unshift({\n            subject,\n            copy\n          });\n          clone[i] = this.deepClone(subject, copy, list);\n        }\n      }\n    }\n    return clone;\n  }\n}\nvar defautlAccessors = {};\nclass Accessor extends Module {\n  constructor(table) {\n    super(table);\n    this.allowedTypes = [\"\", \"data\", \"download\", \"clipboard\", \"print\", \"htmlOutput\"]; //list of accessor types\n\n    this.registerColumnOption(\"accessor\");\n    this.registerColumnOption(\"accessorParams\");\n    this.registerColumnOption(\"accessorData\");\n    this.registerColumnOption(\"accessorDataParams\");\n    this.registerColumnOption(\"accessorDownload\");\n    this.registerColumnOption(\"accessorDownloadParams\");\n    this.registerColumnOption(\"accessorClipboard\");\n    this.registerColumnOption(\"accessorClipboardParams\");\n    this.registerColumnOption(\"accessorPrint\");\n    this.registerColumnOption(\"accessorPrintParams\");\n    this.registerColumnOption(\"accessorHtmlOutput\");\n    this.registerColumnOption(\"accessorHtmlOutputParams\");\n  }\n  initialize() {\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"row-data-retrieve\", this.transformRow.bind(this));\n  }\n\n  //initialize column accessor\n  initializeColumn(column) {\n    var match = false,\n      config = {};\n    this.allowedTypes.forEach(type => {\n      var key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n        accessor;\n      if (column.definition[key]) {\n        accessor = this.lookupAccessor(column.definition[key]);\n        if (accessor) {\n          match = true;\n          config[key] = {\n            accessor: accessor,\n            params: column.definition[key + \"Params\"] || {}\n          };\n        }\n      }\n    });\n    if (match) {\n      column.modules.accessor = config;\n    }\n  }\n  lookupAccessor(value) {\n    var accessor = false;\n\n    //set column accessor\n    switch (typeof value) {\n      case \"string\":\n        if (Accessor.accessors[value]) {\n          accessor = Accessor.accessors[value];\n        } else {\n          console.warn(\"Accessor Error - No such accessor found, ignoring: \", value);\n        }\n        break;\n      case \"function\":\n        accessor = value;\n        break;\n    }\n    return accessor;\n  }\n\n  //apply accessor to row\n  transformRow(row, type) {\n    var key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n      rowComponent = row.getComponent();\n\n    //clone data object with deep copy to isolate internal data from returned result\n    var data = Helpers.deepClone(row.data || {});\n    this.table.columnManager.traverse(function (column) {\n      var value, accessor, params, colCompnent;\n      if (column.modules.accessor) {\n        accessor = column.modules.accessor[key] || column.modules.accessor.accessor || false;\n        if (accessor) {\n          value = column.getFieldValue(data);\n          if (value != \"undefined\") {\n            colCompnent = column.getComponent();\n            params = typeof accessor.params === \"function\" ? accessor.params(value, data, type, colCompnent, rowComponent) : accessor.params;\n            column.setFieldValue(data, accessor.accessor(value, data, type, params, colCompnent, rowComponent));\n          }\n        }\n      }\n    });\n    return data;\n  }\n}\n\n//load defaults\nAccessor.moduleName = \"accessor\";\nAccessor.accessors = defautlAccessors;\nvar defaultConfig = {\n  method: \"GET\"\n};\nfunction generateParamsList(data, prefix) {\n  var output = [];\n  prefix = prefix || \"\";\n  if (Array.isArray(data)) {\n    data.forEach((item, i) => {\n      output = output.concat(generateParamsList(item, prefix ? prefix + \"[\" + i + \"]\" : i));\n    });\n  } else if (typeof data === \"object\") {\n    for (var key in data) {\n      output = output.concat(generateParamsList(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\n    }\n  } else {\n    output.push({\n      key: prefix,\n      value: data\n    });\n  }\n  return output;\n}\nfunction serializeParams(params) {\n  var output = generateParamsList(params),\n    encoded = [];\n  output.forEach(function (item) {\n    encoded.push(encodeURIComponent(item.key) + \"=\" + encodeURIComponent(item.value));\n  });\n  return encoded.join(\"&\");\n}\nfunction defaultURLGenerator(url, config, params) {\n  if (url) {\n    if (params && Object.keys(params).length) {\n      if (!config.method || config.method.toLowerCase() == \"get\") {\n        config.method = \"get\";\n        url += (url.includes(\"?\") ? \"&\" : \"?\") + serializeParams(params);\n      }\n    }\n  }\n  return url;\n}\nfunction defaultLoaderPromise(url, config, params) {\n  var contentType;\n  return new Promise((resolve, reject) => {\n    //set url\n    url = this.urlGenerator.call(this.table, url, config, params);\n\n    //set body content if not GET request\n    if (config.method.toUpperCase() != \"GET\") {\n      contentType = typeof this.table.options.ajaxContentType === \"object\" ? this.table.options.ajaxContentType : this.contentTypeFormatters[this.table.options.ajaxContentType];\n      if (contentType) {\n        for (var key in contentType.headers) {\n          if (!config.headers) {\n            config.headers = {};\n          }\n          if (typeof config.headers[key] === \"undefined\") {\n            config.headers[key] = contentType.headers[key];\n          }\n        }\n        config.body = contentType.body.call(this, url, config, params);\n      } else {\n        console.warn(\"Ajax Error - Invalid ajaxContentType value:\", this.table.options.ajaxContentType);\n      }\n    }\n    if (url) {\n      //configure headers\n      if (typeof config.headers === \"undefined\") {\n        config.headers = {};\n      }\n      if (typeof config.headers.Accept === \"undefined\") {\n        config.headers.Accept = \"application/json\";\n      }\n      if (typeof config.headers[\"X-Requested-With\"] === \"undefined\") {\n        config.headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n      }\n      if (typeof config.mode === \"undefined\") {\n        config.mode = \"cors\";\n      }\n      if (config.mode == \"cors\") {\n        if (typeof config.headers[\"Origin\"] === \"undefined\") {\n          config.headers[\"Origin\"] = window.location.origin;\n        }\n        if (typeof config.credentials === \"undefined\") {\n          config.credentials = 'same-origin';\n        }\n      } else {\n        if (typeof config.credentials === \"undefined\") {\n          config.credentials = 'include';\n        }\n      }\n\n      //send request\n      fetch(url, config).then(response => {\n        if (response.ok) {\n          response.json().then(data => {\n            resolve(data);\n          }).catch(error => {\n            reject(error);\n            console.warn(\"Ajax Load Error - Invalid JSON returned\", error);\n          });\n        } else {\n          console.error(\"Ajax Load Error - Connection Error: \" + response.status, response.statusText);\n          reject(response);\n        }\n      }).catch(error => {\n        console.error(\"Ajax Load Error - Connection Error: \", error);\n        reject(error);\n      });\n    } else {\n      console.warn(\"Ajax Load Error - No URL Set\");\n      resolve([]);\n    }\n  });\n}\nfunction generateParamsList$1(data, prefix) {\n  var output = [];\n  prefix = prefix || \"\";\n  if (Array.isArray(data)) {\n    data.forEach((item, i) => {\n      output = output.concat(generateParamsList$1(item, prefix ? prefix + \"[\" + i + \"]\" : i));\n    });\n  } else if (typeof data === \"object\") {\n    for (var key in data) {\n      output = output.concat(generateParamsList$1(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\n    }\n  } else {\n    output.push({\n      key: prefix,\n      value: data\n    });\n  }\n  return output;\n}\nvar defaultContentTypeFormatters = {\n  \"json\": {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: function (url, config, params) {\n      return JSON.stringify(params);\n    }\n  },\n  \"form\": {\n    headers: {},\n    body: function (url, config, params) {\n      var output = generateParamsList$1(params),\n        form = new FormData();\n      output.forEach(function (item) {\n        form.append(item.key, item.value);\n      });\n      return form;\n    }\n  }\n};\nclass Ajax extends Module {\n  constructor(table) {\n    super(table);\n    this.config = false; //hold config object for ajax request\n    this.url = \"\"; //request URL\n    this.urlGenerator = false;\n    this.params = false; //request parameters\n\n    this.loaderPromise = false;\n    this.registerTableOption(\"ajaxURL\", false); //url for ajax loading\n    this.registerTableOption(\"ajaxURLGenerator\", false);\n    this.registerTableOption(\"ajaxParams\", {}); //params for ajax loading\n    this.registerTableOption(\"ajaxConfig\", \"get\"); //ajax request type\n    this.registerTableOption(\"ajaxContentType\", \"form\"); //ajax request type\n    this.registerTableOption(\"ajaxRequestFunc\", false); //promise function\n\n    this.registerTableOption(\"ajaxRequesting\", function () {});\n    this.registerTableOption(\"ajaxResponse\", false);\n    this.contentTypeFormatters = Ajax.contentTypeFormatters;\n  }\n\n  //initialize setup options\n  initialize() {\n    this.loaderPromise = this.table.options.ajaxRequestFunc || Ajax.defaultLoaderPromise;\n    this.urlGenerator = this.table.options.ajaxURLGenerator || Ajax.defaultURLGenerator;\n    if (this.table.options.ajaxParams) {\n      this.setParams(this.table.options.ajaxParams);\n    }\n    if (this.table.options.ajaxConfig) {\n      this.setConfig(this.table.options.ajaxConfig);\n    }\n    if (this.table.options.ajaxURL) {\n      this.setUrl(this.table.options.ajaxURL);\n    }\n    this.registerTableFunction(\"getAjaxUrl\", this.getUrl.bind(this));\n    this.subscribe(\"data-loading\", this.requestDataCheck.bind(this));\n    this.subscribe(\"data-load\", this.requestData.bind(this));\n  }\n  requestDataCheck(data, params, config, silent) {\n    return !!(!data && this.url || typeof data === \"string\");\n  }\n  requestData(data, params, config, silent, previousData) {\n    if (this.requestDataCheck(data)) {\n      if (data) {\n        this.setUrl(data);\n      }\n      if (params) {\n        this.setParams(params, true);\n      }\n      if (config) {\n        this.setConfig(config);\n      }\n      return this.sendRequest();\n    } else {\n      return previousData;\n    }\n  }\n\n  //set ajax params\n  setParams(params, update) {\n    if (update) {\n      this.params = this.params || {};\n      for (let key in params) {\n        this.params[key] = params[key];\n      }\n    } else {\n      this.params = params;\n    }\n  }\n  getParams() {\n    return this.params || {};\n  }\n\n  //load config object\n  setConfig(config) {\n    this._loadDefaultConfig();\n    if (typeof config == \"string\") {\n      this.config.method = config;\n    } else {\n      for (let key in config) {\n        this.config[key] = config[key];\n      }\n    }\n  }\n\n  //create config object from default\n  _loadDefaultConfig(force) {\n    if (!this.config || force) {\n      this.config = {};\n\n      //load base config from defaults\n      for (let key in Ajax.defaultConfig) {\n        this.config[key] = Ajax.defaultConfig[key];\n      }\n    }\n  }\n\n  //set request url\n  setUrl(url) {\n    this.url = url;\n  }\n\n  //get request url\n  getUrl() {\n    return this.url;\n  }\n\n  //send ajax request\n  sendRequest(silent) {\n    var url = this.url;\n    this._loadDefaultConfig();\n    if (this.table.options.ajaxRequesting.call(this.table, this.url, this.params) !== false) {\n      return this.loaderPromise(url, this.config, this.params).then(data => {\n        if (this.table.options.ajaxResponse) {\n          data = this.table.options.ajaxResponse.call(this.table, this.url, this.params, data);\n        }\n        return data;\n      });\n    } else {\n      return Promise.reject();\n    }\n  }\n}\nAjax.moduleName = \"ajax\";\n\n//load defaults\nAjax.defaultConfig = defaultConfig;\nAjax.defaultURLGenerator = defaultURLGenerator;\nAjax.defaultLoaderPromise = defaultLoaderPromise;\nAjax.contentTypeFormatters = defaultContentTypeFormatters;\nvar defaultPasteActions = {\n  replace: function (rows) {\n    return this.table.setData(rows);\n  },\n  update: function (rows) {\n    return this.table.updateOrAddData(rows);\n  },\n  insert: function (rows) {\n    return this.table.addData(rows);\n  }\n};\nvar defaultPasteParsers = {\n  table: function (clipboard) {\n    var data = [],\n      headerFindSuccess = true,\n      columns = this.table.columnManager.columns,\n      columnMap = [],\n      rows = [];\n\n    //get data from clipboard into array of columns and rows.\n    clipboard = clipboard.split(\"\\n\");\n    clipboard.forEach(function (row) {\n      data.push(row.split(\"\\t\"));\n    });\n    if (data.length && !(data.length === 1 && data[0].length < 2)) {\n      //check if headers are present by title\n      data[0].forEach(function (value) {\n        var column = columns.find(function (column) {\n          return value && column.definition.title && value.trim() && column.definition.title.trim() === value.trim();\n        });\n        if (column) {\n          columnMap.push(column);\n        } else {\n          headerFindSuccess = false;\n        }\n      });\n\n      //check if column headers are present by field\n      if (!headerFindSuccess) {\n        headerFindSuccess = true;\n        columnMap = [];\n        data[0].forEach(function (value) {\n          var column = columns.find(function (column) {\n            return value && column.field && value.trim() && column.field.trim() === value.trim();\n          });\n          if (column) {\n            columnMap.push(column);\n          } else {\n            headerFindSuccess = false;\n          }\n        });\n        if (!headerFindSuccess) {\n          columnMap = this.table.columnManager.columnsByIndex;\n        }\n      }\n\n      //remove header row if found\n      if (headerFindSuccess) {\n        data.shift();\n      }\n      data.forEach(function (item) {\n        var row = {};\n        item.forEach(function (value, i) {\n          if (columnMap[i]) {\n            row[columnMap[i].field] = value;\n          }\n        });\n        rows.push(row);\n      });\n      return rows;\n    } else {\n      return false;\n    }\n  }\n};\nclass Clipboard extends Module {\n  constructor(table) {\n    super(table);\n    this.mode = true;\n    this.pasteParser = function () {};\n    this.pasteAction = function () {};\n    this.customSelection = false;\n    this.rowRange = false;\n    this.blocked = true; //block copy actions not originating from this command\n\n    this.registerTableOption(\"clipboard\", false); //enable clipboard\n    this.registerTableOption(\"clipboardCopyStyled\", true); //formatted table data\n    this.registerTableOption(\"clipboardCopyConfig\", false); //clipboard config\n    this.registerTableOption(\"clipboardCopyFormatter\", false); //DEPRICATED - REMOVE in 5.0\n    this.registerTableOption(\"clipboardCopyRowRange\", \"active\"); //restrict clipboard to visible rows only\n    this.registerTableOption(\"clipboardPasteParser\", \"table\"); //convert pasted clipboard data to rows\n    this.registerTableOption(\"clipboardPasteAction\", \"insert\"); //how to insert pasted data into the table\n\n    this.registerColumnOption(\"clipboard\");\n    this.registerColumnOption(\"titleClipboard\");\n  }\n  initialize() {\n    this.mode = this.table.options.clipboard;\n    this.rowRange = this.table.options.clipboardCopyRowRange;\n    if (this.mode === true || this.mode === \"copy\") {\n      this.table.element.addEventListener(\"copy\", e => {\n        var plain, html, list;\n        if (!this.blocked) {\n          e.preventDefault();\n          if (this.customSelection) {\n            plain = this.customSelection;\n            if (this.table.options.clipboardCopyFormatter) {\n              plain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\n            }\n          } else {\n            var list = this.table.modules.export.generateExportList(this.table.options.clipboardCopyConfig, this.table.options.clipboardCopyStyled, this.rowRange, \"clipboard\");\n            html = this.table.modules.export.genereateHTMLTable(list);\n            plain = html ? this.generatePlainContent(list) : \"\";\n            if (this.table.options.clipboardCopyFormatter) {\n              plain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\n              html = this.table.options.clipboardCopyFormatter(\"html\", html);\n            }\n          }\n          if (window.clipboardData && window.clipboardData.setData) {\n            window.clipboardData.setData('Text', plain);\n          } else if (e.clipboardData && e.clipboardData.setData) {\n            e.clipboardData.setData('text/plain', plain);\n            if (html) {\n              e.clipboardData.setData('text/html', html);\n            }\n          } else if (e.originalEvent && e.originalEvent.clipboardData.setData) {\n            e.originalEvent.clipboardData.setData('text/plain', plain);\n            if (html) {\n              e.originalEvent.clipboardData.setData('text/html', html);\n            }\n          }\n          this.dispatchExternal(\"clipboardCopied\", plain, html);\n          this.reset();\n        }\n      });\n    }\n    if (this.mode === true || this.mode === \"paste\") {\n      this.table.element.addEventListener(\"paste\", e => {\n        this.paste(e);\n      });\n    }\n    this.setPasteParser(this.table.options.clipboardPasteParser);\n    this.setPasteAction(this.table.options.clipboardPasteAction);\n    this.registerTableFunction(\"copyToClipboard\", this.copy.bind(this));\n  }\n  reset() {\n    this.blocked = true;\n    this.customSelection = false;\n  }\n  generatePlainContent(list) {\n    var output = [];\n    list.forEach(row => {\n      var rowData = [];\n      row.columns.forEach(col => {\n        var value = \"\";\n        if (col) {\n          if (row.type === \"group\") {\n            col.value = col.component.getKey();\n          }\n          if (col.value === null) {\n            value = \"\";\n          } else {\n            switch (typeof col.value) {\n              case \"object\":\n                value = JSON.stringify(col.value);\n                break;\n              case \"undefined\":\n                value = \"\";\n                break;\n              default:\n                value = col.value;\n            }\n          }\n        }\n        rowData.push(value);\n      });\n      output.push(rowData.join(\"\\t\"));\n    });\n    return output.join(\"\\n\");\n  }\n  copy(range, internal) {\n    var range, sel, textRange;\n    this.blocked = false;\n    this.customSelection = false;\n    if (this.mode === true || this.mode === \"copy\") {\n      this.rowRange = range || this.table.options.clipboardCopyRowRange;\n      if (typeof window.getSelection != \"undefined\" && typeof document.createRange != \"undefined\") {\n        range = document.createRange();\n        range.selectNodeContents(this.table.element);\n        sel = window.getSelection();\n        if (sel.toString() && internal) {\n          this.customSelection = sel.toString();\n        }\n        sel.removeAllRanges();\n        sel.addRange(range);\n      } else if (typeof document.selection != \"undefined\" && typeof document.body.createTextRange != \"undefined\") {\n        textRange = document.body.createTextRange();\n        textRange.moveToElementText(this.table.element);\n        textRange.select();\n      }\n      document.execCommand('copy');\n      if (sel) {\n        sel.removeAllRanges();\n      }\n    }\n  }\n\n  //PASTE EVENT HANDLING\n  setPasteAction(action) {\n    switch (typeof action) {\n      case \"string\":\n        this.pasteAction = Clipboard.pasteActions[action];\n        if (!this.pasteAction) {\n          console.warn(\"Clipboard Error - No such paste action found:\", action);\n        }\n        break;\n      case \"function\":\n        this.pasteAction = action;\n        break;\n    }\n  }\n  setPasteParser(parser) {\n    switch (typeof parser) {\n      case \"string\":\n        this.pasteParser = Clipboard.pasteParsers[parser];\n        if (!this.pasteParser) {\n          console.warn(\"Clipboard Error - No such paste parser found:\", parser);\n        }\n        break;\n      case \"function\":\n        this.pasteParser = parser;\n        break;\n    }\n  }\n  paste(e) {\n    var data, rowData, rows;\n    if (this.checkPaseOrigin(e)) {\n      data = this.getPasteData(e);\n      rowData = this.pasteParser.call(this, data);\n      if (rowData) {\n        e.preventDefault();\n        if (this.table.modExists(\"mutator\")) {\n          rowData = this.mutateData(rowData);\n        }\n        rows = this.pasteAction.call(this, rowData);\n        this.dispatchExternal(\"clipboardPasted\", data, rowData, rows);\n      } else {\n        this.dispatchExternal(\"clipboardPasteError\", data);\n      }\n    }\n  }\n  mutateData(data) {\n    var output = [];\n    if (Array.isArray(data)) {\n      data.forEach(row => {\n        output.push(this.table.modules.mutator.transformRow(row, \"clipboard\"));\n      });\n    } else {\n      output = data;\n    }\n    return output;\n  }\n  checkPaseOrigin(e) {\n    var valid = true;\n    if (e.target.tagName != \"DIV\" || this.table.modules.edit.currentCell) {\n      valid = false;\n    }\n    return valid;\n  }\n  getPasteData(e) {\n    var data;\n    if (window.clipboardData && window.clipboardData.getData) {\n      data = window.clipboardData.getData('Text');\n    } else if (e.clipboardData && e.clipboardData.getData) {\n      data = e.clipboardData.getData('text/plain');\n    } else if (e.originalEvent && e.originalEvent.clipboardData.getData) {\n      data = e.originalEvent.clipboardData.getData('text/plain');\n    }\n    return data;\n  }\n}\nClipboard.moduleName = \"clipboard\";\n\n//load defaults\nClipboard.pasteActions = defaultPasteActions;\nClipboard.pasteParsers = defaultPasteParsers;\nclass CalcComponent {\n  constructor(row) {\n    this._row = row;\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._row.table.componentFunctionBinder.handle(\"row\", target._row, name);\n        }\n      }\n    });\n  }\n  getData(transform) {\n    return this._row.getData(transform);\n  }\n  getElement() {\n    return this._row.getElement();\n  }\n  getTable() {\n    return this._row.table;\n  }\n  getCells() {\n    var cells = [];\n    this._row.getCells().forEach(function (cell) {\n      cells.push(cell.getComponent());\n    });\n    return cells;\n  }\n  getCell(column) {\n    var cell = this._row.getCell(column);\n    return cell ? cell.getComponent() : false;\n  }\n  _getSelf() {\n    return this._row;\n  }\n}\n\n//public cell object\nclass CellComponent {\n  constructor(cell) {\n    this._cell = cell;\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._cell.table.componentFunctionBinder.handle(\"cell\", target._cell, name);\n        }\n      }\n    });\n  }\n  getValue() {\n    return this._cell.getValue();\n  }\n  getOldValue() {\n    return this._cell.getOldValue();\n  }\n  getInitialValue() {\n    return this._cell.initialValue;\n  }\n  getElement() {\n    return this._cell.getElement();\n  }\n  getRow() {\n    return this._cell.row.getComponent();\n  }\n  getData() {\n    return this._cell.row.getData();\n  }\n  getField() {\n    return this._cell.column.getField();\n  }\n  getColumn() {\n    return this._cell.column.getComponent();\n  }\n  setValue(value, mutate) {\n    if (typeof mutate == \"undefined\") {\n      mutate = true;\n    }\n    this._cell.setValue(value, mutate);\n  }\n  restoreOldValue() {\n    this._cell.setValueActual(this._cell.getOldValue());\n  }\n  restoreInitialValue() {\n    this._cell.setValueActual(this._cell.initialValue);\n  }\n  checkHeight() {\n    this._cell.checkHeight();\n  }\n  getTable() {\n    return this._cell.table;\n  }\n  _getSelf() {\n    return this._cell;\n  }\n}\nclass Cell extends CoreFeature {\n  constructor(column, row) {\n    super(column.table);\n    this.table = column.table;\n    this.column = column;\n    this.row = row;\n    this.element = null;\n    this.value = null;\n    this.initialValue;\n    this.oldValue = null;\n    this.modules = {};\n    this.height = null;\n    this.width = null;\n    this.minWidth = null;\n    this.component = null;\n    this.loaded = false; //track if the cell has been added to the DOM yet\n\n    this.build();\n  }\n\n  //////////////// Setup Functions /////////////////\n  //generate element\n  build() {\n    this.generateElement();\n    this.setWidth();\n    this._configureCell();\n    this.setValueActual(this.column.getFieldValue(this.row.data));\n    this.initialValue = this.value;\n  }\n  generateElement() {\n    this.element = document.createElement('div');\n    this.element.className = \"tabulator-cell\";\n    this.element.setAttribute(\"role\", \"gridcell\");\n    this.element = this.element;\n  }\n  _configureCell() {\n    var element = this.element,\n      field = this.column.getField(),\n      vertAligns = {\n        top: \"flex-start\",\n        bottom: \"flex-end\",\n        middle: \"center\"\n      },\n      hozAligns = {\n        left: \"flex-start\",\n        right: \"flex-end\",\n        center: \"center\"\n      };\n\n    //set text alignment\n    element.style.textAlign = this.column.hozAlign;\n    if (this.column.vertAlign) {\n      element.style.display = \"inline-flex\";\n      element.style.alignItems = vertAligns[this.column.vertAlign] || \"\";\n      if (this.column.hozAlign) {\n        element.style.justifyContent = hozAligns[this.column.hozAlign] || \"\";\n      }\n    }\n    if (field) {\n      element.setAttribute(\"tabulator-field\", field);\n    }\n\n    //add class to cell if needed\n    if (this.column.definition.cssClass) {\n      var classNames = this.column.definition.cssClass.split(\" \");\n      classNames.forEach(className => {\n        element.classList.add(className);\n      });\n    }\n\n    //update tooltip on mouse enter\n    if (this.table.options.tooltipGenerationMode === \"hover\") {\n      element.addEventListener(\"mouseenter\", e => {\n        this._generateTooltip();\n      });\n    }\n    this.dispatch(\"cell-init\", this);\n\n    //hide cell if not visible\n    if (!this.column.visible) {\n      this.hide();\n    }\n  }\n\n  //generate cell contents\n  _generateContents() {\n    var val;\n    val = this.chain(\"cell-format\", this, null, () => {\n      return this.element.innerHTML = this.value;\n    });\n    switch (typeof val) {\n      case \"object\":\n        if (val instanceof Node) {\n          //clear previous cell contents\n          while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n          this.element.appendChild(val);\n        } else {\n          this.element.innerHTML = \"\";\n          if (val != null) {\n            console.warn(\"Format Error - Formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", val);\n          }\n        }\n        break;\n      case \"undefined\":\n      case \"null\":\n        this.element.innerHTML = \"\";\n        break;\n      default:\n        this.element.innerHTML = val;\n    }\n  }\n  cellRendered() {\n    this.dispatch(\"cell-rendered\", this);\n  }\n\n  //generate tooltip text\n  _generateTooltip() {\n    var tooltip = this.column.tooltip;\n    if (tooltip) {\n      if (tooltip === true) {\n        tooltip = this.value;\n      } else if (typeof tooltip == \"function\") {\n        tooltip = tooltip(this.getComponent());\n        if (tooltip === false) {\n          tooltip = \"\";\n        }\n      }\n      if (typeof tooltip === \"undefined\") {\n        tooltip = \"\";\n      }\n      this.element.setAttribute(\"title\", tooltip);\n    } else {\n      this.element.setAttribute(\"title\", \"\");\n    }\n  }\n\n  //////////////////// Getters ////////////////////\n  getElement(containerOnly) {\n    if (!this.loaded) {\n      this.loaded = true;\n      if (!containerOnly) {\n        this.layoutElement();\n      }\n    }\n    return this.element;\n  }\n  getValue() {\n    return this.value;\n  }\n  getOldValue() {\n    return this.oldValue;\n  }\n\n  //////////////////// Actions ////////////////////\n  setValue(value, mutate) {\n    var changed = this.setValueProcessData(value, mutate);\n    if (changed) {\n      this.dispatch(\"cell-value-updated\", this);\n      this.cellRendered();\n      this.dispatchExternal(\"cellEdited\", this.getComponent());\n      if (this.subscribedExternal(\"dataChanged\")) {\n        this.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\n      }\n    }\n  }\n  setValueProcessData(value, mutate) {\n    var changed = false;\n    if (this.value != value) {\n      changed = true;\n      if (mutate) {\n        value = this.chain(\"cell-value-changing\", [this, value], null, value);\n      }\n    }\n    this.setValueActual(value);\n    if (changed) {\n      this.dispatch(\"cell-value-changed\", this);\n    }\n    return changed;\n  }\n  setValueActual(value) {\n    this.oldValue = this.value;\n    this.value = value;\n    this.dispatch(\"cell-value-save-before\", this);\n    this.column.setFieldValue(this.row.data, value);\n    this.dispatch(\"cell-value-save-after\", this);\n    if (this.loaded) {\n      this.layoutElement();\n    }\n  }\n  layoutElement() {\n    this._generateContents();\n    this._generateTooltip();\n    this.dispatch(\"cell-layout\", this);\n  }\n  setWidth() {\n    this.width = this.column.width;\n    this.element.style.width = this.column.widthStyled;\n  }\n  clearWidth() {\n    this.width = \"\";\n    this.element.style.width = \"\";\n  }\n  getWidth() {\n    return this.width || this.element.offsetWidth;\n  }\n  setMinWidth() {\n    this.minWidth = this.column.minWidth;\n    this.element.style.minWidth = this.column.minWidthStyled;\n  }\n  setMaxWidth() {\n    this.maxWidth = this.column.maxWidth;\n    this.element.style.maxWidth = this.column.maxWidthStyled;\n  }\n  checkHeight() {\n    // var height = this.element.css(\"height\");\n    this.row.reinitializeHeight();\n  }\n  clearHeight() {\n    this.element.style.height = \"\";\n    this.height = null;\n  }\n  setHeight() {\n    this.height = this.row.height;\n    this.element.style.height = this.row.heightStyled;\n  }\n  getHeight() {\n    return this.height || this.element.offsetHeight;\n  }\n  show() {\n    this.element.style.display = this.column.vertAlign ? \"inline-flex\" : \"\";\n  }\n  hide() {\n    this.element.style.display = \"none\";\n  }\n  delete() {\n    this.dispatch(\"cell-delete\", this);\n    if (!this.table.rowManager.redrawBlock && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n    this.element = false;\n    this.column.deleteCell(this);\n    this.row.deleteCell(this);\n    this.calcs = {};\n  }\n  getIndex() {\n    return this.row.getCellIndex(this);\n  }\n\n  //////////////// Object Generation /////////////////\n  getComponent() {\n    if (!this.component) {\n      this.component = new CellComponent(this);\n    }\n    return this.component;\n  }\n}\n\n//public column object\nclass ColumnComponent {\n  constructor(column) {\n    this._column = column;\n    this.type = \"ColumnComponent\";\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._column.table.componentFunctionBinder.handle(\"column\", target._column, name);\n        }\n      }\n    });\n  }\n  getElement() {\n    return this._column.getElement();\n  }\n  getDefinition() {\n    return this._column.getDefinition();\n  }\n  getField() {\n    return this._column.getField();\n  }\n  getCells() {\n    var cells = [];\n    this._column.cells.forEach(function (cell) {\n      cells.push(cell.getComponent());\n    });\n    return cells;\n  }\n  isVisible() {\n    return this._column.visible;\n  }\n  show() {\n    if (this._column.isGroup) {\n      this._column.columns.forEach(function (column) {\n        column.show();\n      });\n    } else {\n      this._column.show();\n    }\n  }\n  hide() {\n    if (this._column.isGroup) {\n      this._column.columns.forEach(function (column) {\n        column.hide();\n      });\n    } else {\n      this._column.hide();\n    }\n  }\n  toggle() {\n    if (this._column.visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  delete() {\n    return this._column.delete();\n  }\n  getSubColumns() {\n    var output = [];\n    if (this._column.columns.length) {\n      this._column.columns.forEach(function (column) {\n        output.push(column.getComponent());\n      });\n    }\n    return output;\n  }\n  getParentColumn() {\n    return this._column.parent instanceof Column ? this._column.parent.getComponent() : false;\n  }\n  _getSelf() {\n    return this._column;\n  }\n  scrollTo() {\n    return this._column.table.columnManager.scrollToColumn(this._column);\n  }\n  getTable() {\n    return this._column.table;\n  }\n  move(to, after) {\n    var toColumn = this._column.table.columnManager.findColumn(to);\n    if (toColumn) {\n      this._column.table.columnManager.moveColumn(this._column, toColumn, after);\n    } else {\n      console.warn(\"Move Error - No matching column found:\", toColumn);\n    }\n  }\n  getNextColumn() {\n    var nextCol = this._column.nextColumn();\n    return nextCol ? nextCol.getComponent() : false;\n  }\n  getPrevColumn() {\n    var prevCol = this._column.prevColumn();\n    return prevCol ? prevCol.getComponent() : false;\n  }\n  updateDefinition(updates) {\n    return this._column.updateDefinition(updates);\n  }\n  getWidth() {\n    return this._column.getWidth();\n  }\n  setWidth(width) {\n    var result;\n    if (width === true) {\n      result = this._column.reinitializeWidth(true);\n    } else {\n      result = this._column.setWidth(width);\n    }\n    this._column.table.columnManager.renderer.rerenderColumns(true);\n    return result;\n  }\n}\nvar defaultColumnOptions = {\n  \"title\": undefined,\n  \"field\": undefined,\n  \"columns\": undefined,\n  \"visible\": undefined,\n  \"hozAlign\": undefined,\n  \"vertAlign\": undefined,\n  \"width\": undefined,\n  \"minWidth\": 40,\n  \"maxWidth\": undefined,\n  \"tooltip\": undefined,\n  \"cssClass\": undefined,\n  \"variableHeight\": undefined,\n  \"headerTooltip\": undefined,\n  \"headerVertical\": undefined,\n  \"headerHozAlign\": undefined,\n  \"editableTitle\": undefined\n};\nclass Column$1 extends CoreFeature {\n  constructor(def, parent) {\n    super(parent.table);\n    this.definition = def; //column definition\n    this.parent = parent; //hold parent object\n    this.type = \"column\"; //type of element\n    this.columns = []; //child columns\n    this.cells = []; //cells bound to this column\n    this.element = this.createElement(); //column header element\n    this.contentElement = false;\n    this.titleHolderElement = false;\n    this.titleElement = false;\n    this.groupElement = this.createGroupElement(); //column group holder element\n    this.isGroup = false;\n    this.tooltip = false; //hold column tooltip\n    this.hozAlign = \"\"; //horizontal text alignment\n    this.vertAlign = \"\"; //vert text alignment\n\n    //multi dimensional filed handling\n    this.field = \"\";\n    this.fieldStructure = \"\";\n    this.getFieldValue = \"\";\n    this.setFieldValue = \"\";\n    this.titleFormatterRendered = false;\n    this.mapDefinitions();\n    this.setField(this.definition.field);\n    this.modules = {}; //hold module variables;\n\n    this.width = null; //column width\n    this.widthStyled = \"\"; //column width prestyled to improve render efficiency\n    this.maxWidth = null; //column maximum width\n    this.maxWidthStyled = \"\"; //column maximum prestyled to improve render efficiency\n    this.minWidth = null; //column minimum width\n    this.minWidthStyled = \"\"; //column minimum prestyled to improve render efficiency\n    this.widthFixed = false; //user has specified a width for this column\n\n    this.visible = true; //default visible state\n\n    this.component = null;\n\n    //initialize column\n    if (this.definition.columns) {\n      this.isGroup = true;\n      this.definition.columns.forEach((def, i) => {\n        var newCol = new Column$1(def, this);\n        this.attachColumn(newCol);\n      });\n      this.checkColumnVisibility();\n    } else {\n      parent.registerColumnField(this);\n    }\n    this._initialize();\n    this.bindModuleColumns();\n  }\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-col\");\n    el.setAttribute(\"role\", \"columnheader\");\n    el.setAttribute(\"aria-sort\", \"none\");\n    return el;\n  }\n  createGroupElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-col-group-cols\");\n    return el;\n  }\n  mapDefinitions() {\n    var defaults = this.table.options.columnDefaults;\n\n    //map columnDefaults onto column definitions\n    if (defaults) {\n      for (let key in defaults) {\n        if (typeof this.definition[key] === \"undefined\") {\n          this.definition[key] = defaults[key];\n        }\n      }\n    }\n    this.definition = this.table.columnManager.optionsList.generate(Column$1.defaultOptionList, this.definition);\n  }\n  checkDefinition() {\n    Object.keys(this.definition).forEach(key => {\n      if (Column$1.defaultOptionList.indexOf(key) === -1) {\n        console.warn(\"Invalid column definition option in '\" + (this.field || this.definition.title) + \"' column:\", key);\n      }\n    });\n  }\n  setField(field) {\n    this.field = field;\n    this.fieldStructure = field ? this.table.options.nestedFieldSeparator ? field.split(this.table.options.nestedFieldSeparator) : [field] : [];\n    this.getFieldValue = this.fieldStructure.length > 1 ? this._getNestedData : this._getFlatData;\n    this.setFieldValue = this.fieldStructure.length > 1 ? this._setNestedData : this._setFlatData;\n  }\n\n  //register column position with column manager\n  registerColumnPosition(column) {\n    this.parent.registerColumnPosition(column);\n  }\n\n  //register column position with column manager\n  registerColumnField(column) {\n    this.parent.registerColumnField(column);\n  }\n\n  //trigger position registration\n  reRegisterPosition() {\n    if (this.isGroup) {\n      this.columns.forEach(function (column) {\n        column.reRegisterPosition();\n      });\n    } else {\n      this.registerColumnPosition(this);\n    }\n  }\n  _mapDepricatedFunctionality() {\n    //all previously deprecated functionality removed in the 5.0 release\n  }\n  setTooltip() {\n    var def = this.definition;\n\n    //set header tooltips\n    var tooltip = def.headerTooltip;\n    if (tooltip) {\n      if (tooltip === true) {\n        if (def.field) {\n          this.langBind(\"columns|\" + def.field, value => {\n            this.element.setAttribute(\"title\", value || def.title);\n          });\n        } else {\n          this.element.setAttribute(\"title\", def.title);\n        }\n      } else {\n        if (typeof tooltip == \"function\") {\n          tooltip = tooltip(this.getComponent());\n          if (tooltip === false) {\n            tooltip = \"\";\n          }\n        }\n        this.element.setAttribute(\"title\", tooltip);\n      }\n    } else {\n      this.element.setAttribute(\"title\", \"\");\n    }\n  }\n\n  //build header element\n  _initialize() {\n    var def = this.definition;\n    while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n    if (def.headerVertical) {\n      this.element.classList.add(\"tabulator-col-vertical\");\n      if (def.headerVertical === \"flip\") {\n        this.element.classList.add(\"tabulator-col-vertical-flip\");\n      }\n    }\n    this.contentElement = this._bindEvents();\n    this.contentElement = this._buildColumnHeaderContent();\n    this.element.appendChild(this.contentElement);\n    if (this.isGroup) {\n      this._buildGroupHeader();\n    } else {\n      this._buildColumnHeader();\n    }\n    this.setTooltip();\n    this.dispatch(\"column-init\", this);\n\n    //update header tooltip on mouse enter\n    this.element.addEventListener(\"mouseenter\", e => {\n      this.setTooltip();\n    });\n  }\n  _bindEvents() {\n    var def = this.definition,\n      dblTap,\n      tapHold,\n      tap;\n\n    //setup header click event bindings\n    if (typeof def.headerClick == \"function\") {\n      this.element.addEventListener(\"click\", e => {\n        def.headerClick(e, this.getComponent());\n      });\n    }\n    if (typeof def.headerDblClick == \"function\") {\n      this.element.addEventListener(\"dblclick\", e => {\n        def.headerDblClick(e, this.getComponent());\n      });\n    }\n    if (typeof def.headerContext == \"function\") {\n      this.element.addEventListener(\"contextmenu\", e => {\n        def.headerContext(e, this.getComponent());\n      });\n    }\n\n    //setup header tap event bindings\n    if (typeof def.headerTap == \"function\") {\n      tap = false;\n      this.element.addEventListener(\"touchstart\", e => {\n        tap = true;\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        if (tap) {\n          def.headerTap(e, this.getComponent());\n        }\n        tap = false;\n      });\n    }\n    if (typeof def.headerDblTap == \"function\") {\n      dblTap = null;\n      this.element.addEventListener(\"touchend\", e => {\n        if (dblTap) {\n          clearTimeout(dblTap);\n          dblTap = null;\n          def.headerDblTap(e, this.getComponent());\n        } else {\n          dblTap = setTimeout(() => {\n            clearTimeout(dblTap);\n            dblTap = null;\n          }, 300);\n        }\n      });\n    }\n    if (typeof def.headerTapHold == \"function\") {\n      tapHold = null;\n      this.element.addEventListener(\"touchstart\", e => {\n        clearTimeout(tapHold);\n        tapHold = setTimeout(function () {\n          clearTimeout(tapHold);\n          tapHold = null;\n          tap = false;\n          def.headerTapHold(e, this.getComponent());\n        }, 1000);\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        clearTimeout(tapHold);\n        tapHold = null;\n      });\n    }\n  }\n\n  //build header element for header\n  _buildColumnHeader() {\n    var def = this.definition,\n      table = this.table;\n    this.dispatch(\"column-layout\", this);\n\n    //set column visibility\n    if (typeof def.visible != \"undefined\") {\n      if (def.visible) {\n        this.show(true);\n      } else {\n        this.hide(true);\n      }\n    }\n\n    //asign additional css classes to column header\n    if (def.cssClass) {\n      var classeNames = def.cssClass.split(\" \");\n      classeNames.forEach(className => {\n        this.element.classList.add(className);\n      });\n    }\n    if (def.field) {\n      this.element.setAttribute(\"tabulator-field\", def.field);\n    }\n\n    //set min width if present\n    this.setMinWidth(parseInt(def.minWidth));\n    if (def.maxWidth) {\n      this.setMaxWidth(parseInt(def.maxWidth));\n    }\n    this.reinitializeWidth();\n\n    //set tooltip if present\n    this.tooltip = this.definition.tooltip;\n\n    //set orizontal text alignment\n    this.hozAlign = this.definition.hozAlign;\n    this.vertAlign = this.definition.vertAlign;\n    this.titleElement.style.textAlign = this.definition.headerHozAlign;\n  }\n  _buildColumnHeaderContent() {\n    var def = this.definition,\n      table = this.table;\n    var contentElement = document.createElement(\"div\");\n    contentElement.classList.add(\"tabulator-col-content\");\n    this.titleHolderElement = document.createElement(\"div\");\n    this.titleHolderElement.classList.add(\"tabulator-col-title-holder\");\n    contentElement.appendChild(this.titleHolderElement);\n    this.titleElement = this._buildColumnHeaderTitle();\n    this.titleHolderElement.appendChild(this.titleElement);\n    return contentElement;\n  }\n\n  //build title element of column\n  _buildColumnHeaderTitle() {\n    var def = this.definition;\n    var titleHolderElement = document.createElement(\"div\");\n    titleHolderElement.classList.add(\"tabulator-col-title\");\n    if (def.editableTitle) {\n      var titleElement = document.createElement(\"input\");\n      titleElement.classList.add(\"tabulator-title-editor\");\n      titleElement.addEventListener(\"click\", e => {\n        e.stopPropagation();\n        titleElement.focus();\n      });\n      titleElement.addEventListener(\"change\", () => {\n        def.title = titleElement.value;\n        this.dispatchExternal(\"columnTitleChanged\", this.getComponent());\n      });\n      titleHolderElement.appendChild(titleElement);\n      if (def.field) {\n        this.langBind(\"columns|\" + def.field, text => {\n          titleElement.value = text || def.title || \"&nbsp;\";\n        });\n      } else {\n        titleElement.value = def.title || \"&nbsp;\";\n      }\n    } else {\n      if (def.field) {\n        this.langBind(\"columns|\" + def.field, text => {\n          this._formatColumnHeaderTitle(titleHolderElement, text || def.title || \"&nbsp;\");\n        });\n      } else {\n        this._formatColumnHeaderTitle(titleHolderElement, def.title || \"&nbsp;\");\n      }\n    }\n    return titleHolderElement;\n  }\n  _formatColumnHeaderTitle(el, title) {\n    var contents = this.chain(\"column-format\", [this, title, el], null, () => {\n      return title;\n    });\n    switch (typeof contents) {\n      case \"object\":\n        if (contents instanceof Node) {\n          el.appendChild(contents);\n        } else {\n          el.innerHTML = \"\";\n          console.warn(\"Format Error - Title formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", contents);\n        }\n        break;\n      case \"undefined\":\n      case \"null\":\n        el.innerHTML = \"\";\n        break;\n      default:\n        el.innerHTML = contents;\n    }\n  }\n\n  //build header element for column group\n  _buildGroupHeader() {\n    this.element.classList.add(\"tabulator-col-group\");\n    this.element.setAttribute(\"role\", \"columngroup\");\n    this.element.setAttribute(\"aria-title\", this.definition.title);\n\n    //asign additional css classes to column header\n    if (this.definition.cssClass) {\n      var classeNames = this.definition.cssClass.split(\" \");\n      classeNames.forEach(className => {\n        this.element.classList.add(className);\n      });\n    }\n    this.titleElement.style.textAlign = this.definition.headerHozAlign;\n    this.element.appendChild(this.groupElement);\n  }\n\n  //flat field lookup\n  _getFlatData(data) {\n    return data[this.field];\n  }\n\n  //nested field lookup\n  _getNestedData(data) {\n    var dataObj = data,\n      structure = this.fieldStructure,\n      length = structure.length,\n      output;\n    for (let i = 0; i < length; i++) {\n      dataObj = dataObj[structure[i]];\n      output = dataObj;\n      if (!dataObj) {\n        break;\n      }\n    }\n    return output;\n  }\n\n  //flat field set\n  _setFlatData(data, value) {\n    if (this.field) {\n      data[this.field] = value;\n    }\n  }\n\n  //nested field set\n  _setNestedData(data, value) {\n    var dataObj = data,\n      structure = this.fieldStructure,\n      length = structure.length;\n    for (let i = 0; i < length; i++) {\n      if (i == length - 1) {\n        dataObj[structure[i]] = value;\n      } else {\n        if (!dataObj[structure[i]]) {\n          if (typeof value !== \"undefined\") {\n            dataObj[structure[i]] = {};\n          } else {\n            break;\n          }\n        }\n        dataObj = dataObj[structure[i]];\n      }\n    }\n  }\n\n  //attach column to this group\n  attachColumn(column) {\n    if (this.groupElement) {\n      this.columns.push(column);\n      this.groupElement.appendChild(column.getElement());\n    } else {\n      console.warn(\"Column Warning - Column being attached to another column instead of column group\");\n    }\n  }\n\n  //vertically align header in column\n  verticalAlign(alignment, height) {\n    //calculate height of column header and group holder element\n    var parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : height || this.parent.getHeadersElement().clientHeight;\n    // var parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : this.parent.getHeadersElement().clientHeight;\n\n    this.element.style.height = parentHeight + \"px\";\n    if (this.isGroup) {\n      this.groupElement.style.minHeight = parentHeight - this.contentElement.offsetHeight + \"px\";\n    }\n\n    //vertically align cell contents\n    if (!this.isGroup && alignment !== \"top\") {\n      if (alignment === \"bottom\") {\n        this.element.style.paddingTop = this.element.clientHeight - this.contentElement.offsetHeight + \"px\";\n      } else {\n        this.element.style.paddingTop = (this.element.clientHeight - this.contentElement.offsetHeight) / 2 + \"px\";\n      }\n    }\n    this.columns.forEach(function (column) {\n      column.verticalAlign(alignment);\n    });\n  }\n\n  //clear vertical alignmenet\n  clearVerticalAlign() {\n    this.element.style.paddingTop = \"\";\n    this.element.style.height = \"\";\n    this.element.style.minHeight = \"\";\n    this.groupElement.style.minHeight = \"\";\n    this.columns.forEach(function (column) {\n      column.clearVerticalAlign();\n    });\n  }\n  bindModuleColumns() {\n    //check if rownum formatter is being used on a column\n    if (this.definition.formatter == \"rownum\") {\n      this.table.rowManager.rowNumColumn = this;\n    }\n  }\n\n  //// Retreive Column Information ////\n  //return column header element\n  getElement() {\n    return this.element;\n  }\n\n  //return colunm group element\n  getGroupElement() {\n    return this.groupElement;\n  }\n\n  //return field name\n  getField() {\n    return this.field;\n  }\n\n  //return the first column in a group\n  getFirstColumn() {\n    if (!this.isGroup) {\n      return this;\n    } else {\n      if (this.columns.length) {\n        return this.columns[0].getFirstColumn();\n      } else {\n        return false;\n      }\n    }\n  }\n\n  //return the last column in a group\n  getLastColumn() {\n    if (!this.isGroup) {\n      return this;\n    } else {\n      if (this.columns.length) {\n        return this.columns[this.columns.length - 1].getLastColumn();\n      } else {\n        return false;\n      }\n    }\n  }\n\n  //return all columns in a group\n  getColumns() {\n    return this.columns;\n  }\n\n  //return all columns in a group\n  getCells() {\n    return this.cells;\n  }\n\n  //retreive the top column in a group of columns\n  getTopColumn() {\n    if (this.parent.isGroup) {\n      return this.parent.getTopColumn();\n    } else {\n      return this;\n    }\n  }\n\n  //return column definition object\n  getDefinition(updateBranches) {\n    var colDefs = [];\n    if (this.isGroup && updateBranches) {\n      this.columns.forEach(function (column) {\n        colDefs.push(column.getDefinition(true));\n      });\n      this.definition.columns = colDefs;\n    }\n    return this.definition;\n  }\n\n  //////////////////// Actions ////////////////////\n  checkColumnVisibility() {\n    var visible = false;\n    this.columns.forEach(function (column) {\n      if (column.visible) {\n        visible = true;\n      }\n    });\n    if (visible) {\n      this.show();\n      this.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\n    } else {\n      this.hide();\n    }\n  }\n\n  //show column\n  show(silent, responsiveToggle) {\n    if (!this.visible) {\n      this.visible = true;\n      this.element.style.display = \"\";\n      if (this.parent.isGroup) {\n        this.parent.checkColumnVisibility();\n      }\n      this.cells.forEach(function (cell) {\n        cell.show();\n      });\n      if (!this.isGroup && this.width === null) {\n        this.reinitializeWidth();\n      }\n      this.table.columnManager.verticalAlignHeaders();\n      this.dispatch(\"column-show\", this, responsiveToggle);\n      if (!silent) {\n        this.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), true);\n      }\n      if (this.parent.isGroup) {\n        this.parent.matchChildWidths();\n      }\n      if (!this.silent) {\n        this.table.columnManager.renderer.rerenderColumns();\n      }\n    }\n  }\n\n  //hide column\n  hide(silent, responsiveToggle) {\n    if (this.visible) {\n      this.visible = false;\n      this.element.style.display = \"none\";\n      this.table.columnManager.verticalAlignHeaders();\n      if (this.parent.isGroup) {\n        this.parent.checkColumnVisibility();\n      }\n      this.cells.forEach(function (cell) {\n        cell.hide();\n      });\n      this.dispatch(\"column-hide\", this, responsiveToggle);\n      if (!silent) {\n        this.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\n      }\n      if (this.parent.isGroup) {\n        this.parent.matchChildWidths();\n      }\n      if (!this.silent) {\n        this.table.columnManager.renderer.rerenderColumns();\n      }\n    }\n  }\n  matchChildWidths() {\n    var childWidth = 0;\n    if (this.contentElement && this.columns.length) {\n      this.columns.forEach(function (column) {\n        if (column.visible) {\n          childWidth += column.getWidth();\n        }\n      });\n      this.contentElement.style.maxWidth = childWidth - 1 + \"px\";\n      if (this.parent.isGroup) {\n        this.parent.matchChildWidths();\n      }\n    }\n  }\n  removeChild(child) {\n    var index = this.columns.indexOf(child);\n    if (index > -1) {\n      this.columns.splice(index, 1);\n    }\n    if (!this.columns.length) {\n      this.delete();\n    }\n  }\n  setWidth(width) {\n    this.widthFixed = true;\n    this.setWidthActual(width);\n  }\n  setWidthActual(width) {\n    if (isNaN(width)) {\n      width = Math.floor(this.table.element.clientWidth / 100 * parseInt(width));\n    }\n    width = Math.max(this.minWidth, width);\n    if (this.maxWidth) {\n      width = Math.min(this.maxWidth, width);\n    }\n    this.width = width;\n    this.widthStyled = width ? width + \"px\" : \"\";\n    this.element.style.width = this.widthStyled;\n    if (!this.isGroup) {\n      this.cells.forEach(function (cell) {\n        cell.setWidth();\n      });\n    }\n    if (this.parent.isGroup) {\n      this.parent.matchChildWidths();\n    }\n    this.dispatch(\"column-width\", this);\n  }\n  checkCellHeights() {\n    var rows = [];\n    this.cells.forEach(function (cell) {\n      if (cell.row.heightInitialized) {\n        if (cell.row.getElement().offsetParent !== null) {\n          rows.push(cell.row);\n          cell.row.clearCellHeight();\n        } else {\n          cell.row.heightInitialized = false;\n        }\n      }\n    });\n    rows.forEach(function (row) {\n      row.calcHeight();\n    });\n    rows.forEach(function (row) {\n      row.setCellHeight();\n    });\n  }\n  getWidth() {\n    var width = 0;\n    if (this.isGroup) {\n      this.columns.forEach(function (column) {\n        if (column.visible) {\n          width += column.getWidth();\n        }\n      });\n    } else {\n      width = this.width;\n    }\n    return width;\n  }\n  getHeight() {\n    return this.element.offsetHeight;\n  }\n  setMinWidth(minWidth) {\n    this.minWidth = minWidth;\n    this.minWidthStyled = minWidth ? minWidth + \"px\" : \"\";\n    this.element.style.minWidth = this.minWidthStyled;\n    this.cells.forEach(function (cell) {\n      cell.setMinWidth();\n    });\n  }\n  setMaxWidth(maxWidth) {\n    this.maxWidth = maxWidth;\n    this.maxWidthStyled = maxWidth ? maxWidth + \"px\" : \"\";\n    this.element.style.maxWidth = this.maxWidthStyled;\n    this.cells.forEach(function (cell) {\n      cell.setMaxWidth();\n    });\n  }\n  delete() {\n    return new Promise((resolve, reject) => {\n      if (this.isGroup) {\n        this.columns.forEach(function (column) {\n          column.delete();\n        });\n      }\n      this.dispatch(\"column-delete\", this);\n      var cellCount = this.cells.length;\n      for (let i = 0; i < cellCount; i++) {\n        this.cells[0].delete();\n      }\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n      this.element = false;\n      this.contentElement = false;\n      this.titleElement = false;\n      this.groupElement = false;\n      if (this.parent.isGroup) {\n        this.parent.removeChild(this);\n      }\n      this.table.columnManager.deregisterColumn(this);\n      this.table.columnManager.renderer.rerenderColumns(true);\n      resolve();\n    });\n  }\n  columnRendered() {\n    if (this.titleFormatterRendered) {\n      this.titleFormatterRendered();\n    }\n  }\n\n  //////////////// Cell Management /////////////////\n  //generate cell for this column\n  generateCell(row) {\n    var cell = new Cell(this, row);\n    this.cells.push(cell);\n    return cell;\n  }\n  nextColumn() {\n    var index = this.table.columnManager.findColumnIndex(this);\n    return index > -1 ? this._nextVisibleColumn(index + 1) : false;\n  }\n  _nextVisibleColumn(index) {\n    var column = this.table.columnManager.getColumnByIndex(index);\n    return !column || column.visible ? column : this._nextVisibleColumn(index + 1);\n  }\n  prevColumn() {\n    var index = this.table.columnManager.findColumnIndex(this);\n    return index > -1 ? this._prevVisibleColumn(index - 1) : false;\n  }\n  _prevVisibleColumn(index) {\n    var column = this.table.columnManager.getColumnByIndex(index);\n    return !column || column.visible ? column : this._prevVisibleColumn(index - 1);\n  }\n  reinitializeWidth(force) {\n    this.widthFixed = false;\n\n    //set width if present\n    if (typeof this.definition.width !== \"undefined\" && !force) {\n      this.setWidth(this.definition.width);\n    }\n    this.dispatch(\"column-width-fit-before\", this);\n    this.fitToData();\n    this.dispatch(\"column-width-fit-after\", this);\n  }\n\n  //set column width to maximum cell width for non group columns\n  fitToData() {\n    if (this.isGroup) {\n      return;\n    }\n    if (!this.widthFixed) {\n      this.element.style.width = \"\";\n      this.cells.forEach(cell => {\n        cell.clearWidth();\n      });\n    }\n    var maxWidth = this.element.offsetWidth;\n    if (!this.width || !this.widthFixed) {\n      this.cells.forEach(cell => {\n        var width = cell.getWidth();\n        if (width > maxWidth) {\n          maxWidth = width;\n        }\n      });\n      if (maxWidth) {\n        this.setWidthActual(maxWidth + 1);\n      }\n    }\n  }\n  updateDefinition(updates) {\n    var definition;\n    if (!this.isGroup) {\n      if (!this.parent.isGroup) {\n        definition = Object.assign({}, this.getDefinition());\n        definition = Object.assign(definition, updates);\n        return this.table.columnManager.addColumn(definition, false, this).then(column => {\n          if (definition.field == this.field) {\n            this.field = false; //cleair field name to prevent deletion of duplicate column from arrays\n          }\n\n          return this.delete().then(() => {\n            return column.getComponent();\n          });\n        });\n      } else {\n        console.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\n        return Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\n      }\n    } else {\n      console.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\n      return Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\n    }\n  }\n  deleteCell(cell) {\n    var index = this.cells.indexOf(cell);\n    if (index > -1) {\n      this.cells.splice(index, 1);\n    }\n  }\n\n  //////////////// Object Generation /////////////////\n  getComponent() {\n    if (!this.component) {\n      this.component = new ColumnComponent(this);\n    }\n    return this.component;\n  }\n}\nColumn$1.defaultOptionList = defaultColumnOptions;\n\n//public row object\nclass RowComponent$1 {\n  constructor(row) {\n    this._row = row;\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._row.table.componentFunctionBinder.handle(\"row\", target._row, name);\n        }\n      }\n    });\n  }\n  getData(transform) {\n    return this._row.getData(transform);\n  }\n  getElement() {\n    return this._row.getElement();\n  }\n  getCells() {\n    var cells = [];\n    this._row.getCells().forEach(function (cell) {\n      cells.push(cell.getComponent());\n    });\n    return cells;\n  }\n  getCell(column) {\n    var cell = this._row.getCell(column);\n    return cell ? cell.getComponent() : false;\n  }\n  getIndex() {\n    return this._row.getData(\"data\")[this._row.table.options.index];\n  }\n  getPosition(active) {\n    return this._row.table.rowManager.getRowPosition(this._row, active);\n  }\n  delete() {\n    return this._row.delete();\n  }\n  scrollTo() {\n    return this._row.table.rowManager.scrollToRow(this._row);\n  }\n  move(to, after) {\n    this._row.moveToRow(to, after);\n  }\n  update(data) {\n    return this._row.updateData(data);\n  }\n  normalizeHeight() {\n    this._row.normalizeHeight(true);\n  }\n  _getSelf() {\n    return this._row;\n  }\n  reformat() {\n    return this._row.reinitialize();\n  }\n  getTable() {\n    return this._row.table;\n  }\n  getNextRow() {\n    var row = this._row.nextRow();\n    return row ? row.getComponent() : row;\n  }\n  getPrevRow() {\n    var row = this._row.prevRow();\n    return row ? row.getComponent() : row;\n  }\n}\nclass Row extends CoreFeature {\n  constructor(data, parent) {\n    let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"row\";\n    super(parent.table);\n    this.parent = parent;\n    this.data = {};\n    this.type = type; //type of element\n    this.element = false;\n    this.modules = {}; //hold module variables;\n    this.cells = [];\n    this.height = 0; //hold element height\n    this.heightStyled = \"\"; //hold element height prestyled to improve render efficiency\n    this.manualHeight = false; //user has manually set row height\n    this.outerHeight = 0; //holde lements outer height\n    this.initialized = false; //element has been rendered\n    this.heightInitialized = false; //element has resized cells to fit\n\n    this.component = null;\n    this.created = false;\n    this.setData(data);\n  }\n  create() {\n    if (!this.created) {\n      this.created = true;\n      this.generateElement();\n    }\n  }\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-row\");\n    el.setAttribute(\"role\", \"row\");\n    this.element = el;\n  }\n  getElement() {\n    this.create();\n    return this.element;\n  }\n  detachElement() {\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n  generateElement() {\n    this.createElement();\n    this.dispatch(\"row-init\", this);\n  }\n  generateCells() {\n    this.cells = this.table.columnManager.generateCells(this);\n  }\n\n  //functions to setup on first render\n  initialize(force) {\n    this.create();\n    if (!this.initialized || force) {\n      this.deleteCells();\n      while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n      this.dispatch(\"row-layout-before\", this);\n      this.generateCells();\n      this.table.columnManager.renderer.renderRowCells(this);\n      if (force) {\n        this.normalizeHeight();\n      }\n      this.dispatch(\"row-layout\", this);\n      if (this.table.options.rowFormatter) {\n        this.table.options.rowFormatter(this.getComponent());\n      }\n      this.initialized = true;\n      this.dispatch(\"row-layout-after\", this);\n    } else {\n      this.table.columnManager.renderer.rerenderRowCells(this);\n    }\n  }\n  reinitializeHeight() {\n    this.heightInitialized = false;\n    if (this.element && this.element.offsetParent !== null) {\n      this.normalizeHeight(true);\n    }\n  }\n  deinitializeHeight() {\n    this.heightInitialized = false;\n  }\n  reinitialize(children) {\n    this.initialized = false;\n    this.heightInitialized = false;\n    if (!this.manualHeight) {\n      this.height = 0;\n      this.heightStyled = \"\";\n    }\n    if (this.element && this.element.offsetParent !== null) {\n      this.initialize(true);\n    }\n    this.dispatch(\"row-relayout\", this);\n  }\n\n  //get heights when doing bulk row style calcs in virtual DOM\n  calcHeight(force) {\n    var maxHeight = 0,\n      minHeight = this.table.options.resizableRows ? this.element.clientHeight : 0;\n    this.cells.forEach(function (cell) {\n      var height = cell.getHeight();\n      if (height > maxHeight) {\n        maxHeight = height;\n      }\n    });\n    if (force) {\n      this.height = Math.max(maxHeight, minHeight);\n    } else {\n      this.height = this.manualHeight ? this.height : Math.max(maxHeight, minHeight);\n    }\n    this.heightStyled = this.height ? this.height + \"px\" : \"\";\n    this.outerHeight = this.element.offsetHeight;\n  }\n\n  //set of cells\n  setCellHeight() {\n    this.cells.forEach(function (cell) {\n      cell.setHeight();\n    });\n    this.heightInitialized = true;\n  }\n  clearCellHeight() {\n    this.cells.forEach(function (cell) {\n      cell.clearHeight();\n    });\n  }\n\n  //normalize the height of elements in the row\n  normalizeHeight(force) {\n    if (force) {\n      this.clearCellHeight();\n    }\n    this.calcHeight(force);\n    this.setCellHeight();\n  }\n\n  //set height of rows\n  setHeight(height, force) {\n    if (this.height != height || force) {\n      this.manualHeight = true;\n      this.height = height;\n      this.heightStyled = height ? height + \"px\" : \"\";\n      this.setCellHeight();\n\n      // this.outerHeight = this.element.outerHeight();\n      this.outerHeight = this.element.offsetHeight;\n    }\n  }\n\n  //return rows outer height\n  getHeight() {\n    return this.outerHeight;\n  }\n\n  //return rows outer Width\n  getWidth() {\n    return this.element.offsetWidth;\n  }\n\n  //////////////// Cell Management /////////////////\n  deleteCell(cell) {\n    var index = this.cells.indexOf(cell);\n    if (index > -1) {\n      this.cells.splice(index, 1);\n    }\n  }\n\n  //////////////// Data Management /////////////////\n  setData(data) {\n    this.data = this.chain(\"row-data-init-before\", [this, data], undefined, data);\n    this.dispatch(\"row-data-init-after\", this);\n  }\n\n  //update the rows data\n  updateData(updatedData) {\n    var visible = this.element && Helpers.elVisible(this.element),\n      tempData = {},\n      newRowData;\n    return new Promise((resolve, reject) => {\n      if (typeof updatedData === \"string\") {\n        updatedData = JSON.parse(updatedData);\n      }\n      this.dispatch(\"row-data-save-before\", this);\n      if (this.subscribed(\"row-data-changing\")) {\n        tempData = Object.assign(tempData, this.data);\n        tempData = Object.assign(tempData, updatedData);\n      }\n      newRowData = this.chain(\"row-data-changing\", [this, tempData, updatedData], null, updatedData);\n\n      //set data\n      for (var attrname in newRowData) {\n        this.data[attrname] = newRowData[attrname];\n      }\n      this.dispatch(\"row-data-save-after\", this);\n\n      //update affected cells only\n      for (var attrname in updatedData) {\n        let columns = this.table.columnManager.getColumnsByFieldRoot(attrname);\n        columns.forEach(column => {\n          let cell = this.getCell(column.getField());\n          if (cell) {\n            let value = column.getFieldValue(newRowData);\n            if (cell.getValue() != value) {\n              cell.setValueProcessData(value);\n              if (visible) {\n                cell.cellRendered();\n              }\n            }\n          }\n        });\n      }\n\n      //Partial reinitialization if visible\n      if (visible) {\n        this.normalizeHeight(true);\n        if (this.table.options.rowFormatter) {\n          this.table.options.rowFormatter(this.getComponent());\n        }\n      } else {\n        this.initialized = false;\n        this.height = 0;\n        this.heightStyled = \"\";\n      }\n      this.dispatch(\"row-data-changed\", this, visible, updatedData);\n\n      //this.reinitialize();\n\n      this.dispatchExternal(\"rowUpdated\", this.getComponent());\n      if (this.subscribedExternal(\"dataChanged\")) {\n        this.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\n      }\n      resolve();\n    });\n  }\n  getData(transform) {\n    if (transform) {\n      return this.chain(\"row-data-retrieve\", [this, transform], null, this.data);\n    }\n    return this.data;\n  }\n  getCell(column) {\n    var match = false;\n    column = this.table.columnManager.findColumn(column);\n    if (!this.initialized) {\n      this.generateCells();\n    }\n    match = this.cells.find(function (cell) {\n      return cell.column === column;\n    });\n    return match;\n  }\n  getCellIndex(findCell) {\n    return this.cells.findIndex(function (cell) {\n      return cell === findCell;\n    });\n  }\n  findCell(subject) {\n    return this.cells.find(cell => {\n      return cell.element === subject;\n    });\n  }\n  getCells() {\n    if (!this.initialized) {\n      this.generateCells();\n    }\n    return this.cells;\n  }\n  nextRow() {\n    var row = this.table.rowManager.nextDisplayRow(this, true);\n    return row || false;\n  }\n  prevRow() {\n    var row = this.table.rowManager.prevDisplayRow(this, true);\n    return row || false;\n  }\n  moveToRow(to, before) {\n    var toRow = this.table.rowManager.findRow(to);\n    if (toRow) {\n      this.table.rowManager.moveRowActual(this, toRow, !before);\n      this.table.rowManager.refreshActiveData(\"display\", false, true);\n    } else {\n      console.warn(\"Move Error - No matching row found:\", to);\n    }\n  }\n\n  ///////////////////// Actions  /////////////////////\n  delete() {\n    this.dispatch(\"row-delete\", this);\n    this.deleteActual();\n    return Promise.resolve();\n  }\n  deleteActual(blockRedraw) {\n    var index = this.table.rowManager.getRowIndex(this);\n    this.detatchModules();\n    this.table.rowManager.deleteRow(this, blockRedraw);\n    this.deleteCells();\n    this.initialized = false;\n    this.heightInitialized = false;\n    this.element = false;\n    this.dispatch(\"row-deleted\", this);\n  }\n  detatchModules() {\n    this.dispatch(\"row-deleting\", this);\n  }\n  deleteCells() {\n    var cellCount = this.cells.length;\n    for (let i = 0; i < cellCount; i++) {\n      this.cells[0].delete();\n    }\n  }\n  wipe() {\n    this.detatchModules();\n    this.deleteCells();\n    if (this.element) {\n      while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n    }\n    this.element = false;\n    this.modules = {};\n  }\n  getGroup() {\n    return this.modules.group || false;\n  }\n\n  //////////////// Object Generation /////////////////\n  getComponent() {\n    if (!this.component) {\n      this.component = new RowComponent$1(this);\n    }\n    return this.component;\n  }\n}\nvar defaultCalculations = {\n  \"avg\": function (values, data, calcParams) {\n    var output = 0,\n      precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : 2;\n    if (values.length) {\n      output = values.reduce(function (sum, value) {\n        return Number(sum) + Number(value);\n      });\n      output = output / values.length;\n      output = precision !== false ? output.toFixed(precision) : output;\n    }\n    return parseFloat(output).toString();\n  },\n  \"max\": function (values, data, calcParams) {\n    var output = null,\n      precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\n    values.forEach(function (value) {\n      value = Number(value);\n      if (value > output || output === null) {\n        output = value;\n      }\n    });\n    return output !== null ? precision !== false ? output.toFixed(precision) : output : \"\";\n  },\n  \"min\": function (values, data, calcParams) {\n    var output = null,\n      precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\n    values.forEach(function (value) {\n      value = Number(value);\n      if (value < output || output === null) {\n        output = value;\n      }\n    });\n    return output !== null ? precision !== false ? output.toFixed(precision) : output : \"\";\n  },\n  \"sum\": function (values, data, calcParams) {\n    var output = 0,\n      precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\n    if (values.length) {\n      values.forEach(function (value) {\n        value = Number(value);\n        output += !isNaN(value) ? Number(value) : 0;\n      });\n    }\n    return precision !== false ? output.toFixed(precision) : output;\n  },\n  \"concat\": function (values, data, calcParams) {\n    var output = 0;\n    if (values.length) {\n      output = values.reduce(function (sum, value) {\n        return String(sum) + String(value);\n      });\n    }\n    return output;\n  },\n  \"count\": function (values, data, calcParams) {\n    var output = 0;\n    if (values.length) {\n      values.forEach(function (value) {\n        if (value) {\n          output++;\n        }\n      });\n    }\n    return output;\n  }\n};\nclass ColumnCalcs extends Module {\n  constructor(table) {\n    super(table);\n    this.topCalcs = [];\n    this.botCalcs = [];\n    this.genColumn = false;\n    this.topElement = this.createElement();\n    this.botElement = this.createElement();\n    this.topRow = false;\n    this.botRow = false;\n    this.topInitialized = false;\n    this.botInitialized = false;\n    this.registerTableOption(\"columnCalcs\", true);\n    this.registerColumnOption(\"topCalc\");\n    this.registerColumnOption(\"topCalcParams\");\n    this.registerColumnOption(\"topCalcFormatter\");\n    this.registerColumnOption(\"topCalcFormatterParams\");\n    this.registerColumnOption(\"bottomCalc\");\n    this.registerColumnOption(\"bottomCalcParams\");\n    this.registerColumnOption(\"bottomCalcFormatter\");\n    this.registerColumnOption(\"bottomCalcFormatterParams\");\n  }\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-calcs-holder\");\n    return el;\n  }\n  initialize() {\n    this.genColumn = new Column$1({\n      field: \"value\"\n    }, this);\n    this.subscribe(\"cell-value-changed\", this.cellValueChanged.bind(this));\n    this.subscribe(\"column-init\", this.initializeColumnCheck.bind(this));\n    this.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n    this.subscribe(\"row-added\", this.rowsUpdated.bind(this));\n    this.subscribe(\"column-moved\", this.recalcActiveRows.bind(this));\n    this.subscribe(\"column-add\", this.recalcActiveRows.bind(this));\n    this.subscribe(\"data-refeshed\", this.recalcActiveRows.bind(this));\n    this.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\n    this.subscribe(\"rows-visible\", this.visibleRows.bind(this));\n    this.registerTableFunction(\"getCalcResults\", this.getResults.bind(this));\n    this.registerTableFunction(\"recalc\", this.userRecalc.bind(this));\n  }\n  tableRedraw(force) {\n    this.recalc(this.table.rowManager.activeRows);\n    if (force) {\n      this.redraw();\n    }\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n  userRecalc() {\n    this.recalc(this.table.rowManager.activeRows);\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  visibleRows(viewable, rows) {\n    if (this.topRow) {\n      rows.unshift(this.topRow);\n    }\n    if (this.botRow) {\n      rows.push(this.botRow);\n    }\n    return rows;\n  }\n  rowsUpdated(row) {\n    if (this.table.options.groupBy) {\n      this.recalcRowGroup(this);\n    } else {\n      this.recalcActiveRows();\n    }\n  }\n  recalcActiveRows() {\n    this.recalc(this.table.rowManager.activeRows);\n  }\n  cellValueChanged(cell) {\n    if (cell.column.definition.topCalc || cell.column.definition.bottomCalc) {\n      if (this.table.options.groupBy) {\n        if (this.table.options.columnCalcs == \"table\" || this.table.options.columnCalcs == \"both\") {\n          this.recalcActiveRows();\n        }\n        if (this.table.options.columnCalcs != \"table\") {\n          this.recalcRowGroup(cell.row);\n        }\n      } else {\n        this.recalcActiveRows();\n      }\n    }\n  }\n  initializeColumnCheck(column) {\n    if (column.definition.topCalc || column.definition.bottomCalc) {\n      this.initializeColumn(column);\n    }\n  }\n\n  //initialize column calcs\n  initializeColumn(column) {\n    var def = column.definition;\n    var config = {\n      topCalcParams: def.topCalcParams || {},\n      botCalcParams: def.bottomCalcParams || {}\n    };\n    if (def.topCalc) {\n      switch (typeof def.topCalc) {\n        case \"string\":\n          if (ColumnCalcs.calculations[def.topCalc]) {\n            config.topCalc = ColumnCalcs.calculations[def.topCalc];\n          } else {\n            console.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.topCalc);\n          }\n          break;\n        case \"function\":\n          config.topCalc = def.topCalc;\n          break;\n      }\n      if (config.topCalc) {\n        column.modules.columnCalcs = config;\n        this.topCalcs.push(column);\n        if (this.table.options.columnCalcs != \"group\") {\n          this.initializeTopRow();\n        }\n      }\n    }\n    if (def.bottomCalc) {\n      switch (typeof def.bottomCalc) {\n        case \"string\":\n          if (ColumnCalcs.calculations[def.bottomCalc]) {\n            config.botCalc = ColumnCalcs.calculations[def.bottomCalc];\n          } else {\n            console.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.bottomCalc);\n          }\n          break;\n        case \"function\":\n          config.botCalc = def.bottomCalc;\n          break;\n      }\n      if (config.botCalc) {\n        column.modules.columnCalcs = config;\n        this.botCalcs.push(column);\n        if (this.table.options.columnCalcs != \"group\") {\n          this.initializeBottomRow();\n        }\n      }\n    }\n  }\n\n  //dummy functions to handle being mock column manager\n  registerColumnField() {}\n  removeCalcs() {\n    var changed = false;\n    if (this.topInitialized) {\n      this.topInitialized = false;\n      this.topElement.parentNode.removeChild(this.topElement);\n      changed = true;\n    }\n    if (this.botInitialized) {\n      this.botInitialized = false;\n      this.table.footerManager.remove(this.botElement);\n      changed = true;\n    }\n    if (changed) {\n      this.table.rowManager.adjustTableSize();\n    }\n  }\n  initializeTopRow() {\n    if (!this.topInitialized) {\n      this.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\n      this.topInitialized = true;\n    }\n  }\n  initializeBottomRow() {\n    if (!this.botInitialized) {\n      this.table.footerManager.prepend(this.botElement);\n      this.botInitialized = true;\n    }\n  }\n  scrollHorizontal(left) {\n    if (this.botInitialized && this.botRow) {\n      this.botRow.getElement().style.marginLeft = -left + \"px\";\n    }\n  }\n  recalc(rows) {\n    var row;\n    if (this.topInitialized || this.botInitialized) {\n      this.rowsToData(rows);\n      if (this.topInitialized) {\n        if (this.topRow) {\n          this.topRow.deleteCells();\n        }\n        row = this.generateRow(\"top\", this.rowsToData(rows));\n        this.topRow = row;\n        while (this.topElement.firstChild) this.topElement.removeChild(this.topElement.firstChild);\n        this.topElement.appendChild(row.getElement());\n        row.initialize(true);\n      }\n      if (this.botInitialized) {\n        if (this.botRow) {\n          this.botRow.deleteCells();\n        }\n        row = this.generateRow(\"bottom\", this.rowsToData(rows));\n        this.botRow = row;\n        while (this.botElement.firstChild) this.botElement.removeChild(this.botElement.firstChild);\n        this.botElement.appendChild(row.getElement());\n        row.initialize(true);\n      }\n      this.table.rowManager.adjustTableSize();\n\n      //set resizable handles\n      if (this.table.modExists(\"frozenColumns\")) {\n        this.table.modules.frozenColumns.layout();\n      }\n    }\n  }\n  recalcRowGroup(row) {\n    this.recalcGroup(this.table.modules.groupRows.getRowGroup(row));\n  }\n  recalcAll() {\n    if (this.topCalcs.length || this.botCalcs.length) {\n      if (this.table.options.columnCalcs !== \"group\") {\n        this.recalcActiveRows();\n      }\n      if (this.table.options.groupBy && this.table.options.columnCalcs !== \"table\") {\n        var groups = this.table.modules.groupRows.getChildGroups();\n        groups.forEach(group => {\n          this.recalcGroup(group);\n        });\n      }\n    }\n  }\n  recalcGroup(group) {\n    var data, rowData;\n    if (group) {\n      if (group.calcs) {\n        if (group.calcs.bottom) {\n          data = this.rowsToData(group.rows);\n          rowData = this.generateRowData(\"bottom\", data);\n          group.calcs.bottom.updateData(rowData);\n          group.calcs.bottom.reinitialize();\n        }\n        if (group.calcs.top) {\n          data = this.rowsToData(group.rows);\n          rowData = this.generateRowData(\"top\", data);\n          group.calcs.top.updateData(rowData);\n          group.calcs.top.reinitialize();\n        }\n      }\n    }\n  }\n\n  //generate top stats row\n  generateTopRow(rows) {\n    return this.generateRow(\"top\", this.rowsToData(rows));\n  }\n  //generate bottom stats row\n  generateBottomRow(rows) {\n    return this.generateRow(\"bottom\", this.rowsToData(rows));\n  }\n  rowsToData(rows) {\n    var data = [];\n    rows.forEach(row => {\n      data.push(row.getData());\n      if (this.table.options.dataTree && this.table.options.dataTreeChildColumnCalcs) {\n        if (row.modules.dataTree.open) {\n          var children = this.rowsToData(this.table.modules.dataTree.getFilteredTreeChildren(row));\n          data = data.concat(children);\n        }\n      }\n    });\n    return data;\n  }\n\n  //generate stats row\n  generateRow(pos, data) {\n    var rowData = this.generateRowData(pos, data),\n      row;\n    if (this.table.modExists(\"mutator\")) {\n      this.table.modules.mutator.disable();\n    }\n    row = new Row(rowData, this, \"calc\");\n    if (this.table.modExists(\"mutator\")) {\n      this.table.modules.mutator.enable();\n    }\n    row.getElement().classList.add(\"tabulator-calcs\", \"tabulator-calcs-\" + pos);\n    row.component = false;\n    row.getComponent = () => {\n      if (!row.component) {\n        row.component = new CalcComponent(row);\n      }\n      return row.component;\n    };\n    row.generateCells = () => {\n      var cells = [];\n      this.table.columnManager.columnsByIndex.forEach(column => {\n        //set field name of mock column\n        this.genColumn.setField(column.getField());\n        this.genColumn.hozAlign = column.hozAlign;\n        if (column.definition[pos + \"CalcFormatter\"] && this.table.modExists(\"format\")) {\n          this.genColumn.modules.format = {\n            formatter: this.table.modules.format.getFormatter(column.definition[pos + \"CalcFormatter\"]),\n            params: column.definition[pos + \"CalcFormatterParams\"] || {}\n          };\n        } else {\n          this.genColumn.modules.format = {\n            formatter: this.table.modules.format.getFormatter(\"plaintext\"),\n            params: {}\n          };\n        }\n\n        //ensure css class defintion is replicated to calculation cell\n        this.genColumn.definition.cssClass = column.definition.cssClass;\n\n        //generate cell and assign to correct column\n        var cell = new Cell(this.genColumn, row);\n        cell.getElement();\n        cell.column = column;\n        cell.setWidth();\n        column.cells.push(cell);\n        cells.push(cell);\n        if (!column.visible) {\n          cell.hide();\n        }\n      });\n      row.cells = cells;\n    };\n    return row;\n  }\n\n  //generate stats row\n  generateRowData(pos, data) {\n    var rowData = {},\n      calcs = pos == \"top\" ? this.topCalcs : this.botCalcs,\n      type = pos == \"top\" ? \"topCalc\" : \"botCalc\",\n      params,\n      paramKey;\n    calcs.forEach(function (column) {\n      var values = [];\n      if (column.modules.columnCalcs && column.modules.columnCalcs[type]) {\n        data.forEach(function (item) {\n          values.push(column.getFieldValue(item));\n        });\n        paramKey = type + \"Params\";\n        params = typeof column.modules.columnCalcs[paramKey] === \"function\" ? column.modules.columnCalcs[paramKey](values, data) : column.modules.columnCalcs[paramKey];\n        column.setFieldValue(rowData, column.modules.columnCalcs[type](values, data, params));\n      }\n    });\n    return rowData;\n  }\n  hasTopCalcs() {\n    return !!this.topCalcs.length;\n  }\n  hasBottomCalcs() {\n    return !!this.botCalcs.length;\n  }\n\n  //handle table redraw\n  redraw() {\n    if (this.topRow) {\n      this.topRow.normalizeHeight(true);\n    }\n    if (this.botRow) {\n      this.botRow.normalizeHeight(true);\n    }\n  }\n\n  //return the calculated\n  getResults() {\n    var results = {},\n      groups;\n    if (this.table.options.groupBy && this.table.modExists(\"groupRows\")) {\n      groups = this.table.modules.groupRows.getGroups(true);\n      groups.forEach(group => {\n        results[group.getKey()] = this.getGroupResults(group);\n      });\n    } else {\n      results = {\n        top: this.topRow ? this.topRow.getData() : {},\n        bottom: this.botRow ? this.botRow.getData() : {}\n      };\n    }\n    return results;\n  }\n\n  //get results from a group\n  getGroupResults(group) {\n    var groupObj = group._getSelf(),\n      subGroups = group.getSubGroups(),\n      subGroupResults = {},\n      results = {};\n    subGroups.forEach(subgroup => {\n      subGroupResults[subgroup.getKey()] = this.getGroupResults(subgroup);\n    });\n    results = {\n      top: groupObj.calcs.top ? groupObj.calcs.top.getData() : {},\n      bottom: groupObj.calcs.bottom ? groupObj.calcs.bottom.getData() : {},\n      groups: subGroupResults\n    };\n    return results;\n  }\n}\nColumnCalcs.moduleName = \"columnCalcs\";\n\n//load defaults\nColumnCalcs.calculations = defaultCalculations;\nclass DataTree extends Module {\n  constructor(table) {\n    super(table);\n    this.indent = 10;\n    this.field = \"\";\n    this.collapseEl = null;\n    this.expandEl = null;\n    this.branchEl = null;\n    this.elementField = false;\n    this.startOpen = function () {};\n    this.displayIndex = 0;\n    this.registerTableOption(\"dataTree\", false); //enable data tree\n    this.registerTableOption(\"dataTreeFilter\", true); //filter child rows\n    this.registerTableOption(\"dataTreeSort\", true); //sort child rows\n    this.registerTableOption(\"dataTreeElementColumn\", false);\n    this.registerTableOption(\"dataTreeBranchElement\", true); //show data tree branch element\n    this.registerTableOption(\"dataTreeChildIndent\", 9); //data tree child indent in px\n    this.registerTableOption(\"dataTreeChildField\", \"_children\"); //data tre column field to look for child rows\n    this.registerTableOption(\"dataTreeCollapseElement\", false); //data tree row collapse element\n    this.registerTableOption(\"dataTreeExpandElement\", false); //data tree row expand element\n    this.registerTableOption(\"dataTreeStartExpanded\", false);\n    this.registerTableOption(\"dataTreeChildColumnCalcs\", false); //include visible data tree rows in column calculations\n    this.registerTableOption(\"dataTreeSelectPropagate\", false); //seleccting a parent row selects its children\n\n    //register component functions\n    this.registerComponentFunction(\"row\", \"treeCollapse\", this.collapseRow.bind(this));\n    this.registerComponentFunction(\"row\", \"treeExpand\", this.expandRow.bind(this));\n    this.registerComponentFunction(\"row\", \"treeToggle\", this.toggleRow.bind(this));\n    this.registerComponentFunction(\"row\", \"getTreeParent\", this.getTreeParent.bind(this));\n    this.registerComponentFunction(\"row\", \"getTreeChildren\", this.getRowChildren.bind(this));\n    this.registerComponentFunction(\"row\", \"addTreeChild\", this.addTreeChildRow.bind(this));\n  }\n  initialize() {\n    if (this.table.options.dataTree) {\n      var dummyEl = null,\n        options = this.table.options;\n      this.field = options.dataTreeChildField;\n      this.indent = options.dataTreeChildIndent;\n      if (options.dataTreeBranchElement) {\n        if (options.dataTreeBranchElement === true) {\n          this.branchEl = document.createElement(\"div\");\n          this.branchEl.classList.add(\"tabulator-data-tree-branch\");\n        } else {\n          if (typeof options.dataTreeBranchElement === \"string\") {\n            dummyEl = document.createElement(\"div\");\n            dummyEl.innerHTML = options.dataTreeBranchElement;\n            this.branchEl = dummyEl.firstChild;\n          } else {\n            this.branchEl = options.dataTreeBranchElement;\n          }\n        }\n      }\n      if (options.dataTreeCollapseElement) {\n        if (typeof options.dataTreeCollapseElement === \"string\") {\n          dummyEl = document.createElement(\"div\");\n          dummyEl.innerHTML = options.dataTreeCollapseElement;\n          this.collapseEl = dummyEl.firstChild;\n        } else {\n          this.collapseEl = options.dataTreeCollapseElement;\n        }\n      } else {\n        this.collapseEl = document.createElement(\"div\");\n        this.collapseEl.classList.add(\"tabulator-data-tree-control\");\n        this.collapseEl.tabIndex = 0;\n        this.collapseEl.innerHTML = \"<div class='tabulator-data-tree-control-collapse'></div>\";\n      }\n      if (options.dataTreeExpandElement) {\n        if (typeof options.dataTreeExpandElement === \"string\") {\n          dummyEl = document.createElement(\"div\");\n          dummyEl.innerHTML = options.dataTreeExpandElement;\n          this.expandEl = dummyEl.firstChild;\n        } else {\n          this.expandEl = options.dataTreeExpandElement;\n        }\n      } else {\n        this.expandEl = document.createElement(\"div\");\n        this.expandEl.classList.add(\"tabulator-data-tree-control\");\n        this.expandEl.tabIndex = 0;\n        this.expandEl.innerHTML = \"<div class='tabulator-data-tree-control-expand'></div>\";\n      }\n      switch (typeof options.dataTreeStartExpanded) {\n        case \"boolean\":\n          this.startOpen = function (row, index) {\n            return options.dataTreeStartExpanded;\n          };\n          break;\n        case \"function\":\n          this.startOpen = options.dataTreeStartExpanded;\n          break;\n        default:\n          this.startOpen = function (row, index) {\n            return options.dataTreeStartExpanded[index];\n          };\n          break;\n      }\n      this.subscribe(\"row-init\", this.initializeRow.bind(this));\n      this.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\n      this.subscribe(\"row-deleted\", this.rowDelete.bind(this), 0);\n      this.subscribe(\"row-data-changed\", this.rowDataChanged.bind(this), 10);\n      this.subscribe(\"cell-value-updated\", this.cellValueChanged.bind(this));\n      this.subscribe(\"edit-cancelled\", this.cellValueChanged.bind(this));\n      this.subscribe(\"column-moving-rows\", this.columnMoving.bind(this));\n      this.subscribe(\"table-built\", this.initializeElementField.bind(this));\n      this.registerDisplayHandler(this.getRows.bind(this), 30);\n    }\n  }\n  initializeElementField() {\n    var firstCol = this.table.columnManager.getFirstVisibleColumn();\n    this.elementField = this.table.options.dataTreeElementColumn || (firstCol ? firstCol.field : false);\n  }\n  getRowChildren(row) {\n    return this.getTreeChildren(row, true);\n  }\n  columnMoving() {\n    var rows = [];\n    this.table.rowManager.rows.forEach(row => {\n      rows = rows.concat(this.getTreeChildren(row, false, true));\n    });\n    return rows;\n  }\n  rowDataChanged(row, visible, updatedData) {\n    if (this.redrawNeeded(updatedData)) {\n      this.initializeRow(row);\n      if (visible) {\n        this.layoutRow(row);\n        this.refreshData(true);\n      }\n    }\n  }\n  cellValueChanged(cell) {\n    var field = cell.column.getField();\n    if (field === this.elementField) {\n      this.layoutRow(cell.row);\n    }\n  }\n  initializeRow(row) {\n    var childArray = row.getData()[this.field];\n    var isArray = Array.isArray(childArray);\n    var children = isArray || !isArray && typeof childArray === \"object\" && childArray !== null;\n    if (!children && row.modules.dataTree && row.modules.dataTree.branchEl) {\n      row.modules.dataTree.branchEl.parentNode.removeChild(row.modules.dataTree.branchEl);\n    }\n    if (!children && row.modules.dataTree && row.modules.dataTree.controlEl) {\n      row.modules.dataTree.controlEl.parentNode.removeChild(row.modules.dataTree.controlEl);\n    }\n    row.modules.dataTree = {\n      index: row.modules.dataTree ? row.modules.dataTree.index : 0,\n      open: children ? row.modules.dataTree ? row.modules.dataTree.open : this.startOpen(row.getComponent(), 0) : false,\n      controlEl: row.modules.dataTree && children ? row.modules.dataTree.controlEl : false,\n      branchEl: row.modules.dataTree && children ? row.modules.dataTree.branchEl : false,\n      parent: row.modules.dataTree ? row.modules.dataTree.parent : false,\n      children: children\n    };\n  }\n  reinitializeRowChildren(row) {\n    var children = this.getTreeChildren(row, false, true);\n    children.forEach(function (child) {\n      child.reinitialize(true);\n    });\n  }\n  layoutRow(row) {\n    var cell = this.elementField ? row.getCell(this.elementField) : row.getCells()[0],\n      el = cell.getElement(),\n      config = row.modules.dataTree;\n    if (config.branchEl) {\n      if (config.branchEl.parentNode) {\n        config.branchEl.parentNode.removeChild(config.branchEl);\n      }\n      config.branchEl = false;\n    }\n    if (config.controlEl) {\n      if (config.controlEl.parentNode) {\n        config.controlEl.parentNode.removeChild(config.controlEl);\n      }\n      config.controlEl = false;\n    }\n    this.generateControlElement(row, el);\n    row.getElement().classList.add(\"tabulator-tree-level-\" + config.index);\n    if (config.index) {\n      if (this.branchEl) {\n        config.branchEl = this.branchEl.cloneNode(true);\n        el.insertBefore(config.branchEl, el.firstChild);\n        if (this.table.rtl) {\n          config.branchEl.style.marginRight = (config.branchEl.offsetWidth + config.branchEl.style.marginLeft) * (config.index - 1) + config.index * this.indent + \"px\";\n        } else {\n          config.branchEl.style.marginLeft = (config.branchEl.offsetWidth + config.branchEl.style.marginRight) * (config.index - 1) + config.index * this.indent + \"px\";\n        }\n      } else {\n        if (this.table.rtl) {\n          el.style.paddingRight = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-right')) + config.index * this.indent + \"px\";\n        } else {\n          el.style.paddingLeft = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-left')) + config.index * this.indent + \"px\";\n        }\n      }\n    }\n  }\n  generateControlElement(row, el) {\n    var config = row.modules.dataTree,\n      el = el || row.getCells()[0].getElement(),\n      oldControl = config.controlEl;\n    if (config.children !== false) {\n      if (config.open) {\n        config.controlEl = this.collapseEl.cloneNode(true);\n        config.controlEl.addEventListener(\"click\", e => {\n          e.stopPropagation();\n          this.collapseRow(row);\n        });\n      } else {\n        config.controlEl = this.expandEl.cloneNode(true);\n        config.controlEl.addEventListener(\"click\", e => {\n          e.stopPropagation();\n          this.expandRow(row);\n        });\n      }\n      config.controlEl.addEventListener(\"mousedown\", e => {\n        e.stopPropagation();\n      });\n      if (oldControl && oldControl.parentNode === el) {\n        oldControl.parentNode.replaceChild(config.controlEl, oldControl);\n      } else {\n        el.insertBefore(config.controlEl, el.firstChild);\n      }\n    }\n  }\n  setDisplayIndex(index) {\n    this.displayIndex = index;\n  }\n  getDisplayIndex() {\n    return this.displayIndex;\n  }\n  getRows(rows) {\n    var output = [];\n    rows.forEach((row, i) => {\n      var config, children;\n      output.push(row);\n      if (row instanceof Row) {\n        row.create();\n        config = row.modules.dataTree.children;\n        if (!config.index && config.children !== false) {\n          children = this.getChildren(row);\n          children.forEach(child => {\n            child.create();\n            output.push(child);\n          });\n        }\n      }\n    });\n    return output;\n  }\n  getChildren(row, allChildren) {\n    var config = row.modules.dataTree,\n      children = [],\n      output = [];\n    if (config.children !== false && (config.open || allChildren)) {\n      if (!Array.isArray(config.children)) {\n        config.children = this.generateChildren(row);\n      }\n      if (this.table.modExists(\"filter\") && this.table.options.dataTreeFilter) {\n        children = this.table.modules.filter.filter(config.children);\n      } else {\n        children = config.children;\n      }\n      if (this.table.modExists(\"sort\") && this.table.options.dataTreeSort) {\n        this.table.modules.sort.sort(children);\n      }\n      children.forEach(child => {\n        output.push(child);\n        var subChildren = this.getChildren(child);\n        subChildren.forEach(sub => {\n          output.push(sub);\n        });\n      });\n    }\n    return output;\n  }\n  generateChildren(row) {\n    var children = [];\n    var childArray = row.getData()[this.field];\n    if (!Array.isArray(childArray)) {\n      childArray = [childArray];\n    }\n    childArray.forEach(childData => {\n      var childRow = new Row(childData || {}, this.table.rowManager);\n      childRow.create();\n      childRow.modules.dataTree.index = row.modules.dataTree.index + 1;\n      childRow.modules.dataTree.parent = row;\n      if (childRow.modules.dataTree.children) {\n        childRow.modules.dataTree.open = this.startOpen(childRow.getComponent(), childRow.modules.dataTree.index);\n      }\n      children.push(childRow);\n    });\n    return children;\n  }\n  expandRow(row, silent) {\n    var config = row.modules.dataTree;\n    if (config.children !== false) {\n      config.open = true;\n      row.reinitialize();\n      this.refreshData(true);\n      this.dispatchExternal(\"dataTreeRowExpanded\", row.getComponent(), row.modules.dataTree.index);\n    }\n  }\n  collapseRow(row) {\n    var config = row.modules.dataTree;\n    if (config.children !== false) {\n      config.open = false;\n      row.reinitialize();\n      this.refreshData(true);\n      this.dispatchExternal(\"dataTreeRowCollapsed\", row.getComponent(), row.modules.dataTree.index);\n    }\n  }\n  toggleRow(row) {\n    var config = row.modules.dataTree;\n    if (config.children !== false) {\n      if (config.open) {\n        this.collapseRow(row);\n      } else {\n        this.expandRow(row);\n      }\n    }\n  }\n  getTreeParent(row) {\n    return row.modules.dataTree.parent ? row.modules.dataTree.parent.getComponent() : false;\n  }\n  getFilteredTreeChildren(row) {\n    var config = row.modules.dataTree,\n      output = [],\n      children;\n    if (config.children) {\n      if (!Array.isArray(config.children)) {\n        config.children = this.generateChildren(row);\n      }\n      if (this.table.modExists(\"filter\") && this.table.options.dataTreeFilter) {\n        children = this.table.modules.filter.filter(config.children);\n      } else {\n        children = config.children;\n      }\n      children.forEach(childRow => {\n        if (childRow instanceof Row) {\n          output.push(childRow);\n        }\n      });\n    }\n    return output;\n  }\n  rowDelete(row) {\n    var parent = row.modules.dataTree.parent,\n      childIndex;\n    if (parent) {\n      childIndex = this.findChildIndex(row, parent);\n      if (childIndex !== false) {\n        parent.data[this.field].splice(childIndex, 1);\n      }\n      if (!parent.data[this.field].length) {\n        delete parent.data[this.field];\n      }\n      this.initializeRow(parent);\n      this.layoutRow(parent);\n    }\n    this.refreshData(true);\n  }\n  addTreeChildRow(row, data, top, index) {\n    var childIndex = false;\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n    if (!Array.isArray(row.data[this.field])) {\n      row.data[this.field] = [];\n      row.modules.dataTree.open = this.startOpen(row.getComponent(), row.modules.dataTree.index);\n    }\n    if (typeof index !== \"undefined\") {\n      childIndex = this.findChildIndex(index, row);\n      if (childIndex !== false) {\n        row.data[this.field].splice(top ? childIndex : childIndex + 1, 0, data);\n      }\n    }\n    if (childIndex === false) {\n      if (top) {\n        row.data[this.field].unshift(data);\n      } else {\n        row.data[this.field].push(data);\n      }\n    }\n    this.initializeRow(row);\n    this.layoutRow(row);\n    this.refreshData(true);\n  }\n  findChildIndex(subject, parent) {\n    var match = false;\n    if (typeof subject == \"object\") {\n      if (subject instanceof Row) {\n        //subject is row element\n        match = subject.data;\n      } else if (subject instanceof RowComponent) {\n        //subject is public row component\n        match = subject._getSelf().data;\n      } else if (typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement) {\n        if (parent.modules.dataTree) {\n          match = parent.modules.dataTree.children.find(childRow => {\n            return childRow instanceof Row ? childRow.element === subject : false;\n          });\n          if (match) {\n            match = match.data;\n          }\n        }\n      }\n    } else if (typeof subject == \"undefined\" || subject === null) {\n      match = false;\n    } else {\n      //subject should be treated as the index of the row\n      match = parent.data[this.field].find(row => {\n        return row.data[this.table.options.index] == subject;\n      });\n    }\n    if (match) {\n      if (Array.isArray(parent.data[this.field])) {\n        match = parent.data[this.field].indexOf(match);\n      }\n      if (match == -1) {\n        match = false;\n      }\n    }\n\n    //catch all for any other type of input\n\n    return match;\n  }\n  getTreeChildren(row, component, recurse) {\n    var config = row.modules.dataTree,\n      output = [];\n    if (config.children) {\n      if (!Array.isArray(config.children)) {\n        config.children = this.generateChildren(row);\n      }\n      config.children.forEach(childRow => {\n        if (childRow instanceof Row) {\n          output.push(component ? childRow.getComponent() : childRow);\n          if (recurse) {\n            output = output.concat(this.getTreeChildren(childRow, component, recurse));\n          }\n        }\n      });\n    }\n    return output;\n  }\n  getChildField() {\n    return this.field;\n  }\n  redrawNeeded(data) {\n    console.log(\"needed?\", data);\n    return (this.field ? typeof data[this.field] !== \"undefined\" : false) || (this.elementField ? typeof data[this.elementField] !== \"undefined\" : false);\n  }\n}\nDataTree.moduleName = \"dataTree\";\nfunction csv(list, options, setFileContents) {\n  var delimiter = options && options.delimiter ? options.delimiter : \",\",\n    fileContents = [],\n    headers = [];\n  list.forEach(row => {\n    var item = [];\n    switch (row.type) {\n      case \"group\":\n        console.warn(\"Download Warning - CSV downloader cannot process row groups\");\n        break;\n      case \"calc\":\n        console.warn(\"Download Warning - CSV downloader cannot process column calculations\");\n        break;\n      case \"header\":\n        row.columns.forEach((col, i) => {\n          if (col && col.depth === 1) {\n            headers[i] = typeof col.value == \"undefined\" || col.value === null ? \"\" : '\"' + String(col.value).split('\"').join('\"\"') + '\"';\n          }\n        });\n        break;\n      case \"row\":\n        row.columns.forEach(col => {\n          if (col) {\n            switch (typeof col.value) {\n              case \"object\":\n                col.value = JSON.stringify(col.value);\n                break;\n              case \"undefined\":\n              case \"null\":\n                col.value = \"\";\n                break;\n            }\n            item.push('\"' + String(col.value).split('\"').join('\"\"') + '\"');\n          }\n        });\n        fileContents.push(item.join(delimiter));\n        break;\n    }\n  });\n  if (headers.length) {\n    fileContents.unshift(headers.join(delimiter));\n  }\n  fileContents = fileContents.join(\"\\n\");\n  if (options.bom) {\n    fileContents = \"\\ufeff\" + fileContents;\n  }\n  setFileContents(fileContents, \"text/csv\");\n}\nfunction json(list, options, setFileContents) {\n  var fileContents = [];\n  list.forEach(row => {\n    var item = {};\n    switch (row.type) {\n      case \"header\":\n        break;\n      case \"group\":\n        console.warn(\"Download Warning - JSON downloader cannot process row groups\");\n        break;\n      case \"calc\":\n        console.warn(\"Download Warning - JSON downloader cannot process column calculations\");\n        break;\n      case \"row\":\n        row.columns.forEach(col => {\n          if (col) {\n            item[col.component.getField()] = col.value;\n          }\n        });\n        fileContents.push(item);\n        break;\n    }\n  });\n  fileContents = JSON.stringify(fileContents, null, '\\t');\n  setFileContents(fileContents, \"application/json\");\n}\nfunction pdf(list, options, setFileContents) {\n  var header = [],\n    body = [],\n    autoTableParams = {},\n    rowGroupStyles = options.rowGroupStyles || {\n      fontStyle: \"bold\",\n      fontSize: 12,\n      cellPadding: 6,\n      fillColor: 220\n    },\n    rowCalcStyles = options.rowCalcStyles || {\n      fontStyle: \"bold\",\n      fontSize: 10,\n      cellPadding: 4,\n      fillColor: 232\n    },\n    jsPDFParams = options.jsPDF || {},\n    title = options && options.title ? options.title : \"\";\n  if (!jsPDFParams.orientation) {\n    jsPDFParams.orientation = options.orientation || \"landscape\";\n  }\n  if (!jsPDFParams.unit) {\n    jsPDFParams.unit = \"pt\";\n  }\n\n  //parse row list\n  list.forEach(row => {\n    switch (row.type) {\n      case \"header\":\n        header.push(parseRow(row));\n        break;\n      case \"group\":\n        body.push(parseRow(row, rowGroupStyles));\n        break;\n      case \"calc\":\n        body.push(parseRow(row, rowCalcStyles));\n        break;\n      case \"row\":\n        body.push(parseRow(row));\n        break;\n    }\n  });\n  function parseRow(row, styles) {\n    var rowData = [];\n    row.columns.forEach(col => {\n      var cell;\n      if (col) {\n        switch (typeof col.value) {\n          case \"object\":\n            col.value = JSON.stringify(col.value);\n            break;\n          case \"undefined\":\n          case \"null\":\n            col.value = \"\";\n            break;\n        }\n        cell = {\n          content: col.value,\n          colSpan: col.width,\n          rowSpan: col.height\n        };\n        if (styles) {\n          cell.styles = styles;\n        }\n        rowData.push(cell);\n      }\n    });\n    return rowData;\n  }\n\n  //configure PDF\n  var doc = new jspdf.jsPDF(jsPDFParams); //set document to landscape, better for most tables\n\n  if (options && options.autoTable) {\n    if (typeof options.autoTable === \"function\") {\n      autoTableParams = options.autoTable(doc) || {};\n    } else {\n      autoTableParams = options.autoTable;\n    }\n  }\n  if (title) {\n    autoTableParams.didDrawPage = function (data) {\n      doc.text(title, 40, 30);\n    };\n  }\n  autoTableParams.head = header;\n  autoTableParams.body = body;\n  doc.autoTable(autoTableParams);\n  if (options && options.documentProcessing) {\n    options.documentProcessing(doc);\n  }\n  setFileContents(doc.output(\"arraybuffer\"), \"application/pdf\");\n}\nfunction xlsx(list, options, setFileContents) {\n  var self = this,\n    sheetName = options.sheetName || \"Sheet1\",\n    workbook = XLSX.utils.book_new(),\n    tableFeatures = new CoreFeature(this),\n    output;\n  workbook.SheetNames = [];\n  workbook.Sheets = {};\n  function generateSheet() {\n    var rows = [],\n      merges = [],\n      worksheet = {},\n      range = {\n        s: {\n          c: 0,\n          r: 0\n        },\n        e: {\n          c: list[0] ? list[0].columns.reduce((a, b) => a + (b && b.width ? b.width : 1), 0) : 0,\n          r: list.length\n        }\n      };\n\n    //parse row list\n    list.forEach((row, i) => {\n      var rowData = [];\n      row.columns.forEach(function (col, j) {\n        if (col) {\n          rowData.push(!(col.value instanceof Date) && typeof col.value === \"object\" ? JSON.stringify(col.value) : col.value);\n          if (col.width > 1 || col.height > -1) {\n            if (col.height > 1 || col.width > 1) {\n              merges.push({\n                s: {\n                  r: i,\n                  c: j\n                },\n                e: {\n                  r: i + col.height - 1,\n                  c: j + col.width - 1\n                }\n              });\n            }\n          }\n        } else {\n          rowData.push(\"\");\n        }\n      });\n      rows.push(rowData);\n    });\n\n    //convert rows to worksheet\n    XLSX.utils.sheet_add_aoa(worksheet, rows);\n    worksheet['!ref'] = XLSX.utils.encode_range(range);\n    if (merges.length) {\n      worksheet[\"!merges\"] = merges;\n    }\n    return worksheet;\n  }\n  if (options.sheetOnly) {\n    setFileContents(generateSheet());\n    return;\n  }\n  if (options.sheets) {\n    for (var sheet in options.sheets) {\n      if (options.sheets[sheet] === true) {\n        workbook.SheetNames.push(sheet);\n        workbook.Sheets[sheet] = generateSheet();\n      } else {\n        workbook.SheetNames.push(sheet);\n        tableFeatures.commsSend(options.sheets[sheet], \"download\", \"intercept\", {\n          type: \"xlsx\",\n          options: {\n            sheetOnly: true\n          },\n          active: self.active,\n          intercept: function (data) {\n            workbook.Sheets[sheet] = data;\n          }\n        });\n      }\n    }\n  } else {\n    workbook.SheetNames.push(sheetName);\n    workbook.Sheets[sheetName] = generateSheet();\n  }\n  if (options.documentProcessing) {\n    workbook = options.documentProcessing(workbook);\n  }\n\n  //convert workbook to binary array\n  function s2ab(s) {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n    for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n  }\n  output = XLSX.write(workbook, {\n    bookType: 'xlsx',\n    bookSST: true,\n    type: 'binary'\n  });\n  setFileContents(s2ab(output), \"application/octet-stream\");\n}\nfunction html(list, options, setFileContents) {\n  if (this.modExists(\"export\", true)) {\n    setFileContents(this.modules.export.genereateHTMLTable(list), \"text/html\");\n  }\n}\nvar defaultDownloaders = {\n  csv: csv,\n  json: json,\n  pdf: pdf,\n  xlsx: xlsx,\n  html: html\n};\nclass Download extends Module {\n  constructor(table) {\n    super(table);\n    this.registerTableOption(\"downloadReady\", function (data, blob) {\n      return blob;\n    }); //function to manipulate download data\n    this.registerTableOption(\"downloadConfig\", {}); //download config\n    this.registerTableOption(\"downloadRowRange\", \"active\"); //restrict download to active rows only\n\n    this.registerColumnOption(\"download\");\n    this.registerColumnOption(\"titleDownload\");\n  }\n  initialize() {\n    this.registerTableFunction(\"download\", this.download.bind(this));\n    this.registerTableFunction(\"downloadToTab\", this.downloadToTab.bind(this));\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  downloadToTab(type, filename, options, active) {\n    this.download(type, filename, options, active, true);\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  //trigger file download\n  download(type, filename, options, range, interceptCallback) {\n    var downloadFunc = false;\n    function buildLink(data, mime) {\n      if (interceptCallback) {\n        if (interceptCallback === true) {\n          this.triggerDownload(data, mime, type, filename, true);\n        } else {\n          interceptCallback(data);\n        }\n      } else {\n        this.triggerDownload(data, mime, type, filename);\n      }\n    }\n    if (typeof type == \"function\") {\n      downloadFunc = type;\n    } else {\n      if (Download.downloaders[type]) {\n        downloadFunc = Download.downloaders[type];\n      } else {\n        console.warn(\"Download Error - No such download type found: \", type);\n      }\n    }\n    if (downloadFunc) {\n      var list = this.generateExportList(range);\n      downloadFunc.call(this.table, list, options || {}, buildLink.bind(this));\n    }\n  }\n  generateExportList(range) {\n    var list = this.table.modules.export.generateExportList(this.table.options.downloadConfig, false, range || this.table.options.downloadRowRange, \"download\");\n\n    //assign group header formatter\n    var groupHeader = this.table.options.groupHeaderDownload;\n    if (groupHeader && !Array.isArray(groupHeader)) {\n      groupHeader = [groupHeader];\n    }\n    list.forEach(row => {\n      var group;\n      if (row.type === \"group\") {\n        group = row.columns[0];\n        if (groupHeader && groupHeader[row.indent]) {\n          group.value = groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\n        }\n      }\n    });\n    return list;\n  }\n  triggerDownload(data, mime, type, filename, newTab) {\n    var element = document.createElement('a'),\n      blob = new Blob([data], {\n        type: mime\n      }),\n      filename = filename || \"Tabulator.\" + (typeof type === \"function\" ? \"txt\" : type);\n    blob = this.table.options.downloadReady(data, blob);\n    if (blob) {\n      if (newTab) {\n        window.open(window.URL.createObjectURL(blob));\n      } else {\n        if (navigator.msSaveOrOpenBlob) {\n          navigator.msSaveOrOpenBlob(blob, filename);\n        } else {\n          element.setAttribute('href', window.URL.createObjectURL(blob));\n\n          //set file title\n          element.setAttribute('download', filename);\n\n          //trigger download\n          element.style.display = 'none';\n          document.body.appendChild(element);\n          element.click();\n\n          //remove temporary link element\n          document.body.removeChild(element);\n        }\n      }\n      this.dispatchExternal(\"downloadComplete\");\n    }\n  }\n  commsReceived(table, action, data) {\n    switch (action) {\n      case \"intercept\":\n        this.download(data.type, \"\", data.options, data.active, data.intercept);\n        break;\n    }\n  }\n}\nDownload.moduleName = \"download\";\n\n//load defaults\nDownload.downloaders = defaultDownloaders;\nfunction maskInput(el, options) {\n  var mask = options.mask,\n    maskLetter = typeof options.maskLetterChar !== \"undefined\" ? options.maskLetterChar : \"A\",\n    maskNumber = typeof options.maskNumberChar !== \"undefined\" ? options.maskNumberChar : \"9\",\n    maskWildcard = typeof options.maskWildcardChar !== \"undefined\" ? options.maskWildcardChar : \"*\";\n  function fillSymbols(index) {\n    var symbol = mask[index];\n    if (typeof symbol !== \"undefined\" && symbol !== maskWildcard && symbol !== maskLetter && symbol !== maskNumber) {\n      el.value = el.value + \"\" + symbol;\n      fillSymbols(index + 1);\n    }\n  }\n  el.addEventListener(\"keydown\", e => {\n    var index = el.value.length,\n      char = e.key;\n    if (e.keyCode > 46) {\n      if (index >= mask.length) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      } else {\n        switch (mask[index]) {\n          case maskLetter:\n            if (char.toUpperCase() == char.toLowerCase()) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n            break;\n          case maskNumber:\n            if (isNaN(char)) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n            break;\n          case maskWildcard:\n            break;\n          default:\n            if (char !== mask[index]) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n        }\n      }\n    }\n    return;\n  });\n  el.addEventListener(\"keyup\", e => {\n    if (e.keyCode > 46) {\n      if (options.maskAutoFill) {\n        fillSymbols(el.value.length);\n      }\n    }\n  });\n  if (!el.placeholder) {\n    el.placeholder = mask;\n  }\n  if (options.maskAutoFill) {\n    fillSymbols(el.value.length);\n  }\n}\n\n//input element\nfunction input(cell, onRendered, success, cancel, editorParams) {\n  //create and style input\n  var cellValue = cell.getValue(),\n    input = document.createElement(\"input\");\n  input.setAttribute(\"type\", editorParams.search ? \"search\" : \"text\");\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n  input.value = typeof cellValue !== \"undefined\" ? cellValue : \"\";\n  onRendered(function () {\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n  });\n  function onChange(e) {\n    if ((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\" || input.value !== cellValue) {\n      if (success(input.value)) {\n        cellValue = input.value; //persist value if successfully validated incase editor is used as header filter\n      }\n    } else {\n      cancel();\n    }\n  }\n\n  //submit new value on blur or change\n  input.addEventListener(\"change\", onChange);\n  input.addEventListener(\"blur\", onChange);\n\n  //submit new value on enter\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      // case 9:\n      case 13:\n        onChange();\n        break;\n      case 27:\n        cancel();\n        break;\n      case 35:\n      case 36:\n        e.stopPropagation();\n        break;\n    }\n  });\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n  return input;\n}\n\n//resizable text area element\nfunction textarea(cell, onRendered, success, cancel, editorParams) {\n  var cellValue = cell.getValue(),\n    vertNav = editorParams.verticalNavigation || \"hybrid\",\n    value = String(cellValue !== null && typeof cellValue !== \"undefined\" ? cellValue : \"\"),\n    count = (value.match(/(?:\\r\\n|\\r|\\n)/g) || []).length + 1,\n    input = document.createElement(\"textarea\"),\n    scrollHeight = 0;\n\n  //create and style input\n  input.style.display = \"block\";\n  input.style.padding = \"2px\";\n  input.style.height = \"100%\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  input.style.whiteSpace = \"pre-wrap\";\n  input.style.resize = \"none\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n  input.value = value;\n  onRendered(function () {\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n    input.scrollHeight;\n    input.style.height = input.scrollHeight + \"px\";\n    cell.getRow().normalizeHeight();\n  });\n  function onChange(e) {\n    if ((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\" || input.value !== cellValue) {\n      if (success(input.value)) {\n        cellValue = input.value; //persist value if successfully validated incase editor is used as header filter\n      }\n\n      setTimeout(function () {\n        cell.getRow().normalizeHeight();\n      }, 300);\n    } else {\n      cancel();\n    }\n  }\n\n  //submit new value on blur or change\n  input.addEventListener(\"change\", onChange);\n  input.addEventListener(\"blur\", onChange);\n  input.addEventListener(\"keyup\", function () {\n    input.style.height = \"\";\n    var heightNow = input.scrollHeight;\n    input.style.height = heightNow + \"px\";\n    if (heightNow != scrollHeight) {\n      scrollHeight = heightNow;\n      cell.getRow().normalizeHeight();\n    }\n  });\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 27:\n        cancel();\n        break;\n      case 38:\n        //up arrow\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && input.selectionStart) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        }\n        break;\n      case 40:\n        //down arrow\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && input.selectionStart !== input.value.length) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        }\n        break;\n      case 35:\n      case 36:\n        e.stopPropagation();\n        break;\n    }\n  });\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n  return input;\n}\n\n//input element with type of number\nfunction number(cell, onRendered, success, cancel, editorParams) {\n  var cellValue = cell.getValue(),\n    vertNav = editorParams.verticalNavigation || \"editor\",\n    input = document.createElement(\"input\");\n  input.setAttribute(\"type\", \"number\");\n  if (typeof editorParams.max != \"undefined\") {\n    input.setAttribute(\"max\", editorParams.max);\n  }\n  if (typeof editorParams.min != \"undefined\") {\n    input.setAttribute(\"min\", editorParams.min);\n  }\n  if (typeof editorParams.step != \"undefined\") {\n    input.setAttribute(\"step\", editorParams.step);\n  }\n\n  //create and style input\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n  input.value = cellValue;\n  var blurFunc = function (e) {\n    onChange();\n  };\n  onRendered(function () {\n    //submit new value on blur\n    input.removeEventListener(\"blur\", blurFunc);\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n\n    //submit new value on blur\n    input.addEventListener(\"blur\", blurFunc);\n  });\n  function onChange() {\n    var value = input.value;\n    if (!isNaN(value) && value !== \"\") {\n      value = Number(value);\n    }\n    if (value !== cellValue) {\n      if (success(value)) {\n        cellValue = value; //persist value if successfully validated incase editor is used as header filter\n      }\n    } else {\n      cancel();\n    }\n  }\n\n  //submit new value on enter\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 13:\n        // case 9:\n        onChange();\n        break;\n      case 27:\n        cancel();\n        break;\n      case 38: //up arrow\n      case 40:\n        //down arrow\n        if (vertNav == \"editor\") {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        }\n        break;\n      case 35:\n      case 36:\n        e.stopPropagation();\n        break;\n    }\n  });\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n  return input;\n}\n\n//input element with type of number\nfunction range(cell, onRendered, success, cancel, editorParams) {\n  var cellValue = cell.getValue(),\n    input = document.createElement(\"input\");\n  input.setAttribute(\"type\", \"range\");\n  if (typeof editorParams.max != \"undefined\") {\n    input.setAttribute(\"max\", editorParams.max);\n  }\n  if (typeof editorParams.min != \"undefined\") {\n    input.setAttribute(\"min\", editorParams.min);\n  }\n  if (typeof editorParams.step != \"undefined\") {\n    input.setAttribute(\"step\", editorParams.step);\n  }\n\n  //create and style input\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n  input.value = cellValue;\n  onRendered(function () {\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n  });\n  function onChange() {\n    var value = input.value;\n    if (!isNaN(value) && value !== \"\") {\n      value = Number(value);\n    }\n    if (value != cellValue) {\n      if (success(value)) {\n        cellValue = value; //persist value if successfully validated incase editor is used as header filter\n      }\n    } else {\n      cancel();\n    }\n  }\n\n  //submit new value on blur\n  input.addEventListener(\"blur\", function (e) {\n    onChange();\n  });\n\n  //submit new value on enter\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 13:\n        // case 9:\n        onChange();\n        break;\n      case 27:\n        cancel();\n        break;\n    }\n  });\n  return input;\n}\n\n//dropdown select editor\nfunction select(cell, onRendered, success, cancel, editorParams) {\n  var self = this,\n    cellEl = cell.getElement(),\n    initialValue = cell.getValue(),\n    vertNav = editorParams.verticalNavigation || \"editor\",\n    initialDisplayValue = typeof initialValue !== \"undefined\" || initialValue === null ? Array.isArray(initialValue) ? initialValue : [initialValue] : typeof editorParams.defaultValue !== \"undefined\" ? editorParams.defaultValue : [],\n    input = document.createElement(\"input\"),\n    listEl = document.createElement(\"div\"),\n    multiselect = editorParams.multiselect,\n    dataItems = [],\n    currentItem = {},\n    displayItems = [],\n    currentItems = [],\n    blurable = true,\n    blockListShow = false,\n    searchWord = \"\",\n    searchWordTimeout = null;\n  if (Array.isArray(editorParams) || !Array.isArray(editorParams) && typeof editorParams === \"object\" && !editorParams.values) {\n    console.warn(\"DEPRECATION WARNING - values for the select editor must now be passed into the values property of the editorParams object, not as the editorParams object\");\n    editorParams = {\n      values: editorParams\n    };\n  }\n  function getUniqueColumnValues(field) {\n    var output = {},\n      data = self.table.getData(),\n      column;\n    if (field) {\n      column = self.table.columnManager.getColumnByField(field);\n    } else {\n      column = cell.getColumn()._getSelf();\n    }\n    if (column) {\n      data.forEach(function (row) {\n        var val = column.getFieldValue(row);\n        if (val !== null && typeof val !== \"undefined\" && val !== \"\") {\n          output[val] = true;\n        }\n      });\n    } else {\n      console.warn(\"unable to find matching column to create select lookup list:\", field);\n    }\n    return Object.keys(output);\n  }\n  function parseItems(inputValues, curentValues) {\n    var dataList = [];\n    var displayList = [];\n    function processComplexListItem(item) {\n      var item = {\n        label: item.label,\n        value: item.value,\n        itemParams: item.itemParams,\n        elementAttributes: item.elementAttributes,\n        element: false\n      };\n\n      // if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\n      // \tsetCurrentItem(item);\n      // }\n\n      if (curentValues.indexOf(item.value) > -1) {\n        setItem(item);\n      }\n      dataList.push(item);\n      displayList.push(item);\n      return item;\n    }\n    if (typeof inputValues == \"function\") {\n      inputValues = inputValues(cell);\n    }\n    if (Array.isArray(inputValues)) {\n      inputValues.forEach(function (value) {\n        var item;\n        if (typeof value === \"object\") {\n          if (value.options) {\n            item = {\n              label: value.label,\n              group: true,\n              itemParams: value.itemParams,\n              elementAttributes: value.elementAttributes,\n              element: false\n            };\n            displayList.push(item);\n            value.options.forEach(function (item) {\n              processComplexListItem(item);\n            });\n          } else {\n            processComplexListItem(value);\n          }\n        } else {\n          item = {\n            label: value,\n            value: value,\n            element: false\n          };\n\n          // if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\n          // \tsetCurrentItem(item);\n          // }\n\n          if (curentValues.indexOf(item.value) > -1) {\n            setItem(item);\n          }\n          dataList.push(item);\n          displayList.push(item);\n        }\n      });\n    } else {\n      for (var key in inputValues) {\n        var item = {\n          label: inputValues[key],\n          value: key,\n          element: false\n        };\n\n        // if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\n        // \tsetCurrentItem(item);\n        // }\n\n        if (curentValues.indexOf(item.value) > -1) {\n          setItem(item);\n        }\n        dataList.push(item);\n        displayList.push(item);\n      }\n    }\n    if (editorParams.sortValuesList) {\n      dataList.sort((a, b) => {\n        return a.label < b.label ? -1 : a.label > b.label ? 1 : 0;\n      });\n      displayList.sort((a, b) => {\n        return a.label < b.label ? -1 : a.label > b.label ? 1 : 0;\n      });\n      if (editorParams.sortValuesList !== \"asc\") {\n        dataList.reverse();\n        displayList.reverse();\n      }\n    }\n    dataItems = dataList;\n    displayItems = displayList;\n    fillList();\n  }\n  function fillList() {\n    while (listEl.firstChild) listEl.removeChild(listEl.firstChild);\n    displayItems.forEach(function (item) {\n      var el = item.element;\n      if (!el) {\n        el = document.createElement(\"div\");\n        item.label = editorParams.listItemFormatter ? editorParams.listItemFormatter(item.value, item.label, cell, el, item.itemParams) : item.label;\n        if (item.group) {\n          el.classList.add(\"tabulator-edit-select-list-group\");\n          el.tabIndex = 0;\n          el.innerHTML = item.label === \"\" ? \"&nbsp;\" : item.label;\n        } else {\n          el.classList.add(\"tabulator-edit-select-list-item\");\n          el.tabIndex = 0;\n          el.innerHTML = item.label === \"\" ? \"&nbsp;\" : item.label;\n          el.addEventListener(\"click\", function () {\n            blockListShow = true;\n            setTimeout(() => {\n              blockListShow = false;\n            }, 10);\n\n            // setCurrentItem(item);\n            // chooseItem();\n            if (multiselect) {\n              toggleItem(item);\n              input.focus();\n            } else {\n              chooseItem(item);\n            }\n          });\n\n          // if(item === currentItem){\n          // \tel.classList.add(\"active\");\n          // }\n\n          if (currentItems.indexOf(item) > -1) {\n            el.classList.add(\"active\");\n          }\n        }\n        if (item.elementAttributes && typeof item.elementAttributes == \"object\") {\n          for (let key in item.elementAttributes) {\n            if (key.charAt(0) == \"+\") {\n              key = key.slice(1);\n              el.setAttribute(key, input.getAttribute(key) + item.elementAttributes[\"+\" + key]);\n            } else {\n              el.setAttribute(key, item.elementAttributes[key]);\n            }\n          }\n        }\n        el.addEventListener(\"mousedown\", function () {\n          blurable = false;\n          setTimeout(function () {\n            blurable = true;\n          }, 10);\n        });\n        item.element = el;\n      }\n      listEl.appendChild(el);\n    });\n  }\n  function setCurrentItem(item, active) {\n    if (!multiselect && currentItem && currentItem.element) {\n      currentItem.element.classList.remove(\"active\");\n    }\n    if (currentItem && currentItem.element) {\n      currentItem.element.classList.remove(\"focused\");\n    }\n    currentItem = item;\n    if (item.element) {\n      item.element.classList.add(\"focused\");\n      if (active) {\n        item.element.classList.add(\"active\");\n      }\n    }\n    if (item && item.element && item.element.scrollIntoView) {\n      item.element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'start'\n      });\n    }\n  }\n\n  // function chooseItem(){\n  // \thideList();\n\n  // \tif(initialValue !== currentItem.value){\n  // \t\tinitialValue = currentItem.value;\n  // \t\tsuccess(currentItem.value);\n  // \t}else{\n  // \t\tcancel();\n  // \t}\n  // }\n\n  function setItem(item) {\n    var index = currentItems.indexOf(item);\n    if (index == -1) {\n      currentItems.push(item);\n      setCurrentItem(item, true);\n    }\n    fillInput();\n  }\n  function unsetItem(index) {\n    var item = currentItems[index];\n    if (index > -1) {\n      currentItems.splice(index, 1);\n      if (item.element) {\n        item.element.classList.remove(\"active\");\n      }\n    }\n  }\n  function toggleItem(item) {\n    if (!item) {\n      item = currentItem;\n    }\n    var index = currentItems.indexOf(item);\n    if (index > -1) {\n      unsetItem(index);\n    } else {\n      if (multiselect !== true && currentItems.length >= multiselect) {\n        unsetItem(0);\n      }\n      setItem(item);\n    }\n    fillInput();\n  }\n  function chooseItem(item) {\n    hideList();\n    if (!item) {\n      item = currentItem;\n    }\n    if (item) {\n      input.value = item.label;\n      success(item.value);\n    }\n    initialDisplayValue = [item.value];\n  }\n  function chooseItems(silent) {\n    if (!silent) {\n      hideList();\n    }\n    var output = [];\n    currentItems.forEach(item => {\n      output.push(item.value);\n    });\n    initialDisplayValue = output;\n    success(output);\n  }\n  function fillInput() {\n    var output = [];\n    currentItems.forEach(item => {\n      output.push(item.label);\n    });\n    input.value = output.join(\", \");\n    if (self.currentCell === false) {\n      chooseItems(true);\n    }\n  }\n  function unsetItems() {\n    var len = currentItems.length;\n    for (let i = 0; i < len; i++) {\n      unsetItem(0);\n    }\n  }\n  function cancelItem() {\n    hideList();\n    cancel();\n  }\n  function showList() {\n    currentItems = [];\n    if (!listEl.parentNode) {\n      if (editorParams.values === true) {\n        parseItems(getUniqueColumnValues(), initialDisplayValue);\n      } else if (typeof editorParams.values === \"string\") {\n        parseItems(getUniqueColumnValues(editorParams.values), initialDisplayValue);\n      } else {\n        parseItems(editorParams.values || [], initialDisplayValue);\n      }\n      var offset = Helpers.elOffset(cellEl);\n      listEl.style.minWidth = cellEl.offsetWidth + \"px\";\n      listEl.style.top = offset.top + cellEl.offsetHeight + \"px\";\n      listEl.style.left = offset.left + \"px\";\n      listEl.addEventListener(\"mousedown\", function (e) {\n        blurable = false;\n        setTimeout(function () {\n          blurable = true;\n        }, 10);\n      });\n      document.body.appendChild(listEl);\n    }\n  }\n  function hideList() {\n    if (listEl.parentNode) {\n      listEl.parentNode.removeChild(listEl);\n    }\n    removeScrollListener();\n  }\n  function removeScrollListener() {\n    self.table.rowManager.element.removeEventListener(\"scroll\", cancelItem);\n  }\n  function scrollTovalue(char) {\n    clearTimeout(searchWordTimeout);\n    var character = String.fromCharCode(event.keyCode).toLowerCase();\n    searchWord += character.toLowerCase();\n    var match = dataItems.find(item => {\n      return typeof item.label !== \"undefined\" && item.label.toLowerCase().startsWith(searchWord);\n    });\n    if (match) {\n      setCurrentItem(match, !multiselect);\n    }\n    searchWordTimeout = setTimeout(() => {\n      searchWord = \"\";\n    }, 800);\n  }\n\n  //style input\n  input.setAttribute(\"type\", \"text\");\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  input.style.cursor = \"default\";\n  input.readOnly = this.currentCell != false;\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n  input.value = typeof initialValue !== \"undefined\" || initialValue === null ? initialValue : \"\";\n\n  // if(editorParams.values === true){\n  // \tparseItems(getUniqueColumnValues(), initialValue);\n  // }else if(typeof editorParams.values === \"string\"){\n  // \tparseItems(getUniqueColumnValues(editorParams.values), initialValue);\n  // }else{\n  // \tparseItems(editorParams.values || [], initialValue);\n  // }\n\n  input.addEventListener(\"search\", function (e) {\n    if (!input.value) {\n      unsetItems();\n      chooseItems();\n    }\n  });\n\n  //allow key based navigation\n  input.addEventListener(\"keydown\", function (e) {\n    var index;\n    switch (e.keyCode) {\n      case 38:\n        //up arrow\n        index = dataItems.indexOf(currentItem);\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && index) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          e.preventDefault();\n          if (index > 0) {\n            setCurrentItem(dataItems[index - 1], !multiselect);\n          }\n        }\n        break;\n      case 40:\n        //down arrow\n        index = dataItems.indexOf(currentItem);\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && index < dataItems.length - 1) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          e.preventDefault();\n          if (index < dataItems.length - 1) {\n            if (index == -1) {\n              setCurrentItem(dataItems[0], !multiselect);\n            } else {\n              setCurrentItem(dataItems[index + 1], !multiselect);\n            }\n          }\n        }\n        break;\n      case 37: //left arrow\n      case 39:\n        //right arrow\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        e.preventDefault();\n        break;\n      case 13:\n        //enter\n        // chooseItem();\n\n        if (multiselect) {\n          toggleItem();\n        } else {\n          chooseItem();\n        }\n        break;\n      case 27:\n        //escape\n        cancelItem();\n        break;\n      case 9:\n        //tab\n        break;\n      default:\n        if (self.currentCell === false) {\n          e.preventDefault();\n        }\n        if (e.keyCode >= 38 && e.keyCode <= 90) {\n          scrollTovalue(e.keyCode);\n        }\n    }\n  });\n  input.addEventListener(\"blur\", function (e) {\n    if (blurable) {\n      if (multiselect) {\n        chooseItems();\n      } else {\n        cancelItem();\n      }\n    }\n  });\n  input.addEventListener(\"focus\", function (e) {\n    if (!blockListShow) {\n      showList();\n    }\n  });\n\n  //style list element\n  listEl = document.createElement(\"div\");\n  listEl.classList.add(\"tabulator-edit-select-list\");\n  onRendered(function () {\n    input.style.height = \"100%\";\n    input.focus({\n      preventScroll: true\n    });\n  });\n  setTimeout(() => {\n    this.table.rowManager.element.addEventListener(\"scroll\", cancelItem);\n  }, 10);\n  return input;\n}\n\n//autocomplete\nfunction autocomplete(cell, onRendered, success, cancel, editorParams) {\n  var self = this,\n    cellEl = cell.getElement(),\n    initialValue = cell.getValue(),\n    vertNav = editorParams.verticalNavigation || \"editor\",\n    initialDisplayValue = typeof initialValue !== \"undefined\" || initialValue === null ? initialValue : typeof editorParams.defaultValue !== \"undefined\" ? editorParams.defaultValue : \"\",\n    input = document.createElement(\"input\"),\n    listEl = document.createElement(\"div\"),\n    displayItems = [],\n    currentItem = false,\n    blurable = true,\n    uniqueColumnValues = false;\n\n  //style input\n  input.setAttribute(\"type\", \"search\");\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  //style list element\n  listEl.classList.add(\"tabulator-edit-select-list\");\n  listEl.addEventListener(\"mousedown\", function (e) {\n    blurable = false;\n    setTimeout(function () {\n      blurable = true;\n    }, 10);\n  });\n  function genUniqueColumnValues() {\n    if (editorParams.values === true) {\n      uniqueColumnValues = getUniqueColumnValues();\n    } else if (typeof editorParams.values === \"string\") {\n      uniqueColumnValues = getUniqueColumnValues(editorParams.values);\n    }\n  }\n  function getUniqueColumnValues(field) {\n    var output = {},\n      data = self.table.getData(),\n      column;\n    if (field) {\n      column = self.table.columnManager.getColumnByField(field);\n    } else {\n      column = cell.getColumn()._getSelf();\n    }\n    if (column) {\n      data.forEach(function (row) {\n        var val = column.getFieldValue(row);\n        if (val !== null && typeof val !== \"undefined\" && val !== \"\") {\n          output[val] = true;\n        }\n      });\n      if (editorParams.sortValuesList) {\n        if (editorParams.sortValuesList == \"asc\") {\n          output = Object.keys(output).sort();\n        } else {\n          output = Object.keys(output).sort().reverse();\n        }\n      } else {\n        output = Object.keys(output);\n      }\n    } else {\n      console.warn(\"unable to find matching column to create autocomplete lookup list:\", field);\n    }\n    return output;\n  }\n  function filterList(term, intialLoad) {\n    var matches = [],\n      values,\n      items;\n\n    //lookup base values list\n    if (uniqueColumnValues) {\n      values = uniqueColumnValues;\n    } else {\n      values = editorParams.values || [];\n    }\n    if (editorParams.searchFunc) {\n      matches = editorParams.searchFunc(term, values);\n      if (matches instanceof Promise) {\n        addNotice(typeof editorParams.searchingPlaceholder !== \"undefined\" ? editorParams.searchingPlaceholder : \"Searching...\");\n        matches.then(result => {\n          fillListIfNotEmpty(parseItems(result), intialLoad);\n        }).catch(err => {\n          console.err(\"error in autocomplete search promise:\", err);\n        });\n      } else {\n        fillListIfNotEmpty(parseItems(matches), intialLoad);\n      }\n    } else {\n      items = parseItems(values);\n      if (term === \"\") {\n        if (editorParams.showListOnEmpty) {\n          matches = items;\n        }\n      } else {\n        items.forEach(function (item) {\n          if (item.value !== null || typeof item.value !== \"undefined\") {\n            if (String(item.value).toLowerCase().indexOf(String(term).toLowerCase()) > -1 || String(item.title).toLowerCase().indexOf(String(term).toLowerCase()) > -1) {\n              matches.push(item);\n            }\n          }\n        });\n      }\n      fillListIfNotEmpty(matches, intialLoad);\n    }\n  }\n  function addNotice(notice) {\n    var searchEl = document.createElement(\"div\");\n    clearList();\n    if (notice !== false) {\n      searchEl.classList.add(\"tabulator-edit-select-list-notice\");\n      searchEl.tabIndex = 0;\n      if (notice instanceof Node) {\n        searchEl.appendChild(notice);\n      } else {\n        searchEl.innerHTML = notice;\n      }\n      listEl.appendChild(searchEl);\n    }\n  }\n  function parseItems(inputValues) {\n    var itemList = [];\n    if (Array.isArray(inputValues)) {\n      inputValues.forEach(function (value) {\n        var item = {};\n        if (typeof value === \"object\") {\n          item.title = editorParams.listItemFormatter ? editorParams.listItemFormatter(value.value, value.label) : value.label;\n          item.value = value.value;\n        } else {\n          item.title = editorParams.listItemFormatter ? editorParams.listItemFormatter(value, value) : value;\n          item.value = value;\n        }\n        itemList.push(item);\n      });\n    } else {\n      for (var key in inputValues) {\n        var item = {\n          title: editorParams.listItemFormatter ? editorParams.listItemFormatter(key, inputValues[key]) : inputValues[key],\n          value: key\n        };\n        itemList.push(item);\n      }\n    }\n    return itemList;\n  }\n  function clearList() {\n    while (listEl.firstChild) listEl.removeChild(listEl.firstChild);\n  }\n  function fillListIfNotEmpty(items, intialLoad) {\n    if (items.length) {\n      fillList(items, intialLoad);\n    } else {\n      if (editorParams.emptyPlaceholder) {\n        addNotice(editorParams.emptyPlaceholder);\n      }\n    }\n  }\n  function fillList(items, intialLoad) {\n    var current = false;\n    clearList();\n    displayItems = items;\n    displayItems.forEach(function (item) {\n      var el = item.element;\n      if (!el) {\n        el = document.createElement(\"div\");\n        el.classList.add(\"tabulator-edit-select-list-item\");\n        el.tabIndex = 0;\n        el.innerHTML = item.title;\n        el.addEventListener(\"click\", function (e) {\n          setCurrentItem(item);\n          chooseItem();\n        });\n        el.addEventListener(\"mousedown\", function (e) {\n          blurable = false;\n          setTimeout(function () {\n            blurable = true;\n          }, 10);\n        });\n        item.element = el;\n        if (intialLoad && item.value == initialValue) {\n          input.value = item.title;\n          item.element.classList.add(\"active\");\n          current = true;\n        }\n        if (item === currentItem) {\n          item.element.classList.add(\"active\");\n          current = true;\n        }\n      }\n      listEl.appendChild(el);\n    });\n    if (!current) {\n      setCurrentItem(false);\n    }\n  }\n  function chooseItem() {\n    hideList();\n    if (currentItem) {\n      if (initialValue !== currentItem.value) {\n        initialValue = currentItem.value;\n        input.value = currentItem.title;\n        success(currentItem.value);\n      } else {\n        cancel();\n      }\n    } else {\n      if (editorParams.freetext) {\n        initialValue = input.value;\n        success(input.value);\n      } else {\n        if (editorParams.allowEmpty && input.value === \"\") {\n          initialValue = input.value;\n          success(input.value);\n        } else {\n          cancel();\n        }\n      }\n    }\n  }\n  function showList() {\n    if (!listEl.parentNode) {\n      while (listEl.firstChild) listEl.removeChild(listEl.firstChild);\n      var offset = Helpers.elOffset(cellEl);\n      listEl.style.minWidth = cellEl.offsetWidth + \"px\";\n      listEl.style.top = offset.top + cellEl.offsetHeight + \"px\";\n      listEl.style.left = offset.left + \"px\";\n      document.body.appendChild(listEl);\n    }\n  }\n  function setCurrentItem(item, showInputValue) {\n    if (currentItem && currentItem.element) {\n      currentItem.element.classList.remove(\"active\");\n    }\n    currentItem = item;\n    if (item && item.element) {\n      item.element.classList.add(\"active\");\n    }\n    if (item && item.element && item.element.scrollIntoView) {\n      item.element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'start'\n      });\n    }\n  }\n  function hideList() {\n    if (listEl.parentNode) {\n      listEl.parentNode.removeChild(listEl);\n    }\n    removeScrollListener();\n  }\n  function cancelItem() {\n    hideList();\n    cancel();\n  }\n  function removeScrollListener() {\n    self.table.rowManager.element.removeEventListener(\"scroll\", cancelItem);\n  }\n\n  //allow key based navigation\n  input.addEventListener(\"keydown\", function (e) {\n    var index;\n    switch (e.keyCode) {\n      case 38:\n        //up arrow\n        index = displayItems.indexOf(currentItem);\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && index) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          e.preventDefault();\n          if (index > 0) {\n            setCurrentItem(displayItems[index - 1]);\n          } else {\n            setCurrentItem(false);\n          }\n        }\n        break;\n      case 40:\n        //down arrow\n\n        index = displayItems.indexOf(currentItem);\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && index < displayItems.length - 1) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          e.preventDefault();\n          if (index < displayItems.length - 1) {\n            if (index == -1) {\n              setCurrentItem(displayItems[0]);\n            } else {\n              setCurrentItem(displayItems[index + 1]);\n            }\n          }\n        }\n        break;\n      case 37: //left arrow\n      case 39:\n        //right arrow\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        // e.preventDefault();\n        break;\n      case 13:\n        //enter\n        chooseItem();\n        break;\n      case 27:\n        //escape\n        cancelItem();\n        break;\n      case 36: //home\n      case 35:\n        //end\n        //prevent table navigation while using input element\n        e.stopImmediatePropagation();\n        break;\n    }\n  });\n  input.addEventListener(\"keyup\", function (e) {\n    switch (e.keyCode) {\n      case 38: //up arrow\n      case 37: //left arrow\n      case 39: //up arrow\n      case 40: //right arrow\n      case 13: //enter\n      case 27:\n        //escape\n        break;\n      default:\n        filterList(input.value);\n    }\n  });\n  input.addEventListener(\"search\", function (e) {\n    filterList(input.value);\n  });\n  input.addEventListener(\"blur\", function (e) {\n    if (blurable) {\n      chooseItem();\n    }\n  });\n  input.addEventListener(\"focus\", function (e) {\n    var value = initialDisplayValue;\n    genUniqueColumnValues();\n    showList();\n    input.value = value;\n    filterList(value, true);\n  });\n  onRendered(function () {\n    input.style.height = \"100%\";\n    input.focus({\n      preventScroll: true\n    });\n  });\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n  setTimeout(() => {\n    this.table.rowManager.element.addEventListener(\"scroll\", cancelItem);\n  }, 10);\n  genUniqueColumnValues();\n  input.value = initialDisplayValue;\n  filterList(initialDisplayValue, true);\n  return input;\n}\n\n//star rating\nfunction star(cell, onRendered, success, cancel, editorParams) {\n  var self = this,\n    element = cell.getElement(),\n    value = cell.getValue(),\n    maxStars = element.getElementsByTagName(\"svg\").length || 5,\n    size = element.getElementsByTagName(\"svg\")[0] ? element.getElementsByTagName(\"svg\")[0].getAttribute(\"width\") : 14,\n    stars = [],\n    starsHolder = document.createElement(\"div\"),\n    star = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\n\n  //change star type\n  function starChange(val) {\n    stars.forEach(function (star, i) {\n      if (i < val) {\n        if (self.table.browser == \"ie\") {\n          star.setAttribute(\"class\", \"tabulator-star-active\");\n        } else {\n          star.classList.replace(\"tabulator-star-inactive\", \"tabulator-star-active\");\n        }\n        star.innerHTML = '<polygon fill=\"#488CE9\" stroke=\"#014AAE\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\n      } else {\n        if (self.table.browser == \"ie\") {\n          star.setAttribute(\"class\", \"tabulator-star-inactive\");\n        } else {\n          star.classList.replace(\"tabulator-star-active\", \"tabulator-star-inactive\");\n        }\n        star.innerHTML = '<polygon fill=\"#010155\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\n      }\n    });\n  }\n\n  //build stars\n  function buildStar(i) {\n    var starHolder = document.createElement(\"span\");\n    var nextStar = star.cloneNode(true);\n    stars.push(nextStar);\n    starHolder.addEventListener(\"mouseenter\", function (e) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      starChange(i);\n    });\n    starHolder.addEventListener(\"mousemove\", function (e) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    });\n    starHolder.addEventListener(\"click\", function (e) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      success(i);\n      element.blur();\n    });\n    starHolder.appendChild(nextStar);\n    starsHolder.appendChild(starHolder);\n  }\n\n  //handle keyboard navigation value change\n  function changeValue(val) {\n    value = val;\n    starChange(val);\n  }\n\n  //style cell\n  element.style.whiteSpace = \"nowrap\";\n  element.style.overflow = \"hidden\";\n  element.style.textOverflow = \"ellipsis\";\n\n  //style holding element\n  starsHolder.style.verticalAlign = \"middle\";\n  starsHolder.style.display = \"inline-block\";\n  starsHolder.style.padding = \"4px\";\n\n  //style star\n  star.setAttribute(\"width\", size);\n  star.setAttribute(\"height\", size);\n  star.setAttribute(\"viewBox\", \"0 0 512 512\");\n  star.setAttribute(\"xml:space\", \"preserve\");\n  star.style.padding = \"0 1px\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        starsHolder.setAttribute(key, starsHolder.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        starsHolder.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  //create correct number of stars\n  for (var i = 1; i <= maxStars; i++) {\n    buildStar(i);\n  }\n\n  //ensure value does not exceed number of stars\n  value = Math.min(parseInt(value), maxStars);\n\n  // set initial styling of stars\n  starChange(value);\n  starsHolder.addEventListener(\"mousemove\", function (e) {\n    starChange(0);\n  });\n  starsHolder.addEventListener(\"click\", function (e) {\n    success(0);\n  });\n  element.addEventListener(\"blur\", function (e) {\n    cancel();\n  });\n\n  //allow key based navigation\n  element.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 39:\n        //right arrow\n        changeValue(value + 1);\n        break;\n      case 37:\n        //left arrow\n        changeValue(value - 1);\n        break;\n      case 13:\n        //enter\n        success(value);\n        break;\n      case 27:\n        //escape\n        cancel();\n        break;\n    }\n  });\n  return starsHolder;\n}\n\n//draggable progress bar\nfunction progress(cell, onRendered, success, cancel, editorParams) {\n  var element = cell.getElement(),\n    max = typeof editorParams.max === \"undefined\" ? element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"max\") || 100 : editorParams.max,\n    min = typeof editorParams.min === \"undefined\" ? element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"min\") || 0 : editorParams.min,\n    percent = (max - min) / 100,\n    value = cell.getValue() || 0,\n    handle = document.createElement(\"div\"),\n    bar = document.createElement(\"div\"),\n    mouseDrag,\n    mouseDragWidth;\n\n  //set new value\n  function updateValue() {\n    var style = window.getComputedStyle(element, null);\n    var calcVal = percent * Math.round(bar.offsetWidth / ((element.clientWidth - parseInt(style.getPropertyValue(\"padding-left\")) - parseInt(style.getPropertyValue(\"padding-right\"))) / 100)) + min;\n    success(calcVal);\n    element.setAttribute(\"aria-valuenow\", calcVal);\n    element.setAttribute(\"aria-label\", value);\n  }\n\n  //style handle\n  handle.style.position = \"absolute\";\n  handle.style.right = \"0\";\n  handle.style.top = \"0\";\n  handle.style.bottom = \"0\";\n  handle.style.width = \"5px\";\n  handle.classList.add(\"tabulator-progress-handle\");\n\n  //style bar\n  bar.style.display = \"inline-block\";\n  bar.style.position = \"relative\";\n  // bar.style.top = \"8px\";\n  // bar.style.bottom = \"8px\";\n  // bar.style.left = \"4px\";\n  // bar.style.marginRight = \"4px\";\n  bar.style.height = \"100%\";\n  bar.style.backgroundColor = \"#488CE9\";\n  bar.style.maxWidth = \"100%\";\n  bar.style.minWidth = \"0%\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        bar.setAttribute(key, bar.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        bar.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  //style cell\n  element.style.padding = \"4px 4px\";\n\n  //make sure value is in range\n  value = Math.min(parseFloat(value), max);\n  value = Math.max(parseFloat(value), min);\n\n  //workout percentage\n  value = Math.round((value - min) / percent);\n  // bar.style.right = value + \"%\";\n  bar.style.width = value + \"%\";\n  element.setAttribute(\"aria-valuemin\", min);\n  element.setAttribute(\"aria-valuemax\", max);\n  bar.appendChild(handle);\n  handle.addEventListener(\"mousedown\", function (e) {\n    mouseDrag = e.screenX;\n    mouseDragWidth = bar.offsetWidth;\n  });\n  handle.addEventListener(\"mouseover\", function () {\n    handle.style.cursor = \"ew-resize\";\n  });\n  element.addEventListener(\"mousemove\", function (e) {\n    if (mouseDrag) {\n      bar.style.width = mouseDragWidth + e.screenX - mouseDrag + \"px\";\n    }\n  });\n  element.addEventListener(\"mouseup\", function (e) {\n    if (mouseDrag) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      mouseDrag = false;\n      mouseDragWidth = false;\n      updateValue();\n    }\n  });\n\n  //allow key based navigation\n  element.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 39:\n        //right arrow\n        e.preventDefault();\n        bar.style.width = bar.clientWidth + element.clientWidth / 100 + \"px\";\n        break;\n      case 37:\n        //left arrow\n        e.preventDefault();\n        bar.style.width = bar.clientWidth - element.clientWidth / 100 + \"px\";\n        break;\n      case 9: //tab\n      case 13:\n        //enter\n        updateValue();\n        break;\n      case 27:\n        //escape\n        cancel();\n        break;\n    }\n  });\n  element.addEventListener(\"blur\", function () {\n    cancel();\n  });\n  return bar;\n}\n\n//checkbox\nfunction tickCross(cell, onRendered, success, cancel, editorParams) {\n  var value = cell.getValue(),\n    input = document.createElement(\"input\"),\n    tristate = editorParams.tristate,\n    indetermValue = typeof editorParams.indeterminateValue === \"undefined\" ? null : editorParams.indeterminateValue,\n    indetermState = false;\n  input.setAttribute(\"type\", \"checkbox\");\n  input.style.marginTop = \"5px\";\n  input.style.boxSizing = \"border-box\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n  input.value = value;\n  if (tristate && (typeof value === \"undefined\" || value === indetermValue || value === \"\")) {\n    indetermState = true;\n    input.indeterminate = true;\n  }\n  if (this.table.browser != \"firefox\") {\n    //prevent blur issue on mac firefox\n    onRendered(function () {\n      input.focus({\n        preventScroll: true\n      });\n    });\n  }\n  input.checked = value === true || value === \"true\" || value === \"True\" || value === 1;\n  onRendered(function () {\n    input.focus();\n  });\n  function setValue(blur) {\n    if (tristate) {\n      if (!blur) {\n        if (input.checked && !indetermState) {\n          input.checked = false;\n          input.indeterminate = true;\n          indetermState = true;\n          return indetermValue;\n        } else {\n          indetermState = false;\n          return input.checked;\n        }\n      } else {\n        if (indetermState) {\n          return indetermValue;\n        } else {\n          return input.checked;\n        }\n      }\n    } else {\n      return input.checked;\n    }\n  }\n\n  //submit new value on blur\n  input.addEventListener(\"change\", function (e) {\n    success(setValue());\n  });\n  input.addEventListener(\"blur\", function (e) {\n    success(setValue(true));\n  });\n\n  //submit new value on enter\n  input.addEventListener(\"keydown\", function (e) {\n    if (e.keyCode == 13) {\n      success(setValue());\n    }\n    if (e.keyCode == 27) {\n      cancel();\n    }\n  });\n  return input;\n}\nvar defaultEditors = {\n  input: input,\n  textarea: textarea,\n  number: number,\n  range: range,\n  select: select,\n  autocomplete: autocomplete,\n  star: star,\n  progress: progress,\n  tickCross: tickCross\n};\nclass Edit extends Module {\n  constructor(table) {\n    super(table);\n    this.currentCell = false; //hold currently editing cell\n    this.mouseClick = false; //hold mousedown state to prevent click binding being overriden by editor opening\n    this.recursionBlock = false; //prevent focus recursion\n    this.invalidEdit = false;\n    this.editedCells = [];\n    this.editors = Edit.editors;\n    this.registerColumnOption(\"editable\");\n    this.registerColumnOption(\"editor\");\n    this.registerColumnOption(\"editorParams\");\n    this.registerColumnOption(\"cellEditing\");\n    this.registerColumnOption(\"cellEdited\");\n    this.registerColumnOption(\"cellEditCancelled\");\n    this.registerTableFunction(\"getEditedCells\", this.getEditedCells.bind(this));\n    this.registerTableFunction(\"clearCellEdited\", this.clearCellEdited.bind(this));\n    this.registerTableFunction(\"navigatePrev\", this.navigatePrev.bind(this));\n    this.registerTableFunction(\"navigateNext\", this.navigateNext.bind(this));\n    this.registerTableFunction(\"navigateLeft\", this.navigateLeft.bind(this));\n    this.registerTableFunction(\"navigateRight\", this.navigateRight.bind(this));\n    this.registerTableFunction(\"navigateUp\", this.navigateUp.bind(this));\n    this.registerTableFunction(\"navigateDown\", this.navigateDown.bind(this));\n    this.registerComponentFunction(\"cell\", \"isEdited\", this.cellisEdited.bind(this));\n    this.registerComponentFunction(\"cell\", \"clearEdited\", this.clearEdited.bind(this));\n    this.registerComponentFunction(\"cell\", \"edit\", this.editCell.bind(this));\n    this.registerComponentFunction(\"cell\", \"cancelEdit\", this.cellCancelEdit.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigatePrev\", this.navigatePrev.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateNext\", this.navigateNext.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateLeft\", this.navigateLeft.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateRight\", this.navigateRight.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateUp\", this.navigateUp.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateDown\", this.navigateDown.bind(this));\n  }\n  initialize() {\n    this.subscribe(\"cell-init\", this.bindEditor.bind(this));\n    this.subscribe(\"cell-delete\", this.clearEdited.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\n    this.subscribe(\"column-delete\", this.columnDeleteCheck.bind(this));\n    this.subscribe(\"row-deleting\", this.rowDeleteCheck.bind(this));\n    this.subscribe(\"data-refeshing\", this.cancelEdit.bind(this));\n    this.subscribe(\"keybinding-nav-prev\", this.navigatePrev.bind(this));\n    this.subscribe(\"keybinding-nav-next\", this.keybindingNavigateNext.bind(this));\n    this.subscribe(\"keybinding-nav-left\", this.navigateLeft.bind(this));\n    this.subscribe(\"keybinding-nav-right\", this.navigateRight.bind(this));\n    this.subscribe(\"keybinding-nav-up\", this.navigateUp.bind(this));\n    this.subscribe(\"keybinding-nav-down\", this.navigateDown.bind(this));\n  }\n\n  ///////////////////////////////////\n  ////// Keybinding Functions ///////\n  ///////////////////////////////////\n\n  keybindingNavigateNext(e) {\n    var cell = this.currentCell,\n      newRow = this.options(\"tabEndNewRow\");\n    if (cell) {\n      if (!this.navigateNext(e)) {\n        if (newRow) {\n          cell.getElement().firstChild.blur();\n          if (newRow === true) {\n            newRow = this.table.addRow({});\n          } else {\n            if (typeof newRow == \"function\") {\n              newRow = this.table.addRow(newRow(cell.row.getComponent()));\n            } else {\n              newRow = this.table.addRow(Object.assign({}, newRow));\n            }\n          }\n          newRow.then(() => {\n            setTimeout(() => {\n              nav.next();\n            });\n          });\n        }\n      }\n    }\n  }\n\n  ///////////////////////////////////\n  ///////// Cell Functions //////////\n  ///////////////////////////////////\n\n  cellisEdited(cell) {\n    return !!cell.modules.edit && cell.modules.edit.edited;\n  }\n  cellCancelEdit(cell) {\n    if (cell === this.currentCell) {\n      this.table.modules.edit.cancelEdit();\n    } else {\n      console.warn(\"Cancel Editor Error - This cell is not currently being edited \");\n    }\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n  clearCellEdited(cells) {\n    if (!cells) {\n      cells = this.modules.edit.getEditedCells();\n    }\n    if (!Array.isArray(cells)) {\n      cells = [cells];\n    }\n    cells.forEach(cell => {\n      this.modules.edit.clearEdited(cell._getSelf());\n    });\n  }\n  navigatePrev(e) {\n    var cell = this.currentCell,\n      nextCell,\n      prevRow;\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n      nextCell = this.navigateLeft();\n      if (nextCell) {\n        return true;\n      } else {\n        prevRow = this.table.rowManager.prevDisplayRow(cell.row, true);\n        if (prevRow) {\n          nextCell = this.findNextEditableCell(prevRow, prevRow.cells.length);\n          if (nextCell) {\n            nextCell.getComponent().edit();\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  navigateNext(e) {\n    var cell = this.currentCell,\n      nextCell,\n      nextRow;\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n      nextCell = this.navigateRight();\n      if (nextCell) {\n        return true;\n      } else {\n        nextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\n        if (nextRow) {\n          nextCell = this.findNextEditableCell(nextRow, -1);\n          if (nextCell) {\n            nextCell.getComponent().edit();\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  navigateLeft(e) {\n    var cell = this.currentCell,\n      index,\n      nextCell;\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n      index = cell.getIndex();\n      nextCell = this.findPrevEditableCell(cell.row, index);\n      if (nextCell) {\n        nextCell.getComponent().edit();\n        return true;\n      }\n    }\n    return false;\n  }\n  navigateRight(e) {\n    var cell = this.currentCell,\n      index,\n      nextCell;\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n      index = cell.getIndex();\n      nextCell = this.findNextEditableCell(cell.row, index);\n      if (nextCell) {\n        nextCell.getComponent().edit();\n        return true;\n      }\n    }\n    return false;\n  }\n  navigateUp(e) {\n    var cell = this.currentCell,\n      index,\n      nextRow;\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n      index = cell.getIndex();\n      nextRow = this.table.rowManager.prevDisplayRow(cell.row, true);\n      if (nextRow) {\n        nextRow.cells[index].getComponent().edit();\n        return true;\n      }\n    }\n    return false;\n  }\n  navigateDown(e) {\n    var cell = this.currentCell,\n      index,\n      nextRow;\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n      index = cell.getIndex();\n      nextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\n      if (nextRow) {\n        nextRow.cells[index].getComponent().edit();\n        return true;\n      }\n    }\n    return false;\n  }\n  findNextEditableCell(row, index) {\n    var nextCell = false;\n    if (index < row.cells.length - 1) {\n      for (var i = index + 1; i < row.cells.length; i++) {\n        let cell = row.cells[i];\n        if (cell.column.modules.edit && Helpers.elVisible(cell.getElement())) {\n          let allowEdit = true;\n          if (typeof cell.column.modules.edit.check == \"function\") {\n            allowEdit = cell.column.modules.edit.check(cell.getComponent());\n          }\n          if (allowEdit) {\n            nextCell = cell;\n            break;\n          }\n        }\n      }\n    }\n    return nextCell;\n  }\n  findPrevEditableCell(row, index) {\n    var prevCell = false;\n    if (index > 0) {\n      for (var i = index - 1; i >= 0; i--) {\n        let cell = row.cells[i],\n          allowEdit = true;\n        if (cell.column.modules.edit && Helpers.elVisible(cell.getElement())) {\n          if (typeof cell.column.modules.edit.check == \"function\") {\n            allowEdit = cell.column.modules.edit.check(cell.getComponent());\n          }\n          if (allowEdit) {\n            prevCell = cell;\n            break;\n          }\n        }\n      }\n    }\n    return prevCell;\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  initializeColumnCheck(column) {\n    if (typeof column.definition.editor !== \"undefined\") {\n      this.initializeColumn(column);\n    }\n  }\n  columnDeleteCheck(column) {\n    if (this.currentCell && this.currentCell.column === column) {\n      this.cancelEdit();\n    }\n  }\n  rowDeleteCheck(row) {\n    if (this.currentCell && this.currentCell.row === row) {\n      this.cancelEdit();\n    }\n  }\n\n  //initialize column editor\n  initializeColumn(column) {\n    var config = {\n      editor: false,\n      blocked: false,\n      check: column.definition.editable,\n      params: column.definition.editorParams || {}\n    };\n\n    //set column editor\n    switch (typeof column.definition.editor) {\n      case \"string\":\n        if (this.editors[column.definition.editor]) {\n          config.editor = this.editors[column.definition.editor];\n        } else {\n          console.warn(\"Editor Error - No such editor found: \", column.definition.editor);\n        }\n        break;\n      case \"function\":\n        config.editor = column.definition.editor;\n        break;\n      case \"boolean\":\n        if (column.definition.editor === true) {\n          if (typeof column.definition.formatter !== \"function\") {\n            if (this.editors[column.definition.formatter]) {\n              config.editor = this.editors[column.definition.formatter];\n            } else {\n              config.editor = this.editors[\"input\"];\n            }\n          } else {\n            console.warn(\"Editor Error - Cannot auto lookup editor for a custom formatter: \", column.definition.formatter);\n          }\n        }\n        break;\n    }\n    if (config.editor) {\n      column.modules.edit = config;\n    }\n  }\n  getCurrentCell() {\n    return this.currentCell ? this.currentCell.getComponent() : false;\n  }\n  clearEditor(cancel) {\n    var cell = this.currentCell,\n      cellEl;\n    this.invalidEdit = false;\n    console.log(\"clear\", cancel, cell, cell.validate);\n    if (cell) {\n      this.currentCell = false;\n      cellEl = cell.getElement();\n      if (cancel) {\n        if (cell.column.modules.validate && this.table.modExists(\"validate\")) {\n          this.table.modules.validate.cellValidate(cell);\n        }\n      } else {\n        cellEl.classList.remove(\"tabulator-validation-fail\");\n      }\n      cellEl.classList.remove(\"tabulator-editing\");\n      while (cellEl.firstChild) cellEl.removeChild(cellEl.firstChild);\n      cell.row.getElement().classList.remove(\"tabulator-row-editing\");\n    }\n  }\n  cancelEdit() {\n    if (this.currentCell) {\n      var cell = this.currentCell;\n      var component = this.currentCell.getComponent();\n      this.clearEditor(true);\n      cell.setValueActual(cell.getValue());\n      cell.cellRendered();\n      if (cell.column.definition.editor == \"textarea\" || cell.column.definition.variableHeight) {\n        cell.row.normalizeHeight(true);\n      }\n      if (cell.column.definition.cellEditCancelled) {\n        cell.column.definition.cellEditCancelled.call(this.table, component);\n      }\n      this.dispatch(\"edit-cancelled\", cell);\n      this.dispatchExternal(\"cellEditCancelled\", component);\n    }\n  }\n\n  //return a formatted value for a cell\n  bindEditor(cell) {\n    if (cell.column.modules.edit) {\n      var self = this,\n        element = cell.getElement(true);\n      element.setAttribute(\"tabindex\", 0);\n      element.addEventListener(\"click\", function (e) {\n        if (!element.classList.contains(\"tabulator-editing\")) {\n          element.focus({\n            preventScroll: true\n          });\n        }\n      });\n      element.addEventListener(\"mousedown\", function (e) {\n        if (e.button === 2) {\n          e.preventDefault();\n        } else {\n          self.mouseClick = true;\n        }\n      });\n      element.addEventListener(\"focus\", function (e) {\n        if (!self.recursionBlock) {\n          self.edit(cell, e, false);\n        }\n      });\n    }\n  }\n  focusCellNoEvent(cell, block) {\n    this.recursionBlock = true;\n    if (!(block && this.table.browser === \"ie\")) {\n      cell.getElement().focus({\n        preventScroll: true\n      });\n    }\n    this.recursionBlock = false;\n  }\n  editCell(cell, forceEdit) {\n    this.focusCellNoEvent(cell);\n    this.edit(cell, false, forceEdit);\n  }\n  focusScrollAdjust(cell) {\n    if (this.table.rowManager.getRenderMode() == \"virtual\") {\n      var topEdge = this.table.rowManager.element.scrollTop,\n        bottomEdge = this.table.rowManager.element.clientHeight + this.table.rowManager.element.scrollTop,\n        rowEl = cell.row.getElement(),\n        offset = rowEl.offsetTop;\n      if (rowEl.offsetTop < topEdge) {\n        this.table.rowManager.element.scrollTop -= topEdge - rowEl.offsetTop;\n      } else {\n        if (rowEl.offsetTop + rowEl.offsetHeight > bottomEdge) {\n          this.table.rowManager.element.scrollTop += rowEl.offsetTop + rowEl.offsetHeight - bottomEdge;\n        }\n      }\n      var leftEdge = this.table.rowManager.element.scrollLeft,\n        rightEdge = this.table.rowManager.element.clientWidth + this.table.rowManager.element.scrollLeft,\n        cellEl = cell.getElement(),\n        offset = cellEl.offsetLeft;\n      if (this.table.modExists(\"frozenColumns\")) {\n        leftEdge += parseInt(this.table.modules.frozenColumns.leftMargin);\n        rightEdge -= parseInt(this.table.modules.frozenColumns.rightMargin);\n      }\n      if (this.table.options.renderHorizontal === \"virtual\") {\n        leftEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\n        rightEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\n      }\n      if (cellEl.offsetLeft < leftEdge) {\n        this.table.rowManager.element.scrollLeft -= leftEdge - cellEl.offsetLeft;\n      } else {\n        if (cellEl.offsetLeft + cellEl.offsetWidth > rightEdge) {\n          this.table.rowManager.element.scrollLeft += cellEl.offsetLeft + cellEl.offsetWidth - rightEdge;\n        }\n      }\n    }\n  }\n  edit(cell, e, forceEdit) {\n    var self = this,\n      allowEdit = true,\n      rendered = function () {},\n      element = cell.getElement(),\n      cellEditor,\n      component,\n      params;\n\n    //prevent editing if another cell is refusing to leave focus (eg. validation fail)\n    if (this.currentCell) {\n      if (!this.invalidEdit) {\n        this.cancelEdit();\n      }\n      return;\n    }\n\n    //handle successfull value change\n    function success(value) {\n      if (self.currentCell === cell) {\n        var valid = true;\n        if (cell.column.modules.validate && self.table.modExists(\"validate\") && self.table.options.validationMode != \"manual\") {\n          valid = self.table.modules.validate.validate(cell.column.modules.validate, cell, value);\n        }\n        if (valid === true || self.table.options.validationMode === \"highlight\") {\n          self.clearEditor();\n          if (!cell.modules.edit) {\n            cell.modules.edit = {};\n          }\n          cell.modules.edit.edited = true;\n          if (self.editedCells.indexOf(cell) == -1) {\n            self.editedCells.push(cell);\n          }\n          cell.setValue(value, true);\n          if (valid !== true) {\n            element.classList.add(\"tabulator-validation-fail\");\n            self.table.externalEvents.dispatch(\"validationFailed\", cell.getComponent(), value, valid);\n            return false;\n          }\n          return true;\n        } else {\n          self.invalidEdit = true;\n          element.classList.add(\"tabulator-validation-fail\");\n          self.focusCellNoEvent(cell, true);\n          rendered();\n          self.table.externalEvents.dispatch(\"validationFailed\", cell.getComponent(), value, valid);\n          return false;\n        }\n      }\n    }\n\n    //handle aborted edit\n    function cancel() {\n      if (self.currentCell === cell) {\n        self.cancelEdit();\n      }\n    }\n    function onRendered(callback) {\n      rendered = callback;\n    }\n    if (!cell.column.modules.edit.blocked) {\n      if (e) {\n        e.stopPropagation();\n      }\n      switch (typeof cell.column.modules.edit.check) {\n        case \"function\":\n          allowEdit = cell.column.modules.edit.check(cell.getComponent());\n          break;\n        case \"boolean\":\n          allowEdit = cell.column.modules.edit.check;\n          break;\n      }\n      if (allowEdit || forceEdit) {\n        self.cancelEdit();\n        self.currentCell = cell;\n        this.focusScrollAdjust(cell);\n        component = cell.getComponent();\n        if (this.mouseClick) {\n          this.mouseClick = false;\n          if (cell.column.definition.cellClick) {\n            cell.column.definition.cellClick.call(this.table, e, component);\n          }\n        }\n        if (cell.column.definition.cellEditing) {\n          cell.column.definition.cellEditing.call(this.table, component);\n        }\n        this.dispatchExternal(\"cellEditing\", component);\n        params = typeof cell.column.modules.edit.params === \"function\" ? cell.column.modules.edit.params(component) : cell.column.modules.edit.params;\n        cellEditor = cell.column.modules.edit.editor.call(self, component, onRendered, success, cancel, params);\n\n        //if editor returned, add to DOM, if false, abort edit\n        if (cellEditor !== false) {\n          if (cellEditor instanceof Node) {\n            element.classList.add(\"tabulator-editing\");\n            cell.row.getElement().classList.add(\"tabulator-row-editing\");\n            while (element.firstChild) element.removeChild(element.firstChild);\n            element.appendChild(cellEditor);\n\n            //trigger onRendered Callback\n            rendered();\n\n            //prevent editing from triggering rowClick event\n            var children = element.children;\n            for (var i = 0; i < children.length; i++) {\n              children[i].addEventListener(\"click\", function (e) {\n                e.stopPropagation();\n              });\n            }\n          } else {\n            console.warn(\"Edit Error - Editor should return an instance of Node, the editor returned:\", cellEditor);\n            element.blur();\n            return false;\n          }\n        } else {\n          element.blur();\n          return false;\n        }\n        return true;\n      } else {\n        this.mouseClick = false;\n        element.blur();\n        return false;\n      }\n    } else {\n      this.mouseClick = false;\n      element.blur();\n      return false;\n    }\n  }\n  getEditedCells() {\n    var output = [];\n    this.editedCells.forEach(cell => {\n      output.push(cell.getComponent());\n    });\n    return output;\n  }\n  clearEdited(cell) {\n    var editIndex;\n    if (cell.modules.edit && cell.modules.edit.edited) {\n      cell.modules.edit.edited = false;\n      if (cell.modules.validate) {\n        cell.modules.validate.invalid = false;\n      }\n    }\n    editIndex = this.editedCells.indexOf(cell);\n    if (editIndex > -1) {\n      this.editedCells.splice(editIndex, 1);\n    }\n  }\n}\nEdit.moduleName = \"edit\";\n\n//load defaults\nEdit.editors = defaultEditors;\nclass ExportRow {\n  constructor(type, columns, component, indent) {\n    this.type = type;\n    this.columns = columns;\n    this.component = component || false;\n    this.indent = indent || 0;\n  }\n}\nclass ExportColumn {\n  constructor(value, component, width, height, depth) {\n    this.value = value;\n    this.component = component || false;\n    this.width = width;\n    this.height = height;\n    this.depth = depth;\n  }\n}\nclass Export extends Module {\n  constructor(table) {\n    super(table);\n    this.config = {};\n    this.cloneTableStyle = true;\n    this.colVisProp = \"\";\n    this.registerTableOption(\"htmlOutputConfig\", false); //html outypu config\n\n    this.registerColumnOption(\"htmlOutput\");\n    this.registerColumnOption(\"titleHtmlOutput\");\n  }\n  initialize() {\n    this.registerTableFunction(\"getHtml\", this.getHtml.bind(this));\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  generateExportList(config, style, range, colVisProp) {\n    this.cloneTableStyle = style;\n    this.config = config || {};\n    this.colVisProp = colVisProp;\n    var headers = this.config.columnHeaders !== false ? this.headersToExportRows(this.generateColumnGroupHeaders()) : [];\n    var body = this.bodyToExportRows(this.rowLookup(range));\n    return headers.concat(body);\n  }\n  genereateTable(config, style, range, colVisProp) {\n    var list = this.generateExportList(config, style, range, colVisProp);\n    return this.genereateTableElement(list);\n  }\n  rowLookup(range) {\n    var rows = [];\n    if (typeof range == \"function\") {\n      range.call(this.table).forEach(row => {\n        row = this.table.rowManager.findRow(row);\n        if (row) {\n          rows.push(row);\n        }\n      });\n    } else {\n      switch (range) {\n        case true:\n        case \"visible\":\n          rows = this.table.rowManager.getVisibleRows(false, true);\n          break;\n        case \"all\":\n          rows = this.table.rowManager.rows;\n          break;\n        case \"selected\":\n          rows = this.table.modules.selectRow.selectedRows;\n          break;\n        case \"active\":\n        default:\n          if (this.table.options.pagination) {\n            rows = this.table.rowManager.getDisplayRows(this.table.rowManager.displayRows.length - 2);\n          } else {\n            rows = this.table.rowManager.getDisplayRows();\n          }\n      }\n    }\n    return Object.assign([], rows);\n  }\n  generateColumnGroupHeaders() {\n    var output = [];\n    var columns = this.config.columnGroups !== false ? this.table.columnManager.columns : this.table.columnManager.columnsByIndex;\n    columns.forEach(column => {\n      var colData = this.processColumnGroup(column);\n      if (colData) {\n        output.push(colData);\n      }\n    });\n    return output;\n  }\n  processColumnGroup(column) {\n    var subGroups = column.columns,\n      maxDepth = 0,\n      title = column.definition[\"title\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))] || column.definition.title;\n    var groupData = {\n      title: title,\n      column: column,\n      depth: 1\n    };\n    if (subGroups.length) {\n      groupData.subGroups = [];\n      groupData.width = 0;\n      subGroups.forEach(subGroup => {\n        var subGroupData = this.processColumnGroup(subGroup);\n        if (subGroupData) {\n          groupData.width += subGroupData.width;\n          groupData.subGroups.push(subGroupData);\n          if (subGroupData.depth > maxDepth) {\n            maxDepth = subGroupData.depth;\n          }\n        }\n      });\n      groupData.depth += maxDepth;\n      if (!groupData.width) {\n        return false;\n      }\n    } else {\n      if (this.columnVisCheck(column)) {\n        groupData.width = 1;\n      } else {\n        return false;\n      }\n    }\n    return groupData;\n  }\n  columnVisCheck(column) {\n    return column.definition[this.colVisProp] !== false && (column.visible || !column.visible && column.definition[this.colVisProp]);\n  }\n  headersToExportRows(columns) {\n    var headers = [],\n      headerDepth = 0,\n      exportRows = [];\n    function parseColumnGroup(column, level) {\n      var depth = headerDepth - level;\n      if (typeof headers[level] === \"undefined\") {\n        headers[level] = [];\n      }\n      column.height = column.subGroups ? 1 : depth - column.depth + 1;\n      headers[level].push(column);\n      if (column.height > 1) {\n        for (let i = 1; i < column.height; i++) {\n          if (typeof headers[level + i] === \"undefined\") {\n            headers[level + i] = [];\n          }\n          headers[level + i].push(false);\n        }\n      }\n      if (column.width > 1) {\n        for (let i = 1; i < column.width; i++) {\n          headers[level].push(false);\n        }\n      }\n      if (column.subGroups) {\n        column.subGroups.forEach(function (subGroup) {\n          parseColumnGroup(subGroup, level + 1);\n        });\n      }\n    }\n\n    //calculate maximum header debth\n    columns.forEach(function (column) {\n      if (column.depth > headerDepth) {\n        headerDepth = column.depth;\n      }\n    });\n    columns.forEach(function (column) {\n      parseColumnGroup(column, 0);\n    });\n    headers.forEach(header => {\n      var columns = [];\n      header.forEach(col => {\n        if (col) {\n          columns.push(new ExportColumn(col.title, col.column.getComponent(), col.width, col.height, col.depth));\n        } else {\n          columns.push(null);\n        }\n      });\n      exportRows.push(new ExportRow(\"header\", columns));\n    });\n    return exportRows;\n  }\n  bodyToExportRows(rows) {\n    var columns = [];\n    var exportRows = [];\n    this.table.columnManager.columnsByIndex.forEach(column => {\n      if (this.columnVisCheck(column)) {\n        columns.push(column.getComponent());\n      }\n    });\n    if (this.config.columnCalcs !== false && this.table.modExists(\"columnCalcs\")) {\n      if (this.table.modules.columnCalcs.topInitialized) {\n        rows.unshift(this.table.modules.columnCalcs.topRow);\n      }\n      if (this.table.modules.columnCalcs.botInitialized) {\n        rows.push(this.table.modules.columnCalcs.botRow);\n      }\n    }\n    rows = rows.filter(row => {\n      switch (row.type) {\n        case \"group\":\n          return this.config.rowGroups !== false;\n        case \"calc\":\n          return this.config.columnCalcs !== false;\n        case \"row\":\n          return !(this.table.options.dataTree && this.config.dataTree === false && row.modules.dataTree.parent);\n      }\n      return true;\n    });\n    rows.forEach((row, i) => {\n      var rowData = row.getData(this.colVisProp);\n      var exportCols = [];\n      var indent = 0;\n      switch (row.type) {\n        case \"group\":\n          indent = row.level;\n          exportCols.push(new ExportColumn(row.key, row.getComponent(), columns.length, 1));\n          break;\n        case \"calc\":\n        case \"row\":\n          columns.forEach(col => {\n            exportCols.push(new ExportColumn(col._column.getFieldValue(rowData), col, 1, 1));\n          });\n          if (this.table.options.dataTree && this.config.dataTree !== false) {\n            indent = row.modules.dataTree.index;\n          }\n          break;\n      }\n      exportRows.push(new ExportRow(row.type, exportCols, row.getComponent(), indent));\n    });\n    return exportRows;\n  }\n  genereateTableElement(list) {\n    var table = document.createElement(\"table\"),\n      headerEl = document.createElement(\"thead\"),\n      bodyEl = document.createElement(\"tbody\"),\n      styles = this.lookupTableStyles(),\n      rowFormatter = this.table.options[\"rowFormatter\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))],\n      setup = {};\n    setup.rowFormatter = rowFormatter !== null ? rowFormatter : this.table.options.rowFormatter;\n    if (this.table.options.dataTree && this.config.dataTree !== false && this.table.modExists(\"columnCalcs\")) {\n      setup.treeElementField = this.table.modules.dataTree.elementField;\n    }\n\n    //assign group header formatter\n    setup.groupHeader = this.table.options[\"groupHeader\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))];\n    if (setup.groupHeader && !Array.isArray(setup.groupHeader)) {\n      setup.groupHeader = [setup.groupHeader];\n    }\n    table.classList.add(\"tabulator-print-table\");\n    this.mapElementStyles(this.table.columnManager.getHeadersElement(), headerEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\n    if (list.length > 1000) {\n      console.warn(\"It may take a long time to render an HTML table with more than 1000 rows\");\n    }\n    list.forEach((row, i) => {\n      switch (row.type) {\n        case \"header\":\n          headerEl.appendChild(this.genereateHeaderElement(row, setup, styles));\n          break;\n        case \"group\":\n          bodyEl.appendChild(this.genereateGroupElement(row, setup, styles));\n          break;\n        case \"calc\":\n          bodyEl.appendChild(this.genereateCalcElement(row, setup, styles));\n          break;\n        case \"row\":\n          let rowEl = this.genereateRowElement(row, setup, styles);\n          this.mapElementStyles(i % 2 && styles.evenRow ? styles.evenRow : styles.oddRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\n          bodyEl.appendChild(rowEl);\n          break;\n      }\n    });\n    if (headerEl.innerHTML) {\n      table.appendChild(headerEl);\n    }\n    table.appendChild(bodyEl);\n    this.mapElementStyles(this.table.element, table, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\"]);\n    return table;\n  }\n  lookupTableStyles() {\n    var styles = {};\n\n    //lookup row styles\n    if (this.cloneTableStyle && window.getComputedStyle) {\n      styles.oddRow = this.table.element.querySelector(\".tabulator-row-odd:not(.tabulator-group):not(.tabulator-calcs)\");\n      styles.evenRow = this.table.element.querySelector(\".tabulator-row-even:not(.tabulator-group):not(.tabulator-calcs)\");\n      styles.calcRow = this.table.element.querySelector(\".tabulator-row.tabulator-calcs\");\n      styles.firstRow = this.table.element.querySelector(\".tabulator-row:not(.tabulator-group):not(.tabulator-calcs)\");\n      styles.firstGroup = this.table.element.getElementsByClassName(\"tabulator-group\")[0];\n      if (styles.firstRow) {\n        styles.styleCells = styles.firstRow.getElementsByClassName(\"tabulator-cell\");\n        styles.firstCell = styles.styleCells[0];\n        styles.lastCell = styles.styleCells[styles.styleCells.length - 1];\n      }\n    }\n    return styles;\n  }\n  genereateHeaderElement(row, setup, styles) {\n    var rowEl = document.createElement(\"tr\");\n    row.columns.forEach(column => {\n      if (column) {\n        var cellEl = document.createElement(\"th\");\n        var classNames = column.component._column.definition.cssClass ? column.component._column.definition.cssClass.split(\" \") : [];\n        cellEl.colSpan = column.width;\n        cellEl.rowSpan = column.height;\n        cellEl.innerHTML = column.value;\n        if (this.cloneTableStyle) {\n          cellEl.style.boxSizing = \"border-box\";\n        }\n        classNames.forEach(function (className) {\n          cellEl.classList.add(className);\n        });\n        this.mapElementStyles(column.component.getElement(), cellEl, [\"text-align\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\n        this.mapElementStyles(column.component._column.contentElement, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\n        if (column.component._column.visible) {\n          this.mapElementStyles(column.component.getElement(), cellEl, [\"width\"]);\n        } else {\n          if (column.component._column.definition.width) {\n            cellEl.style.width = column.component._column.definition.width + \"px\";\n          }\n        }\n        if (column.component._column.parent) {\n          this.mapElementStyles(column.component._column.parent.groupElement, cellEl, [\"border-top\"]);\n        }\n        rowEl.appendChild(cellEl);\n      }\n    });\n    return rowEl;\n  }\n  genereateGroupElement(row, setup, styles) {\n    var rowEl = document.createElement(\"tr\"),\n      cellEl = document.createElement(\"td\"),\n      group = row.columns[0];\n    rowEl.classList.add(\"tabulator-print-table-row\");\n    if (setup.groupHeader && setup.groupHeader[row.indent]) {\n      group.value = setup.groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\n    } else {\n      if (setup.groupHeader === false) {\n        group.value = group.value;\n      } else {\n        group.value = row.component._group.generator(group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\n      }\n    }\n    cellEl.colSpan = group.width;\n    cellEl.innerHTML = group.value;\n    rowEl.classList.add(\"tabulator-print-table-group\");\n    rowEl.classList.add(\"tabulator-group-level-\" + row.indent);\n    if (group.component.isVisible()) {\n      rowEl.classList.add(\"tabulator-group-visible\");\n    }\n    this.mapElementStyles(styles.firstGroup, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\n    this.mapElementStyles(styles.firstGroup, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\n    rowEl.appendChild(cellEl);\n    return rowEl;\n  }\n  genereateCalcElement(row, setup, styles) {\n    var rowEl = this.genereateRowElement(row, setup, styles);\n    rowEl.classList.add(\"tabulator-print-table-calcs\");\n    this.mapElementStyles(styles.calcRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\n    return rowEl;\n  }\n  genereateRowElement(row, setup, styles) {\n    var rowEl = document.createElement(\"tr\");\n    rowEl.classList.add(\"tabulator-print-table-row\");\n    row.columns.forEach(col => {\n      if (col) {\n        var cellEl = document.createElement(\"td\"),\n          column = col.component._column,\n          value = col.value;\n        var cellWrapper = {\n          modules: {},\n          getValue: function () {\n            return value;\n          },\n          getField: function () {\n            return column.definition.field;\n          },\n          getElement: function () {\n            return cellEl;\n          },\n          getColumn: function () {\n            return column.getComponent();\n          },\n          getData: function () {\n            return row.component.getData();\n          },\n          getRow: function () {\n            return row.component;\n          },\n          getComponent: function () {\n            return cellWrapper;\n          },\n          column: column\n        };\n        var classNames = column.definition.cssClass ? column.definition.cssClass.split(\" \") : [];\n        classNames.forEach(function (className) {\n          cellEl.classList.add(className);\n        });\n        if (this.table.modExists(\"format\") && this.config.formatCells !== false) {\n          value = this.table.modules.format.formatExportValue(cellWrapper, this.colVisProp);\n        } else {\n          switch (typeof value) {\n            case \"object\":\n              value = JSON.stringify(value);\n              break;\n            case \"undefined\":\n            case \"null\":\n              value = \"\";\n              break;\n            default:\n              value = value;\n          }\n        }\n        if (value instanceof Node) {\n          cellEl.appendChild(value);\n        } else {\n          cellEl.innerHTML = value;\n        }\n        if (styles.firstCell) {\n          this.mapElementStyles(styles.firstCell, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\n          if (column.definition.align) {\n            cellEl.style.textAlign = column.definition.align;\n          }\n        }\n        if (this.table.options.dataTree && this.config.dataTree !== false) {\n          if (setup.treeElementField && setup.treeElementField == column.field || !setup.treeElementField && i == 0) {\n            if (row.component._row.modules.dataTree.controlEl) {\n              cellEl.insertBefore(row.component._row.modules.dataTree.controlEl.cloneNode(true), cellEl.firstChild);\n            }\n            if (row.component._row.modules.dataTree.branchEl) {\n              cellEl.insertBefore(row.component._row.modules.dataTree.branchEl.cloneNode(true), cellEl.firstChild);\n            }\n          }\n        }\n        rowEl.appendChild(cellEl);\n        if (cellWrapper.modules.format && cellWrapper.modules.format.renderedCallback) {\n          cellWrapper.modules.format.renderedCallback();\n        }\n        if (setup.rowFormatter && this.config.formatCells !== false) {\n          setup.rowFormatter(row.component);\n        }\n      }\n    });\n    return rowEl;\n  }\n  genereateHTMLTable(list) {\n    var holder = document.createElement(\"div\");\n    holder.appendChild(this.genereateTableElement(list));\n    return holder.innerHTML;\n  }\n  getHtml(visible, style, config, colVisProp) {\n    var list = this.generateExportList(config || this.table.options.htmlOutputConfig, style, visible, colVisProp || \"htmlOutput\");\n    return this.genereateHTMLTable(list);\n  }\n  mapElementStyles(from, to, props) {\n    if (this.cloneTableStyle && from && to) {\n      var lookup = {\n        \"background-color\": \"backgroundColor\",\n        \"color\": \"fontColor\",\n        \"width\": \"width\",\n        \"font-weight\": \"fontWeight\",\n        \"font-family\": \"fontFamily\",\n        \"font-size\": \"fontSize\",\n        \"text-align\": \"textAlign\",\n        \"border-top\": \"borderTop\",\n        \"border-left\": \"borderLeft\",\n        \"border-right\": \"borderRight\",\n        \"border-bottom\": \"borderBottom\",\n        \"padding-top\": \"paddingTop\",\n        \"padding-left\": \"paddingLeft\",\n        \"padding-right\": \"paddingRight\",\n        \"padding-bottom\": \"paddingBottom\"\n      };\n      if (window.getComputedStyle) {\n        var fromStyle = window.getComputedStyle(from);\n        props.forEach(function (prop) {\n          to.style[lookup[prop]] = fromStyle.getPropertyValue(prop);\n        });\n      }\n    }\n  }\n}\nExport.moduleName = \"export\";\nvar defaultFilters = {\n  //equal to\n  \"=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal == filterVal ? true : false;\n  },\n  //less than\n  \"<\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal < filterVal ? true : false;\n  },\n  //less than or equal to\n  \"<=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal <= filterVal ? true : false;\n  },\n  //greater than\n  \">\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal > filterVal ? true : false;\n  },\n  //greater than or equal to\n  \">=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal >= filterVal ? true : false;\n  },\n  //not equal to\n  \"!=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal != filterVal ? true : false;\n  },\n  \"regex\": function (filterVal, rowVal, rowData, filterParams) {\n    if (typeof filterVal == \"string\") {\n      filterVal = new RegExp(filterVal);\n    }\n    return filterVal.test(rowVal);\n  },\n  //contains the string\n  \"like\": function (filterVal, rowVal, rowData, filterParams) {\n    if (filterVal === null || typeof filterVal === \"undefined\") {\n      return rowVal === filterVal ? true : false;\n    } else {\n      if (typeof rowVal !== 'undefined' && rowVal !== null) {\n        return String(rowVal).toLowerCase().indexOf(filterVal.toLowerCase()) > -1;\n      } else {\n        return false;\n      }\n    }\n  },\n  //contains the keywords\n  \"keywords\": function (filterVal, rowVal, rowData, filterParams) {\n    var keywords = filterVal.toLowerCase().split(typeof filterParams.separator === \"undefined\" ? \" \" : filterParams.separator),\n      value = String(rowVal === null || typeof rowVal === \"undefined\" ? \"\" : rowVal).toLowerCase(),\n      matches = [];\n    keywords.forEach(keyword => {\n      if (value.includes(keyword)) {\n        matches.push(true);\n      }\n    });\n    return filterParams.matchAll ? matches.length === keywords.length : !!matches.length;\n  },\n  //starts with the string\n  \"starts\": function (filterVal, rowVal, rowData, filterParams) {\n    if (filterVal === null || typeof filterVal === \"undefined\") {\n      return rowVal === filterVal ? true : false;\n    } else {\n      if (typeof rowVal !== 'undefined' && rowVal !== null) {\n        return String(rowVal).toLowerCase().startsWith(filterVal.toLowerCase());\n      } else {\n        return false;\n      }\n    }\n  },\n  //ends with the string\n  \"ends\": function (filterVal, rowVal, rowData, filterParams) {\n    if (filterVal === null || typeof filterVal === \"undefined\") {\n      return rowVal === filterVal ? true : false;\n    } else {\n      if (typeof rowVal !== 'undefined' && rowVal !== null) {\n        return String(rowVal).toLowerCase().endsWith(filterVal.toLowerCase());\n      } else {\n        return false;\n      }\n    }\n  },\n  //in array\n  \"in\": function (filterVal, rowVal, rowData, filterParams) {\n    if (Array.isArray(filterVal)) {\n      return filterVal.length ? filterVal.indexOf(rowVal) > -1 : true;\n    } else {\n      console.warn(\"Filter Error - filter value is not an array:\", filterVal);\n      return false;\n    }\n  }\n};\nclass Filter extends Module {\n  constructor(table) {\n    super(table);\n    this.filterList = []; //hold filter list\n    this.headerFilters = {}; //hold column filters\n    this.headerFilterColumns = []; //hold columns that use header filters\n\n    this.prevHeaderFilterChangeCheck = \"\";\n    this.prevHeaderFilterChangeCheck = \"{}\";\n    this.changed = false; //has filtering changed since last render\n    this.tableInitialized = false;\n    this.registerTableOption(\"filterMode\", \"local\"); //local or remote filtering\n\n    this.registerTableOption(\"initialFilter\", false); //initial filtering criteria\n    this.registerTableOption(\"initialHeaderFilter\", false); //initial header filtering criteria\n    this.registerTableOption(\"headerFilterLiveFilterDelay\", 300); //delay before updating column after user types in header filter\n\n    this.registerColumnOption(\"headerFilter\");\n    this.registerColumnOption(\"headerFilterPlaceholder\");\n    this.registerColumnOption(\"headerFilterParams\");\n    this.registerColumnOption(\"headerFilterEmptyCheck\");\n    this.registerColumnOption(\"headerFilterFunc\");\n    this.registerColumnOption(\"headerFilterFuncParams\");\n    this.registerColumnOption(\"headerFilterLiveFilter\");\n    this.registerTableFunction(\"searchRows\", this.searchRows.bind(this));\n    this.registerTableFunction(\"searchData\", this.searchData.bind(this));\n    this.registerTableFunction(\"setFilter\", this.userSetFilter.bind(this));\n    this.registerTableFunction(\"refreshFilter\", this.userRefreshFilter.bind(this));\n    this.registerTableFunction(\"addFilter\", this.userAddFilter.bind(this));\n    this.registerTableFunction(\"getFilters\", this.getFilters.bind(this));\n    this.registerTableFunction(\"setHeaderFilterFocus\", this.userSetHeaderFilterFocus.bind(this));\n    this.registerTableFunction(\"getHeaderFilterValue\", this.userGetHeaderFilterValue.bind(this));\n    this.registerTableFunction(\"setHeaderFilterValue\", this.userSetHeaderFilterValue.bind(this));\n    this.registerTableFunction(\"getHeaderFilters\", this.getHeaderFilters.bind(this));\n    this.registerTableFunction(\"removeFilter\", this.userRemoveFilter.bind(this));\n    this.registerTableFunction(\"clearFilter\", this.userClearFilter.bind(this));\n    this.registerTableFunction(\"clearHeaderFilter\", this.userClearHeaderFilter.bind(this));\n    this.registerComponentFunction(\"column\", \"headerFilterFocus\", this.setHeaderFilterFocus.bind(this));\n    this.registerComponentFunction(\"column\", \"reloadHeaderFilter\", this.reloadHeaderFilter.bind(this));\n    this.registerComponentFunction(\"column\", \"getHeaderFilterValue\", this.getHeaderFilterValue.bind(this));\n    this.registerComponentFunction(\"column\", \"setHeaderFilterValue\", this.setHeaderFilterValue.bind(this));\n  }\n  initialize() {\n    this.subscribe(\"column-init\", this.initializeColumnHeaderFilter.bind(this));\n    this.subscribe(\"column-width-fit-before\", this.hideHeaderFilterElements.bind(this));\n    this.subscribe(\"column-width-fit-after\", this.showHeaderFilterElements.bind(this));\n    this.subscribe(\"table-built\", this.tableBuilt.bind(this));\n    if (this.table.options.filterMode === \"remote\") {\n      this.subscribe(\"data-params\", this.remoteFilterParams.bind(this));\n    }\n    this.registerDataHandler(this.filter.bind(this), 10);\n  }\n  tableBuilt() {\n    if (this.table.options.initialFilter) {\n      this.setFilter(this.table.options.initialFilter);\n    }\n    if (this.table.options.initialHeaderFilter) {\n      this.table.options.initialHeaderFilter.forEach(item => {\n        var column = this.table.columnManager.findColumn(item.field);\n        if (column) {\n          this.setHeaderFilterValue(column, item.value);\n        } else {\n          console.warn(\"Column Filter Error - No matching column found:\", item.field);\n          return false;\n        }\n      });\n    }\n    this.tableInitialized = true;\n  }\n  remoteFilterParams(data, config, silent, params) {\n    params.filter = this.getFilters(true, true);\n    return params;\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  //set standard filters\n  userSetFilter(field, type, value, params) {\n    this.setFilter(field, type, value, params);\n    this.refreshFilter();\n  }\n\n  //set standard filters\n  userRefreshFilter() {\n    this.refreshFilter();\n  }\n\n  //add filter to array\n  userAddFilter(field, type, value, params) {\n    this.addFilter(field, type, value, params);\n    this.refreshFilter();\n  }\n  userSetHeaderFilterFocus(field) {\n    var column = this.table.columnManager.findColumn(field);\n    if (column) {\n      this.setHeaderFilterFocus(column);\n    } else {\n      console.warn(\"Column Filter Focus Error - No matching column found:\", field);\n      return false;\n    }\n  }\n  userGetHeaderFilterValue(field) {\n    var column = this.table.columnManager.findColumn(field);\n    if (column) {\n      return this.getHeaderFilterValue(column);\n    } else {\n      console.warn(\"Column Filter Error - No matching column found:\", field);\n    }\n  }\n  userSetHeaderFilterValue(field, value) {\n    var column = this.table.columnManager.findColumn(field);\n    if (column) {\n      this.setHeaderFilterValue(column, value);\n    } else {\n      console.warn(\"Column Filter Error - No matching column found:\", field);\n      return false;\n    }\n  }\n\n  //remove filter from array\n  userRemoveFilter(field, type, value) {\n    this.removeFilter(field, type, value);\n    this.refreshFilter();\n  }\n\n  //clear filters\n  userClearFilter(all) {\n    this.clearFilter(all);\n    this.refreshFilter();\n  }\n\n  //clear header filters\n  userClearHeaderFilter() {\n    this.clearHeaderFilter();\n    this.refreshFilter();\n  }\n\n  //search for specific row components\n  searchRows(field, type, value) {\n    return this.search(\"rows\", field, type, value);\n  }\n\n  //search for specific data\n  searchData(field, type, value) {\n    return this.search(\"data\", field, type, value);\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  initializeColumnHeaderFilter(column) {\n    var def = column.definition;\n    if (def.headerFilter) {\n      if (typeof def.headerFilterPlaceholder !== \"undefined\" && def.field) {\n        this.module(\"localize\").setHeaderFilterColumnPlaceholder(def.field, def.headerFilterPlaceholder);\n      }\n      this.initializeColumn(column);\n    }\n  }\n\n  //initialize column header filter\n  initializeColumn(column, value) {\n    var self = this,\n      field = column.getField();\n\n    //handle successfull value change\n    function success(value) {\n      var filterType = column.modules.filter.tagType == \"input\" && column.modules.filter.attrType == \"text\" || column.modules.filter.tagType == \"textarea\" ? \"partial\" : \"match\",\n        type = \"\",\n        filterChangeCheck = \"\",\n        filterFunc;\n      if (typeof column.modules.filter.prevSuccess === \"undefined\" || column.modules.filter.prevSuccess !== value) {\n        column.modules.filter.prevSuccess = value;\n        if (!column.modules.filter.emptyFunc(value)) {\n          column.modules.filter.value = value;\n          switch (typeof column.definition.headerFilterFunc) {\n            case \"string\":\n              if (Filter.filters[column.definition.headerFilterFunc]) {\n                type = column.definition.headerFilterFunc;\n                filterFunc = function (data) {\n                  var params = column.definition.headerFilterFuncParams || {};\n                  var fieldVal = column.getFieldValue(data);\n                  params = typeof params === \"function\" ? params(value, fieldVal, data) : params;\n                  return Filter.filters[column.definition.headerFilterFunc](value, fieldVal, data, params);\n                };\n              } else {\n                console.warn(\"Header Filter Error - Matching filter function not found: \", column.definition.headerFilterFunc);\n              }\n              break;\n            case \"function\":\n              filterFunc = function (data) {\n                var params = column.definition.headerFilterFuncParams || {};\n                var fieldVal = column.getFieldValue(data);\n                params = typeof params === \"function\" ? params(value, fieldVal, data) : params;\n                return column.definition.headerFilterFunc(value, fieldVal, data, params);\n              };\n              type = filterFunc;\n              break;\n          }\n          if (!filterFunc) {\n            switch (filterType) {\n              case \"partial\":\n                filterFunc = function (data) {\n                  var colVal = column.getFieldValue(data);\n                  if (typeof colVal !== 'undefined' && colVal !== null) {\n                    return String(colVal).toLowerCase().indexOf(String(value).toLowerCase()) > -1;\n                  } else {\n                    return false;\n                  }\n                };\n                type = \"like\";\n                break;\n              default:\n                filterFunc = function (data) {\n                  return column.getFieldValue(data) == value;\n                };\n                type = \"=\";\n            }\n          }\n          self.headerFilters[field] = {\n            value: value,\n            func: filterFunc,\n            type: type,\n            params: {}\n          };\n        } else {\n          delete self.headerFilters[field];\n        }\n        filterChangeCheck = JSON.stringify(self.headerFilters);\n        if (self.prevHeaderFilterChangeCheck !== filterChangeCheck) {\n          self.prevHeaderFilterChangeCheck = filterChangeCheck;\n          self.trackChanges();\n          self.refreshFilter();\n        }\n      }\n      return true;\n    }\n    column.modules.filter = {\n      success: success,\n      attrType: false,\n      tagType: false,\n      emptyFunc: false\n    };\n    this.generateHeaderFilterElement(column);\n  }\n  generateHeaderFilterElement(column, initialValue, reinitialize) {\n    var self = this,\n      success = column.modules.filter.success,\n      field = column.getField(),\n      filterElement,\n      editor,\n      editorElement,\n      cellWrapper,\n      typingTimer,\n      searchTrigger,\n      params;\n\n    //handle aborted edit\n    function cancel() {}\n    if (column.modules.filter.headerElement && column.modules.filter.headerElement.parentNode) {\n      column.contentElement.removeChild(column.modules.filter.headerElement.parentNode);\n    }\n    if (field) {\n      //set empty value function\n      column.modules.filter.emptyFunc = column.definition.headerFilterEmptyCheck || function (value) {\n        return !value && value !== \"0\" && value !== 0;\n      };\n      filterElement = document.createElement(\"div\");\n      filterElement.classList.add(\"tabulator-header-filter\");\n\n      //set column editor\n      switch (typeof column.definition.headerFilter) {\n        case \"string\":\n          if (self.table.modules.edit.editors[column.definition.headerFilter]) {\n            editor = self.table.modules.edit.editors[column.definition.headerFilter];\n            if ((column.definition.headerFilter === \"tick\" || column.definition.headerFilter === \"tickCross\") && !column.definition.headerFilterEmptyCheck) {\n              column.modules.filter.emptyFunc = function (value) {\n                return value !== true && value !== false;\n              };\n            }\n          } else {\n            console.warn(\"Filter Error - Cannot build header filter, No such editor found: \", column.definition.editor);\n          }\n          break;\n        case \"function\":\n          editor = column.definition.headerFilter;\n          break;\n        case \"boolean\":\n          if (column.modules.edit && column.modules.edit.editor) {\n            editor = column.modules.edit.editor;\n          } else {\n            if (column.definition.formatter && self.table.modules.edit.editors[column.definition.formatter]) {\n              editor = self.table.modules.edit.editors[column.definition.formatter];\n              if ((column.definition.formatter === \"tick\" || column.definition.formatter === \"tickCross\") && !column.definition.headerFilterEmptyCheck) {\n                column.modules.filter.emptyFunc = function (value) {\n                  return value !== true && value !== false;\n                };\n              }\n            } else {\n              editor = self.table.modules.edit.editors[\"input\"];\n            }\n          }\n          break;\n      }\n      if (editor) {\n        cellWrapper = {\n          getValue: function () {\n            return typeof initialValue !== \"undefined\" ? initialValue : \"\";\n          },\n          getField: function () {\n            return column.definition.field;\n          },\n          getElement: function () {\n            return filterElement;\n          },\n          getColumn: function () {\n            return column.getComponent();\n          },\n          getRow: function () {\n            return {\n              normalizeHeight: function () {}\n            };\n          }\n        };\n        params = column.definition.headerFilterParams || {};\n        params = typeof params === \"function\" ? params.call(self.table) : params;\n        editorElement = editor.call(this.table.modules.edit, cellWrapper, function () {}, success, cancel, params);\n        if (!editorElement) {\n          console.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor returned a value of false\");\n          return;\n        }\n        if (!(editorElement instanceof Node)) {\n          console.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor should return an instance of Node, the editor returned:\", editorElement);\n          return;\n        }\n\n        //set Placeholder Text\n        if (field) {\n          self.langBind(\"headerFilters|columns|\" + column.definition.field, function (value) {\n            editorElement.setAttribute(\"placeholder\", typeof value !== \"undefined\" && value ? value : self.langText(\"headerFilters|default\"));\n          });\n        } else {\n          self.langBind(\"headerFilters|default\", function (value) {\n            editorElement.setAttribute(\"placeholder\", value);\n          });\n        }\n\n        //focus on element on click\n        editorElement.addEventListener(\"click\", function (e) {\n          e.stopPropagation();\n          editorElement.focus();\n        });\n        editorElement.addEventListener(\"focus\", e => {\n          var left = this.table.columnManager.element.scrollLeft;\n          if (left !== this.table.rowManager.element.scrollLeft) {\n            this.table.rowManager.scrollHorizontal(left);\n            this.table.columnManager.scrollHorizontal(left);\n          }\n        });\n\n        //live update filters as user types\n        typingTimer = false;\n        searchTrigger = function (e) {\n          if (typingTimer) {\n            clearTimeout(typingTimer);\n          }\n          typingTimer = setTimeout(function () {\n            success(editorElement.value);\n          }, self.table.options.headerFilterLiveFilterDelay);\n        };\n        column.modules.filter.headerElement = editorElement;\n        column.modules.filter.attrType = editorElement.hasAttribute(\"type\") ? editorElement.getAttribute(\"type\").toLowerCase() : \"\";\n        column.modules.filter.tagType = editorElement.tagName.toLowerCase();\n        if (column.definition.headerFilterLiveFilter !== false) {\n          if (!(column.definition.headerFilter === 'autocomplete' || column.definition.headerFilter === 'tickCross' || (column.definition.editor === 'autocomplete' || column.definition.editor === 'tickCross') && column.definition.headerFilter === true)) {\n            editorElement.addEventListener(\"keyup\", searchTrigger);\n            editorElement.addEventListener(\"search\", searchTrigger);\n\n            //update number filtered columns on change\n            if (column.modules.filter.attrType == \"number\") {\n              editorElement.addEventListener(\"change\", function (e) {\n                success(editorElement.value);\n              });\n            }\n\n            //change text inputs to search inputs to allow for clearing of field\n            if (column.modules.filter.attrType == \"text\" && this.table.browser !== \"ie\") {\n              editorElement.setAttribute(\"type\", \"search\");\n              // editorElement.off(\"change blur\"); //prevent blur from triggering filter and preventing selection click\n            }\n          }\n\n          //prevent input and select elements from propegating click to column sorters etc\n          if (column.modules.filter.tagType == \"input\" || column.modules.filter.tagType == \"select\" || column.modules.filter.tagType == \"textarea\") {\n            editorElement.addEventListener(\"mousedown\", function (e) {\n              e.stopPropagation();\n            });\n          }\n        }\n        filterElement.appendChild(editorElement);\n        column.contentElement.appendChild(filterElement);\n        if (!reinitialize) {\n          self.headerFilterColumns.push(column);\n        }\n      }\n    } else {\n      console.warn(\"Filter Error - Cannot add header filter, column has no field set:\", column.definition.title);\n    }\n  }\n\n  //hide all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\n  hideHeaderFilterElements() {\n    this.headerFilterColumns.forEach(function (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        column.modules.filter.headerElement.style.display = 'none';\n      }\n    });\n  }\n\n  //show all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\n  showHeaderFilterElements() {\n    this.headerFilterColumns.forEach(function (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        column.modules.filter.headerElement.style.display = '';\n      }\n    });\n  }\n\n  //programatically set focus of header filter\n  setHeaderFilterFocus(column) {\n    if (column.modules.filter && column.modules.filter.headerElement) {\n      column.modules.filter.headerElement.focus();\n    } else {\n      console.warn(\"Column Filter Focus Error - No header filter set on column:\", column.getField());\n    }\n  }\n\n  //programmatically get value of header filter\n  getHeaderFilterValue(column) {\n    if (column.modules.filter && column.modules.filter.headerElement) {\n      return column.modules.filter.headerElement.value;\n    } else {\n      console.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\n    }\n  }\n\n  //programatically set value of header filter\n  setHeaderFilterValue(column, value) {\n    if (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        this.generateHeaderFilterElement(column, value, true);\n        column.modules.filter.success(value);\n      } else {\n        console.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\n      }\n    }\n  }\n  reloadHeaderFilter(column) {\n    if (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        this.generateHeaderFilterElement(column, column.modules.filter.value, true);\n      } else {\n        console.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\n      }\n    }\n  }\n  refreshFilter() {\n    if (this.tableInitialized) {\n      if (this.table.options.filterMode === \"remote\") {\n        this.reloadData();\n      } else {\n        this.refreshData(true);\n      }\n    }\n\n    //TODO - Persist left position of row manager\n    // left = this.scrollLeft;\n    // this.scrollHorizontal(left);\n  }\n\n  //check if the filters has changed since last use\n  trackChanges() {\n    this.changed = true;\n    this.dispatch(\"filter-changed\");\n  }\n\n  //check if the filters has changed since last use\n  hasChanged() {\n    var changed = this.changed;\n    this.changed = false;\n    return changed;\n  }\n\n  //set standard filters\n  setFilter(field, type, value, params) {\n    this.filterList = [];\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value,\n        params: params\n      }];\n    }\n    this.addFilter(field);\n  }\n\n  //add filter to array\n  addFilter(field, type, value, params) {\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value,\n        params: params\n      }];\n    }\n    field.forEach(filter => {\n      filter = this.findFilter(filter);\n      if (filter) {\n        this.filterList.push(filter);\n        this.changed = true;\n      }\n    });\n  }\n  findFilter(filter) {\n    var column;\n    if (Array.isArray(filter)) {\n      return this.findSubFilters(filter);\n    }\n    var filterFunc = false;\n    if (typeof filter.field == \"function\") {\n      filterFunc = function (data) {\n        return filter.field(data, filter.type || {}); // pass params to custom filter function\n      };\n    } else {\n      if (Filter.filters[filter.type]) {\n        column = this.table.columnManager.getColumnByField(filter.field);\n        if (column) {\n          filterFunc = function (data) {\n            return Filter.filters[filter.type](filter.value, column.getFieldValue(data), data, filter.params || {});\n          };\n        } else {\n          filterFunc = function (data) {\n            return Filter.filters[filter.type](filter.value, data[filter.field], data, filter.params || {});\n          };\n        }\n      } else {\n        console.warn(\"Filter Error - No such filter type found, ignoring: \", filter.type);\n      }\n    }\n    filter.func = filterFunc;\n    return filter.func ? filter : false;\n  }\n  findSubFilters(filters) {\n    var output = [];\n    filters.forEach(filter => {\n      filter = this.findFilter(filter);\n      if (filter) {\n        output.push(filter);\n      }\n    });\n    return output.length ? output : false;\n  }\n\n  //get all filters\n  getFilters(all, ajax) {\n    var output = [];\n    if (all) {\n      output = this.getHeaderFilters();\n    }\n    if (ajax) {\n      output.forEach(function (item) {\n        if (typeof item.type == \"function\") {\n          item.type = \"function\";\n        }\n      });\n    }\n    output = output.concat(this.filtersToArray(this.filterList, ajax));\n    return output;\n  }\n\n  //filter to Object\n  filtersToArray(filterList, ajax) {\n    var output = [];\n    filterList.forEach(filter => {\n      var item;\n      if (Array.isArray(filter)) {\n        output.push(this.filtersToArray(filter, ajax));\n      } else {\n        item = {\n          field: filter.field,\n          type: filter.type,\n          value: filter.value\n        };\n        if (ajax) {\n          if (typeof item.type == \"function\") {\n            item.type = \"function\";\n          }\n        }\n        output.push(item);\n      }\n    });\n    return output;\n  }\n\n  //get all filters\n  getHeaderFilters() {\n    var output = [];\n    for (var key in this.headerFilters) {\n      output.push({\n        field: key,\n        type: this.headerFilters[key].type,\n        value: this.headerFilters[key].value\n      });\n    }\n    return output;\n  }\n\n  //remove filter from array\n  removeFilter(field, type, value) {\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value\n      }];\n    }\n    field.forEach(filter => {\n      var index = -1;\n      if (typeof filter.field == \"object\") {\n        index = this.filterList.findIndex(element => {\n          return filter === element;\n        });\n      } else {\n        index = this.filterList.findIndex(element => {\n          return filter.field === element.field && filter.type === element.type && filter.value === element.value;\n        });\n      }\n      if (index > -1) {\n        this.filterList.splice(index, 1);\n      } else {\n        console.warn(\"Filter Error - No matching filter type found, ignoring: \", filter.type);\n      }\n    });\n    this.trackChanges();\n  }\n\n  //clear filters\n  clearFilter(all) {\n    this.filterList = [];\n    if (all) {\n      this.clearHeaderFilter();\n    }\n    this.trackChanges();\n  }\n\n  //clear header filters\n  clearHeaderFilter() {\n    this.headerFilters = {};\n    this.prevHeaderFilterChangeCheck = \"{}\";\n    this.headerFilterColumns.forEach(column => {\n      if (typeof column.modules.filter.value !== \"undefined\") {\n        delete column.modules.filter.value;\n      }\n      column.modules.filter.prevSuccess = undefined;\n      this.reloadHeaderFilter(column);\n    });\n    this.trackChanges();\n  }\n\n  //search data and return matching rows\n  search(searchType, field, type, value) {\n    var activeRows = [],\n      filterList = [];\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value\n      }];\n    }\n    field.forEach(filter => {\n      filter = this.findFilter(filter);\n      if (filter) {\n        filterList.push(filter);\n      }\n    });\n    this.table.rowManager.rows.forEach(row => {\n      var match = true;\n      filterList.forEach(filter => {\n        if (!this.filterRecurse(filter, row.getData())) {\n          match = false;\n        }\n      });\n      if (match) {\n        activeRows.push(searchType === \"data\" ? row.getData(\"data\") : row.getComponent());\n      }\n    });\n    return activeRows;\n  }\n\n  //filter row array\n  filter(rowList, filters) {\n    var activeRows = [],\n      activeRowComponents = [];\n    if (this.subscribedExternal(\"dataFiltering\")) {\n      this.dispatchExternal(\"dataFiltering\", this.getFilters());\n    }\n    if (this.table.options.filterMode !== \"remote\" && (this.filterList.length || Object.keys(this.headerFilters).length)) {\n      rowList.forEach(row => {\n        if (this.filterRow(row)) {\n          activeRows.push(row);\n        }\n      });\n    } else {\n      activeRows = rowList.slice(0);\n    }\n    if (this.subscribedExternal(\"dataFiltered\")) {\n      activeRows.forEach(row => {\n        activeRowComponents.push(row.getComponent());\n      });\n      this.dispatchExternal(\"dataFiltered\", this.getFilters(), activeRowComponents);\n    }\n    return activeRows;\n  }\n\n  //filter individual row\n  filterRow(row, filters) {\n    var match = true,\n      data = row.getData();\n    this.filterList.forEach(filter => {\n      if (!this.filterRecurse(filter, data)) {\n        match = false;\n      }\n    });\n    for (var field in this.headerFilters) {\n      if (!this.headerFilters[field].func(data)) {\n        match = false;\n      }\n    }\n    return match;\n  }\n  filterRecurse(filter, data) {\n    var match = false;\n    if (Array.isArray(filter)) {\n      filter.forEach(subFilter => {\n        if (this.filterRecurse(subFilter, data)) {\n          match = true;\n        }\n      });\n    } else {\n      match = filter.func(data);\n    }\n    return match;\n  }\n}\nFilter.moduleName = \"filter\";\n\n//load defaults\nFilter.filters = defaultFilters;\nfunction plaintext(cell, formatterParams, onRendered) {\n  return this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\n}\nfunction html$1(cell, formatterParams, onRendered) {\n  return cell.getValue();\n}\nfunction textarea$1(cell, formatterParams, onRendered) {\n  cell.getElement().style.whiteSpace = \"pre-wrap\";\n  return this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\n}\nfunction money(cell, formatterParams, onRendered) {\n  var floatVal = parseFloat(cell.getValue()),\n    sign = \"\",\n    number,\n    integer,\n    decimal,\n    rgx;\n  var decimalSym = formatterParams.decimal || \".\";\n  var thousandSym = formatterParams.thousand || \",\";\n  var negativeSign = formatterParams.negativeSign || \"-\";\n  var symbol = formatterParams.symbol || \"\";\n  var after = !!formatterParams.symbolAfter;\n  var precision = typeof formatterParams.precision !== \"undefined\" ? formatterParams.precision : 2;\n  if (isNaN(floatVal)) {\n    return this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\n  }\n  if (floatVal < 0) {\n    floatVal = Math.abs(floatVal);\n    sign = negativeSign;\n  }\n  number = precision !== false ? floatVal.toFixed(precision) : floatVal;\n  number = String(number).split(\".\");\n  integer = number[0];\n  decimal = number.length > 1 ? decimalSym + number[1] : \"\";\n  rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(integer)) {\n    integer = integer.replace(rgx, \"$1\" + thousandSym + \"$2\");\n  }\n  return after ? sign + integer + decimal + symbol : sign + symbol + integer + decimal;\n}\nfunction link(cell, formatterParams, onRendered) {\n  var value = cell.getValue(),\n    urlPrefix = formatterParams.urlPrefix || \"\",\n    download = formatterParams.download,\n    label = value,\n    el = document.createElement(\"a\"),\n    data;\n  if (formatterParams.labelField) {\n    data = cell.getData();\n    label = data[formatterParams.labelField];\n  }\n  if (formatterParams.label) {\n    switch (typeof formatterParams.label) {\n      case \"string\":\n        label = formatterParams.label;\n        break;\n      case \"function\":\n        label = formatterParams.label(cell);\n        break;\n    }\n  }\n  if (label) {\n    if (formatterParams.urlField) {\n      data = cell.getData();\n      value = data[formatterParams.urlField];\n    }\n    if (formatterParams.url) {\n      switch (typeof formatterParams.url) {\n        case \"string\":\n          value = formatterParams.url;\n          break;\n        case \"function\":\n          value = formatterParams.url(cell);\n          break;\n      }\n    }\n    el.setAttribute(\"href\", urlPrefix + value);\n    if (formatterParams.target) {\n      el.setAttribute(\"target\", formatterParams.target);\n    }\n    if (formatterParams.download) {\n      if (typeof download == \"function\") {\n        download = download(cell);\n      } else {\n        download = download === true ? \"\" : download;\n      }\n      el.setAttribute(\"download\", download);\n    }\n    el.innerHTML = this.emptyToSpace(this.sanitizeHTML(label));\n    return el;\n  } else {\n    return \"&nbsp;\";\n  }\n}\nfunction image(cell, formatterParams, onRendered) {\n  var el = document.createElement(\"img\"),\n    src = cell.getValue();\n  if (formatterParams.urlPrefix) {\n    src = formatterParams.urlPrefix + cell.getValue();\n  }\n  if (formatterParams.urlSuffix) {\n    src = src + formatterParams.urlSuffix;\n  }\n  el.setAttribute(\"src\", src);\n  switch (typeof formatterParams.height) {\n    case \"number\":\n      el.style.height = formatterParams.height + \"px\";\n      break;\n    case \"string\":\n      el.style.height = formatterParams.height;\n      break;\n  }\n  switch (typeof formatterParams.width) {\n    case \"number\":\n      el.style.width = formatterParams.width + \"px\";\n      break;\n    case \"string\":\n      el.style.width = formatterParams.width;\n      break;\n  }\n  el.addEventListener(\"load\", function () {\n    cell.getRow().normalizeHeight();\n  });\n  return el;\n}\nfunction tickCross$1(cell, formatterParams, onRendered) {\n  var value = cell.getValue(),\n    element = cell.getElement(),\n    empty = formatterParams.allowEmpty,\n    truthy = formatterParams.allowTruthy,\n    tick = typeof formatterParams.tickElement !== \"undefined\" ? formatterParams.tickElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>',\n    cross = typeof formatterParams.crossElement !== \"undefined\" ? formatterParams.crossElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\"  viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\n  if (truthy && value || value === true || value === \"true\" || value === \"True\" || value === 1 || value === \"1\") {\n    element.setAttribute(\"aria-checked\", true);\n    return tick || \"\";\n  } else {\n    if (empty && (value === \"null\" || value === \"\" || value === null || typeof value === \"undefined\")) {\n      element.setAttribute(\"aria-checked\", \"mixed\");\n      return \"\";\n    } else {\n      element.setAttribute(\"aria-checked\", false);\n      return cross || \"\";\n    }\n  }\n}\nfunction datetime(cell, formatterParams, onRendered) {\n  var DT = window.DateTime || luxon.DateTime;\n  var inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\n  var outputFormat = formatterParams.outputFormat || \"dd/MM/yyyy HH:mm:ss\";\n  var invalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\n  var value = cell.getValue();\n  if (typeof DT != \"undefined\") {\n    var newDatetime = DT.fromFormat(String(value), inputFormat);\n    if (newDatetime.isValid) {\n      if (formatterParams.timezone) {\n        newDatetime = newDatetime.shiftTimezone(formatterParams.timezone);\n      }\n      return newDatetime.toFormat(outputFormat);\n    } else {\n      if (invalid === true || !value) {\n        return value;\n      } else if (typeof invalid === \"function\") {\n        return invalid(value);\n      } else {\n        return invalid;\n      }\n    }\n  } else {\n    console.error(\"Format Error - 'datetime' formatter is dependant on luxon.js\");\n  }\n}\nfunction datetimediff(cell, formatterParams, onRendered) {\n  var DT = window.DateTime || luxon.DateTime;\n  var inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\n  var invalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\n  var suffix = typeof formatterParams.suffix !== \"undefined\" ? formatterParams.suffix : false;\n  var unit = typeof formatterParams.unit !== \"undefined\" ? formatterParams.unit : \"days\";\n  var humanize = typeof formatterParams.humanize !== \"undefined\" ? formatterParams.humanize : false;\n  var date = typeof formatterParams.date !== \"undefined\" ? formatterParams.date : DT.now();\n  var value = cell.getValue();\n  if (typeof DT != \"undefined\") {\n    var newDatetime = DT.fromFormat(String(value), inputFormat);\n    if (newDatetime.isValid) {\n      if (humanize) ;else {\n        return parseInt(newDatetime.diff(date, unit)[unit]) + (suffix ? \" \" + suffix : \"\");\n      }\n    } else {\n      if (invalid === true) {\n        return value;\n      } else if (typeof invalid === \"function\") {\n        return invalid(value);\n      } else {\n        return invalid;\n      }\n    }\n  } else {\n    console.error(\"Format Error - 'datetimediff' formatter is dependant on luxon.js\");\n  }\n}\nfunction lookup(cell, formatterParams, onRendered) {\n  var value = cell.getValue();\n  if (typeof formatterParams[value] === \"undefined\") {\n    console.warn('Missing display value for ' + value);\n    return value;\n  }\n  return formatterParams[value];\n}\nfunction star$1(cell, formatterParams, onRendered) {\n  var value = cell.getValue(),\n    element = cell.getElement(),\n    maxStars = formatterParams && formatterParams.stars ? formatterParams.stars : 5,\n    stars = document.createElement(\"span\"),\n    star = document.createElementNS('http://www.w3.org/2000/svg', \"svg\"),\n    starActive = '<polygon fill=\"#FFEA00\" stroke=\"#C1AB60\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>',\n    starInactive = '<polygon fill=\"#D2D2D2\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\n\n  //style stars holder\n  stars.style.verticalAlign = \"middle\";\n\n  //style star\n  star.setAttribute(\"width\", \"14\");\n  star.setAttribute(\"height\", \"14\");\n  star.setAttribute(\"viewBox\", \"0 0 512 512\");\n  star.setAttribute(\"xml:space\", \"preserve\");\n  star.style.padding = \"0 1px\";\n  value = value && !isNaN(value) ? parseInt(value) : 0;\n  value = Math.max(0, Math.min(value, maxStars));\n  for (var i = 1; i <= maxStars; i++) {\n    var nextStar = star.cloneNode(true);\n    nextStar.innerHTML = i <= value ? starActive : starInactive;\n    stars.appendChild(nextStar);\n  }\n  element.style.whiteSpace = \"nowrap\";\n  element.style.overflow = \"hidden\";\n  element.style.textOverflow = \"ellipsis\";\n  element.setAttribute(\"aria-label\", value);\n  return stars;\n}\nfunction traffic(cell, formatterParams, onRendered) {\n  var value = this.sanitizeHTML(cell.getValue()) || 0,\n    el = document.createElement(\"span\"),\n    max = formatterParams && formatterParams.max ? formatterParams.max : 100,\n    min = formatterParams && formatterParams.min ? formatterParams.min : 0,\n    colors = formatterParams && typeof formatterParams.color !== \"undefined\" ? formatterParams.color : [\"red\", \"orange\", \"green\"],\n    color = \"#666666\",\n    percent,\n    percentValue;\n  if (isNaN(value) || typeof cell.getValue() === \"undefined\") {\n    return;\n  }\n  el.classList.add(\"tabulator-traffic-light\");\n\n  //make sure value is in range\n  percentValue = parseFloat(value) <= max ? parseFloat(value) : max;\n  percentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min;\n\n  //workout percentage\n  percent = (max - min) / 100;\n  percentValue = Math.round((percentValue - min) / percent);\n\n  //set color\n  switch (typeof colors) {\n    case \"string\":\n      color = colors;\n      break;\n    case \"function\":\n      color = colors(value);\n      break;\n    case \"object\":\n      if (Array.isArray(colors)) {\n        var unit = 100 / colors.length;\n        var index = Math.floor(percentValue / unit);\n        index = Math.min(index, colors.length - 1);\n        index = Math.max(index, 0);\n        color = colors[index];\n        break;\n      }\n  }\n  el.style.backgroundColor = color;\n  return el;\n}\nfunction progress$1(cell, formatterParams, onRendered) {\n  //progress bar\n  var value = this.sanitizeHTML(cell.getValue()) || 0,\n    element = cell.getElement(),\n    max = formatterParams && formatterParams.max ? formatterParams.max : 100,\n    min = formatterParams && formatterParams.min ? formatterParams.min : 0,\n    legendAlign = formatterParams && formatterParams.legendAlign ? formatterParams.legendAlign : \"center\",\n    percent,\n    percentValue,\n    color,\n    legend,\n    legendColor;\n\n  //make sure value is in range\n  percentValue = parseFloat(value) <= max ? parseFloat(value) : max;\n  percentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min;\n\n  //workout percentage\n  percent = (max - min) / 100;\n  percentValue = Math.round((percentValue - min) / percent);\n\n  //set bar color\n  switch (typeof formatterParams.color) {\n    case \"string\":\n      color = formatterParams.color;\n      break;\n    case \"function\":\n      color = formatterParams.color(value);\n      break;\n    case \"object\":\n      if (Array.isArray(formatterParams.color)) {\n        var unit = 100 / formatterParams.color.length;\n        var index = Math.floor(percentValue / unit);\n        index = Math.min(index, formatterParams.color.length - 1);\n        index = Math.max(index, 0);\n        color = formatterParams.color[index];\n        break;\n      }\n    default:\n      color = \"#2DC214\";\n  }\n\n  //generate legend\n  switch (typeof formatterParams.legend) {\n    case \"string\":\n      legend = formatterParams.legend;\n      break;\n    case \"function\":\n      legend = formatterParams.legend(value);\n      break;\n    case \"boolean\":\n      legend = value;\n      break;\n    default:\n      legend = false;\n  }\n\n  //set legend color\n  switch (typeof formatterParams.legendColor) {\n    case \"string\":\n      legendColor = formatterParams.legendColor;\n      break;\n    case \"function\":\n      legendColor = formatterParams.legendColor(value);\n      break;\n    case \"object\":\n      if (Array.isArray(formatterParams.legendColor)) {\n        var unit = 100 / formatterParams.legendColor.length;\n        var index = Math.floor(percentValue / unit);\n        index = Math.min(index, formatterParams.legendColor.length - 1);\n        index = Math.max(index, 0);\n        legendColor = formatterParams.legendColor[index];\n      }\n      break;\n    default:\n      legendColor = \"#000\";\n  }\n  element.style.minWidth = \"30px\";\n  element.style.position = \"relative\";\n  element.setAttribute(\"aria-label\", percentValue);\n  var barEl = document.createElement(\"div\");\n  barEl.style.display = \"inline-block\";\n  barEl.style.position = \"absolute\";\n  barEl.style.width = percentValue + \"%\";\n  barEl.style.backgroundColor = color;\n  barEl.style.height = \"100%\";\n  barEl.setAttribute('data-max', max);\n  barEl.setAttribute('data-min', min);\n  var barContainer = document.createElement(\"div\");\n  barContainer.style.position = \"relative\";\n  barContainer.style.width = \"100%\";\n  barContainer.style.height = \"100%\";\n  if (legend) {\n    var legendEl = document.createElement(\"div\");\n    legendEl.style.position = \"absolute\";\n    legendEl.style.top = 0;\n    legendEl.style.left = 0;\n    legendEl.style.textAlign = legendAlign;\n    legendEl.style.width = \"100%\";\n    legendEl.style.color = legendColor;\n    legendEl.innerHTML = legend;\n  }\n  onRendered(function () {\n    //handle custom element needed if formatter is to be included in printed/downloaded output\n    if (!(cell instanceof CellComponent)) {\n      var holderEl = document.createElement(\"div\");\n      holderEl.style.position = \"absolute\";\n      holderEl.style.top = \"4px\";\n      holderEl.style.bottom = \"4px\";\n      holderEl.style.left = \"4px\";\n      holderEl.style.right = \"4px\";\n      element.appendChild(holderEl);\n      element = holderEl;\n    }\n    element.appendChild(barContainer);\n    barContainer.appendChild(barEl);\n    if (legend) {\n      barContainer.appendChild(legendEl);\n    }\n  });\n  return \"\";\n}\nfunction color(cell, formatterParams, onRendered) {\n  cell.getElement().style.backgroundColor = this.sanitizeHTML(cell.getValue());\n  return \"\";\n}\nfunction buttonTick(cell, formatterParams, onRendered) {\n  return '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>';\n}\nfunction buttonCross(cell, formatterParams, onRendered) {\n  return '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\n}\nfunction rownum(cell, formatterParams, onRendered) {\n  return this.table.rowManager.activeRows.indexOf(cell.getRow()._getSelf()) + 1;\n}\nfunction handle(cell, formatterParams, onRendered) {\n  cell.getElement().classList.add(\"tabulator-row-handle\");\n  return \"<div class='tabulator-row-handle-box'><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div></div>\";\n}\nfunction responsiveCollapse(cell, formatterParams, onRendered) {\n  var el = document.createElement(\"div\"),\n    config = cell.getRow()._row.modules.responsiveLayout;\n  el.classList.add(\"tabulator-responsive-collapse-toggle\");\n  el.innerHTML = \"<span class='tabulator-responsive-collapse-toggle-open'>+</span><span class='tabulator-responsive-collapse-toggle-close'>-</span>\";\n  cell.getElement().classList.add(\"tabulator-row-handle\");\n  function toggleList(isOpen) {\n    var collapseEl = config.element;\n    config.open = isOpen;\n    if (collapseEl) {\n      if (config.open) {\n        el.classList.add(\"open\");\n        collapseEl.style.display = '';\n      } else {\n        el.classList.remove(\"open\");\n        collapseEl.style.display = 'none';\n      }\n    }\n  }\n  el.addEventListener(\"click\", function (e) {\n    e.stopImmediatePropagation();\n    toggleList(!config.open);\n  });\n  toggleList(config.open);\n  return el;\n}\nfunction rowSelection(cell, formatterParams, onRendered) {\n  var checkbox = document.createElement(\"input\");\n  checkbox.type = 'checkbox';\n  if (this.table.modExists(\"selectRow\", true)) {\n    checkbox.addEventListener(\"click\", e => {\n      e.stopPropagation();\n    });\n    if (typeof cell.getRow == 'function') {\n      var row = cell.getRow();\n      if (row instanceof RowComponent$1) {\n        checkbox.addEventListener(\"change\", e => {\n          row.toggleSelect();\n        });\n        checkbox.checked = row.isSelected && row.isSelected();\n        this.table.modules.selectRow.registerRowSelectCheckbox(row, checkbox);\n      } else {\n        checkbox = \"\";\n      }\n    } else {\n      checkbox.addEventListener(\"change\", e => {\n        if (this.table.modules.selectRow.selectedRows.length) {\n          this.table.deselectRow();\n        } else {\n          this.table.selectRow(formatterParams.rowRange);\n        }\n      });\n      this.table.modules.selectRow.registerHeaderSelectCheckbox(checkbox);\n    }\n  }\n  return checkbox;\n}\nvar defaultFormatters = {\n  plaintext: plaintext,\n  html: html$1,\n  textarea: textarea$1,\n  money: money,\n  link: link,\n  image: image,\n  tickCross: tickCross$1,\n  datetime: datetime,\n  datetimediff: datetimediff,\n  lookup: lookup,\n  star: star$1,\n  traffic: traffic,\n  progress: progress$1,\n  color: color,\n  buttonTick: buttonTick,\n  buttonCross: buttonCross,\n  rownum: rownum,\n  handle: handle,\n  responsiveCollapse: responsiveCollapse,\n  rowSelection: rowSelection\n};\nclass Format extends Module {\n  constructor(table) {\n    super(table);\n    this.registerColumnOption(\"formatter\");\n    this.registerColumnOption(\"formatterParams\");\n    this.registerColumnOption(\"formatterPrint\");\n    this.registerColumnOption(\"formatterPrintParams\");\n    this.registerColumnOption(\"formatterClipboard\");\n    this.registerColumnOption(\"formatterClipboardParams\");\n    this.registerColumnOption(\"formatterHtmlOutput\");\n    this.registerColumnOption(\"formatterHtmlOutputParams\");\n    this.registerColumnOption(\"titleFormatter\");\n    this.registerColumnOption(\"titleFormatterParams\");\n  }\n  initialize() {\n    this.subscribe(\"cell-format\", this.formatValue.bind(this));\n    this.subscribe(\"cell-rendered\", this.cellRendered.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"column-format\", this.formatHeader.bind(this));\n  }\n\n  //initialize column formatter\n  initializeColumn(column) {\n    column.modules.format = this.lookupFormatter(column, \"\");\n    if (typeof column.definition.formatterPrint !== \"undefined\") {\n      column.modules.format.print = this.lookupFormatter(column, \"Print\");\n    }\n    if (typeof column.definition.formatterClipboard !== \"undefined\") {\n      column.modules.format.clipboard = this.lookupFormatter(column, \"Clipboard\");\n    }\n    if (typeof column.definition.formatterHtmlOutput !== \"undefined\") {\n      column.modules.format.htmlOutput = this.lookupFormatter(column, \"HtmlOutput\");\n    }\n  }\n  lookupFormatter(column, type) {\n    var config = {\n        params: column.definition[\"formatter\" + type + \"Params\"] || {}\n      },\n      formatter = column.definition[\"formatter\" + type];\n\n    //set column formatter\n    switch (typeof formatter) {\n      case \"string\":\n        if (Format.formatters[formatter]) {\n          config.formatter = Format.formatters[formatter];\n        } else {\n          console.warn(\"Formatter Error - No such formatter found: \", formatter);\n          config.formatter = Format.formatters.plaintext;\n        }\n        break;\n      case \"function\":\n        config.formatter = formatter;\n        break;\n      default:\n        config.formatter = Format.formatters.plaintext;\n        break;\n    }\n    return config;\n  }\n  cellRendered(cell) {\n    if (cell.modules.format && cell.modules.format.renderedCallback && !cell.modules.format.rendered) {\n      cell.modules.format.renderedCallback();\n      cell.modules.format.rendered = true;\n    }\n  }\n\n  //return a formatted value for a column header\n  formatHeader(column, title, el) {\n    var formatter, params, onRendered, mockCell;\n    if (column.definition.titleFormatter) {\n      formatter = this.getFormatter(column.definition.titleFormatter);\n      onRendered = callback => {\n        column.titleFormatterRendered = callback;\n      };\n      mockCell = {\n        getValue: function () {\n          return title;\n        },\n        getElement: function () {\n          return el;\n        }\n      };\n      params = column.definition.titleFormatterParams || {};\n      params = typeof params === \"function\" ? params() : params;\n      return formatter.call(this, mockCell, params, onRendered);\n    } else {\n      return title;\n    }\n  }\n\n  //return a formatted value for a cell\n  formatValue(cell) {\n    var component = cell.getComponent(),\n      params = typeof cell.column.modules.format.params === \"function\" ? cell.column.modules.format.params(component) : cell.column.modules.format.params;\n    function onRendered(callback) {\n      if (!cell.modules.format) {\n        cell.modules.format = {};\n      }\n      cell.modules.format.renderedCallback = callback;\n      cell.modules.format.rendered = false;\n    }\n    return cell.column.modules.format.formatter.call(this, component, params, onRendered);\n  }\n  formatExportValue(cell, type) {\n    var formatter = cell.column.modules.format[type],\n      params;\n    if (formatter) {\n      params = typeof formatter.params === \"function\" ? formatter.params(component) : formatter.params;\n      function onRendered(callback) {\n        if (!cell.modules.format) {\n          cell.modules.format = {};\n        }\n        cell.modules.format.renderedCallback = callback;\n        cell.modules.format.rendered = false;\n      }\n      return formatter.formatter.call(this, cell.getComponent(), params, onRendered);\n    } else {\n      return this.formatValue(cell);\n    }\n  }\n  sanitizeHTML(value) {\n    if (value) {\n      var entityMap = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#39;',\n        '/': '&#x2F;',\n        '`': '&#x60;',\n        '=': '&#x3D;'\n      };\n      return String(value).replace(/[&<>\"'`=\\/]/g, function (s) {\n        return entityMap[s];\n      });\n    } else {\n      return value;\n    }\n  }\n  emptyToSpace(value) {\n    return value === null || typeof value === \"undefined\" || value === \"\" ? \"&nbsp;\" : value;\n  }\n\n  //get formatter for cell\n  getFormatter(formatter) {\n    var formatter;\n    switch (typeof formatter) {\n      case \"string\":\n        if (Format.formatters[formatter]) {\n          formatter = Format.formatters[formatter];\n        } else {\n          console.warn(\"Formatter Error - No such formatter found: \", formatter);\n          formatter = Format.formatters.plaintext;\n        }\n        break;\n      case \"function\":\n        formatter = formatter;\n        break;\n      default:\n        formatter = Format.formatters.plaintext;\n        break;\n    }\n    return formatter;\n  }\n}\nFormat.moduleName = \"format\";\n\n//load defaults\nFormat.formatters = defaultFormatters;\nclass FrozenColumns extends Module {\n  constructor(table) {\n    super(table);\n    this.leftColumns = [];\n    this.rightColumns = [];\n    this.leftMargin = 0;\n    this.rightMargin = 0;\n    this.rightPadding = 0;\n    this.initializationMode = \"left\";\n    this.active = false;\n    this.scrollEndTimer = false;\n    this.registerColumnOption(\"frozen\");\n  }\n\n  //reset initial state\n  reset() {\n    this.initializationMode = \"left\";\n    this.leftColumns = [];\n    this.rightColumns = [];\n    this.leftMargin = 0;\n    this.rightMargin = 0;\n    this.rightMargin = 0;\n    this.active = false;\n    this.table.columnManager.headersElement.style.marginLeft = 0;\n    this.table.columnManager.element.style.paddingRight = 0;\n  }\n  initialize() {\n    this.subscribe(\"cell-layout\", this.layoutCell.bind(this));\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    this.subscribe(\"column-width\", this.layout.bind(this));\n    this.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\n    this.subscribe(\"table-layout\", this.layout.bind(this));\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n    this.subscribe(\"columns-loading\", this.reset.bind(this));\n    this.subscribe(\"table-redraw\", this.layout.bind(this));\n  }\n  layoutCell(cell) {\n    this.layoutElement(cell.element, cell.column);\n  }\n\n  //initialize specific column\n  initializeColumn(column) {\n    var config = {\n      margin: 0,\n      edge: false\n    };\n    if (!column.isGroup) {\n      if (this.frozenCheck(column)) {\n        config.position = this.initializationMode;\n        if (this.initializationMode == \"left\") {\n          this.leftColumns.push(column);\n        } else {\n          this.rightColumns.unshift(column);\n        }\n        this.active = true;\n        column.modules.frozen = config;\n      } else {\n        this.initializationMode = \"right\";\n      }\n    }\n  }\n  frozenCheck(column) {\n    if (column.parent.isGroup && column.definition.frozen) {\n      console.warn(\"Frozen Column Error - Parent column group must be frozen, not individual columns or sub column groups\");\n    }\n    if (column.parent.isGroup) {\n      return this.frozenCheck(column.parent);\n    } else {\n      return column.definition.frozen;\n    }\n  }\n\n  //quick layout to smooth horizontal scrolling\n  scrollHorizontal() {\n    var rows;\n    if (this.active) {\n      clearTimeout(this.scrollEndTimer);\n\n      //layout all rows after scroll is complete\n      this.scrollEndTimer = setTimeout(() => {\n        this.layout();\n      }, 100);\n      rows = this.table.rowManager.getVisibleRows();\n      this.calcMargins();\n      this.layoutColumnPosition();\n      this.layoutCalcRows();\n      rows.forEach(row => {\n        if (row.type === \"row\") {\n          this.layoutRow(row);\n        }\n      });\n      this.table.rowManager.tableElement.style.marginRight = this.rightMargin;\n    }\n  }\n\n  //calculate margins for rows\n  calcMargins() {\n    this.leftMargin = this._calcSpace(this.leftColumns, this.leftColumns.length) + \"px\";\n    this.table.columnManager.headersElement.style.marginLeft = this.leftMargin;\n    this.rightMargin = this._calcSpace(this.rightColumns, this.rightColumns.length) + \"px\";\n    this.table.columnManager.element.style.paddingRight = this.rightMargin;\n\n    //calculate right frozen columns\n    this.rightPadding = this.table.rowManager.element.clientWidth + this.table.columnManager.scrollLeft;\n  }\n\n  //layout calculation rows\n  layoutCalcRows() {\n    if (this.table.modExists(\"columnCalcs\")) {\n      if (this.table.modules.columnCalcs.topInitialized && this.table.modules.columnCalcs.topRow) {\n        this.layoutRow(this.table.modules.columnCalcs.topRow);\n      }\n      if (this.table.modules.columnCalcs.botInitialized && this.table.modules.columnCalcs.botRow) {\n        this.layoutRow(this.table.modules.columnCalcs.botRow);\n      }\n      if (this.table.modExists(\"groupRows\")) {\n        this.layoutGroupCalcs(this.table.modules.groupRows.getGroups());\n      }\n    }\n  }\n  layoutGroupCalcs(groups) {\n    groups.forEach(group => {\n      if (group.calcs.top) {\n        this.layoutRow(group.calcs.top);\n      }\n      if (group.calcs.bottom) {\n        this.layoutRow(group.calcs.bottom);\n      }\n      if (group.groupList && group.groupList.length) {\n        this.layoutGroupCalcs(group.groupList && group.groupList);\n      }\n    });\n  }\n\n  //calculate column positions and layout headers\n  layoutColumnPosition(allCells) {\n    var leftParents = [];\n    this.leftColumns.forEach((column, i) => {\n      column.modules.frozen.margin = this._calcSpace(this.leftColumns, i) + this.table.columnManager.scrollLeft + \"px\";\n      if (i == this.leftColumns.length - 1) {\n        column.modules.frozen.edge = true;\n      } else {\n        column.modules.frozen.edge = false;\n      }\n      if (column.parent.isGroup) {\n        var parentEl = this.getColGroupParentElement(column);\n        if (!leftParents.includes(parentEl)) {\n          this.layoutElement(parentEl, column);\n          leftParents.push(parentEl);\n        }\n        if (column.modules.frozen.edge) {\n          parentEl.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\n        }\n      } else {\n        this.layoutElement(column.getElement(), column);\n      }\n      if (allCells) {\n        column.cells.forEach(cell => {\n          this.layoutElement(cell.getElement(true), column);\n        });\n      }\n    });\n    this.rightColumns.forEach((column, i) => {\n      column.modules.frozen.margin = this.rightPadding - this._calcSpace(this.rightColumns, i + 1) + \"px\";\n      if (i == this.rightColumns.length - 1) {\n        column.modules.frozen.edge = true;\n      } else {\n        column.modules.frozen.edge = false;\n      }\n      if (column.parent.isGroup) {\n        this.layoutElement(this.getColGroupParentElement(column), column);\n      } else {\n        this.layoutElement(column.getElement(), column);\n      }\n      if (allCells) {\n        column.cells.forEach(cell => {\n          this.layoutElement(cell.getElement(true), column);\n        });\n      }\n    });\n  }\n  getColGroupParentElement(column) {\n    return column.parent.isGroup ? this.getColGroupParentElement(column.parent) : column.getElement();\n  }\n\n  //layout columns appropropriatly\n  layout() {\n    if (this.active) {\n      //calculate row padding\n      this.calcMargins();\n      this.table.rowManager.getDisplayRows().forEach(row => {\n        if (row.type === \"row\") {\n          this.layoutRow(row);\n        }\n      });\n      this.layoutCalcRows();\n\n      //calculate left columns\n      this.layoutColumnPosition(true);\n      this.table.rowManager.tableElement.style.marginRight = this.rightMargin;\n    }\n  }\n  layoutRow(row) {\n    var rowEl = row.getElement();\n    rowEl.style.paddingLeft = this.leftMargin;\n    this.leftColumns.forEach(column => {\n      var cell = row.getCell(column);\n      if (cell) {\n        this.layoutElement(cell.getElement(true), column);\n      }\n    });\n    this.rightColumns.forEach(column => {\n      var cell = row.getCell(column);\n      if (cell) {\n        this.layoutElement(cell.getElement(true), column);\n      }\n    });\n  }\n  layoutElement(element, column) {\n    if (column.modules.frozen) {\n      element.style.position = \"absolute\";\n      element.style.left = column.modules.frozen.margin;\n      element.classList.add(\"tabulator-frozen\");\n      if (column.modules.frozen.edge) {\n        element.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\n      }\n    }\n  }\n  _calcSpace(columns, index) {\n    var width = 0;\n    for (let i = 0; i < index; i++) {\n      if (columns[i].visible) {\n        width += columns[i].getWidth();\n      }\n    }\n    return width;\n  }\n}\nFrozenColumns.moduleName = \"frozenColumns\";\nclass FrozenRows extends Module {\n  constructor(table) {\n    super(table);\n    this.topElement = document.createElement(\"div\");\n    this.rows = [];\n\n    //register component functions\n    this.registerComponentFunction(\"row\", \"freeze\", this.freezeRow.bind(this));\n    this.registerComponentFunction(\"row\", \"unfreeze\", this.unfreezeRow.bind(this));\n    this.registerComponentFunction(\"row\", \"isFrozen\", this.isRowFrozen.bind(this));\n  }\n  initialize() {\n    this.rows = [];\n    this.topElement.classList.add(\"tabulator-frozen-rows-holder\");\n\n    // this.table.columnManager.element.append(this.topElement);\n    this.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\n    this.subscribe(\"row-deleting\", this.detachRow.bind(this));\n    this.registerDisplayHandler(this.getRows.bind(this), 10);\n  }\n  isRowFrozen(row) {\n    var index = this.rows.indexOf(row);\n    return index > -1;\n  }\n  isFrozen() {\n    return !!this.rows.length;\n  }\n\n  //filter frozen rows out of display data\n  getRows(rows) {\n    var output = rows.slice(0);\n    this.rows.forEach(function (row) {\n      var index = output.indexOf(row);\n      if (index > -1) {\n        output.splice(index, 1);\n      }\n    });\n    return output;\n  }\n  freezeRow(row) {\n    if (!row.modules.frozen) {\n      row.modules.frozen = true;\n      this.topElement.appendChild(row.getElement());\n      row.initialize();\n      row.normalizeHeight();\n      this.table.rowManager.adjustTableSize();\n      this.rows.push(row);\n      this.refreshData(false, \"display\");\n      this.styleRows();\n    } else {\n      console.warn(\"Freeze Error - Row is already frozen\");\n    }\n  }\n  unfreezeRow(row) {\n    var index = this.rows.indexOf(row);\n    if (row.modules.frozen) {\n      row.modules.frozen = false;\n      this.detachRow(row);\n      this.table.rowManager.adjustTableSize();\n      this.refreshData(false, \"display\");\n      if (this.rows.length) {\n        this.styleRows();\n      }\n    } else {\n      console.warn(\"Freeze Error - Row is already unfrozen\");\n    }\n  }\n  detachRow(row) {\n    var index = this.rows.indexOf(row);\n    if (index > -1) {\n      var rowEl = row.getElement();\n      if (rowEl.parentNode) {\n        rowEl.parentNode.removeChild(rowEl);\n      }\n      this.rows.splice(index, 1);\n    }\n  }\n  styleRows(row) {\n    this.rows.forEach((row, i) => {\n      this.table.rowManager.styleRow(row, i);\n    });\n  }\n}\nFrozenRows.moduleName = \"frozenRows\";\n\n//public group object\nclass GroupComponent {\n  constructor(group) {\n    this._group = group;\n    this.type = \"GroupComponent\";\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._group.table.componentFunctionBinder.handle(\"row\", target._group, name);\n        }\n      }\n    });\n  }\n  getKey() {\n    return this._group.key;\n  }\n  getField() {\n    return this._group.field;\n  }\n  getElement() {\n    return this._group.element;\n  }\n  getRows() {\n    return this._group.getRows(true);\n  }\n  getSubGroups() {\n    return this._group.getSubGroups(true);\n  }\n  getParentGroup() {\n    return this._group.parent ? this._group.parent.getComponent() : false;\n  }\n  isVisible() {\n    return this._group.visible;\n  }\n  show() {\n    this._group.show();\n  }\n  hide() {\n    this._group.hide();\n  }\n  toggle() {\n    this._group.toggleVisibility();\n  }\n  _getSelf() {\n    return this._group;\n  }\n  getTable() {\n    return this._group.groupManager.table;\n  }\n}\n\n//Group functions\nclass Group {\n  constructor(groupManager, parent, level, key, field, generator, oldGroup) {\n    this.groupManager = groupManager;\n    this.parent = parent;\n    this.key = key;\n    this.level = level;\n    this.field = field;\n    this.hasSubGroups = level < groupManager.groupIDLookups.length - 1;\n    this.addRow = this.hasSubGroups ? this._addRowToGroup : this._addRow;\n    this.type = \"group\"; //type of element\n    this.old = oldGroup;\n    this.rows = [];\n    this.groups = [];\n    this.groupList = [];\n    this.generator = generator;\n    this.elementContents = false;\n    this.height = 0;\n    this.outerHeight = 0;\n    this.initialized = false;\n    this.calcs = {};\n    this.initialized = false;\n    this.modules = {};\n    this.arrowElement = false;\n    this.visible = oldGroup ? oldGroup.visible : typeof groupManager.startOpen[level] !== \"undefined\" ? groupManager.startOpen[level] : groupManager.startOpen[0];\n    this.component = null;\n    this.createElements();\n    this.addBindings();\n    this.createValueGroups();\n  }\n  wipe() {\n    if (this.groupList.length) {\n      this.groupList.forEach(function (group) {\n        group.wipe();\n      });\n    } else {\n      this.rows.forEach(row => {\n        if (row.modules) {\n          delete row.modules.group;\n        }\n      });\n    }\n    this.element = false;\n    this.arrowElement = false;\n    this.elementContents = false;\n  }\n  createElements() {\n    var arrow = document.createElement(\"div\");\n    arrow.classList.add(\"tabulator-arrow\");\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(\"tabulator-row\");\n    this.element.classList.add(\"tabulator-group\");\n    this.element.classList.add(\"tabulator-group-level-\" + this.level);\n    this.element.setAttribute(\"role\", \"rowgroup\");\n    this.arrowElement = document.createElement(\"div\");\n    this.arrowElement.classList.add(\"tabulator-group-toggle\");\n    this.arrowElement.appendChild(arrow);\n\n    //setup movable rows\n    if (this.groupManager.table.options.movableRows !== false && this.groupManager.table.modExists(\"moveRow\")) {\n      this.groupManager.table.modules.moveRow.initializeGroupHeader(this);\n    }\n  }\n  createValueGroups() {\n    var level = this.level + 1;\n    if (this.groupManager.allowedValues && this.groupManager.allowedValues[level]) {\n      this.groupManager.allowedValues[level].forEach(value => {\n        this._createGroup(value, level);\n      });\n    }\n  }\n  addBindings() {\n    var dblTap, tapHold, tap, toggleElement;\n    if ((this.groupManager.table.options.groupContextMenu || this.groupManager.table.options.groupClickMenu) && this.groupManager.table.modExists(\"menu\")) {\n      this.groupManager.table.modules.menu.initializeGroup.call(this.groupManager.table.modules.menu, this);\n    }\n    if (this.groupManager.table.options.groupTap) {\n      tap = false;\n      this.element.addEventListener(\"touchstart\", e => {\n        tap = true;\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        if (tap) {\n          this.groupManager.table.options.groupTap(e, this.getComponent());\n        }\n        tap = false;\n      });\n    }\n    if (this.groupManager.table.options.groupDblTap) {\n      dblTap = null;\n      this.element.addEventListener(\"touchend\", e => {\n        if (dblTap) {\n          clearTimeout(dblTap);\n          dblTap = null;\n          this.groupManager.table.options.groupDblTap(e, this.getComponent());\n        } else {\n          dblTap = setTimeout(() => {\n            clearTimeout(dblTap);\n            dblTap = null;\n          }, 300);\n        }\n      });\n    }\n    if (this.groupManager.table.options.groupTapHold) {\n      tapHold = null;\n      this.element.addEventListener(\"touchstart\", e => {\n        clearTimeout(tapHold);\n        tapHold = setTimeout(() => {\n          clearTimeout(tapHold);\n          tapHold = null;\n          tap = false;\n          this.groupManager.table.options.groupTapHold(e, this.getComponent());\n        }, 1000);\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        clearTimeout(tapHold);\n        tapHold = null;\n      });\n    }\n    if (this.groupManager.table.options.groupToggleElement) {\n      toggleElement = this.groupManager.table.options.groupToggleElement == \"arrow\" ? this.arrowElement : this.element;\n      toggleElement.addEventListener(\"click\", e => {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        this.toggleVisibility();\n      });\n    }\n  }\n  _createGroup(groupID, level) {\n    var groupKey = level + \"_\" + groupID;\n    var group = new Group(this.groupManager, this, level, groupID, this.groupManager.groupIDLookups[level].field, this.groupManager.headerGenerator[level] || this.groupManager.headerGenerator[0], this.old ? this.old.groups[groupKey] : false);\n    this.groups[groupKey] = group;\n    this.groupList.push(group);\n  }\n  _addRowToGroup(row) {\n    var level = this.level + 1;\n    if (this.hasSubGroups) {\n      var groupID = this.groupManager.groupIDLookups[level].func(row.getData()),\n        groupKey = level + \"_\" + groupID;\n      if (this.groupManager.allowedValues && this.groupManager.allowedValues[level]) {\n        if (this.groups[groupKey]) {\n          this.groups[groupKey].addRow(row);\n        }\n      } else {\n        if (!this.groups[groupKey]) {\n          this._createGroup(groupID, level);\n        }\n        this.groups[groupKey].addRow(row);\n      }\n    }\n  }\n  _addRow(row) {\n    this.rows.push(row);\n    row.modules.group = this;\n  }\n  insertRow(row, to, after) {\n    var data = this.conformRowData({});\n    row.updateData(data);\n    var toIndex = this.rows.indexOf(to);\n    if (toIndex > -1) {\n      if (after) {\n        this.rows.splice(toIndex + 1, 0, row);\n      } else {\n        this.rows.splice(toIndex, 0, row);\n      }\n    } else {\n      if (after) {\n        this.rows.push(row);\n      } else {\n        this.rows.unshift(row);\n      }\n    }\n    row.modules.group = this;\n    this.generateGroupHeaderContents();\n    if (this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\") {\n      this.groupManager.table.modules.columnCalcs.recalcGroup(this);\n    }\n    this.groupManager.updateGroupRows(true);\n  }\n  scrollHeader(left) {\n    this.arrowElement.style.marginLeft = left;\n    this.groupList.forEach(function (child) {\n      child.scrollHeader(left);\n    });\n  }\n  getRowIndex(row) {}\n\n  //update row data to match grouping contraints\n  conformRowData(data) {\n    if (this.field) {\n      data[this.field] = this.key;\n    } else {\n      console.warn(\"Data Conforming Error - Cannot conform row data to match new group as groupBy is a function\");\n    }\n    if (this.parent) {\n      data = this.parent.conformRowData(data);\n    }\n    return data;\n  }\n  removeRow(row) {\n    var index = this.rows.indexOf(row);\n    var el = row.getElement();\n    if (index > -1) {\n      this.rows.splice(index, 1);\n    }\n    if (!this.groupManager.table.options.groupValues && !this.rows.length) {\n      if (this.parent) {\n        this.parent.removeGroup(this);\n      } else {\n        this.groupManager.removeGroup(this);\n      }\n      this.groupManager.updateGroupRows(true);\n    } else {\n      if (el.parentNode) {\n        el.parentNode.removeChild(el);\n      }\n      this.generateGroupHeaderContents();\n      if (this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\") {\n        this.groupManager.table.modules.columnCalcs.recalcGroup(this);\n      }\n    }\n  }\n  removeGroup(group) {\n    var groupKey = group.level + \"_\" + group.key,\n      index;\n    if (this.groups[groupKey]) {\n      delete this.groups[groupKey];\n      index = this.groupList.indexOf(group);\n      if (index > -1) {\n        this.groupList.splice(index, 1);\n      }\n      if (!this.groupList.length) {\n        if (this.parent) {\n          this.parent.removeGroup(this);\n        } else {\n          this.groupManager.removeGroup(this);\n        }\n      }\n    }\n  }\n  getHeadersAndRows(noCalc) {\n    var output = [];\n    output.push(this);\n    this._visSet();\n    if (this.visible) {\n      if (this.groupList.length) {\n        this.groupList.forEach(function (group) {\n          output = output.concat(group.getHeadersAndRows(noCalc));\n        });\n      } else {\n        if (!noCalc && this.groupManager.table.options.columnCalcs != \"table\" && this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasTopCalcs()) {\n          if (this.calcs.top) {\n            this.calcs.top.detachElement();\n            this.calcs.top.deleteCells();\n          }\n          this.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\n          output.push(this.calcs.top);\n        }\n        output = output.concat(this.rows);\n        if (!noCalc && this.groupManager.table.options.columnCalcs != \"table\" && this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()) {\n          if (this.calcs.bottom) {\n            this.calcs.bottom.detachElement();\n            this.calcs.bottom.deleteCells();\n          }\n          this.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\n          output.push(this.calcs.bottom);\n        }\n      }\n    } else {\n      if (!this.groupList.length && this.groupManager.table.options.columnCalcs != \"table\") {\n        if (this.groupManager.table.modExists(\"columnCalcs\")) {\n          if (!noCalc && this.groupManager.table.modules.columnCalcs.hasTopCalcs()) {\n            if (this.calcs.top) {\n              this.calcs.top.detachElement();\n              this.calcs.top.deleteCells();\n            }\n            if (this.groupManager.table.options.groupClosedShowCalcs) {\n              this.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\n              output.push(this.calcs.top);\n            }\n          }\n          if (!noCalc && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()) {\n            if (this.calcs.bottom) {\n              this.calcs.bottom.detachElement();\n              this.calcs.bottom.deleteCells();\n            }\n            if (this.groupManager.table.options.groupClosedShowCalcs) {\n              this.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\n              output.push(this.calcs.bottom);\n            }\n          }\n        }\n      }\n    }\n    return output;\n  }\n  getData(visible, transform) {\n    var output = [];\n    this._visSet();\n    if (!visible || visible && this.visible) {\n      this.rows.forEach(row => {\n        output.push(row.getData(transform || \"data\"));\n      });\n    }\n    return output;\n  }\n  getRowCount() {\n    var count = 0;\n    if (this.groupList.length) {\n      this.groupList.forEach(group => {\n        count += group.getRowCount();\n      });\n    } else {\n      count = this.rows.length;\n    }\n    return count;\n  }\n  toggleVisibility() {\n    if (this.visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  hide() {\n    this.visible = false;\n    if (this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination) {\n      this.element.classList.remove(\"tabulator-group-visible\");\n      if (this.groupList.length) {\n        this.groupList.forEach(group => {\n          var rows = group.getHeadersAndRows();\n          rows.forEach(row => {\n            row.detachElement();\n          });\n        });\n      } else {\n        this.rows.forEach(row => {\n          var rowEl = row.getElement();\n          rowEl.parentNode.removeChild(rowEl);\n        });\n      }\n      this.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\n      this.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\n    } else {\n      this.groupManager.updateGroupRows(true);\n    }\n    this.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), false);\n  }\n  show() {\n    this.visible = true;\n    if (this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination) {\n      this.element.classList.add(\"tabulator-group-visible\");\n      var prev = this.generateElement();\n      if (this.groupList.length) {\n        this.groupList.forEach(group => {\n          var rows = group.getHeadersAndRows();\n          rows.forEach(row => {\n            var rowEl = row.getElement();\n            prev.parentNode.insertBefore(rowEl, prev.nextSibling);\n            row.initialize();\n            prev = rowEl;\n          });\n        });\n      } else {\n        this.rows.forEach(row => {\n          var rowEl = row.getElement();\n          prev.parentNode.insertBefore(rowEl, prev.nextSibling);\n          row.initialize();\n          prev = rowEl;\n        });\n      }\n      this.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\n      this.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\n    } else {\n      this.groupManager.updateGroupRows(true);\n    }\n    this.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), true);\n  }\n  _visSet() {\n    var data = [];\n    if (typeof this.visible == \"function\") {\n      this.rows.forEach(function (row) {\n        data.push(row.getData());\n      });\n      this.visible = this.visible(this.key, this.getRowCount(), data, this.getComponent());\n    }\n  }\n  getRowGroup(row) {\n    var match = false;\n    if (this.groupList.length) {\n      this.groupList.forEach(function (group) {\n        var result = group.getRowGroup(row);\n        if (result) {\n          match = result;\n        }\n      });\n    } else {\n      if (this.rows.find(function (item) {\n        return item === row;\n      })) {\n        match = this;\n      }\n    }\n    return match;\n  }\n  getSubGroups(component) {\n    var output = [];\n    this.groupList.forEach(function (child) {\n      output.push(component ? child.getComponent() : child);\n    });\n    return output;\n  }\n  getRows(compoment) {\n    var output = [];\n    this.rows.forEach(function (row) {\n      output.push(compoment ? row.getComponent() : row);\n    });\n    return output;\n  }\n  generateGroupHeaderContents() {\n    var data = [];\n    this.rows.forEach(function (row) {\n      data.push(row.getData());\n    });\n    this.elementContents = this.generator(this.key, this.getRowCount(), data, this.getComponent());\n    while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n    if (typeof this.elementContents === \"string\") {\n      this.element.innerHTML = this.elementContents;\n    } else {\n      this.element.appendChild(this.elementContents);\n    }\n    this.element.insertBefore(this.arrowElement, this.element.firstChild);\n  }\n  getPath() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    path.unshift(this.key);\n    if (this.parent) {\n      this.parent.getPath(path);\n    }\n    return path;\n  }\n\n  ////////////// Standard Row Functions //////////////\n\n  getElement() {\n    return this.elementContents ? this.element : this.generateElement();\n  }\n  generateElement() {\n    this.addBindings = false;\n    this._visSet();\n    if (this.visible) {\n      this.element.classList.add(\"tabulator-group-visible\");\n    } else {\n      this.element.classList.remove(\"tabulator-group-visible\");\n    }\n    for (var i = 0; i < this.element.childNodes.length; ++i) {\n      this.element.childNodes[i].parentNode.removeChild(this.element.childNodes[i]);\n    }\n    this.generateGroupHeaderContents();\n\n    // this.addBindings();\n\n    return this.element;\n  }\n  detachElement() {\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n\n  //normalize the height of elements in the row\n  normalizeHeight() {\n    this.setHeight(this.element.clientHeight);\n  }\n  initialize(force) {\n    if (!this.initialized || force) {\n      this.normalizeHeight();\n      this.initialized = true;\n    }\n  }\n  reinitialize() {\n    this.initialized = false;\n    this.height = 0;\n    if (Helpers.elVisible(this.element)) {\n      this.initialize(true);\n    }\n  }\n  setHeight(height) {\n    if (this.height != height) {\n      this.height = height;\n      this.outerHeight = this.element.offsetHeight;\n    }\n  }\n\n  //return rows outer height\n  getHeight() {\n    return this.outerHeight;\n  }\n  getGroup() {\n    return this;\n  }\n  reinitializeHeight() {}\n  calcHeight() {}\n  setCellHeight() {}\n  clearCellHeight() {}\n  deinitializeHeight() {}\n\n  //////////////// Object Generation /////////////////\n  getComponent() {\n    if (!this.component) {\n      this.component = new GroupComponent(this);\n    }\n    return this.component;\n  }\n}\nclass GroupRows extends Module {\n  constructor(table) {\n    super(table);\n    this.groupIDLookups = false; //enable table grouping and set field to group by\n    this.startOpen = [function () {\n      return false;\n    }]; //starting state of group\n    this.headerGenerator = [function () {\n      return \"\";\n    }];\n    this.groupList = []; //ordered list of groups\n    this.allowedValues = false;\n    this.groups = {}; //hold row groups\n    this.displayIndex = 0; //index in display pipeline\n\n    this.displayHandler = this.getRows.bind(this);\n\n    //register table options\n    this.registerTableOption(\"groupBy\", false); //enable table grouping and set field to group by\n    this.registerTableOption(\"groupStartOpen\", true); //starting state of group\n    this.registerTableOption(\"groupValues\", false);\n    this.registerTableOption(\"groupUpdateOnCellEdit\", false);\n    this.registerTableOption(\"groupHeader\", false); //header generation function\n    this.registerTableOption(\"groupHeaderPrint\", null);\n    this.registerTableOption(\"groupHeaderClipboard\", null);\n    this.registerTableOption(\"groupHeaderHtmlOutput\", null);\n    this.registerTableOption(\"groupHeaderDownload\", null);\n    this.registerTableOption(\"groupToggleElement\", \"arrow\");\n    this.registerTableOption(\"groupClosedShowCalcs\", false);\n\n    //register table functions\n    this.registerTableFunction(\"setGroupBy\", this.setGroupBy.bind(this));\n    this.registerTableFunction(\"setGroupValues\", this.setGroupValues.bind(this));\n    this.registerTableFunction(\"setGroupStartOpen\", this.setGroupStartOpen.bind(this));\n    this.registerTableFunction(\"setGroupHeader\", this.setGroupHeader.bind(this));\n    this.registerTableFunction(\"getGroups\", this.userGetGroups.bind(this));\n    this.registerTableFunction(\"getGroupedData\", this.userGetGroupedData.bind(this));\n\n    //register component functions\n    this.registerComponentFunction(\"row\", \"getGroup\", this.rowGetGroup.bind(this));\n  }\n\n  //initialize group configuration\n  initialize() {\n    if (this.table.options.groupBy) {\n      this.configureGroupSetup();\n      if (this.table.options.groupUpdateOnCellEdit) {\n        this.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\n        this.subscribe(\"row-data-changed\", this.reassignRowToGroup.bind(this), 0);\n      }\n      this.subscribe(\"row-deleting\", this.rowDeleting.bind(this));\n      this.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\n      this.subscribe(\"scroll-horizontal\", this.scrollHeaders.bind(this));\n      this.subscribe(\"rows-wipe\", this.wipe.bind(this));\n      this.subscribe(\"rows-added\", this.rowsUpdated.bind(this));\n      this.subscribe(\"row-moving\", this.rowMoving.bind(this));\n      this.subscribe(\"row-adding-index\", this.rowAddingIndex.bind(this));\n      this.subscribe(\"rows-sample\", this.rowSample.bind(this));\n      this.subscribe(\"render-virtual-fill\", this.virtualRenderFill.bind(this));\n      this.registerDisplayHandler(this.displayHandler, 20);\n      this.initialized = true;\n    }\n  }\n  configureGroupSetup() {\n    if (this.table.options.groupBy) {\n      var groupBy = this.table.options.groupBy,\n        startOpen = this.table.options.groupStartOpen,\n        groupHeader = this.table.options.groupHeader;\n      this.allowedValues = this.table.options.groupValues;\n      if (Array.isArray(groupBy) && Array.isArray(groupHeader) && groupBy.length > groupHeader.length) {\n        console.warn(\"Error creating group headers, groupHeader array is shorter than groupBy array\");\n      }\n      this.headerGenerator = [function () {\n        return \"\";\n      }];\n      this.startOpen = [function () {\n        return false;\n      }]; //starting state of group\n\n      this.langBind(\"groups|item\", (langValue, lang) => {\n        this.headerGenerator[0] = (value, count, data) => {\n          //header layout function\n          return (typeof value === \"undefined\" ? \"\" : value) + \"<span>(\" + count + \" \" + (count === 1 ? langValue : lang.groups.items) + \")</span>\";\n        };\n      });\n      this.groupIDLookups = [];\n      if (Array.isArray(groupBy) || groupBy) {\n        if (this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"table\" && this.table.options.columnCalcs != \"both\") {\n          this.table.modules.columnCalcs.removeCalcs();\n        }\n      } else {\n        if (this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"group\") {\n          var cols = this.table.columnManager.getRealColumns();\n          cols.forEach(col => {\n            if (col.definition.topCalc) {\n              this.table.modules.columnCalcs.initializeTopRow();\n            }\n            if (col.definition.bottomCalc) {\n              this.table.modules.columnCalcs.initializeBottomRow();\n            }\n          });\n        }\n      }\n      if (!Array.isArray(groupBy)) {\n        groupBy = [groupBy];\n      }\n      groupBy.forEach((group, i) => {\n        var lookupFunc, column;\n        if (typeof group == \"function\") {\n          lookupFunc = group;\n        } else {\n          column = this.table.columnManager.getColumnByField(group);\n          if (column) {\n            lookupFunc = function (data) {\n              return column.getFieldValue(data);\n            };\n          } else {\n            lookupFunc = function (data) {\n              return data[group];\n            };\n          }\n        }\n        this.groupIDLookups.push({\n          field: typeof group === \"function\" ? false : group,\n          func: lookupFunc,\n          values: this.allowedValues ? this.allowedValues[i] : false\n        });\n      });\n      if (startOpen) {\n        if (!Array.isArray(startOpen)) {\n          startOpen = [startOpen];\n        }\n        startOpen.forEach(level => {});\n        this.startOpen = startOpen;\n      }\n      if (groupHeader) {\n        this.headerGenerator = Array.isArray(groupHeader) ? groupHeader : [groupHeader];\n      }\n    }\n  }\n  rowSample(rows, prevValue) {\n    var group = this.getGroups(false)[0];\n    prevValue.push(group.getRows(false)[0]);\n    return prevValue;\n  }\n  virtualRenderFill() {\n    var el = this.table.rowManager.tableElement;\n    var rows = this.table.rowManager.getVisibleRows();\n    rows = rows.filter(row => {\n      return row.type !== \"group\";\n    });\n    el.style.minWidth = !rows.length ? this.table.columnManager.getWidth() + \"px\" : \"\";\n\n    // if(this.table.options.groupBy){\n    // \tif(this.layoutMode() != \"fitDataFill\" && rowsCount == this.table.modules.groupRows.countGroups()){\n    // \t\tel.style.minWidth = this.table.columnManager.getWidth() + \"px\";\n    // \t}\n    // }\n  }\n\n  rowAddingIndex(row, index, top) {\n    this.assignRowToGroup(row);\n    var groupRows = row.modules.group.rows;\n    if (groupRows.length > 1) {\n      if (!index || index && groupRows.indexOf(index) == -1) {\n        if (top) {\n          if (groupRows[0] !== row) {\n            index = groupRows[0];\n            this.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\n          }\n        } else {\n          if (groupRows[groupRows.length - 1] !== row) {\n            index = groupRows[groupRows.length - 1];\n            this.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\n          }\n        }\n      } else {\n        this.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\n      }\n    }\n    return index;\n  }\n  trackChanges() {\n    this.dispatch(\"group-changed\");\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  setGroupBy(groups) {\n    this.table.options.groupBy = groups;\n    if (!this.initialized) {\n      this.initialize();\n    } else {\n      this.configureGroupSetup();\n    }\n    this.refreshData();\n    this.trackChanges();\n  }\n  setGroupValues(groupValues) {\n    this.table.options.groupValues = groupValues;\n    this.configureGroupSetup();\n    this.refreshData();\n    this.trackChanges();\n  }\n  setGroupStartOpen(values) {\n    this.table.options.groupStartOpen = values;\n    this.configureGroupSetup();\n    if (this.table.options.groupBy) {\n      this.refreshData();\n      this.trackChanges();\n    } else {\n      console.warn(\"Grouping Update - cant refresh view, no groups have been set\");\n    }\n  }\n  setGroupHeader(values) {\n    this.table.options.groupHeader = values;\n    this.configureGroupSetup();\n    if (this.table.options.groupBy) {\n      this.refreshData();\n      this.trackChanges();\n    } else {\n      console.warn(\"Grouping Update - cant refresh view, no groups have been set\");\n    }\n  }\n  userGetGroups(values) {\n    return this.getGroups(true);\n  }\n\n  // get grouped table data in the same format as getData()\n  userGetGroupedData() {\n    return this.table.options.groupBy ? this.getGroupedData() : this.getData();\n  }\n\n  ///////////////////////////////////////\n  ///////// Component Functions /////////\n  ///////////////////////////////////////\n\n  rowGetGroup(row) {\n    return row.modules.group ? row.modules.group.getComponent() : false;\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  rowMoving(from, to, after) {\n    if (!after && to instanceof Group) {\n      to = this.table.rowManager.prevDisplayRow(from) || to;\n    }\n    var toGroup = to instanceof Group ? to : to.modules.group;\n    var fromGroup = from instanceof Group ? from : from.modules.group;\n    if (toGroup === fromGroup) {\n      this.table.rowManager.moveRowInArray(toGroup.rows, from, to, after);\n    } else {\n      if (fromGroup) {\n        fromGroup.removeRow(from);\n      }\n      toGroup.insertRow(from, to, after);\n    }\n  }\n  rowDeleting(row) {\n    //remove from group\n    if (row.modules.group) {\n      row.modules.group.removeRow(row);\n    }\n  }\n  rowsUpdated(row) {\n    this.updateGroupRows(true);\n  }\n  cellUpdated(cell) {\n    this.reassignRowToGroup(cell.row);\n  }\n  setDisplayIndex(index) {\n    this.displayIndex = index;\n  }\n  getDisplayIndex() {\n    return this.displayIndex;\n  }\n\n  //return appropriate rows with group headers\n  getRows(rows) {\n    if (this.table.options.groupBy && this.groupIDLookups.length) {\n      this.dispatchExternal(\"dataGrouping\");\n      this.generateGroups(rows);\n      if (this.subscribedExternal(\"dataGrouped\")) {\n        this.dispatchExternal(\"dataGrouped\", this.getGroups(true));\n      }\n      return this.updateGroupRows();\n    } else {\n      return rows.slice(0);\n    }\n  }\n  getGroups(component) {\n    var groupComponents = [];\n    this.groupList.forEach(function (group) {\n      groupComponents.push(component ? group.getComponent() : group);\n    });\n    return groupComponents;\n  }\n  getChildGroups(group) {\n    var groupComponents = [];\n    if (!group) {\n      group = this;\n    }\n    group.groupList.forEach(child => {\n      if (child.groupList.length) {\n        groupComponents = groupComponents.concat(this.getChildGroups(child));\n      } else {\n        groupComponents.push(child);\n      }\n    });\n    return groupComponents;\n  }\n  wipe() {\n    this.groupList.forEach(function (group) {\n      group.wipe();\n    });\n  }\n  pullGroupListData(groupList) {\n    var groupListData = [];\n    groupList.forEach(group => {\n      var groupHeader = {};\n      groupHeader.level = 0;\n      groupHeader.rowCount = 0;\n      groupHeader.headerContent = \"\";\n      var childData = [];\n      if (group.hasSubGroups) {\n        childData = this.pullGroupListData(group.groupList);\n        groupHeader.level = group.level;\n        groupHeader.rowCount = childData.length - group.groupList.length; // data length minus number of sub-headers\n        groupHeader.headerContent = group.generator(group.key, groupHeader.rowCount, group.rows, group);\n        groupListData.push(groupHeader);\n        groupListData = groupListData.concat(childData);\n      } else {\n        groupHeader.level = group.level;\n        groupHeader.headerContent = group.generator(group.key, group.rows.length, group.rows, group);\n        groupHeader.rowCount = group.getRows().length;\n        groupListData.push(groupHeader);\n        group.getRows().forEach(row => {\n          groupListData.push(row.getData(\"data\"));\n        });\n      }\n    });\n    return groupListData;\n  }\n  getGroupedData() {\n    return this.pullGroupListData(this.groupList);\n  }\n  getRowGroup(row) {\n    var match = false;\n    this.groupList.forEach(group => {\n      var result = group.getRowGroup(row);\n      if (result) {\n        match = result;\n      }\n    });\n    return match;\n  }\n  countGroups() {\n    return this.groupList.length;\n  }\n  generateGroups(rows) {\n    var oldGroups = this.groups;\n    this.groups = {};\n    this.groupList = [];\n    if (this.allowedValues && this.allowedValues[0]) {\n      this.allowedValues[0].forEach(value => {\n        this.createGroup(value, 0, oldGroups);\n      });\n      rows.forEach(row => {\n        this.assignRowToExistingGroup(row, oldGroups);\n      });\n    } else {\n      rows.forEach(row => {\n        this.assignRowToGroup(row, oldGroups);\n      });\n    }\n  }\n  createGroup(groupID, level, oldGroups) {\n    var groupKey = level + \"_\" + groupID,\n      group;\n    oldGroups = oldGroups || [];\n    group = new Group(this, false, level, groupID, this.groupIDLookups[0].field, this.headerGenerator[0], oldGroups[groupKey]);\n    this.groups[groupKey] = group;\n    this.groupList.push(group);\n  }\n  assignRowToExistingGroup(row, oldGroups) {\n    var groupID = this.groupIDLookups[0].func(row.getData()),\n      groupKey = \"0_\" + groupID;\n    if (this.groups[groupKey]) {\n      this.groups[groupKey].addRow(row);\n    }\n  }\n  assignRowToGroup(row, oldGroups) {\n    var groupID = this.groupIDLookups[0].func(row.getData()),\n      newGroupNeeded = !this.groups[\"0_\" + groupID];\n    if (newGroupNeeded) {\n      this.createGroup(groupID, 0, oldGroups);\n    }\n    this.groups[\"0_\" + groupID].addRow(row);\n    return !newGroupNeeded;\n  }\n  reassignRowToGroup(row) {\n    if (row.type === \"row\") {\n      var oldRowGroup = row.modules.group,\n        oldGroupPath = oldRowGroup.getPath(),\n        newGroupPath = this.getExpectedPath(row),\n        samePath = true;\n\n      // figure out if new group path is the same as old group path\n      var samePath = oldGroupPath.length == newGroupPath.length && oldGroupPath.every((element, index) => {\n        return element === newGroupPath[index];\n      });\n\n      // refresh if they new path and old path aren't the same (aka the row's groupings have changed)\n      if (!samePath) {\n        oldRowGroup.removeRow(row);\n        this.assignRowToGroup(row, this.groups);\n        this.refreshData(true);\n      }\n    }\n  }\n  getExpectedPath(row) {\n    var groupPath = [],\n      rowData = row.getData();\n    this.groupIDLookups.forEach(groupId => {\n      groupPath.push(groupId.func(rowData));\n    });\n    return groupPath;\n  }\n  updateGroupRows(force) {\n    var output = [];\n    this.groupList.forEach(group => {\n      output = output.concat(group.getHeadersAndRows());\n    });\n    if (force) {\n      this.refreshData(true, this.displayHandler);\n    }\n    return output;\n  }\n  scrollHeaders(left) {\n    if (this.table.options.renderHorizontal === \"virtual\") {\n      left -= this.table.columnManager.renderer.vDomPadLeft;\n    }\n    left = left + \"px\";\n    this.groupList.forEach(group => {\n      group.scrollHeader(left);\n    });\n  }\n  removeGroup(group) {\n    var groupKey = group.level + \"_\" + group.key,\n      index;\n    if (this.groups[groupKey]) {\n      delete this.groups[groupKey];\n      index = this.groupList.indexOf(group);\n      if (index > -1) {\n        this.groupList.splice(index, 1);\n      }\n    }\n  }\n}\nGroupRows.moduleName = \"groupRows\";\nvar defaultUndoers = {\n  cellEdit: function (action) {\n    action.component.setValueProcessData(action.data.oldValue);\n    action.component.cellRendered();\n  },\n  rowAdd: function (action) {\n    action.component.deleteActual();\n  },\n  rowDelete: function (action) {\n    var newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\n    if (this.table.options.groupBy && this.table.modExists(\"groupRows\")) {\n      this.table.modules.groupRows.updateGroupRows(true);\n    }\n    this._rebindRow(action.component, newRow);\n  },\n  rowMove: function (action) {\n    this.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posFrom], !action.data.after);\n    this.table.rowManager.redraw();\n  }\n};\nvar defaultRedoers = {\n  cellEdit: function (action) {\n    action.component.setValueProcessData(action.data.newValue);\n    action.component.cellRendered();\n  },\n  rowAdd: function (action) {\n    var newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\n    if (this.table.options.groupBy && this.table.modExists(\"groupRows\")) {\n      this.table.modules.groupRows.updateGroupRows(true);\n    }\n    this._rebindRow(action.component, newRow);\n  },\n  rowDelete: function (action) {\n    action.component.deleteActual();\n  },\n  rowMove: function (action) {\n    this.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posTo], action.data.after);\n    this.table.rowManager.redraw();\n  }\n};\nclass History extends Module {\n  constructor(table) {\n    super(table);\n    this.history = [];\n    this.index = -1;\n    this.registerTableOption(\"history\", false); //enable edit history\n  }\n\n  initialize() {\n    if (this.table.options.history) {\n      this.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\n      this.subscribe(\"cell-delete\", this.clearComponentHistory.bind(this));\n      this.subscribe(\"row-delete\", this.rowDeleted.bind(this));\n      this.subscribe(\"rows-wipe\", this.clear.bind(this));\n      this.subscribe(\"row-added\", this.rowAdded.bind(this));\n      this.subscribe(\"row-move\", this.rowMoved.bind(this));\n    }\n    this.registerTableFunction(\"undo\", this.undo.bind(this));\n    this.registerTableFunction(\"redo\", this.redo.bind(this));\n    this.registerTableFunction(\"getHistoryUndoSize\", this.getHistoryUndoSize.bind(this));\n    this.registerTableFunction(\"getHistoryRedoSize\", this.getHistoryRedoSize.bind(this));\n    this.registerTableFunction(\"clearHistory\", this.clear.bind(this));\n  }\n  rowMoved(from, to, after) {\n    this.action(\"rowMove\", from, {\n      posFrom: this.table.rowManager.getRowPosition(from),\n      posTo: this.table.rowManager.getRowPosition(to),\n      to: to,\n      after: after\n    });\n  }\n  rowAdded(row, data, pos, index) {\n    this.action(\"rowAdd\", row, {\n      data: data,\n      pos: pos,\n      index: index\n    });\n  }\n  rowDeleted(row) {\n    var index, rows;\n    if (this.table.options.groupBy) {\n      rows = row.getComponent().getGroup().rows;\n      index = rows.indexOf(row);\n      if (index) {\n        index = rows[index - 1];\n      }\n    } else {\n      index = row.table.rowManager.getRowIndex(row);\n      if (index) {\n        index = row.table.rowManager.rows[index - 1];\n      }\n    }\n    this.action(\"rowDelete\", row, {\n      data: row.getData(),\n      pos: !index,\n      index: index\n    });\n  }\n  cellUpdated(cell) {\n    this.action(\"cellEdit\", cell, {\n      oldValue: cell.oldValue,\n      newValue: cell.value\n    });\n  }\n  clear() {\n    this.history = [];\n    this.index = -1;\n  }\n  action(type, component, data) {\n    this.history = this.history.slice(0, this.index + 1);\n    this.history.push({\n      type: type,\n      component: component,\n      data: data\n    });\n    this.index++;\n  }\n  getHistoryUndoSize() {\n    return this.index + 1;\n  }\n  getHistoryRedoSize() {\n    return this.history.length - (this.index + 1);\n  }\n  clearComponentHistory(component) {\n    var index = this.history.findIndex(function (item) {\n      return item.component === component;\n    });\n    if (index > -1) {\n      this.history.splice(index, 1);\n      if (index <= this.index) {\n        this.index--;\n      }\n      this.clearComponentHistory(component);\n    }\n  }\n  undo() {\n    if (this.index > -1) {\n      let action = this.history[this.index];\n      History.undoers[action.type].call(this, action);\n      this.index--;\n      this.dispatchExternal(\"historyUndo\", action.type, action.component.getComponent(), action.data);\n      return true;\n    } else {\n      console.warn(\"History Undo Error - No more history to undo\");\n      return false;\n    }\n  }\n  redo() {\n    if (this.history.length - 1 > this.index) {\n      this.index++;\n      let action = this.history[this.index];\n      History.redoers[action.type].call(this, action);\n      this.dispatchExternal(\"historyRedo\", action.type, action.component.getComponent(), action.data);\n      return true;\n    } else {\n      console.warn(\"History Redo Error - No more history to redo\");\n      return false;\n    }\n  }\n\n  //rebind rows to new element after deletion\n  _rebindRow(oldRow, newRow) {\n    this.history.forEach(function (action) {\n      if (action.component instanceof Row) {\n        if (action.component === oldRow) {\n          action.component = newRow;\n        }\n      } else if (action.component instanceof Cell) {\n        if (action.component.row === oldRow) {\n          var field = action.component.column.getField();\n          if (field) {\n            action.component = newRow.getCell(field);\n          }\n        }\n      }\n    });\n  }\n}\nHistory.moduleName = \"history\";\n\n//load defaults\nHistory.undoers = defaultUndoers;\nHistory.redoers = defaultRedoers;\nclass HtmlTableImport extends Module {\n  constructor(table) {\n    super(table);\n    this.fieldIndex = [];\n    this.hasIndex = false;\n  }\n  initialize() {\n    this.tableElementCheck();\n  }\n  tableElementCheck() {\n    if (this.table.originalElement && this.table.originalElement.tagName === \"TABLE\") {\n      this.parseTable();\n    }\n  }\n  parseTable() {\n    var element = this.table.originalElement,\n      options = this.table.options,\n      columns = options.columns,\n      headers = element.getElementsByTagName(\"th\"),\n      rows = element.getElementsByTagName(\"tbody\")[0],\n      data = [];\n    this.hasIndex = false;\n    this.dispatchExternal(\"htmlImporting\");\n    rows = rows ? rows.getElementsByTagName(\"tr\") : [];\n\n    //check for Tabulator inline options\n    this._extractOptions(element, options);\n    if (headers.length) {\n      this._extractHeaders(headers, rows);\n    } else {\n      this._generateBlankHeaders(headers, rows);\n    }\n\n    //iterate through table rows and build data set\n    for (var index = 0; index < rows.length; index++) {\n      var row = rows[index],\n        cells = row.getElementsByTagName(\"td\"),\n        item = {};\n\n      //create index if the dont exist in table\n      if (!this.hasIndex) {\n        item[options.index] = index;\n      }\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        if (typeof this.fieldIndex[i] !== \"undefined\") {\n          item[this.fieldIndex[i]] = cell.innerHTML;\n        }\n      }\n\n      //add row data to item\n      data.push(item);\n    }\n    options.data = data;\n    this.dispatchExternal(\"htmlImported\");\n  }\n\n  //extract tabulator attribute options\n  _extractOptions(element, options, defaultOptions) {\n    var attributes = element.attributes;\n    var optionsArr = defaultOptions ? Object.keys(defaultOptions) : Object.keys(options);\n    var optionsList = {};\n    optionsArr.forEach(item => {\n      optionsList[item.toLowerCase()] = item;\n    });\n    for (var index in attributes) {\n      var attrib = attributes[index];\n      var name;\n      if (attrib && typeof attrib == \"object\" && attrib.name && attrib.name.indexOf(\"tabulator-\") === 0) {\n        name = attrib.name.replace(\"tabulator-\", \"\");\n        if (typeof optionsList[name] !== \"undefined\") {\n          options[optionsList[name]] = this._attribValue(attrib.value);\n        }\n      }\n    }\n  }\n\n  //get value of attribute\n  _attribValue(value) {\n    if (value === \"true\") {\n      return true;\n    }\n    if (value === \"false\") {\n      return false;\n    }\n    return value;\n  }\n\n  //find column if it has already been defined\n  _findCol(title) {\n    var match = this.table.options.columns.find(column => {\n      return column.title === title;\n    });\n    return match || false;\n  }\n\n  //extract column from headers\n  _extractHeaders(headers, rows) {\n    for (var index = 0; index < headers.length; index++) {\n      var header = headers[index],\n        exists = false,\n        col = this._findCol(header.textContent),\n        width;\n      if (col) {\n        exists = true;\n      } else {\n        col = {\n          title: header.textContent.trim()\n        };\n      }\n      if (!col.field) {\n        col.field = header.textContent.trim().toLowerCase().replace(\" \", \"_\");\n      }\n      width = header.getAttribute(\"width\");\n      if (width && !col.width) {\n        col.width = width;\n      }\n\n      //check for Tabulator inline options\n      this._extractOptions(header, col, this.table.columnManager.optionsList.registeredDefaults);\n      this.fieldIndex[index] = col.field;\n      if (col.field == this.table.options.index) {\n        this.hasIndex = true;\n      }\n      if (!exists) {\n        this.table.options.columns.push(col);\n      }\n    }\n  }\n\n  //generate blank headers\n  _generateBlankHeaders(headers, rows) {\n    for (var index = 0; index < headers.length; index++) {\n      var header = headers[index],\n        col = {\n          title: \"\",\n          field: \"col\" + index\n        };\n      this.fieldIndex[index] = col.field;\n      var width = header.getAttribute(\"width\");\n      if (width) {\n        col.width = width;\n      }\n      this.table.options.columns.push(col);\n    }\n  }\n}\nHtmlTableImport.moduleName = \"htmlTableImport\";\nclass Interaction extends Module {\n  constructor(table) {\n    super(table);\n    this.eventMap = {\n      //row events\n      rowClick: \"row-click\",\n      rowDblClick: \"row-dblclick\",\n      rowContext: \"row-contextmenu\",\n      rowMouseEnter: \"row-mouseenter\",\n      rowMouseLeave: \"row-mouseleave\",\n      rowMouseOver: \"row-mouseover\",\n      rowMouseOut: \"row-mouseout\",\n      rowMouseMove: \"row-mousemove\",\n      rowTap: \"row\",\n      rowDblTap: \"row\",\n      rowTapHold: \"row\",\n      //cell events\n      cellClick: \"cell-click\",\n      cellDblClick: \"cell-dblclick\",\n      cellContext: \"cell-contextmenu\",\n      cellMouseEnter: \"cell-mouseenter\",\n      cellMouseLeave: \"cell-mouseleave\",\n      cellMouseOver: \"cell-mouseover\",\n      cellMouseOut: \"cell-mouseout\",\n      cellMouseMove: \"cell-mousemove\",\n      cellTap: \"cell\",\n      cellDblTap: \"cell\",\n      cellTapHold: \"cell\",\n      //column header events\n      headerClick: \"column-click\",\n      headerDblClick: \"column-dblclick\",\n      headerContext: \"column-contextmenu\",\n      headerMouseEnter: \"column-mouseenter\",\n      headerMouseLeave: \"column-mouseleave\",\n      headerMouseOver: \"column-mouseover\",\n      headerMouseOut: \"column-mouseout\",\n      headerMouseMove: \"column-mousemove\",\n      headerTap: \"column\",\n      headerDblTap: \"column\",\n      headerTapHold: \"column\",\n      //group header\n      groupClick: \"group-click\",\n      groupDblClick: \"group-dblclick\",\n      groupContext: \"group-contextmenu\",\n      groupMouseEnter: \"group-mouseenter\",\n      groupMouseLeave: \"group-mouseleave\",\n      groupMouseOver: \"group-mouseover\",\n      groupMouseOut: \"group-mouseout\",\n      groupMouseMove: \"group-mousemove\",\n      groupTap: \"group\",\n      groupDblTap: \"group\",\n      groupTapHold: \"group\"\n    };\n    this.subscribers = {};\n    this.touchSubscribers = {};\n    this.columnSubscribers = {};\n    this.touchWatchers = {\n      row: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      },\n      cell: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      },\n      column: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      }\n    };\n    this.registerColumnOption(\"headerClick\");\n    this.registerColumnOption(\"headerDblClick\");\n    this.registerColumnOption(\"headerContext\");\n    this.registerColumnOption(\"headerMouseEnter\");\n    this.registerColumnOption(\"headerMouseLeave\");\n    this.registerColumnOption(\"headerMouseOver\");\n    this.registerColumnOption(\"headerMouseOut\");\n    this.registerColumnOption(\"headerMouseMove\");\n    this.registerColumnOption(\"headerTap\");\n    this.registerColumnOption(\"headerDblTap\");\n    this.registerColumnOption(\"headerTapHold\");\n    this.registerColumnOption(\"cellClick\");\n    this.registerColumnOption(\"cellDblClick\");\n    this.registerColumnOption(\"cellContext\");\n    this.registerColumnOption(\"cellMouseEnter\");\n    this.registerColumnOption(\"cellMouseLeave\");\n    this.registerColumnOption(\"cellMouseOver\");\n    this.registerColumnOption(\"cellMouseOut\");\n    this.registerColumnOption(\"cellMouseMove\");\n    this.registerColumnOption(\"cellTap\");\n    this.registerColumnOption(\"cellDblTap\");\n    this.registerColumnOption(\"cellTapHold\");\n  }\n  initialize() {\n    this.initializeExternalEvents();\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    this.subscribe(\"cell-dblclick\", this.cellContentsSelectionFixer.bind(this));\n  }\n  cellContentsSelectionFixer(e, cell) {\n    if (this.table.modExists(\"edit\")) {\n      if (this.table.modules.edit.currentCell === this) {\n        return; //prevent instant selection of editor content\n      }\n    }\n\n    e.preventDefault();\n    try {\n      if (document.selection) {\n        // IE\n        var range = document.body.createTextRange();\n        range.moveToElementText(this.element);\n        range.select();\n      } else if (window.getSelection) {\n        var range = document.createRange();\n        range.selectNode(this.element);\n        window.getSelection().removeAllRanges();\n        window.getSelection().addRange(range);\n      }\n    } catch (e) {}\n  }\n  initializeExternalEvents() {\n    for (let key in this.eventMap) {\n      this.subscriptionChangeExternal(key, this.subscriptionChanged.bind(this, key));\n    }\n  }\n  subscriptionChanged(key, added) {\n    if (added) {\n      if (!this.subscribers[key]) {\n        if (this.eventMap[key].includes(\"-\")) {\n          this.subscribers[key] = this.handle.bind(this, key);\n          this.subscribe(this.eventMap[key], this.subscribers[key]);\n        } else {\n          this.subscribeTouchEvents(key);\n        }\n      }\n    } else {\n      if (this.eventMap[key].includes(\"-\")) {\n        if (this.subscribers[key] && !this.columnSubscribers[key] && !this.subscribedExternal(key)) {\n          this.unsubscribe(this.eventMap[key], this.subscribers[key]);\n          delete this.subscribers[key];\n        }\n      } else {\n        this.unsubscribeTouchEvents(key);\n      }\n    }\n  }\n  subscribeTouchEvents(key) {\n    var type = this.eventMap[key];\n    if (!this.touchSubscribers[type + \"-touchstart\"]) {\n      this.touchSubscribers[type + \"-touchstart\"] = this.handleTouch.bind(this, type, \"start\");\n      this.touchSubscribers[type + \"-touchend\"] = this.handleTouch.bind(this, type, \"end\");\n      this.subscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\n      this.subscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\n    }\n    this.subscribers[key] = true;\n  }\n  unsubscribeTouchEvents(key) {\n    var notouch = true,\n      type = this.eventMap[key];\n    if (this.subscribers[key] && !this.subscribedExternal(key)) {\n      delete this.subscribers[key];\n      for (let i in this.eventMap) {\n        if (this.eventMap[i] === type) {\n          if (this.subscribers[i]) {\n            notouch = false;\n          }\n        }\n      }\n      if (notouch) {\n        this.unsubscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\n        this.unsubscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\n        delete this.touchSubscribers[type + \"-touchstart\"];\n        delete this.touchSubscribers[type + \"-touchend\"];\n      }\n    }\n  }\n  initializeColumn(column) {\n    var def = column.definition;\n    for (let key in this.eventMap) {\n      if (def[key]) {\n        this.subscriptionChanged(key, true);\n        if (!this.columnSubscribers[key]) {\n          this.columnSubscribers[key] = [];\n        }\n        this.columnSubscribers[key].push(column);\n      }\n    }\n  }\n  handle(action, e, component) {\n    this.dispatchEvent(action, e, component);\n  }\n  handleTouch(type, action, e, component) {\n    var watchers = this.touchWatchers[type];\n    if (type === \"column\") {\n      type = \"header\";\n    }\n    switch (action) {\n      case \"start\":\n        watchers.tap = true;\n        clearTimeout(watchers.tapHold);\n        watchers.tapHold = setTimeout(() => {\n          clearTimeout(watchers.tapHold);\n          watchers.tapHold = null;\n          watchers.tap = null;\n          clearTimeout(watchers.tapDbl);\n          watchers.tapDbl = null;\n          this.dispatchEvent(type + \"TapHold\", e, component);\n        }, 1000);\n        break;\n      case \"end\":\n        if (watchers.tap) {\n          watchers.tap = null;\n          this.dispatchEvent(type + \"Tap\", e, component);\n        }\n        if (watchers.tapDbl) {\n          clearTimeout(watchers.tapDbl);\n          watchers.tapDbl = null;\n          this.dispatchEvent(type + \"DblTap\", e, component);\n        } else {\n          watchers.tapDbl = setTimeout(() => {\n            clearTimeout(watchers.tapDbl);\n            watchers.tapDbl = null;\n          }, 300);\n        }\n        clearTimeout(watchers.tapHold);\n        watchers.tapHold = null;\n        break;\n    }\n  }\n  dispatchEvent(action, e, component) {\n    var componentObj = component.getComponent(),\n      callback;\n    if (this.columnSubscribers[action]) {\n      if (component instanceof Cell) {\n        callback = component.column.definition[action];\n      } else if (component instanceof Column$1) {\n        callback = component.definition[action];\n      }\n      if (callback) {\n        callback(e, componentObj);\n      }\n    }\n    this.dispatchExternal(action, e, componentObj);\n  }\n}\nInteraction.moduleName = \"interaction\";\nvar defaultBindings = {\n  navPrev: \"shift + 9\",\n  navNext: 9,\n  navUp: 38,\n  navDown: 40,\n  scrollPageUp: 33,\n  scrollPageDown: 34,\n  scrollToStart: 36,\n  scrollToEnd: 35,\n  undo: \"ctrl + 90\",\n  redo: \"ctrl + 89\",\n  copyToClipboard: \"ctrl + 67\"\n};\nvar defaultActions = {\n  keyBlock: function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n  },\n  scrollPageUp: function (e) {\n    var rowManager = this.table.rowManager,\n      newPos = rowManager.scrollTop - rowManager.element.clientHeight,\n      scrollMax = rowManager.element.scrollHeight;\n    e.preventDefault();\n    if (rowManager.displayRowsCount) {\n      if (newPos >= 0) {\n        rowManager.element.scrollTop = newPos;\n      } else {\n        rowManager.scrollToRow(rowManager.getDisplayRows()[0]);\n      }\n    }\n    this.table.element.focus();\n  },\n  scrollPageDown: function (e) {\n    var rowManager = this.table.rowManager,\n      newPos = rowManager.scrollTop + rowManager.element.clientHeight,\n      scrollMax = rowManager.element.scrollHeight;\n    e.preventDefault();\n    if (rowManager.displayRowsCount) {\n      if (newPos <= scrollMax) {\n        rowManager.element.scrollTop = newPos;\n      } else {\n        rowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\n      }\n    }\n    this.table.element.focus();\n  },\n  scrollToStart: function (e) {\n    var rowManager = this.table.rowManager;\n    e.preventDefault();\n    if (rowManager.displayRowsCount) {\n      rowManager.scrollToRow(rowManager.getDisplayRows()[0]);\n    }\n    this.table.element.focus();\n  },\n  scrollToEnd: function (e) {\n    var rowManager = this.table.rowManager;\n    e.preventDefault();\n    if (rowManager.displayRowsCount) {\n      rowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\n    }\n    this.table.element.focus();\n  },\n  navPrev: function (e) {\n    this.dispatch(\"keybinding-nav-prev\", e);\n  },\n  navNext: function (e) {\n    this.dispatch(\"keybinding-nav-next\", e);\n  },\n  navLeft: function (e) {\n    this.dispatch(\"keybinding-nav-left\", e);\n  },\n  navRight: function (e) {\n    this.dispatch(\"keybinding-nav-right\", e);\n  },\n  navUp: function (e) {\n    this.dispatch(\"keybinding-nav-up\", e);\n  },\n  navDown: function (e) {\n    this.dispatch(\"keybinding-nav-down\", e);\n  },\n  undo: function (e) {\n    var cell = false;\n    if (this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")) {\n      cell = this.table.modules.edit.currentCell;\n      if (!cell) {\n        e.preventDefault();\n        this.table.modules.history.undo();\n      }\n    }\n  },\n  redo: function (e) {\n    var cell = false;\n    if (this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")) {\n      cell = this.table.modules.edit.currentCell;\n      if (!cell) {\n        e.preventDefault();\n        this.table.modules.history.redo();\n      }\n    }\n  },\n  copyToClipboard: function (e) {\n    if (!this.table.modules.edit.currentCell) {\n      if (this.table.modExists(\"clipboard\", true)) {\n        this.table.modules.clipboard.copy(false, true);\n      }\n    }\n  }\n};\nclass Keybindings extends Module {\n  constructor(table) {\n    super(table);\n    this.watchKeys = null;\n    this.pressedKeys = null;\n    this.keyupBinding = false;\n    this.keydownBinding = false;\n    this.registerTableOption(\"keybindings\", []); //array for keybindings\n    this.registerTableOption(\"tabEndNewRow\", false); //create new row when tab to end of table\n  }\n\n  initialize() {\n    var bindings = this.table.options.keybindings,\n      mergedBindings = {};\n    this.watchKeys = {};\n    this.pressedKeys = [];\n    if (bindings !== false) {\n      for (let key in Keybindings.bindings) {\n        mergedBindings[key] = Keybindings.bindings[key];\n      }\n      if (Object.keys(bindings).length) {\n        for (let key in bindings) {\n          mergedBindings[key] = bindings[key];\n        }\n      }\n      this.mapBindings(mergedBindings);\n      this.bindEvents();\n    }\n    this.subscribe(\"table-destroy\", this.clearBindings.bind(this));\n  }\n  mapBindings(bindings) {\n    for (let key in bindings) {\n      if (Keybindings.actions[key]) {\n        if (bindings[key]) {\n          if (typeof bindings[key] !== \"object\") {\n            bindings[key] = [bindings[key]];\n          }\n          bindings[key].forEach(binding => {\n            this.mapBinding(key, binding);\n          });\n        }\n      } else {\n        console.warn(\"Key Binding Error - no such action:\", key);\n      }\n    }\n  }\n  mapBinding(action, symbolsList) {\n    var binding = {\n      action: Keybindings.actions[action],\n      keys: [],\n      ctrl: false,\n      shift: false,\n      meta: false\n    };\n    var symbols = symbolsList.toString().toLowerCase().split(\" \").join(\"\").split(\"+\");\n    symbols.forEach(symbol => {\n      switch (symbol) {\n        case \"ctrl\":\n          binding.ctrl = true;\n          break;\n        case \"shift\":\n          binding.shift = true;\n          break;\n        case \"meta\":\n          binding.meta = true;\n          break;\n        default:\n          symbol = parseInt(symbol);\n          binding.keys.push(symbol);\n          if (!this.watchKeys[symbol]) {\n            this.watchKeys[symbol] = [];\n          }\n          this.watchKeys[symbol].push(binding);\n      }\n    });\n  }\n  bindEvents() {\n    var self = this;\n    this.keyupBinding = function (e) {\n      var code = e.keyCode;\n      var bindings = self.watchKeys[code];\n      if (bindings) {\n        self.pressedKeys.push(code);\n        bindings.forEach(function (binding) {\n          self.checkBinding(e, binding);\n        });\n      }\n    };\n    this.keydownBinding = function (e) {\n      var code = e.keyCode;\n      var bindings = self.watchKeys[code];\n      if (bindings) {\n        var index = self.pressedKeys.indexOf(code);\n        if (index > -1) {\n          self.pressedKeys.splice(index, 1);\n        }\n      }\n    };\n    this.table.element.addEventListener(\"keydown\", this.keyupBinding);\n    this.table.element.addEventListener(\"keyup\", this.keydownBinding);\n  }\n  clearBindings() {\n    if (this.keyupBinding) {\n      this.table.element.removeEventListener(\"keydown\", this.keyupBinding);\n    }\n    if (this.keydownBinding) {\n      this.table.element.removeEventListener(\"keyup\", this.keydownBinding);\n    }\n  }\n  checkBinding(e, binding) {\n    var match = true;\n    if (e.ctrlKey == binding.ctrl && e.shiftKey == binding.shift && e.metaKey == binding.meta) {\n      binding.keys.forEach(key => {\n        var index = this.pressedKeys.indexOf(key);\n        if (index == -1) {\n          match = false;\n        }\n      });\n      if (match) {\n        binding.action.call(this, e);\n      }\n      return true;\n    }\n    return false;\n  }\n}\nKeybindings.moduleName = \"keybindings\";\n\n//load defaults\nKeybindings.bindings = defaultBindings;\nKeybindings.actions = defaultActions;\nclass Menu extends Module {\n  constructor(table) {\n    super(table);\n    this.menuElements = [];\n    this.blurEvent = this.hideMenu.bind(this);\n    this.escEvent = this.escMenu.bind(this);\n    this.nestedMenuBlock = false;\n    this.positionReversedX = false;\n    this.registerTableOption(\"rowContextMenu\", false);\n    this.registerTableOption(\"rowClickMenu\", false);\n    this.registerTableOption(\"groupContextMenu\", false);\n    this.registerTableOption(\"groupClickMenu\", false);\n    this.registerColumnOption(\"headerContextMenu\");\n    this.registerColumnOption(\"headerMenu\");\n    this.registerColumnOption(\"contextMenu\");\n    this.registerColumnOption(\"clickMenu\");\n  }\n  initialize() {\n    this.subscribe(\"cell-layout\", this.layoutCell.bind(this));\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    this.subscribe(\"row-init\", this.initializeRow.bind(this));\n  }\n  layoutCell(cell) {\n    if (cell.column.definition.contextMenu || cell.column.definition.clickMenu) {\n      this.initializeCell(cell);\n    }\n  }\n  initializeColumn(column) {\n    var def = column.definition;\n    if (def.headerContextMenu || def.headerClickMenu || def.headerMenu) {\n      this.initializeColumnHeader(column);\n    }\n  }\n  initializeColumnHeader(column) {\n    var headerMenuEl;\n    if (column.definition.headerContextMenu) {\n      column.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, column, column.definition.headerContextMenu));\n      this.tapHold(column, column.definition.headerContextMenu);\n    }\n\n    // if(column.definition.headerClickMenu){\n    // \tcolumn.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, column, column.definition.headerClickMenu));\n    // }\n\n    if (column.definition.headerMenu) {\n      headerMenuEl = document.createElement(\"span\");\n      headerMenuEl.classList.add(\"tabulator-header-menu-button\");\n      headerMenuEl.innerHTML = \"&vellip;\";\n      headerMenuEl.addEventListener(\"click\", e => {\n        e.stopPropagation();\n        e.preventDefault();\n        this.LoadMenuEvent(column, column.definition.headerMenu, e);\n      });\n      column.titleElement.insertBefore(headerMenuEl, column.titleElement.firstChild);\n    }\n  }\n  LoadMenuEvent(component, menu, e) {\n    menu = typeof menu == \"function\" ? menu.call(this.table, component.getComponent(), e) : menu;\n\n    // if(component instanceof Cell){\n    // \te.stopImmediatePropagation();\n    // }\n\n    this.loadMenu(e, component, menu);\n  }\n  tapHold(component, menu) {\n    var element = component.getElement(),\n      tapHold = null,\n      loaded = false;\n    element.addEventListener(\"touchstart\", e => {\n      clearTimeout(tapHold);\n      loaded = false;\n      tapHold = setTimeout(() => {\n        clearTimeout(tapHold);\n        tapHold = null;\n        loaded = true;\n        this.LoadMenuEvent(component, menu, e);\n      }, 1000);\n    }, {\n      passive: true\n    });\n    element.addEventListener(\"touchend\", e => {\n      clearTimeout(tapHold);\n      tapHold = null;\n      if (loaded) {\n        e.preventDefault();\n      }\n    });\n  }\n  initializeCell(cell) {\n    if (cell.column.definition.contextMenu) {\n      cell.getElement(true).addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, cell, cell.column.definition.contextMenu));\n      this.tapHold(cell, cell.column.definition.contextMenu);\n    }\n    if (cell.column.definition.clickMenu) {\n      cell.getElement(true).addEventListener(\"click\", this.LoadMenuEvent.bind(this, cell, cell.column.definition.clickMenu));\n    }\n  }\n  initializeRow(row) {\n    if (this.table.options.rowContextMenu) {\n      row.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, row, this.table.options.rowContextMenu));\n      this.tapHold(row, this.table.options.rowContextMenu);\n    }\n    if (this.table.options.rowClickMenu) {\n      row.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, row, this.table.options.rowClickMenu));\n    }\n  }\n  initializeGroup(group) {\n    if (this.table.options.groupContextMenu) {\n      group.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, group, this.table.options.groupContextMenu));\n      this.tapHold(group, this.table.options.groupContextMenu);\n    }\n    if (this.table.options.groupClickMenu) {\n      group.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, group, this.table.options.groupClickMenu));\n    }\n  }\n  loadMenu(e, component, menu, parentEl) {\n    var touch = !(e instanceof MouseEvent);\n    var menuEl = document.createElement(\"div\");\n    menuEl.classList.add(\"tabulator-menu\");\n    if (!touch) {\n      e.preventDefault();\n    }\n\n    //abort if no menu set\n    if (!menu || !menu.length) {\n      return;\n    }\n    if (!parentEl) {\n      if (this.nestedMenuBlock) {\n        //abort if child menu already open\n        if (this.isOpen()) {\n          return;\n        }\n      } else {\n        this.nestedMenuBlock = setTimeout(() => {\n          this.nestedMenuBlock = false;\n        }, 100);\n      }\n      this.hideMenu();\n      this.menuElements = [];\n    }\n    menu.forEach(item => {\n      var itemEl = document.createElement(\"div\"),\n        label = item.label,\n        disabled = item.disabled;\n      if (item.separator) {\n        itemEl.classList.add(\"tabulator-menu-separator\");\n      } else {\n        itemEl.classList.add(\"tabulator-menu-item\");\n        if (typeof label == \"function\") {\n          label = label.call(this.table, component.getComponent());\n        }\n        if (label instanceof Node) {\n          itemEl.appendChild(label);\n        } else {\n          itemEl.innerHTML = label;\n        }\n        if (typeof disabled == \"function\") {\n          disabled = disabled.call(this.table, component.getComponent());\n        }\n        if (disabled) {\n          itemEl.classList.add(\"tabulator-menu-item-disabled\");\n          itemEl.addEventListener(\"click\", e => {\n            e.stopPropagation();\n          });\n        } else {\n          if (item.menu && item.menu.length) {\n            itemEl.addEventListener(\"click\", e => {\n              e.stopPropagation();\n              this.hideOldSubMenus(menuEl);\n              this.loadMenu(e, component, item.menu, itemEl);\n            });\n          } else {\n            if (item.action) {\n              itemEl.addEventListener(\"click\", e => {\n                item.action(e, component.getComponent());\n              });\n            }\n          }\n        }\n        if (item.menu && item.menu.length) {\n          itemEl.classList.add(\"tabulator-menu-item-submenu\");\n        }\n      }\n      menuEl.appendChild(itemEl);\n    });\n    menuEl.addEventListener(\"click\", e => {\n      this.hideMenu();\n    });\n    this.menuElements.push(menuEl);\n    this.positionMenu(menuEl, parentEl, touch, e);\n  }\n  hideOldSubMenus(menuEl) {\n    var index = this.menuElements.indexOf(menuEl);\n    if (index > -1) {\n      for (let i = this.menuElements.length - 1; i > index; i--) {\n        var el = this.menuElements[i];\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        }\n        this.menuElements.pop();\n      }\n    }\n  }\n  positionMenu(element, parentEl, touch, e) {\n    var docHeight = Math.max(document.body.offsetHeight, window.innerHeight),\n      x,\n      y,\n      parentOffset;\n    if (!parentEl) {\n      x = touch ? e.touches[0].pageX : e.pageX;\n      y = touch ? e.touches[0].pageY : e.pageY;\n      this.positionReversedX = false;\n    } else {\n      parentOffset = Helpers.elOffset(parentEl);\n      x = parentOffset.left + parentEl.offsetWidth;\n      y = parentOffset.top - 1;\n    }\n    element.style.top = y + \"px\";\n    element.style.left = x + \"px\";\n    setTimeout(() => {\n      this.table.rowManager.element.addEventListener(\"scroll\", this.blurEvent);\n      document.body.addEventListener(\"click\", this.blurEvent);\n      document.body.addEventListener(\"contextmenu\", this.blurEvent);\n      window.addEventListener(\"resize\", this.blurEvent);\n      document.body.addEventListener(\"keydown\", this.escEvent);\n    }, 100);\n    document.body.appendChild(element);\n\n    //move menu to start on bottom edge if it is too close to the edge of the screen\n    if (y + element.offsetHeight >= docHeight) {\n      element.style.top = \"\";\n      if (parentEl) {\n        element.style.bottom = docHeight - parentOffset.top - parentEl.offsetHeight - 1 + \"px\";\n      } else {\n        element.style.bottom = docHeight - y + \"px\";\n      }\n    }\n\n    //move menu to start on right edge if it is too close to the edge of the screen\n    if (x + element.offsetWidth >= document.body.offsetWidth || this.positionReversedX) {\n      element.style.left = \"\";\n      if (parentEl) {\n        element.style.right = document.documentElement.offsetWidth - parentOffset.left + \"px\";\n      } else {\n        element.style.right = document.documentElement.offsetWidth - x + \"px\";\n      }\n      this.positionReversedX = true;\n    }\n  }\n  isOpen() {\n    return !!this.menuElements.length;\n  }\n  escMenu(e) {\n    if (e.keyCode == 27) {\n      this.hideMenu();\n    }\n  }\n  hideMenu() {\n    this.menuElements.forEach(menuEl => {\n      if (menuEl.parentNode) {\n        menuEl.parentNode.removeChild(menuEl);\n      }\n    });\n    document.body.removeEventListener(\"keydown\", this.escEvent);\n    document.body.removeEventListener(\"click\", this.blurEvent);\n    document.body.removeEventListener(\"contextmenu\", this.blurEvent);\n    window.removeEventListener(\"resize\", this.blurEvent);\n    this.table.rowManager.element.removeEventListener(\"scroll\", this.blurEvent);\n  }\n}\nMenu.moduleName = \"menu\";\nclass MoveColumns extends Module {\n  constructor(table) {\n    super(table);\n    this.placeholderElement = this.createPlaceholderElement();\n    this.hoverElement = false; //floating column header element\n    this.checkTimeout = false; //click check timeout holder\n    this.checkPeriod = 250; //period to wait on mousedown to consider this a move and not a click\n    this.moving = false; //currently moving column\n    this.toCol = false; //destination column\n    this.toColAfter = false; //position of moving column relative to the desitnation column\n    this.startX = 0; //starting position within header element\n    this.autoScrollMargin = 40; //auto scroll on edge when within margin\n    this.autoScrollStep = 5; //auto scroll distance in pixels\n    this.autoScrollTimeout = false; //auto scroll timeout\n    this.touchMove = false;\n    this.moveHover = this.moveHover.bind(this);\n    this.endMove = this.endMove.bind(this);\n    this.registerTableOption(\"movableColumns\", false); //enable movable columns\n  }\n\n  createPlaceholderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-col\");\n    el.classList.add(\"tabulator-col-placeholder\");\n    return el;\n  }\n  initialize() {\n    if (this.table.options.movableColumns) {\n      this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    }\n  }\n  initializeColumn(column) {\n    var self = this,\n      config = {},\n      colEl;\n    if (!column.modules.frozen) {\n      colEl = column.getElement();\n      config.mousemove = function (e) {\n        if (column.parent === self.moving.parent) {\n          if ((self.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(colEl).left + self.table.columnManager.element.scrollLeft > column.getWidth() / 2) {\n            if (self.toCol !== column || !self.toColAfter) {\n              colEl.parentNode.insertBefore(self.placeholderElement, colEl.nextSibling);\n              self.moveColumn(column, true);\n            }\n          } else {\n            if (self.toCol !== column || self.toColAfter) {\n              colEl.parentNode.insertBefore(self.placeholderElement, colEl);\n              self.moveColumn(column, false);\n            }\n          }\n        }\n      }.bind(self);\n      colEl.addEventListener(\"mousedown\", function (e) {\n        self.touchMove = false;\n        if (e.which === 1) {\n          self.checkTimeout = setTimeout(function () {\n            self.startMove(e, column);\n          }, self.checkPeriod);\n        }\n      });\n      colEl.addEventListener(\"mouseup\", function (e) {\n        if (e.which === 1) {\n          if (self.checkTimeout) {\n            clearTimeout(self.checkTimeout);\n          }\n        }\n      });\n      self.bindTouchEvents(column);\n    }\n    column.modules.moveColumn = config;\n  }\n  bindTouchEvents(column) {\n    var colEl = column.getElement(),\n      startXMove = false,\n      //shifting center position of the cell\n      nextCol,\n      prevCol,\n      nextColWidth,\n      prevColWidth,\n      nextColWidthLast,\n      prevColWidthLast;\n    colEl.addEventListener(\"touchstart\", e => {\n      this.checkTimeout = setTimeout(() => {\n        this.touchMove = true;\n        nextCol = column.nextColumn();\n        nextColWidth = nextCol ? nextCol.getWidth() / 2 : 0;\n        prevCol = column.prevColumn();\n        prevColWidth = prevCol ? prevCol.getWidth() / 2 : 0;\n        nextColWidthLast = 0;\n        prevColWidthLast = 0;\n        startXMove = false;\n        this.startMove(e, column);\n      }, this.checkPeriod);\n    }, {\n      passive: true\n    });\n    colEl.addEventListener(\"touchmove\", e => {\n      var diff, moveToCol;\n      if (this.moving) {\n        this.moveHover(e);\n        if (!startXMove) {\n          startXMove = e.touches[0].pageX;\n        }\n        diff = e.touches[0].pageX - startXMove;\n        if (diff > 0) {\n          if (nextCol && diff - nextColWidthLast > nextColWidth) {\n            moveToCol = nextCol;\n            if (moveToCol !== column) {\n              startXMove = e.touches[0].pageX;\n              moveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement().nextSibling);\n              this.moveColumn(moveToCol, true);\n            }\n          }\n        } else {\n          if (prevCol && -diff - prevColWidthLast > prevColWidth) {\n            moveToCol = prevCol;\n            if (moveToCol !== column) {\n              startXMove = e.touches[0].pageX;\n              moveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement());\n              this.moveColumn(moveToCol, false);\n            }\n          }\n        }\n        if (moveToCol) {\n          nextCol = moveToCol.nextColumn();\n          nextColWidthLast = nextColWidth;\n          nextColWidth = nextCol ? nextCol.getWidth() / 2 : 0;\n          prevCol = moveToCol.prevColumn();\n          prevColWidthLast = prevColWidth;\n          prevColWidth = prevCol ? prevCol.getWidth() / 2 : 0;\n        }\n      }\n    }, {\n      passive: true\n    });\n    colEl.addEventListener(\"touchend\", e => {\n      if (this.checkTimeout) {\n        clearTimeout(this.checkTimeout);\n      }\n      if (this.moving) {\n        this.endMove(e);\n      }\n    });\n  }\n  startMove(e, column) {\n    var element = column.getElement(),\n      headerElement = this.table.columnManager.getElement(),\n      headersElement = this.table.columnManager.getHeadersElement();\n    this.moving = column;\n    this.startX = (this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(element).left;\n    this.table.element.classList.add(\"tabulator-block-select\");\n\n    //create placeholder\n    this.placeholderElement.style.width = column.getWidth() + \"px\";\n    this.placeholderElement.style.height = column.getHeight() + \"px\";\n    element.parentNode.insertBefore(this.placeholderElement, element);\n    element.parentNode.removeChild(element);\n\n    //create hover element\n    this.hoverElement = element.cloneNode(true);\n    this.hoverElement.classList.add(\"tabulator-moving\");\n    this.table.columnManager.getElement().appendChild(this.hoverElement);\n    this.hoverElement.style.left = \"0\";\n    this.hoverElement.style.bottom = headerElement.clientHeight - headersElement.offsetHeight + \"px\";\n    if (!this.touchMove) {\n      this._bindMouseMove();\n      document.body.addEventListener(\"mousemove\", this.moveHover);\n      document.body.addEventListener(\"mouseup\", this.endMove);\n    }\n    this.moveHover(e);\n  }\n  _bindMouseMove() {\n    this.table.columnManager.columnsByIndex.forEach(function (column) {\n      if (column.modules.moveColumn.mousemove) {\n        column.getElement().addEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\n      }\n    });\n  }\n  _unbindMouseMove() {\n    this.table.columnManager.columnsByIndex.forEach(function (column) {\n      if (column.modules.moveColumn.mousemove) {\n        column.getElement().removeEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\n      }\n    });\n  }\n  moveColumn(column, after) {\n    var movingCells = this.moving.getCells();\n    this.toCol = column;\n    this.toColAfter = after;\n    if (after) {\n      column.getCells().forEach(function (cell, i) {\n        var cellEl = cell.getElement(true);\n        if (cellEl.parentNode && movingCells[i]) {\n          cellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl.nextSibling);\n        }\n      });\n    } else {\n      column.getCells().forEach(function (cell, i) {\n        var cellEl = cell.getElement(true);\n        if (cellEl.parentNode && movingCells[i]) {\n          cellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl);\n        }\n      });\n    }\n  }\n  endMove(e) {\n    if (e.which === 1 || this.touchMove) {\n      this._unbindMouseMove();\n      this.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\n      this.placeholderElement.parentNode.removeChild(this.placeholderElement);\n      this.hoverElement.parentNode.removeChild(this.hoverElement);\n      this.table.element.classList.remove(\"tabulator-block-select\");\n      if (this.toCol) {\n        this.table.columnManager.moveColumnActual(this.moving, this.toCol, this.toColAfter);\n      }\n      this.moving = false;\n      this.toCol = false;\n      this.toColAfter = false;\n      if (!this.touchMove) {\n        document.body.removeEventListener(\"mousemove\", this.moveHover);\n        document.body.removeEventListener(\"mouseup\", this.endMove);\n      }\n    }\n  }\n  moveHover(e) {\n    var columnHolder = this.table.columnManager.getElement(),\n      scrollLeft = columnHolder.scrollLeft,\n      xPos = (this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(columnHolder).left + scrollLeft,\n      scrollPos;\n    this.hoverElement.style.left = xPos - this.startX + \"px\";\n    if (xPos - scrollLeft < this.autoScrollMargin) {\n      if (!this.autoScrollTimeout) {\n        this.autoScrollTimeout = setTimeout(() => {\n          scrollPos = Math.max(0, scrollLeft - 5);\n          this.table.rowManager.getElement().scrollLeft = scrollPos;\n          this.autoScrollTimeout = false;\n        }, 1);\n      }\n    }\n    if (scrollLeft + columnHolder.clientWidth - xPos < this.autoScrollMargin) {\n      if (!this.autoScrollTimeout) {\n        this.autoScrollTimeout = setTimeout(() => {\n          scrollPos = Math.min(columnHolder.clientWidth, scrollLeft + 5);\n          this.table.rowManager.getElement().scrollLeft = scrollPos;\n          this.autoScrollTimeout = false;\n        }, 1);\n      }\n    }\n  }\n}\nMoveColumns.moduleName = \"moveColumn\";\nclass MoveRows extends Module {\n  constructor(table) {\n    super(table);\n    this.placeholderElement = this.createPlaceholderElement();\n    this.hoverElement = false; //floating row header element\n    this.checkTimeout = false; //click check timeout holder\n    this.checkPeriod = 150; //period to wait on mousedown to consider this a move and not a click\n    this.moving = false; //currently moving row\n    this.toRow = false; //destination row\n    this.toRowAfter = false; //position of moving row relative to the desitnation row\n    this.hasHandle = false; //row has handle instead of fully movable row\n    this.startY = 0; //starting Y position within header element\n    this.startX = 0; //starting X position within header element\n\n    this.moveHover = this.moveHover.bind(this);\n    this.endMove = this.endMove.bind(this);\n    this.tableRowDropEvent = false;\n    this.touchMove = false;\n    this.connection = false;\n    this.connectionSelectorsTables = false;\n    this.connectionSelectorsElements = false;\n    this.connectionElements = [];\n    this.connections = [];\n    this.connectedTable = false;\n    this.connectedRow = false;\n    this.registerTableOption(\"movableRows\", false); //enable movable rows\n    this.registerTableOption(\"movableRowsConnectedTables\", false); //tables for movable rows to be connected to\n    this.registerTableOption(\"movableRowsConnectedElements\", false); //other elements for movable rows to be connected to\n    this.registerTableOption(\"movableRowsSender\", false);\n    this.registerTableOption(\"movableRowsReceiver\", \"insert\");\n    this.registerColumnOption(\"rowHandle\");\n  }\n  createPlaceholderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-row\");\n    el.classList.add(\"tabulator-row-placeholder\");\n    return el;\n  }\n  initialize() {\n    if (this.table.options.movableRows) {\n      this.connectionSelectorsTables = this.table.options.movableRowsConnectedTables;\n      this.connectionSelectorsElements = this.table.options.movableRowsConnectedElements;\n      this.connection = this.connectionSelectorsTables || this.connectionSelectorsElements;\n      this.subscribe(\"cell-init\", this.initializeCell.bind(this));\n      this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n      this.subscribe(\"row-init\", this.initializeRow.bind(this));\n    }\n  }\n  initializeGroupHeader(group) {\n    var self = this,\n      config = {};\n\n    //inter table drag drop\n    config.mouseup = function (e) {\n      self.tableRowDrop(e, row);\n    }.bind(self);\n\n    //same table drag drop\n    config.mousemove = function (e) {\n      if (e.pageY - Helpers.elOffset(group.element).top + self.table.rowManager.element.scrollTop > group.getHeight() / 2) {\n        if (self.toRow !== group || !self.toRowAfter) {\n          var rowEl = group.getElement();\n          rowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\n          self.moveRow(group, true);\n        }\n      } else {\n        if (self.toRow !== group || self.toRowAfter) {\n          var rowEl = group.getElement();\n          if (rowEl.previousSibling) {\n            rowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\n            self.moveRow(group, false);\n          }\n        }\n      }\n    }.bind(self);\n    group.modules.moveRow = config;\n  }\n  initializeRow(row) {\n    var self = this,\n      config = {},\n      rowEl;\n\n    //inter table drag drop\n    config.mouseup = function (e) {\n      self.tableRowDrop(e, row);\n    }.bind(self);\n\n    //same table drag drop\n    config.mousemove = function (e) {\n      var rowEl = row.getElement();\n      if (e.pageY - Helpers.elOffset(rowEl).top + self.table.rowManager.element.scrollTop > row.getHeight() / 2) {\n        if (self.toRow !== row || !self.toRowAfter) {\n          rowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\n          self.moveRow(row, true);\n        }\n      } else {\n        if (self.toRow !== row || self.toRowAfter) {\n          rowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\n          self.moveRow(row, false);\n        }\n      }\n    }.bind(self);\n    if (!this.hasHandle) {\n      rowEl = row.getElement();\n      rowEl.addEventListener(\"mousedown\", function (e) {\n        if (e.which === 1) {\n          self.checkTimeout = setTimeout(function () {\n            self.startMove(e, row);\n          }, self.checkPeriod);\n        }\n      });\n      rowEl.addEventListener(\"mouseup\", function (e) {\n        if (e.which === 1) {\n          if (self.checkTimeout) {\n            clearTimeout(self.checkTimeout);\n          }\n        }\n      });\n      this.bindTouchEvents(row, row.getElement());\n    }\n    row.modules.moveRow = config;\n  }\n  initializeColumn(column) {\n    if (column.definition.rowHandle && this.table.options.movableRows !== false) {\n      this.hasHandle = true;\n    }\n  }\n  initializeCell(cell) {\n    if (cell.column.definition.rowHandle && this.table.options.movableRows !== false) {\n      var self = this,\n        cellEl = cell.getElement(true);\n      cellEl.addEventListener(\"mousedown\", function (e) {\n        if (e.which === 1) {\n          self.checkTimeout = setTimeout(function () {\n            self.startMove(e, cell.row);\n          }, self.checkPeriod);\n        }\n      });\n      cellEl.addEventListener(\"mouseup\", function (e) {\n        if (e.which === 1) {\n          if (self.checkTimeout) {\n            clearTimeout(self.checkTimeout);\n          }\n        }\n      });\n      this.bindTouchEvents(cell.row, cellEl);\n    }\n  }\n  bindTouchEvents(row, element) {\n    var startYMove = false,\n      //shifting center position of the cell\n      nextRow,\n      prevRow,\n      nextRowHeight,\n      prevRowHeight,\n      nextRowHeightLast,\n      prevRowHeightLast;\n    element.addEventListener(\"touchstart\", e => {\n      this.checkTimeout = setTimeout(() => {\n        this.touchMove = true;\n        nextRow = row.nextRow();\n        nextRowHeight = nextRow ? nextRow.getHeight() / 2 : 0;\n        prevRow = row.prevRow();\n        prevRowHeight = prevRow ? prevRow.getHeight() / 2 : 0;\n        nextRowHeightLast = 0;\n        prevRowHeightLast = 0;\n        startYMove = false;\n        this.startMove(e, row);\n      }, this.checkPeriod);\n    }, {\n      passive: true\n    });\n    this.moving, this.toRow, this.toRowAfter;\n    element.addEventListener(\"touchmove\", e => {\n      var diff, moveToRow;\n      if (this.moving) {\n        e.preventDefault();\n        this.moveHover(e);\n        if (!startYMove) {\n          startYMove = e.touches[0].pageY;\n        }\n        diff = e.touches[0].pageY - startYMove;\n        if (diff > 0) {\n          if (nextRow && diff - nextRowHeightLast > nextRowHeight) {\n            moveToRow = nextRow;\n            if (moveToRow !== row) {\n              startYMove = e.touches[0].pageY;\n              moveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement().nextSibling);\n              this.moveRow(moveToRow, true);\n            }\n          }\n        } else {\n          if (prevRow && -diff - prevRowHeightLast > prevRowHeight) {\n            moveToRow = prevRow;\n            if (moveToRow !== row) {\n              startYMove = e.touches[0].pageY;\n              moveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement());\n              this.moveRow(moveToRow, false);\n            }\n          }\n        }\n        if (moveToRow) {\n          nextRow = moveToRow.nextRow();\n          nextRowHeightLast = nextRowHeight;\n          nextRowHeight = nextRow ? nextRow.getHeight() / 2 : 0;\n          prevRow = moveToRow.prevRow();\n          prevRowHeightLast = prevRowHeight;\n          prevRowHeight = prevRow ? prevRow.getHeight() / 2 : 0;\n        }\n      }\n    });\n    element.addEventListener(\"touchend\", e => {\n      if (this.checkTimeout) {\n        clearTimeout(this.checkTimeout);\n      }\n      if (this.moving) {\n        this.endMove(e);\n        this.touchMove = false;\n      }\n    });\n  }\n  _bindMouseMove() {\n    this.table.rowManager.getDisplayRows().forEach(row => {\n      if ((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove) {\n        row.getElement().addEventListener(\"mousemove\", row.modules.moveRow.mousemove);\n      }\n    });\n  }\n  _unbindMouseMove() {\n    this.table.rowManager.getDisplayRows().forEach(row => {\n      if ((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove) {\n        row.getElement().removeEventListener(\"mousemove\", row.modules.moveRow.mousemove);\n      }\n    });\n  }\n  startMove(e, row) {\n    var element = row.getElement();\n    this.setStartPosition(e, row);\n    this.moving = row;\n    this.table.element.classList.add(\"tabulator-block-select\");\n\n    //create placeholder\n    this.placeholderElement.style.width = row.getWidth() + \"px\";\n    this.placeholderElement.style.height = row.getHeight() + \"px\";\n    if (!this.connection) {\n      element.parentNode.insertBefore(this.placeholderElement, element);\n      element.parentNode.removeChild(element);\n    } else {\n      this.table.element.classList.add(\"tabulator-movingrow-sending\");\n      this.connectToTables(row);\n    }\n\n    //create hover element\n    this.hoverElement = element.cloneNode(true);\n    this.hoverElement.classList.add(\"tabulator-moving\");\n    if (this.connection) {\n      document.body.appendChild(this.hoverElement);\n      this.hoverElement.style.left = \"0\";\n      this.hoverElement.style.top = \"0\";\n      this.hoverElement.style.width = this.table.element.clientWidth + \"px\";\n      this.hoverElement.style.whiteSpace = \"nowrap\";\n      this.hoverElement.style.overflow = \"hidden\";\n      this.hoverElement.style.pointerEvents = \"none\";\n    } else {\n      this.table.rowManager.getTableElement().appendChild(this.hoverElement);\n      this.hoverElement.style.left = \"0\";\n      this.hoverElement.style.top = \"0\";\n      this._bindMouseMove();\n    }\n    document.body.addEventListener(\"mousemove\", this.moveHover);\n    document.body.addEventListener(\"mouseup\", this.endMove);\n    this.moveHover(e);\n  }\n  setStartPosition(e, row) {\n    var pageX = this.touchMove ? e.touches[0].pageX : e.pageX,\n      pageY = this.touchMove ? e.touches[0].pageY : e.pageY,\n      element,\n      position;\n    element = row.getElement();\n    if (this.connection) {\n      position = element.getBoundingClientRect();\n      this.startX = position.left - pageX + window.pageXOffset;\n      this.startY = position.top - pageY + window.pageYOffset;\n    } else {\n      this.startY = pageY - element.getBoundingClientRect().top;\n    }\n  }\n  endMove(e) {\n    if (!e || e.which === 1 || this.touchMove) {\n      this._unbindMouseMove();\n      if (!this.connection) {\n        this.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\n        this.placeholderElement.parentNode.removeChild(this.placeholderElement);\n      }\n      this.hoverElement.parentNode.removeChild(this.hoverElement);\n      this.table.element.classList.remove(\"tabulator-block-select\");\n      if (this.toRow) {\n        this.table.rowManager.moveRow(this.moving, this.toRow, this.toRowAfter);\n      }\n      this.moving = false;\n      this.toRow = false;\n      this.toRowAfter = false;\n      document.body.removeEventListener(\"mousemove\", this.moveHover);\n      document.body.removeEventListener(\"mouseup\", this.endMove);\n      if (this.connection) {\n        this.table.element.classList.remove(\"tabulator-movingrow-sending\");\n        this.disconnectFromTables();\n      }\n    }\n  }\n  moveRow(row, after) {\n    this.toRow = row;\n    this.toRowAfter = after;\n  }\n  moveHover(e) {\n    if (this.connection) {\n      this.moveHoverConnections.call(this, e);\n    } else {\n      this.moveHoverTable.call(this, e);\n    }\n  }\n  moveHoverTable(e) {\n    var rowHolder = this.table.rowManager.getElement(),\n      scrollTop = rowHolder.scrollTop,\n      yPos = (this.touchMove ? e.touches[0].pageY : e.pageY) - rowHolder.getBoundingClientRect().top + scrollTop;\n    this.hoverElement.style.top = yPos - this.startY + \"px\";\n  }\n  moveHoverConnections(e) {\n    this.hoverElement.style.left = this.startX + (this.touchMove ? e.touches[0].pageX : e.pageX) + \"px\";\n    this.hoverElement.style.top = this.startY + (this.touchMove ? e.touches[0].pageY : e.pageY) + \"px\";\n  }\n  elementRowDrop(e, element, row) {\n    this.dispatchExternal(\"movableRowsElementDrop\", e, element, row ? row.getComponent() : false);\n  }\n\n  //establish connection with other tables\n  connectToTables(row) {\n    var connectionTables;\n    if (this.connectionSelectorsTables) {\n      connectionTables = this.commsConnections(this.connectionSelectorsTables);\n      this.dispatchExternal(\"movableRowsSendingStart\", connectionTables);\n      this.commsSend(this.connectionSelectorsTables, \"moveRow\", \"connect\", {\n        row: row\n      });\n    }\n    if (this.connectionSelectorsElements) {\n      this.connectionElements = [];\n      if (!Array.isArray(this.connectionSelectorsElements)) {\n        this.connectionSelectorsElements = [this.connectionSelectorsElements];\n      }\n      this.connectionSelectorsElements.forEach(query => {\n        if (typeof query === \"string\") {\n          this.connectionElements = this.connectionElements.concat(Array.prototype.slice.call(document.querySelectorAll(query)));\n        } else {\n          this.connectionElements.push(query);\n        }\n      });\n      this.connectionElements.forEach(element => {\n        var dropEvent = e => {\n          this.elementRowDrop(e, element, this.moving);\n        };\n        element.addEventListener(\"mouseup\", dropEvent);\n        element.tabulatorElementDropEvent = dropEvent;\n        element.classList.add(\"tabulator-movingrow-receiving\");\n      });\n    }\n  }\n\n  //disconnect from other tables\n  disconnectFromTables() {\n    var connectionTables;\n    if (this.connectionSelectorsTables) {\n      connectionTables = this.commsConnections(this.connectionSelectorsTables);\n      this.dispatchExternal(\"movableRowsSendingStop\", connectionTables);\n      this.commsSend(this.connectionSelectorsTables, \"moveRow\", \"disconnect\");\n    }\n    this.connectionElements.forEach(element => {\n      element.classList.remove(\"tabulator-movingrow-receiving\");\n      element.removeEventListener(\"mouseup\", element.tabulatorElementDropEvent);\n      delete element.tabulatorElementDropEvent;\n    });\n  }\n\n  //accept incomming connection\n  connect(table, row) {\n    if (!this.connectedTable) {\n      this.connectedTable = table;\n      this.connectedRow = row;\n      this.table.element.classList.add(\"tabulator-movingrow-receiving\");\n      this.table.rowManager.getDisplayRows().forEach(row => {\n        if (row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup) {\n          row.getElement().addEventListener(\"mouseup\", row.modules.moveRow.mouseup);\n        }\n      });\n      this.tableRowDropEvent = this.tableRowDrop.bind(this);\n      this.table.element.addEventListener(\"mouseup\", this.tableRowDropEvent);\n      this.dispatchExternal(\"movableRowsReceivingStart\", row, table);\n      return true;\n    } else {\n      console.warn(\"Move Row Error - Table cannot accept connection, already connected to table:\", this.connectedTable);\n      return false;\n    }\n  }\n\n  //close incomming connection\n  disconnect(table) {\n    if (table === this.connectedTable) {\n      this.connectedTable = false;\n      this.connectedRow = false;\n      this.table.element.classList.remove(\"tabulator-movingrow-receiving\");\n      this.table.rowManager.getDisplayRows().forEach(row => {\n        if (row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup) {\n          row.getElement().removeEventListener(\"mouseup\", row.modules.moveRow.mouseup);\n        }\n      });\n      this.table.element.removeEventListener(\"mouseup\", this.tableRowDropEvent);\n      this.dispatchExternal(\"movableRowsReceivingStop\", table);\n    } else {\n      console.warn(\"Move Row Error - trying to disconnect from non connected table\");\n    }\n  }\n  dropComplete(table, row, success) {\n    var sender = false;\n    if (success) {\n      switch (typeof this.table.options.movableRowsSender) {\n        case \"string\":\n          sender = this.senders[this.table.options.movableRowsSender];\n          break;\n        case \"function\":\n          sender = this.table.options.movableRowsSender;\n          break;\n      }\n      if (sender) {\n        sender.call(this, this.moving.getComponent(), row ? row.getComponent() : undefined, table);\n      } else {\n        if (this.table.options.movableRowsSender) {\n          console.warn(\"Mover Row Error - no matching sender found:\", this.table.options.movableRowsSender);\n        }\n      }\n      this.dispatchExternal(\"movableRowsSent\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\n    } else {\n      this.dispatchExternal(\"movableRowsSentFailed\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\n    }\n    this.endMove();\n  }\n  tableRowDrop(e, row) {\n    var receiver = false,\n      success = false;\n    e.stopImmediatePropagation();\n    switch (typeof this.table.options.movableRowsReceiver) {\n      case \"string\":\n        receiver = this.receivers[this.table.options.movableRowsReceiver];\n        break;\n      case \"function\":\n        receiver = this.table.options.movableRowsReceiver;\n        break;\n    }\n    if (receiver) {\n      success = receiver.call(this, this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\n    } else {\n      console.warn(\"Mover Row Error - no matching receiver found:\", this.table.options.movableRowsReceiver);\n    }\n    if (success) {\n      this.dispatchExternal(\"movableRowsReceived\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\n    } else {\n      this.dispatchExternal(\"movableRowsReceivedFailed\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\n    }\n    this.commsSend(this.connectedTable, \"moveRow\", \"dropcomplete\", {\n      row: row,\n      success: success\n    });\n  }\n  commsReceived(table, action, data) {\n    switch (action) {\n      case \"connect\":\n        return this.connect(table, data.row);\n      case \"disconnect\":\n        return this.disconnect(table);\n      case \"dropcomplete\":\n        return this.dropComplete(table, data.row, data.success);\n    }\n  }\n}\nMoveRows.prototype.receivers = {\n  insert: function (fromRow, toRow, fromTable) {\n    this.table.addRow(fromRow.getData(), undefined, toRow);\n    return true;\n  },\n  add: function (fromRow, toRow, fromTable) {\n    this.table.addRow(fromRow.getData());\n    return true;\n  },\n  update: function (fromRow, toRow, fromTable) {\n    if (toRow) {\n      toRow.update(fromRow.getData());\n      return true;\n    }\n    return false;\n  },\n  replace: function (fromRow, toRow, fromTable) {\n    if (toRow) {\n      this.table.addRow(fromRow.getData(), undefined, toRow);\n      toRow.delete();\n      return true;\n    }\n    return false;\n  }\n};\nMoveRows.prototype.senders = {\n  delete: function (fromRow, toRow, toTable) {\n    fromRow.delete();\n  }\n};\nMoveRows.moduleName = \"moveRow\";\nvar defaultMutators = {};\nclass Mutator extends Module {\n  constructor(table) {\n    super(table);\n    this.allowedTypes = [\"\", \"data\", \"edit\", \"clipboard\"]; //list of muatation types\n    this.enabled = true;\n    this.registerColumnOption(\"mutator\");\n    this.registerColumnOption(\"mutatorParams\");\n    this.registerColumnOption(\"mutatorData\");\n    this.registerColumnOption(\"mutatorDataParams\");\n    this.registerColumnOption(\"mutatorEdit\");\n    this.registerColumnOption(\"mutatorEditParams\");\n    this.registerColumnOption(\"mutatorClipboard\");\n    this.registerColumnOption(\"mutatorClipboardParams\");\n  }\n  initialize() {\n    this.subscribe(\"cell-value-changing\", this.transformCell.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"row-data-init-before\", this.rowDataChanged.bind(this));\n    this.subscribe(\"row-data-changing\", this.rowDataChanged.bind(this));\n  }\n  rowDataChanged(row, tempData, updatedData) {\n    return this.transformRow(tempData, \"data\", updatedData);\n  }\n\n  //initialize column mutator\n  initializeColumn(column) {\n    var match = false,\n      config = {};\n    this.allowedTypes.forEach(type => {\n      var key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n        mutator;\n      if (column.definition[key]) {\n        mutator = this.lookupMutator(column.definition[key]);\n        if (mutator) {\n          match = true;\n          config[key] = {\n            mutator: mutator,\n            params: column.definition[key + \"Params\"] || {}\n          };\n        }\n      }\n    });\n    if (match) {\n      column.modules.mutate = config;\n    }\n  }\n  lookupMutator(value) {\n    var mutator = false;\n\n    //set column mutator\n    switch (typeof value) {\n      case \"string\":\n        if (Mutator.mutators[value]) {\n          mutator = Mutator.mutators[value];\n        } else {\n          console.warn(\"Mutator Error - No such mutator found, ignoring: \", value);\n        }\n        break;\n      case \"function\":\n        mutator = value;\n        break;\n    }\n    return mutator;\n  }\n\n  //apply mutator to row\n  transformRow(data, type, updatedData) {\n    var key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n      value;\n    if (this.enabled) {\n      this.table.columnManager.traverse(column => {\n        var mutator, params, component;\n        if (column.modules.mutate) {\n          mutator = column.modules.mutate[key] || column.modules.mutate.mutator || false;\n          if (mutator) {\n            value = column.getFieldValue(typeof updatedData !== \"undefined\" ? updatedData : data);\n            if (type == \"data\" || typeof value !== \"undefined\") {\n              component = column.getComponent();\n              params = typeof mutator.params === \"function\" ? mutator.params(value, data, type, component) : mutator.params;\n              column.setFieldValue(data, mutator.mutator(value, data, type, params, component));\n            }\n          }\n        }\n      });\n    }\n    return data;\n  }\n\n  //apply mutator to new cell value\n  transformCell(cell, value) {\n    if (cell.column.modules.mutate) {\n      var mutator = cell.column.modules.mutate.mutatorEdit || cell.column.modules.mutate.mutator || false,\n        tempData = {};\n      if (mutator) {\n        tempData = Object.assign(tempData, cell.row.getData());\n        cell.column.setFieldValue(tempData, value);\n        return mutator.mutator(value, tempData, \"edit\", mutator.params, cell.getComponent());\n      }\n    }\n    return value;\n  }\n  enable() {\n    this.enabled = true;\n  }\n  disable() {\n    this.enabled = false;\n  }\n}\nMutator.moduleName = \"mutator\";\n\n//load defaults\nMutator.mutators = defaultMutators;\nclass Page extends Module {\n  constructor(table) {\n    super(table);\n    this.mode = \"local\";\n    this.progressiveLoad = false;\n    this.size = 0;\n    this.page = 1;\n    this.count = 5;\n    this.max = 1;\n    this.displayIndex = 0; //index in display pipeline\n\n    this.initialLoad = true;\n    this.dataChanging = false; //flag to check if data is being changed by this module\n\n    this.pageSizes = [];\n    this.registerTableOption(\"pagination\", false); //set pagination type\n    this.registerTableOption(\"paginationMode\", \"local\"); //local or remote pagination\n    this.registerTableOption(\"paginationSize\", false); //set number of rows to a page\n    this.registerTableOption(\"paginationInitialPage\", 1); //initial page to show on load\n    this.registerTableOption(\"paginationButtonCount\", 5); // set count of page button\n    this.registerTableOption(\"paginationSizeSelector\", false); //add pagination size selector element\n    this.registerTableOption(\"paginationElement\", false); //element to hold pagination numbers\n    // this.registerTableOption(\"paginationDataSent\", {}); //pagination data sent to the server\n    // this.registerTableOption(\"paginationDataReceived\", {}); //pagination data received from the server\n    this.registerTableOption(\"paginationAddRow\", \"page\"); //add rows on table or page\n\n    this.registerTableOption(\"progressiveLoad\", false); //progressive loading\n    this.registerTableOption(\"progressiveLoadDelay\", 0); //delay between requests\n    this.registerTableOption(\"progressiveLoadScrollMargin\", 0); //margin before scroll begins\n\n    this.registerTableFunction(\"setMaxPage\", this.setMaxPage.bind(this));\n    this.registerTableFunction(\"setPage\", this.setPage.bind(this));\n    this.registerTableFunction(\"setPageToRow\", this.userSetPageToRow.bind(this));\n    this.registerTableFunction(\"setPageSize\", this.userSetPageSize.bind(this));\n    this.registerTableFunction(\"getPageSize\", this.getPageSize.bind(this));\n    this.registerTableFunction(\"previousPage\", this.previousPage.bind(this));\n    this.registerTableFunction(\"nextPage\", this.nextPage.bind(this));\n    this.registerTableFunction(\"getPage\", this.getPage.bind(this));\n    this.registerTableFunction(\"getPageMax\", this.getPageMax.bind(this));\n\n    //register component functions\n    this.registerComponentFunction(\"row\", \"pageTo\", this.setPageToRow.bind(this));\n  }\n  initialize() {\n    if (this.table.options.pagination) {\n      this.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\n      this.subscribe(\"row-adding-position\", this.rowAddingPosition.bind(this));\n      this.subscribe(\"row-added\", this.rowsUpdated.bind(this));\n      this.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\n      this.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\n      if (this.table.options.paginationMode === \"remote\") {\n        this.subscribe(\"data-params\", this.remotePageParams.bind(this));\n        this.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\n      }\n      if (this.table.options.progressiveLoad) {\n        console.error(\"Progressive Load Error - Pagination and progressive load cannot be used at the same time\");\n      }\n      this.registerDisplayHandler(this.restOnRenderBefore.bind(this), 40);\n      this.registerDisplayHandler(this.getRows.bind(this), 50);\n      this.createElements();\n      this.initializePaginator();\n    } else if (this.table.options.progressiveLoad) {\n      this.subscribe(\"data-params\", this.remotePageParams.bind(this));\n      this.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\n      this.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\n      this.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\n      this.initializeProgressive(this.table.options.progressiveLoad);\n      if (this.table.options.progressiveLoad === \"scroll\") {\n        this.subscribe(\"scroll-vertical\", this.scrollVertical.bind(this));\n      }\n    }\n  }\n  rowAddingPosition(row, top) {\n    var rowManager = this.table.rowManager,\n      dispRows = rowManager.getDisplayRows(),\n      index;\n    if (top) {\n      if (dispRows.length) {\n        index = dispRows[0];\n      } else {\n        if (rowManager.activeRows.length) {\n          index = rowManager.activeRows[rowManager.activeRows.length - 1];\n          top = false;\n        }\n      }\n    } else {\n      if (dispRows.length) {\n        index = dispRows[dispRows.length - 1];\n        top = dispRows.length < this.size ? false : true;\n      }\n    }\n    return {\n      index,\n      top\n    };\n  }\n  calculatePageSizes() {\n    var testElRow, testElCell;\n    if (this.table.options.paginationSize) {\n      this.size = this.table.options.paginationSize;\n    } else {\n      testElRow = document.createElement(\"div\");\n      testElRow.classList.add(\"tabulator-row\");\n      testElRow.style.visibility = \"hidden\";\n      testElCell = document.createElement(\"div\");\n      testElCell.classList.add(\"tabulator-cell\");\n      testElCell.innerHTML = \"Page Row Test\";\n      testElRow.appendChild(testElCell);\n      this.table.rowManager.getTableElement().appendChild(testElRow);\n      this.size = Math.floor(this.table.rowManager.getElement().clientHeight / testElRow.offsetHeight);\n      this.table.rowManager.getTableElement().removeChild(testElRow);\n    }\n    this.generatePageSizeSelectList();\n  }\n  initialLoadComplete() {\n    this.initialLoad = false;\n  }\n  remotePageParams(data, config, silent, params) {\n    if (!this.initialLoad) {\n      if (this.progressiveLoad && !silent || !this.progressiveLoad && !this.dataChanging) {\n        this.reset(true);\n      }\n    }\n\n    //configure request params\n    params.page = this.page;\n\n    //set page size if defined\n    if (this.size) {\n      params.size = this.size;\n    }\n    return params;\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  userSetPageToRow(row) {\n    if (this.table.options.pagination) {\n      row = this.rowManager.findRow(row);\n      if (row) {\n        return this.setPageToRow(row);\n      }\n    }\n    return Promise.reject();\n  }\n  userSetPageSize(size) {\n    if (this.table.options.pagination) {\n      this.setPageSize(size);\n      return this.setPage(1);\n    } else {\n      return false;\n    }\n  }\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  scrollVertical(top, dir) {\n    var element, diff, margin;\n    if (!dir && !this.table.dataLoader.loading) {\n      element = this.table.rowManager.getElement();\n      diff = element.scrollHeight - element.clientHeight - top;\n      margin = this.table.options.progressiveLoadScrollMargin || element.clientHeight * 2;\n      if (diff < margin) {\n        this.nextPage().catch(() => {}); //consume the exception thrown when on the last page\n      }\n    }\n  }\n\n  restOnRenderBefore(rows, renderInPosition) {\n    if (!renderInPosition) {\n      if (this.mode === \"local\") {\n        this.reset();\n      }\n    }\n    return rows;\n  }\n  rowsUpdated() {\n    this.refreshData(true, \"all\");\n  }\n  createElements() {\n    var button;\n    this.element = document.createElement(\"span\");\n    this.element.classList.add(\"tabulator-paginator\");\n    this.pagesElement = document.createElement(\"span\");\n    this.pagesElement.classList.add(\"tabulator-pages\");\n    button = document.createElement(\"button\");\n    button.classList.add(\"tabulator-page\");\n    button.setAttribute(\"type\", \"button\");\n    button.setAttribute(\"role\", \"button\");\n    button.setAttribute(\"aria-label\", \"\");\n    button.setAttribute(\"title\", \"\");\n    this.firstBut = button.cloneNode(true);\n    this.firstBut.setAttribute(\"data-page\", \"first\");\n    this.prevBut = button.cloneNode(true);\n    this.prevBut.setAttribute(\"data-page\", \"prev\");\n    this.nextBut = button.cloneNode(true);\n    this.nextBut.setAttribute(\"data-page\", \"next\");\n    this.lastBut = button.cloneNode(true);\n    this.lastBut.setAttribute(\"data-page\", \"last\");\n    if (this.table.options.paginationSizeSelector) {\n      this.pageSizeSelect = document.createElement(\"select\");\n      this.pageSizeSelect.classList.add(\"tabulator-page-size\");\n    }\n  }\n  generatePageSizeSelectList() {\n    var pageSizes = [];\n    if (this.pageSizeSelect) {\n      if (Array.isArray(this.table.options.paginationSizeSelector)) {\n        pageSizes = this.table.options.paginationSizeSelector;\n        this.pageSizes = pageSizes;\n        if (this.pageSizes.indexOf(this.size) == -1) {\n          pageSizes.unshift(this.size);\n        }\n      } else {\n        if (this.pageSizes.indexOf(this.size) == -1) {\n          pageSizes = [];\n          for (let i = 1; i < 5; i++) {\n            pageSizes.push(this.size * i);\n          }\n          this.pageSizes = pageSizes;\n        } else {\n          pageSizes = this.pageSizes;\n        }\n      }\n      while (this.pageSizeSelect.firstChild) this.pageSizeSelect.removeChild(this.pageSizeSelect.firstChild);\n      pageSizes.forEach(item => {\n        var itemEl = document.createElement(\"option\");\n        itemEl.value = item;\n        if (item === true) {\n          this.langBind(\"pagination|all\", function (value) {\n            itemEl.innerHTML = value;\n          });\n        } else {\n          itemEl.innerHTML = item;\n        }\n        this.pageSizeSelect.appendChild(itemEl);\n      });\n      this.pageSizeSelect.value = this.size;\n    }\n  }\n\n  //setup pageination\n  initializePaginator(hidden) {\n    var pageSelectLabel;\n    if (!hidden) {\n      //build pagination element\n\n      //bind localizations\n      this.langBind(\"pagination|first\", value => {\n        this.firstBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|first_title\", value => {\n        this.firstBut.setAttribute(\"aria-label\", value);\n        this.firstBut.setAttribute(\"title\", value);\n      });\n      this.langBind(\"pagination|prev\", value => {\n        this.prevBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|prev_title\", value => {\n        this.prevBut.setAttribute(\"aria-label\", value);\n        this.prevBut.setAttribute(\"title\", value);\n      });\n      this.langBind(\"pagination|next\", value => {\n        this.nextBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|next_title\", value => {\n        this.nextBut.setAttribute(\"aria-label\", value);\n        this.nextBut.setAttribute(\"title\", value);\n      });\n      this.langBind(\"pagination|last\", value => {\n        this.lastBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|last_title\", value => {\n        this.lastBut.setAttribute(\"aria-label\", value);\n        this.lastBut.setAttribute(\"title\", value);\n      });\n\n      //click bindings\n      this.firstBut.addEventListener(\"click\", () => {\n        this.setPage(1);\n      });\n      this.prevBut.addEventListener(\"click\", () => {\n        this.previousPage();\n      });\n      this.nextBut.addEventListener(\"click\", () => {\n        this.nextPage();\n      });\n      this.lastBut.addEventListener(\"click\", () => {\n        this.setPage(this.max);\n      });\n      if (this.table.options.paginationElement) {\n        this.element = this.table.options.paginationElement;\n      }\n      if (this.pageSizeSelect) {\n        pageSelectLabel = document.createElement(\"label\");\n        this.langBind(\"pagination|page_size\", value => {\n          this.pageSizeSelect.setAttribute(\"aria-label\", value);\n          this.pageSizeSelect.setAttribute(\"title\", value);\n          pageSelectLabel.innerHTML = value;\n        });\n        this.element.appendChild(pageSelectLabel);\n        this.element.appendChild(this.pageSizeSelect);\n        this.pageSizeSelect.addEventListener(\"change\", e => {\n          this.setPageSize(this.pageSizeSelect.value == \"true\" ? true : this.pageSizeSelect.value);\n          this.setPage(1);\n        });\n      }\n\n      //append to DOM\n      this.element.appendChild(this.firstBut);\n      this.element.appendChild(this.prevBut);\n      this.element.appendChild(this.pagesElement);\n      this.element.appendChild(this.nextBut);\n      this.element.appendChild(this.lastBut);\n      if (!this.table.options.paginationElement && !hidden) {\n        this.table.footerManager.append(this.element, this);\n      }\n      this.page = this.table.options.paginationInitialPage;\n      this.count = this.table.options.paginationButtonCount;\n    }\n\n    //set default values\n    this.mode = this.table.options.paginationMode;\n  }\n  initializeProgressive(mode) {\n    this.initializePaginator(true);\n    this.mode = \"progressive_\" + mode;\n    this.progressiveLoad = true;\n  }\n  trackChanges() {\n    this.dispatch(\"page-changed\");\n  }\n  setDisplayIndex(index) {\n    this.displayIndex = index;\n  }\n  getDisplayIndex() {\n    return this.displayIndex;\n  }\n\n  //calculate maximum page from number of rows\n  setMaxRows(rowCount) {\n    if (!rowCount) {\n      this.max = 1;\n    } else {\n      this.max = this.size === true ? 1 : Math.ceil(rowCount / this.size);\n    }\n    if (this.page > this.max) {\n      this.page = this.max;\n    }\n  }\n\n  //reset to first page without triggering action\n  reset(force) {\n    if (!this.initialLoad) {\n      if (this.mode == \"local\" || force) {\n        this.page = 1;\n      }\n    }\n  }\n\n  //set the maximum page\n  setMaxPage(max) {\n    max = parseInt(max);\n    this.max = max || 1;\n    if (this.page > this.max) {\n      this.page = this.max;\n      this.trigger();\n    }\n  }\n\n  //set current page number\n  setPage(page) {\n    switch (page) {\n      case \"first\":\n        return this.setPage(1);\n      case \"prev\":\n        return this.previousPage();\n      case \"next\":\n        return this.nextPage();\n      case \"last\":\n        return this.setPage(this.max);\n    }\n    page = parseInt(page);\n    if (page > 0 && page <= this.max || this.mode !== \"local\") {\n      this.page = page;\n      this.trackChanges();\n      return this.trigger();\n    } else {\n      console.warn(\"Pagination Error - Requested page is out of range of 1 - \" + this.max + \":\", page);\n      return Promise.reject();\n    }\n  }\n  setPageToRow(row) {\n    var rows = this.table.rowManager.getDisplayRows(this.displayIndex - 1);\n    var index = rows.indexOf(row);\n    if (index > -1) {\n      var page = this.size === true ? 1 : Math.ceil((index + 1) / this.size);\n      return this.setPage(page);\n    } else {\n      console.warn(\"Pagination Error - Requested row is not visible\");\n      return Promise.reject();\n    }\n  }\n  setPageSize(size) {\n    if (size !== true) {\n      size = parseInt(size);\n    }\n    if (size > 0) {\n      this.size = size;\n    }\n    if (this.pageSizeSelect) {\n      // this.pageSizeSelect.value = size;\n      this.generatePageSizeSelectList();\n    }\n    this.trackChanges();\n  }\n\n  //setup the pagination buttons\n  _setPageButtons() {\n    let leftSize = Math.floor((this.count - 1) / 2);\n    let rightSize = Math.ceil((this.count - 1) / 2);\n    let min = this.max - this.page + leftSize + 1 < this.count ? this.max - this.count + 1 : Math.max(this.page - leftSize, 1);\n    let max = this.page <= rightSize ? Math.min(this.count, this.max) : Math.min(this.page + rightSize, this.max);\n    while (this.pagesElement.firstChild) this.pagesElement.removeChild(this.pagesElement.firstChild);\n    if (this.page == 1) {\n      this.firstBut.disabled = true;\n      this.prevBut.disabled = true;\n    } else {\n      this.firstBut.disabled = false;\n      this.prevBut.disabled = false;\n    }\n    if (this.page == this.max) {\n      this.lastBut.disabled = true;\n      this.nextBut.disabled = true;\n    } else {\n      this.lastBut.disabled = false;\n      this.nextBut.disabled = false;\n    }\n    for (let i = min; i <= max; i++) {\n      if (i > 0 && i <= this.max) {\n        this.pagesElement.appendChild(this._generatePageButton(i));\n      }\n    }\n    this.footerRedraw();\n  }\n  _generatePageButton(page) {\n    var button = document.createElement(\"button\");\n    button.classList.add(\"tabulator-page\");\n    if (page == this.page) {\n      button.classList.add(\"active\");\n    }\n    button.setAttribute(\"type\", \"button\");\n    button.setAttribute(\"role\", \"button\");\n    this.langBind(\"pagination|page_title\", value => {\n      button.setAttribute(\"aria-label\", value + \" \" + page);\n      button.setAttribute(\"title\", value + \" \" + page);\n    });\n    button.setAttribute(\"data-page\", page);\n    button.textContent = page;\n    button.addEventListener(\"click\", e => {\n      this.setPage(page);\n    });\n    return button;\n  }\n\n  //previous page\n  previousPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.trackChanges();\n      return this.trigger();\n    } else {\n      console.warn(\"Pagination Error - Previous page would be less than page 1:\", 0);\n      return Promise.reject();\n    }\n  }\n\n  //next page\n  nextPage() {\n    if (this.page < this.max) {\n      this.page++;\n      this.trackChanges();\n      return this.trigger();\n    } else {\n      if (!this.progressiveLoad) {\n        console.warn(\"Pagination Error - Next page would be greater than maximum page of \" + this.max + \":\", this.max + 1);\n      }\n      return Promise.reject();\n    }\n  }\n\n  //return current page number\n  getPage() {\n    return this.page;\n  }\n\n  //return max page number\n  getPageMax() {\n    return this.max;\n  }\n  getPageSize(size) {\n    return this.size;\n  }\n  getMode() {\n    return this.mode;\n  }\n\n  //return appropriate rows for current page\n  getRows(data) {\n    var output, start, end;\n    if (this.mode == \"local\") {\n      output = [];\n      this.setMaxRows(data.length);\n      if (this.size === true) {\n        start = 0;\n        end = data.length;\n      } else {\n        start = this.size * (this.page - 1);\n        end = start + parseInt(this.size);\n      }\n      this._setPageButtons();\n      for (let i = start; i < end; i++) {\n        if (data[i]) {\n          output.push(data[i]);\n        }\n      }\n      return output;\n    } else {\n      this._setPageButtons();\n      return data.slice(0);\n    }\n  }\n  trigger() {\n    var left;\n    switch (this.mode) {\n      case \"local\":\n        left = this.table.rowManager.scrollLeft;\n        this.refreshData();\n        this.table.rowManager.scrollHorizontal(left);\n        this.dispatchExternal(\"pageLoaded\", this.getPage());\n        return Promise.resolve();\n      case \"remote\":\n        this.dataChanging = true;\n        return this.reloadData(null).finally(() => {\n          this.dataChanging = false;\n        });\n      case \"progressive_load\":\n      case \"progressive_scroll\":\n        return this.reloadData(null, true);\n      default:\n        console.warn(\"Pagination Error - no such pagination mode:\", this.mode);\n        return Promise.reject();\n    }\n  }\n  _parseRemoteData(data) {\n    var data, margin;\n    if (typeof data.last_page === \"undefined\") {\n      console.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").last_page || \"last_page\") + \"' property\");\n    }\n    if (data.data) {\n      this.max = parseInt(data.last_page) || 1;\n      if (this.progressiveLoad) {\n        switch (this.mode) {\n          case \"progressive_load\":\n            if (this.page == 1) {\n              this.table.rowManager.setData(data.data, false, this.page == 1);\n            } else {\n              this.table.rowManager.addRows(data.data);\n            }\n            if (this.page < this.max) {\n              setTimeout(() => {\n                this.nextPage();\n              }, this.table.options.progressiveLoadDelay);\n            }\n            break;\n          case \"progressive_scroll\":\n            data = this.page === 1 ? data.data : this.table.rowManager.getData().concat(data.data);\n            this.table.rowManager.setData(data, this.page !== 1, this.page == 1);\n            margin = this.table.options.progressiveLoadScrollMargin || this.table.rowManager.element.clientHeight * 2;\n            if (this.table.rowManager.element.scrollHeight <= this.table.rowManager.element.clientHeight + margin) {\n              setTimeout(() => {\n                this.nextPage();\n              });\n            }\n            break;\n        }\n        return false;\n      } else {\n        // left = this.table.rowManager.scrollLeft;\n        this.dispatchExternal(\"pageLoaded\", this.getPage());\n        // this.table.rowManager.scrollHorizontal(left);\n        // this.table.columnManager.scrollHorizontal(left);\n      }\n    } else {\n      console.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").data || \"data\") + \"' property\");\n    }\n    return data.data;\n  }\n\n  //handle the footer element being redrawn\n  footerRedraw() {\n    var footer = this.table.footerManager.element;\n    if (Math.ceil(footer.clientWidth) - footer.scrollWidth < 0) {\n      this.pagesElement.style.display = 'none';\n    } else {\n      this.pagesElement.style.display = '';\n      if (Math.ceil(footer.clientWidth) - footer.scrollWidth < 0) {\n        this.pagesElement.style.display = 'none';\n      }\n    }\n  }\n}\nPage.moduleName = \"page\";\n\n// read peristence information from storage\nvar defaultReaders = {\n  local: function (id, type) {\n    var data = localStorage.getItem(id + \"-\" + type);\n    return data ? JSON.parse(data) : false;\n  },\n  cookie: function (id, type) {\n    var cookie = document.cookie,\n      key = id + \"-\" + type,\n      cookiePos = cookie.indexOf(key + \"=\"),\n      end,\n      data;\n\n    //if cookie exists, decode and load column data into tabulator\n    if (cookiePos > -1) {\n      cookie = cookie.substr(cookiePos);\n      end = cookie.indexOf(\";\");\n      if (end > -1) {\n        cookie = cookie.substr(0, end);\n      }\n      data = cookie.replace(key + \"=\", \"\");\n    }\n    return data ? JSON.parse(data) : false;\n  }\n};\n\n//write persistence information to storage\nvar defaultWriters = {\n  local: function (id, type, data) {\n    localStorage.setItem(id + \"-\" + type, JSON.stringify(data));\n  },\n  cookie: function (id, type, data) {\n    var expireDate = new Date();\n    expireDate.setDate(expireDate.getDate() + 10000);\n    document.cookie = id + \"-\" + type + \"=\" + JSON.stringify(data) + \"; expires=\" + expireDate.toUTCString();\n  }\n};\nclass Persistence extends Module {\n  constructor(table) {\n    super(table);\n    this.mode = \"\";\n    this.id = \"\";\n    // this.persistProps = [\"field\", \"width\", \"visible\"];\n    this.defWatcherBlock = false;\n    this.config = {};\n    this.readFunc = false;\n    this.writeFunc = false;\n    this.registerTableOption(\"persistence\", false);\n    this.registerTableOption(\"persistenceID\", \"\"); //key for persistent storage\n    this.registerTableOption(\"persistenceMode\", true); //mode for storing persistence information\n    this.registerTableOption(\"persistenceReaderFunc\", false); //function for handling persistence data reading\n    this.registerTableOption(\"persistenceWriterFunc\", false); //function for handling persistence data writing\n  }\n\n  // Test for whether localStorage is available for use.\n  localStorageTest() {\n    var testKey = \"_tabulator_test\";\n    try {\n      window.localStorage.setItem(testKey, testKey);\n      window.localStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  //setup parameters\n  initialize() {\n    if (this.table.options.persistence) {\n      //determine persistent layout storage type\n      var mode = this.table.options.persistenceMode,\n        id = this.table.options.persistenceID,\n        retreivedData;\n      this.mode = mode !== true ? mode : this.localStorageTest() ? \"local\" : \"cookie\";\n      if (this.table.options.persistenceReaderFunc) {\n        if (typeof this.table.options.persistenceReaderFunc === \"function\") {\n          this.readFunc = this.table.options.persistenceReaderFunc;\n        } else {\n          if (Persistence.readers[this.table.options.persistenceReaderFunc]) {\n            this.readFunc = Persistence.readers[this.table.options.persistenceReaderFunc];\n          } else {\n            console.warn(\"Persistence Read Error - invalid reader set\", this.table.options.persistenceReaderFunc);\n          }\n        }\n      } else {\n        if (Persistence.readers[this.mode]) {\n          this.readFunc = Persistence.readers[this.mode];\n        } else {\n          console.warn(\"Persistence Read Error - invalid reader set\", this.mode);\n        }\n      }\n      if (this.table.options.persistenceWriterFunc) {\n        if (typeof this.table.options.persistenceWriterFunc === \"function\") {\n          this.writeFunc = this.table.options.persistenceWriterFunc;\n        } else {\n          if (Persistence.writers[this.table.options.persistenceWriterFunc]) {\n            this.writeFunc = Persistence.writers[this.table.options.persistenceWriterFunc];\n          } else {\n            console.warn(\"Persistence Write Error - invalid reader set\", this.table.options.persistenceWriterFunc);\n          }\n        }\n      } else {\n        if (Persistence.writers[this.mode]) {\n          this.writeFunc = Persistence.writers[this.mode];\n        } else {\n          console.warn(\"Persistence Write Error - invalid writer set\", this.mode);\n        }\n      }\n\n      //set storage tag\n      this.id = \"tabulator-\" + (id || this.table.element.getAttribute(\"id\") || \"\");\n      this.config = {\n        sort: this.table.options.persistence === true || this.table.options.persistence.sort,\n        filter: this.table.options.persistence === true || this.table.options.persistence.filter,\n        group: this.table.options.persistence === true || this.table.options.persistence.group,\n        page: this.table.options.persistence === true || this.table.options.persistence.page,\n        columns: this.table.options.persistence === true ? [\"title\", \"width\", \"visible\"] : this.table.options.persistence.columns\n      };\n\n      //load pagination data if needed\n      if (this.config.page) {\n        retreivedData = this.retreiveData(\"page\");\n        if (retreivedData) {\n          if (typeof retreivedData.paginationSize !== \"undefined\" && (this.config.page === true || this.config.page.size)) {\n            this.table.options.paginationSize = retreivedData.paginationSize;\n          }\n          if (typeof retreivedData.paginationInitialPage !== \"undefined\" && (this.config.page === true || this.config.page.page)) {\n            this.table.options.paginationInitialPage = retreivedData.paginationInitialPage;\n          }\n        }\n      }\n\n      //load group data if needed\n      if (this.config.group) {\n        retreivedData = this.retreiveData(\"group\");\n        if (retreivedData) {\n          if (typeof retreivedData.groupBy !== \"undefined\" && (this.config.group === true || this.config.group.groupBy)) {\n            this.table.options.groupBy = retreivedData.groupBy;\n          }\n          if (typeof retreivedData.groupStartOpen !== \"undefined\" && (this.config.group === true || this.config.group.groupStartOpen)) {\n            this.table.options.groupStartOpen = retreivedData.groupStartOpen;\n          }\n          if (typeof retreivedData.groupHeader !== \"undefined\" && (this.config.group === true || this.config.group.groupHeader)) {\n            this.table.options.groupHeader = retreivedData.groupHeader;\n          }\n        }\n      }\n      if (this.config.columns) {\n        this.table.options.columns = this.load(\"columns\", this.table.options.columns);\n        this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n        this.subscribe(\"column-show\", this.save.bind(this, \"columns\"));\n        this.subscribe(\"column-hide\", this.save.bind(this, \"columns\"));\n        this.subscribe(\"column-moved\", this.save.bind(this, \"columns\"));\n        this.subscribe(\"table-built\", this.tableBuilt.bind(this), 0);\n      }\n      this.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\n      this.subscribe(\"filter-changed\", this.eventSave.bind(this, \"filter\"));\n      this.subscribe(\"sort-changed\", this.eventSave.bind(this, \"sort\"));\n      this.subscribe(\"group-changed\", this.eventSave.bind(this, \"group\"));\n      this.subscribe(\"page-changed\", this.eventSave.bind(this, \"page\"));\n      this.subscribe(\"column-resized\", this.eventSave.bind(this, \"columns\"));\n      this.subscribe(\"layout-refreshed\", this.eventSave.bind(this, \"columns\"));\n    }\n    this.registerTableFunction(\"getColumnLayout\", this.getColumnLayout.bind(this));\n    this.registerTableFunction(\"setColumnLayout\", this.setColumnLayout.bind(this));\n  }\n  eventSave(type) {\n    if (this.config[type]) {\n      this.save(type);\n    }\n  }\n  tableBuilt() {\n    var options = this.table.options,\n      sorters,\n      filters;\n    if (this.config.sort) {\n      sorters = this.load(\"sort\");\n      if (!sorters === false) {\n        this.table.initialSort = sorters;\n      }\n    }\n    if (this.config.filter) {\n      filters = this.load(\"filter\");\n      if (!filters === false) {\n        this.table.initialFilter = filters;\n      }\n    }\n  }\n  tableRedraw(force) {\n    if (force && this.config.columns) {\n      this.save(\"columns\");\n    }\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  getColumnLayout() {\n    return this.parseColumns(this.table.columnManager.getColumns());\n  }\n  setColumnLayout(layout) {\n    this.table.columnManager.setColumns(this.mergeDefinition(this.table.options.columns, layout));\n    return true;\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  initializeColumn(column) {\n    var def, keys;\n    if (this.config.columns) {\n      this.defWatcherBlock = true;\n      def = column.getDefinition();\n      keys = this.config.columns === true ? Object.keys(def) : this.config.columns;\n      keys.forEach(key => {\n        var props = Object.getOwnPropertyDescriptor(def, key);\n        var value = def[key];\n        if (props) {\n          Object.defineProperty(def, key, {\n            set: function (newValue) {\n              value = newValue;\n              if (!this.defWatcherBlock) {\n                this.save(\"columns\");\n              }\n              if (props.set) {\n                props.set(newValue);\n              }\n            },\n            get: function () {\n              if (props.get) {\n                props.get();\n              }\n              return value;\n            }\n          });\n        }\n      });\n      this.defWatcherBlock = false;\n    }\n  }\n\n  //load saved definitions\n  load(type, current) {\n    var data = this.retreiveData(type);\n    if (current) {\n      data = data ? this.mergeDefinition(current, data) : current;\n    }\n    return data;\n  }\n\n  //retreive data from memory\n  retreiveData(type) {\n    return this.readFunc ? this.readFunc(this.id, type) : false;\n  }\n\n  //merge old and new column definitions\n  mergeDefinition(oldCols, newCols) {\n    var output = [];\n    newCols = newCols || [];\n    newCols.forEach((column, to) => {\n      var from = this._findColumn(oldCols, column),\n        keys;\n      if (from) {\n        if (this.config.columns === true || this.config.columns == undefined) {\n          keys = Object.keys(from);\n          keys.push(\"width\");\n        } else {\n          keys = this.config.columns;\n        }\n        keys.forEach(key => {\n          if (key !== \"columns\" && typeof column[key] !== \"undefined\") {\n            from[key] = column[key];\n          }\n        });\n        if (from.columns) {\n          from.columns = this.mergeDefinition(from.columns, column.columns);\n        }\n        output.push(from);\n      }\n    });\n    oldCols.forEach((column, i) => {\n      var from = this._findColumn(newCols, column);\n      if (!from) {\n        if (output.length > i) {\n          output.splice(i, 0, column);\n        } else {\n          output.push(column);\n        }\n      }\n    });\n    return output;\n  }\n\n  //find matching columns\n  _findColumn(columns, subject) {\n    var type = subject.columns ? \"group\" : subject.field ? \"field\" : \"object\";\n    return columns.find(function (col) {\n      switch (type) {\n        case \"group\":\n          return col.title === subject.title && col.columns.length === subject.columns.length;\n        case \"field\":\n          return col.field === subject.field;\n        case \"object\":\n          return col === subject;\n      }\n    });\n  }\n\n  //save data\n  save(type) {\n    var data = {};\n    switch (type) {\n      case \"columns\":\n        data = this.parseColumns(this.table.columnManager.getColumns());\n        break;\n      case \"filter\":\n        data = this.table.modules.filter.getFilters();\n        break;\n      case \"sort\":\n        data = this.validateSorters(this.table.modules.sort.getSort());\n        break;\n      case \"group\":\n        data = this.getGroupConfig();\n        break;\n      case \"page\":\n        data = this.getPageConfig();\n        break;\n    }\n    if (this.writeFunc) {\n      this.writeFunc(this.id, type, data);\n    }\n  }\n\n  //ensure sorters contain no function data\n  validateSorters(data) {\n    data.forEach(function (item) {\n      item.column = item.field;\n      delete item.field;\n    });\n    return data;\n  }\n  getGroupConfig() {\n    var data = {};\n    if (this.config.group) {\n      if (this.config.group === true || this.config.group.groupBy) {\n        data.groupBy = this.table.options.groupBy;\n      }\n      if (this.config.group === true || this.config.group.groupStartOpen) {\n        data.groupStartOpen = this.table.options.groupStartOpen;\n      }\n      if (this.config.group === true || this.config.group.groupHeader) {\n        data.groupHeader = this.table.options.groupHeader;\n      }\n    }\n    return data;\n  }\n  getPageConfig() {\n    var data = {};\n    if (this.config.page) {\n      if (this.config.page === true || this.config.page.size) {\n        data.paginationSize = this.table.modules.page.getPageSize();\n      }\n      if (this.config.page === true || this.config.page.page) {\n        data.paginationInitialPage = this.table.modules.page.getPage();\n      }\n    }\n    return data;\n  }\n\n  //parse columns for data to store\n  parseColumns(columns) {\n    var definitions = [],\n      excludedKeys = [\"headerContextMenu\", \"headerMenu\", \"contextMenu\", \"clickMenu\"];\n    columns.forEach(column => {\n      var defStore = {},\n        colDef = column.getDefinition(),\n        keys;\n      if (column.isGroup) {\n        defStore.title = colDef.title;\n        defStore.columns = this.parseColumns(column.getColumns());\n      } else {\n        defStore.field = column.getField();\n        if (this.config.columns === true || this.config.columns == undefined) {\n          keys = Object.keys(colDef);\n          keys.push(\"width\");\n        } else {\n          keys = this.config.columns;\n        }\n        keys.forEach(key => {\n          switch (key) {\n            case \"width\":\n              defStore.width = column.getWidth();\n              break;\n            case \"visible\":\n              defStore.visible = column.visible;\n              break;\n            default:\n              if (typeof colDef[key] !== \"function\" && excludedKeys.indexOf(key) === -1) {\n                defStore[key] = colDef[key];\n              }\n          }\n        });\n      }\n      definitions.push(defStore);\n    });\n    return definitions;\n  }\n}\nPersistence.moduleName = \"persistence\";\n\n//load defaults\nPersistence.readers = defaultReaders;\nPersistence.writers = defaultWriters;\nclass Print extends Module {\n  constructor(table) {\n    super(table);\n    this.element = false;\n    this.manualBlock = false;\n    this.registerTableOption(\"printAsHtml\", false); //enable print as html\n    this.registerTableOption(\"printFormatter\", false); //printing page formatter\n    this.registerTableOption(\"printHeader\", false); //page header contents\n    this.registerTableOption(\"printFooter\", false); //page footer contents\n    this.registerTableOption(\"printStyled\", true); //enable print as html styling\n    this.registerTableOption(\"printRowRange\", \"visible\"); //restrict print to visible rows only\n    this.registerTableOption(\"printConfig\", {}); //print config options\n\n    this.registerColumnOption(\"print\");\n    this.registerColumnOption(\"titlePrint\");\n  }\n  initialize() {\n    if (this.table.options.printAsHtml) {\n      window.addEventListener(\"beforeprint\", this.replaceTable.bind(this));\n      window.addEventListener(\"afterprint\", this.cleanup.bind(this));\n    }\n    this.registerTableFunction(\"print\", this.printFullscreen.bind(this));\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  replaceTable() {\n    if (!this.manualBlock) {\n      this.element = document.createElement(\"div\");\n      this.element.classList.add(\"tabulator-print-table\");\n      this.element.appendChild(this.table.modules.export.genereateTable(this.table.options.printConfig, this.table.options.printStyled, this.table.options.printRowRange, \"print\"));\n      this.table.element.style.display = \"none\";\n      this.table.element.parentNode.insertBefore(this.element, this.table.element);\n    }\n  }\n  cleanup() {\n    document.body.classList.remove(\"tabulator-print-fullscreen-hide\");\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n      this.table.element.style.display = \"\";\n    }\n  }\n  printFullscreen(visible, style, config) {\n    var scrollX = window.scrollX,\n      scrollY = window.scrollY,\n      headerEl = document.createElement(\"div\"),\n      footerEl = document.createElement(\"div\"),\n      tableEl = this.table.modules.export.genereateTable(typeof config != \"undefined\" ? config : this.table.options.printConfig, typeof style != \"undefined\" ? style : this.table.options.printStyled, visible || this.table.options.printRowRange, \"print\"),\n      headerContent,\n      footerContent;\n    this.manualBlock = true;\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(\"tabulator-print-fullscreen\");\n    if (this.table.options.printHeader) {\n      headerEl.classList.add(\"tabulator-print-header\");\n      headerContent = typeof this.table.options.printHeader == \"function\" ? this.table.options.printHeader.call(this.table) : this.table.options.printHeader;\n      if (typeof headerContent == \"string\") {\n        headerEl.innerHTML = headerContent;\n      } else {\n        headerEl.appendChild(headerContent);\n      }\n      this.element.appendChild(headerEl);\n    }\n    this.element.appendChild(tableEl);\n    if (this.table.options.printFooter) {\n      footerEl.classList.add(\"tabulator-print-footer\");\n      footerContent = typeof this.table.options.printFooter == \"function\" ? this.table.options.printFooter.call(this.table) : this.table.options.printFooter;\n      if (typeof footerContent == \"string\") {\n        footerEl.innerHTML = footerContent;\n      } else {\n        footerEl.appendChild(footerContent);\n      }\n      this.element.appendChild(footerEl);\n    }\n    document.body.classList.add(\"tabulator-print-fullscreen-hide\");\n    document.body.appendChild(this.element);\n    if (this.table.options.printFormatter) {\n      this.table.options.printFormatter(this.element, tableEl);\n    }\n    window.print();\n    this.cleanup();\n    window.scrollTo(scrollX, scrollY);\n    this.manualBlock = false;\n  }\n}\nPrint.moduleName = \"print\";\nclass ReactiveData extends Module {\n  constructor(table) {\n    super(table);\n    this.data = false;\n    this.blocked = false; //block reactivity while performing update\n    this.origFuncs = {}; // hold original data array functions to allow replacement after data is done with\n    this.currentVersion = 0;\n    this.registerTableOption(\"reactiveData\", false); //enable data reactivity\n  }\n\n  initialize() {\n    if (this.table.options.reactiveData) {\n      this.subscribe(\"cell-value-save-before\", this.block.bind(this));\n      this.subscribe(\"cell-value-save-after\", this.unblock.bind(this));\n      this.subscribe(\"row-data-save-before\", this.block.bind(this));\n      this.subscribe(\"row-data-save-after\", this.unblock.bind(this));\n      this.subscribe(\"row-data-init-after\", this.watchRow.bind(this));\n      this.subscribe(\"data-processing\", this.watchData.bind(this));\n      this.subscribe(\"table-destroy\", this.unwatchData.bind(this));\n    }\n  }\n  watchData(data) {\n    var self = this,\n      version;\n    this.currentVersion++;\n    version = this.currentVersion;\n    this.unwatchData();\n    this.data = data;\n\n    //override array push function\n    this.origFuncs.push = data.push;\n    Object.defineProperty(this.data, \"push\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var args = Array.from(arguments);\n        if (!self.blocked && version === self.currentVersion) {\n          args.forEach(arg => {\n            self.table.rowManager.addRowActual(arg, false);\n          });\n        }\n        return self.origFuncs.push.apply(data, arguments);\n      }\n    });\n\n    //override array unshift function\n    this.origFuncs.unshift = data.unshift;\n    Object.defineProperty(this.data, \"unshift\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var args = Array.from(arguments);\n        if (!self.blocked && version === self.currentVersion) {\n          args.forEach(arg => {\n            self.table.rowManager.addRowActual(arg, true);\n          });\n        }\n        return self.origFuncs.unshift.apply(data, arguments);\n      }\n    });\n\n    //override array shift function\n    this.origFuncs.shift = data.shift;\n    Object.defineProperty(this.data, \"shift\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var row;\n        if (!self.blocked && version === self.currentVersion) {\n          if (self.data.length) {\n            row = self.table.rowManager.getRowFromDataObject(self.data[0]);\n            if (row) {\n              row.deleteActual();\n            }\n          }\n        }\n        return self.origFuncs.shift.call(data);\n      }\n    });\n\n    //override array pop function\n    this.origFuncs.pop = data.pop;\n    Object.defineProperty(this.data, \"pop\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var row;\n        if (!self.blocked && version === self.currentVersion) {\n          if (self.data.length) {\n            row = self.table.rowManager.getRowFromDataObject(self.data[self.data.length - 1]);\n            if (row) {\n              row.deleteActual();\n            }\n          }\n        }\n        return self.origFuncs.pop.call(data);\n      }\n    });\n\n    //override array splice function\n    this.origFuncs.splice = data.splice;\n    Object.defineProperty(this.data, \"splice\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var args = Array.from(arguments),\n          start = args[0] < 0 ? data.length + args[0] : args[0],\n          end = args[1],\n          newRows = args[2] ? args.slice(2) : false,\n          startRow;\n        if (!self.blocked && version === self.currentVersion) {\n          //add new rows\n          if (newRows) {\n            startRow = data[start] ? self.table.rowManager.getRowFromDataObject(data[start]) : false;\n            if (startRow) {\n              newRows.forEach(rowData => {\n                self.table.rowManager.addRowActual(rowData, true, startRow, true);\n              });\n            } else {\n              newRows = newRows.slice().reverse();\n              newRows.forEach(rowData => {\n                self.table.rowManager.addRowActual(rowData, true, false, true);\n              });\n            }\n          }\n\n          //delete removed rows\n          if (end !== 0) {\n            var oldRows = data.slice(start, typeof args[1] === \"undefined\" ? args[1] : start + end);\n            oldRows.forEach((rowData, i) => {\n              var row = self.table.rowManager.getRowFromDataObject(rowData);\n              if (row) {\n                row.deleteActual(i !== oldRows.length - 1);\n              }\n            });\n          }\n          if (newRows || end !== 0) {\n            self.table.rowManager.reRenderInPosition();\n          }\n        }\n        return self.origFuncs.splice.apply(data, arguments);\n      }\n    });\n  }\n  unwatchData() {\n    if (this.data !== false) {\n      for (var key in this.origFuncs) {\n        Object.defineProperty(this.data, key, {\n          enumerable: true,\n          configurable: true,\n          writable: true,\n          value: this.origFuncs.key\n        });\n      }\n    }\n  }\n  watchRow(row) {\n    var data = row.getData();\n    this.blocked = true;\n    for (var key in data) {\n      this.watchKey(row, data, key);\n    }\n    if (this.table.options.dataTree) {\n      this.watchTreeChildren(row);\n    }\n    this.blocked = false;\n  }\n  watchTreeChildren(row) {\n    var childField = row.getData()[this.table.options.dataTreeChildField],\n      origFuncs = {};\n    function rebuildTree() {\n      this.table.modules.dataTree.initializeRow(row);\n      this.table.modules.dataTree.layoutRow(row);\n      this.table.rowManager.refreshActiveData(\"tree\", false, true);\n    }\n    if (childField) {\n      origFuncs.push = childField.push;\n      Object.defineProperty(childField, \"push\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.push.apply(childField, arguments);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.unshift = childField.unshift;\n      Object.defineProperty(childField, \"unshift\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.unshift.apply(childField, arguments);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.shift = childField.shift;\n      Object.defineProperty(childField, \"shift\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.shift.call(childField);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.pop = childField.pop;\n      Object.defineProperty(childField, \"pop\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.pop.call(childField);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.splice = childField.splice;\n      Object.defineProperty(childField, \"splice\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.splice.apply(childField, arguments);\n          rebuildTree();\n          return result;\n        }\n      });\n    }\n  }\n  watchKey(row, data, key) {\n    var props = Object.getOwnPropertyDescriptor(data, key),\n      value = data[key],\n      version = this.currentVersion;\n    Object.defineProperty(data, key, {\n      set: newValue => {\n        value = newValue;\n        if (!this.blocked && version === this.currentVersion) {\n          var update = {};\n          update[key] = newValue;\n          row.updateData(update);\n        }\n        if (props.set) {\n          props.set(newValue);\n        }\n      },\n      get: () => {\n        if (props.get) {\n          props.get();\n        }\n        return value;\n      }\n    });\n  }\n  unwatchRow(row) {\n    var data = row.getData();\n    for (var key in data) {\n      Object.defineProperty(data, key, {\n        value: data[key]\n      });\n    }\n  }\n  block() {\n    this.blocked = true;\n  }\n  unblock() {\n    this.blocked = false;\n  }\n}\nReactiveData.moduleName = \"reactiveData\";\nclass ResizeColumns extends Module {\n  constructor(table) {\n    super(table);\n    this.startColumn = false;\n    this.startX = false;\n    this.startWidth = false;\n    this.handle = null;\n    this.prevHandle = null;\n    this.registerColumnOption(\"resizable\", true);\n  }\n  initialize() {\n    // if(this.table.options.resizableColumns){\n    this.subscribe(\"cell-layout\", this.layoutCellHandles.bind(this));\n    this.subscribe(\"column-init\", this.layoutColumnHeader.bind(this));\n    // }\n  }\n\n  layoutCellHandles(cell) {\n    if (cell.row.type === \"row\") {\n      this.initializeColumn(\"cell\", cell.column, cell.element);\n    }\n  }\n  layoutColumnHeader(column) {\n    this.initializeColumn(\"header\", column, column.element);\n  }\n  initializeColumn(type, column, element) {\n    var self = this,\n      variableHeight = false,\n      mode = column.definition.resizable;\n\n    //set column resize mode\n    if (type === \"header\") {\n      variableHeight = column.definition.formatter == \"textarea\" || column.definition.variableHeight;\n      column.modules.resize = {\n        variableHeight: variableHeight\n      };\n    }\n    if (mode === true || mode == type) {\n      var handle = document.createElement('div');\n      handle.className = \"tabulator-col-resize-handle\";\n      var prevHandle = document.createElement('div');\n      prevHandle.className = \"tabulator-col-resize-handle prev\";\n      handle.addEventListener(\"click\", function (e) {\n        e.stopPropagation();\n      });\n      var handleDown = function (e) {\n        var nearestColumn = column.getLastColumn();\n        if (nearestColumn && self._checkResizability(nearestColumn)) {\n          self.startColumn = column;\n          self._mouseDown(e, nearestColumn, handle);\n        }\n      };\n      handle.addEventListener(\"mousedown\", handleDown);\n      handle.addEventListener(\"touchstart\", handleDown, {\n        passive: true\n      });\n\n      //reszie column on  double click\n      handle.addEventListener(\"dblclick\", function (e) {\n        var col = column.getLastColumn();\n        if (col && self._checkResizability(col)) {\n          e.stopPropagation();\n          col.reinitializeWidth(true);\n        }\n      });\n      prevHandle.addEventListener(\"click\", function (e) {\n        e.stopPropagation();\n      });\n      var prevHandleDown = function (e) {\n        var nearestColumn, colIndex, prevColumn;\n        nearestColumn = column.getFirstColumn();\n        if (nearestColumn) {\n          colIndex = self.table.columnManager.findColumnIndex(nearestColumn);\n          prevColumn = colIndex > 0 ? self.table.columnManager.getColumnByIndex(colIndex - 1) : false;\n          if (prevColumn && self._checkResizability(prevColumn)) {\n            self.startColumn = column;\n            self._mouseDown(e, prevColumn, prevHandle);\n          }\n        }\n      };\n      prevHandle.addEventListener(\"mousedown\", prevHandleDown);\n      prevHandle.addEventListener(\"touchstart\", prevHandleDown, {\n        passive: true\n      });\n\n      //resize column on double click\n      prevHandle.addEventListener(\"dblclick\", function (e) {\n        var nearestColumn, colIndex, prevColumn;\n        nearestColumn = column.getFirstColumn();\n        if (nearestColumn) {\n          colIndex = self.table.columnManager.findColumnIndex(nearestColumn);\n          prevColumn = colIndex > 0 ? self.table.columnManager.getColumnByIndex(colIndex - 1) : false;\n          if (prevColumn && self._checkResizability(prevColumn)) {\n            e.stopPropagation();\n            prevColumn.reinitializeWidth(true);\n          }\n        }\n      });\n      element.appendChild(handle);\n      element.appendChild(prevHandle);\n    }\n  }\n  _checkResizability(column) {\n    return column.definition.resizable;\n  }\n  _mouseDown(e, column, handle) {\n    var self = this;\n    self.table.element.classList.add(\"tabulator-block-select\");\n    function mouseMove(e) {\n      // self.table.columnManager.tempScrollBlock();\n\n      if (self.table.rtl) {\n        column.setWidth(self.startWidth - ((typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX) - self.startX));\n      } else {\n        column.setWidth(self.startWidth + ((typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX) - self.startX));\n      }\n      self.table.columnManager.renderer.rerenderColumns(true);\n      if (!self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight) {\n        column.checkCellHeights();\n      }\n    }\n    function mouseUp(e) {\n      //block editor from taking action while resizing is taking place\n      if (self.startColumn.modules.edit) {\n        self.startColumn.modules.edit.blocked = false;\n      }\n      if (self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight) {\n        column.checkCellHeights();\n      }\n      document.body.removeEventListener(\"mouseup\", mouseUp);\n      document.body.removeEventListener(\"mousemove\", mouseMove);\n      handle.removeEventListener(\"touchmove\", mouseMove);\n      handle.removeEventListener(\"touchend\", mouseUp);\n      self.table.element.classList.remove(\"tabulator-block-select\");\n      self.dispatch(\"column-resized\", column);\n      self.table.externalEvents.dispatch(\"columnResized\", column.getComponent());\n    }\n    e.stopPropagation(); //prevent resize from interfereing with movable columns\n\n    //block editor from taking action while resizing is taking place\n    if (self.startColumn.modules.edit) {\n      self.startColumn.modules.edit.blocked = true;\n    }\n    self.startX = typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX;\n    self.startWidth = column.getWidth();\n    document.body.addEventListener(\"mousemove\", mouseMove);\n    document.body.addEventListener(\"mouseup\", mouseUp);\n    handle.addEventListener(\"touchmove\", mouseMove, {\n      passive: true\n    });\n    handle.addEventListener(\"touchend\", mouseUp);\n  }\n}\nResizeColumns.moduleName = \"resizeColumns\";\nclass ResizeRows extends Module {\n  constructor(table) {\n    super(table);\n    this.startColumn = false;\n    this.startY = false;\n    this.startHeight = false;\n    this.handle = null;\n    this.prevHandle = null;\n    this.registerTableOption(\"resizableRows\", false); //resizable rows\n  }\n\n  initialize() {\n    if (this.table.options.resizableRows) {\n      this.subscribe(\"row-layout-after\", this.initializeRow.bind(this));\n    }\n  }\n  initializeRow(row) {\n    var self = this,\n      rowEl = row.getElement();\n    var handle = document.createElement('div');\n    handle.className = \"tabulator-row-resize-handle\";\n    var prevHandle = document.createElement('div');\n    prevHandle.className = \"tabulator-row-resize-handle prev\";\n    handle.addEventListener(\"click\", function (e) {\n      e.stopPropagation();\n    });\n    var handleDown = function (e) {\n      self.startRow = row;\n      self._mouseDown(e, row, handle);\n    };\n    handle.addEventListener(\"mousedown\", handleDown);\n    handle.addEventListener(\"touchstart\", handleDown, {\n      passive: true\n    });\n    prevHandle.addEventListener(\"click\", function (e) {\n      e.stopPropagation();\n    });\n    var prevHandleDown = function (e) {\n      var prevRow = self.table.rowManager.prevDisplayRow(row);\n      if (prevRow) {\n        self.startRow = prevRow;\n        self._mouseDown(e, prevRow, prevHandle);\n      }\n    };\n    prevHandle.addEventListener(\"mousedown\", prevHandleDown);\n    prevHandle.addEventListener(\"touchstart\", prevHandleDown, {\n      passive: true\n    });\n    rowEl.appendChild(handle);\n    rowEl.appendChild(prevHandle);\n  }\n  _mouseDown(e, row, handle) {\n    var self = this;\n    self.table.element.classList.add(\"tabulator-block-select\");\n    function mouseMove(e) {\n      row.setHeight(self.startHeight + ((typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY) - self.startY));\n    }\n    function mouseUp(e) {\n      // //block editor from taking action while resizing is taking place\n      // if(self.startColumn.modules.edit){\n      // \tself.startColumn.modules.edit.blocked = false;\n      // }\n\n      document.body.removeEventListener(\"mouseup\", mouseMove);\n      document.body.removeEventListener(\"mousemove\", mouseMove);\n      handle.removeEventListener(\"touchmove\", mouseMove);\n      handle.removeEventListener(\"touchend\", mouseUp);\n      self.table.element.classList.remove(\"tabulator-block-select\");\n      this.dispatchExternal(\"rowResized\", row.getComponent());\n    }\n    e.stopPropagation(); //prevent resize from interfereing with movable columns\n\n    //block editor from taking action while resizing is taking place\n    // if(self.startColumn.modules.edit){\n    // \tself.startColumn.modules.edit.blocked = true;\n    // }\n\n    self.startY = typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY;\n    self.startHeight = row.getHeight();\n    document.body.addEventListener(\"mousemove\", mouseMove);\n    document.body.addEventListener(\"mouseup\", mouseUp);\n    handle.addEventListener(\"touchmove\", mouseMove, {\n      passive: true\n    });\n    handle.addEventListener(\"touchend\", mouseUp);\n  }\n}\nResizeRows.moduleName = \"resizeRows\";\nclass ResizeTable extends Module {\n  constructor(table) {\n    super(table);\n    this.binding = false;\n    this.observer = false;\n    this.containerObserver = false;\n    this.tableHeight = 0;\n    this.tableWidth = 0;\n    this.containerHeight = 0;\n    this.containerWidth = 0;\n    this.autoResize = false;\n    this.registerTableOption(\"autoResize\", true); //auto resize table\n  }\n\n  initialize() {\n    if (this.table.options.autoResize) {\n      var table = this.table,\n        tableStyle;\n      this.tableHeight = table.element.clientHeight;\n      this.tableWidth = table.element.clientWidth;\n      if (table.element.parentNode) {\n        this.containerHeight = table.element.parentNode.clientHeight;\n        this.containerWidth = table.element.parentNode.clientWidth;\n      }\n      if (typeof ResizeObserver !== \"undefined\" && table.rowManager.getRenderMode() === \"virtual\") {\n        this.autoResize = true;\n        this.observer = new ResizeObserver(entry => {\n          if (!table.browserMobile || table.browserMobile && !table.modules.edit.currentCell) {\n            var nodeHeight = Math.floor(entry[0].contentRect.height);\n            var nodeWidth = Math.floor(entry[0].contentRect.width);\n            if (this.tableHeight != nodeHeight || this.tableWidth != nodeWidth) {\n              this.tableHeight = nodeHeight;\n              this.tableWidth = nodeWidth;\n              if (table.element.parentNode) {\n                this.containerHeight = table.element.parentNode.clientHeight;\n                this.containerWidth = table.element.parentNode.clientWidth;\n              }\n              this.table.columnManager.renderer.rerenderColumns(true);\n              table.redraw();\n            }\n          }\n        });\n        this.observer.observe(table.element);\n        tableStyle = window.getComputedStyle(table.element);\n        if (this.table.element.parentNode && !this.table.rowManager.fixedHeight && (tableStyle.getPropertyValue(\"max-height\") || tableStyle.getPropertyValue(\"min-height\"))) {\n          this.containerObserver = new ResizeObserver(entry => {\n            if (!table.browserMobile || table.browserMobile && !table.modules.edit.currentCell) {\n              var nodeHeight = Math.floor(entry[0].contentRect.height);\n              var nodeWidth = Math.floor(entry[0].contentRect.width);\n              if (this.containerHeight != nodeHeight || this.containerWidth != nodeWidth) {\n                this.containerHeight = nodeHeight;\n                this.containerWidth = nodeWidth;\n                this.tableHeight = table.element.clientHeight;\n                this.tableWidth = table.element.clientWidth;\n              }\n              table.columnManager.renderer.rerenderColumns(true);\n              table.redraw();\n            }\n          });\n          this.containerObserver.observe(this.table.element.parentNode);\n        }\n        this.subscribe(\"table-resize\", this.tableResized.bind(this));\n      } else {\n        this.binding = function () {\n          if (!table.browserMobile || table.browserMobile && !table.modules.edit.currentCell) {\n            table.columnManager.renderer.rerenderColumns(true);\n            table.redraw();\n          }\n        };\n        window.addEventListener(\"resize\", this.binding);\n      }\n      this.subscribe(\"table-destroy\", this.clearBindings.bind(this));\n    }\n  }\n  tableResized() {\n    this.table.rowManager.redraw();\n  }\n  clearBindings() {\n    if (this.binding) {\n      window.removeEventListener(\"resize\", this.binding);\n    }\n    if (this.observer) {\n      this.observer.unobserve(this.table.element);\n    }\n    if (this.containerObserver) {\n      this.containerObserver.unobserve(this.table.element.parentNode);\n    }\n  }\n}\nResizeTable.moduleName = \"resizeTable\";\nclass ResponsiveLayout extends Module {\n  constructor(table) {\n    super(table);\n    this.columns = [];\n    this.hiddenColumns = [];\n    this.mode = \"\";\n    this.index = 0;\n    this.collapseFormatter = [];\n    this.collapseStartOpen = true;\n    this.collapseHandleColumn = false;\n    this.registerTableOption(\"responsiveLayout\", false); //responsive layout flags\n    this.registerTableOption(\"responsiveLayoutCollapseStartOpen\", true); //start showing collapsed data\n    this.registerTableOption(\"responsiveLayoutCollapseUseFormatters\", true); //responsive layout collapse formatter\n    this.registerTableOption(\"responsiveLayoutCollapseFormatter\", false); //responsive layout collapse formatter\n\n    this.registerColumnOption(\"responsive\");\n  }\n\n  //generate responsive columns list\n  initialize() {\n    if (this.table.options.responsiveLayout) {\n      this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n      this.subscribe(\"column-show\", this.updateColumnVisibility.bind(this));\n      this.subscribe(\"column-hide\", this.updateColumnVisibility.bind(this));\n      this.subscribe(\"columns-loaded\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"column-moved\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"column-add\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"column-delete\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"table-redrawing\", this.tableRedraw.bind(this));\n      if (this.table.options.responsiveLayout === \"collapse\") {\n        this.subscribe(\"row-init\", this.initializeRow.bind(this));\n        this.subscribe(\"row-layout\", this.layoutRow.bind(this));\n      }\n    }\n  }\n  tableRedraw(force) {\n    if ([\"fitColumns\", \"fitDataStretch\"].indexOf(this.layoutMode()) === -1) {\n      if (!force) {\n        this.update();\n      }\n    }\n  }\n  initializeResponsivity() {\n    var columns = [];\n    this.mode = this.table.options.responsiveLayout;\n    this.collapseFormatter = this.table.options.responsiveLayoutCollapseFormatter || this.formatCollapsedData;\n    this.collapseStartOpen = this.table.options.responsiveLayoutCollapseStartOpen;\n    this.hiddenColumns = [];\n\n    //determine level of responsivity for each column\n    this.table.columnManager.columnsByIndex.forEach(function (column, i) {\n      if (column.modules.responsive) {\n        if (column.modules.responsive.order && column.modules.responsive.visible) {\n          column.modules.responsive.index = i;\n          columns.push(column);\n          if (!column.visible && self.mode === \"collapse\") {\n            self.hiddenColumns.push(column);\n          }\n        }\n      }\n    });\n\n    //sort list by responsivity\n    columns = columns.reverse();\n    columns = columns.sort(function (a, b) {\n      var diff = b.modules.responsive.order - a.modules.responsive.order;\n      return diff || b.modules.responsive.index - a.modules.responsive.index;\n    });\n    this.columns = columns;\n    if (this.mode === \"collapse\") {\n      this.generateCollapsedContent();\n    }\n\n    //assign collapse column\n    for (let col of this.table.columnManager.columnsByIndex) {\n      if (col.definition.formatter == \"responsiveCollapse\") {\n        this.collapseHandleColumn = col;\n        break;\n      }\n    }\n    if (this.collapseHandleColumn) {\n      if (this.hiddenColumns.length) {\n        this.collapseHandleColumn.show();\n      } else {\n        this.collapseHandleColumn.hide();\n      }\n    }\n  }\n\n  //define layout information\n  initializeColumn(column) {\n    var def = column.getDefinition();\n    column.modules.responsive = {\n      order: typeof def.responsive === \"undefined\" ? 1 : def.responsive,\n      visible: def.visible === false ? false : true\n    };\n  }\n  initializeRow(row) {\n    var el;\n    if (row.type !== \"calc\") {\n      el = document.createElement(\"div\");\n      el.classList.add(\"tabulator-responsive-collapse\");\n      row.modules.responsiveLayout = {\n        element: el,\n        open: this.collapseStartOpen\n      };\n      if (!this.collapseStartOpen) {\n        el.style.display = 'none';\n      }\n    }\n  }\n  layoutRow(row) {\n    var rowEl = row.getElement();\n    if (row.modules.responsiveLayout) {\n      rowEl.appendChild(row.modules.responsiveLayout.element);\n      this.generateCollapsedRowContent(row);\n    }\n  }\n\n  //update column visibility\n  updateColumnVisibility(column, responsiveToggle) {\n    if (!responsiveToggle && column.modules.responsive) {\n      column.modules.responsive.visible = column.visible;\n      this.initializeResponsivity();\n    }\n  }\n  hideColumn(column) {\n    var colCount = this.hiddenColumns.length;\n    column.hide(false, true);\n    if (this.mode === \"collapse\") {\n      this.hiddenColumns.unshift(column);\n      this.generateCollapsedContent();\n      if (this.collapseHandleColumn && !colCount) {\n        this.collapseHandleColumn.show();\n      }\n    }\n  }\n  showColumn(column) {\n    var index;\n    column.show(false, true);\n    //set column width to prevent calculation loops on uninitialized columns\n    column.setWidth(column.getWidth());\n    if (this.mode === \"collapse\") {\n      index = this.hiddenColumns.indexOf(column);\n      if (index > -1) {\n        this.hiddenColumns.splice(index, 1);\n      }\n      this.generateCollapsedContent();\n      if (this.collapseHandleColumn && !this.hiddenColumns.length) {\n        this.collapseHandleColumn.hide();\n      }\n    }\n  }\n\n  //redraw columns to fit space\n  update() {\n    var self = this,\n      working = true;\n    while (working) {\n      let width = self.table.modules.layout.getMode() == \"fitColumns\" ? self.table.columnManager.getFlexBaseWidth() : self.table.columnManager.getWidth();\n      let diff = (self.table.options.headerVisible ? self.table.columnManager.element.clientWidth : self.table.element.clientWidth) - width;\n      if (diff < 0) {\n        //table is too wide\n        let column = self.columns[self.index];\n        if (column) {\n          self.hideColumn(column);\n          self.index++;\n        } else {\n          working = false;\n        }\n      } else {\n        //table has spare space\n        let column = self.columns[self.index - 1];\n        if (column) {\n          if (diff > 0) {\n            if (diff >= column.getWidth()) {\n              self.showColumn(column);\n              self.index--;\n            } else {\n              working = false;\n            }\n          } else {\n            working = false;\n          }\n        } else {\n          working = false;\n        }\n      }\n      if (!self.table.rowManager.activeRowsCount) {\n        self.table.rowManager.renderEmptyScroll();\n      }\n    }\n  }\n  generateCollapsedContent() {\n    var self = this,\n      rows = this.table.rowManager.getDisplayRows();\n    rows.forEach(function (row) {\n      self.generateCollapsedRowContent(row);\n    });\n  }\n  generateCollapsedRowContent(row) {\n    var el, contents;\n    if (row.modules.responsiveLayout) {\n      el = row.modules.responsiveLayout.element;\n      while (el.firstChild) el.removeChild(el.firstChild);\n      contents = this.collapseFormatter(this.generateCollapsedRowData(row));\n      if (contents) {\n        el.appendChild(contents);\n      }\n    }\n  }\n  generateCollapsedRowData(row) {\n    var self = this,\n      data = row.getData(),\n      output = [],\n      mockCellComponent;\n    this.hiddenColumns.forEach(function (column) {\n      var value = column.getFieldValue(data);\n      if (column.definition.title && column.field) {\n        if (column.modules.format && self.table.options.responsiveLayoutCollapseUseFormatters) {\n          mockCellComponent = {\n            value: false,\n            data: {},\n            getValue: function () {\n              return value;\n            },\n            getData: function () {\n              return data;\n            },\n            getElement: function () {\n              return document.createElement(\"div\");\n            },\n            getRow: function () {\n              return row.getComponent();\n            },\n            getColumn: function () {\n              return column.getComponent();\n            }\n          };\n          function onRendered(callback) {\n            callback();\n          }\n          output.push({\n            field: column.field,\n            title: column.definition.title,\n            value: column.modules.format.formatter.call(self.table.modules.format, mockCellComponent, column.modules.format.params, onRendered)\n          });\n        } else {\n          output.push({\n            field: column.field,\n            title: column.definition.title,\n            value: value\n          });\n        }\n      }\n    });\n    return output;\n  }\n  formatCollapsedData(data) {\n    var list = document.createElement(\"table\");\n    data.forEach(function (item) {\n      var row = document.createElement(\"tr\");\n      var titleData = document.createElement(\"td\");\n      var valueData = document.createElement(\"td\");\n      var node_content;\n      var titleHighlight = document.createElement(\"strong\");\n      titleData.appendChild(titleHighlight);\n      this.langBind(\"columns|\" + item.field, function (text) {\n        titleHighlight.innerText = text || item.title;\n      });\n      if (item.value instanceof Node) {\n        node_content = document.createElement(\"div\");\n        node_content.appendChild(item.value);\n        valueData.appendChild(node_content);\n      } else {\n        valueData.innerHTML = item.value;\n      }\n      row.appendChild(titleData);\n      row.appendChild(valueData);\n      list.appendChild(row);\n    }, this);\n    return Object.keys(data).length ? list : \"\";\n  }\n}\nResponsiveLayout.moduleName = \"responsiveLayout\";\nclass SelectRow extends Module {\n  constructor(table) {\n    super(table);\n    this.selecting = false; //flag selecting in progress\n    this.lastClickedRow = false; //last clicked row\n    this.selectPrev = []; //hold previously selected element for drag drop selection\n    this.selectedRows = []; //hold selected rows\n    this.headerCheckboxElement = null; // hold header select element\n\n    this.registerTableOption(\"selectable\", \"highlight\"); //highlight rows on hover\n    this.registerTableOption(\"selectableRangeMode\", \"drag\"); //highlight rows on hover\n    this.registerTableOption(\"selectableRollingSelection\", true); //roll selection once maximum number of selectable rows is reached\n    this.registerTableOption(\"selectablePersistence\", true); // maintain selection when table view is updated\n    this.registerTableOption(\"selectableCheck\", function (data, row) {\n      return true;\n    }); //check wheather row is selectable\n\n    this.registerTableFunction(\"selectRow\", this.selectRows.bind(this));\n    this.registerTableFunction(\"deselectRow\", this.deselectRows.bind(this));\n    this.registerTableFunction(\"toggleSelectRow\", this.toggleRow.bind(this));\n    this.registerTableFunction(\"getSelectedRows\", this.getSelectedRows.bind(this));\n    this.registerTableFunction(\"getSelectedData\", this.getSelectedData.bind(this));\n\n    //register component functions\n    this.registerComponentFunction(\"row\", \"select\", this.selectRows.bind(this));\n    this.registerComponentFunction(\"row\", \"deselect\", this.deselectRows.bind(this));\n    this.registerComponentFunction(\"row\", \"toggleSelect\", this.toggleRow.bind(this));\n    this.registerComponentFunction(\"row\", \"isSelected\", this.isRowSelected.bind(this));\n  }\n  initialize() {\n    if (this.table.options.selectable !== false) {\n      this.subscribe(\"row-init\", this.initializeRow.bind(this));\n      this.subscribe(\"row-deleting\", this.rowDeleted.bind(this));\n      this.subscribe(\"rows-wipe\", this.clearSelectionData.bind(this));\n      this.subscribe(\"rows-retrieve\", this.rowRetrieve.bind(this));\n      if (this.table.options.selectable && !this.table.options.selectablePersistence) {\n        this.subscribe(\"data-refeshing\", this.deselectRows.bind(this));\n      }\n    }\n  }\n  rowRetrieve(type, prevValue) {\n    return type === \"selected\" ? this.selectedRows : prevValue;\n  }\n  rowDeleted(row) {\n    this._deselectRow(row, true);\n  }\n  clearSelectionData(silent) {\n    this.selecting = false;\n    this.lastClickedRow = false;\n    this.selectPrev = [];\n    this.selectedRows = [];\n    if (silent !== true) {\n      this._rowSelectionChanged();\n    }\n  }\n  initializeRow(row) {\n    var self = this,\n      element = row.getElement();\n\n    // trigger end of row selection\n    var endSelect = function () {\n      setTimeout(function () {\n        self.selecting = false;\n      }, 50);\n      document.body.removeEventListener(\"mouseup\", endSelect);\n    };\n    row.modules.select = {\n      selected: false\n    };\n\n    //set row selection class\n    if (self.table.options.selectableCheck.call(this.table, row.getComponent())) {\n      element.classList.add(\"tabulator-selectable\");\n      element.classList.remove(\"tabulator-unselectable\");\n      if (self.table.options.selectable && self.table.options.selectable != \"highlight\") {\n        if (self.table.options.selectableRangeMode === \"click\") {\n          element.addEventListener(\"click\", function (e) {\n            if (e.shiftKey) {\n              self.table._clearSelection();\n              self.lastClickedRow = self.lastClickedRow || row;\n              var lastClickedRowIdx = self.table.rowManager.getDisplayRowIndex(self.lastClickedRow);\n              var rowIdx = self.table.rowManager.getDisplayRowIndex(row);\n              var fromRowIdx = lastClickedRowIdx <= rowIdx ? lastClickedRowIdx : rowIdx;\n              var toRowIdx = lastClickedRowIdx >= rowIdx ? lastClickedRowIdx : rowIdx;\n              var rows = self.table.rowManager.getDisplayRows().slice(0);\n              var toggledRows = rows.splice(fromRowIdx, toRowIdx - fromRowIdx + 1);\n              if (e.ctrlKey || e.metaKey) {\n                toggledRows.forEach(function (toggledRow) {\n                  if (toggledRow !== self.lastClickedRow) {\n                    if (self.table.options.selectable !== true && !self.isRowSelected(row)) {\n                      if (self.selectedRows.length < self.table.options.selectable) {\n                        self.toggleRow(toggledRow);\n                      }\n                    } else {\n                      self.toggleRow(toggledRow);\n                    }\n                  }\n                });\n                self.lastClickedRow = row;\n              } else {\n                self.deselectRows(undefined, true);\n                if (self.table.options.selectable !== true) {\n                  if (toggledRows.length > self.table.options.selectable) {\n                    toggledRows = toggledRows.slice(0, self.table.options.selectable);\n                  }\n                }\n                self.selectRows(toggledRows);\n              }\n              self.table._clearSelection();\n            } else if (e.ctrlKey || e.metaKey) {\n              self.toggleRow(row);\n              self.lastClickedRow = row;\n            } else {\n              self.deselectRows(undefined, true);\n              self.selectRows(row);\n              self.lastClickedRow = row;\n            }\n          });\n        } else {\n          element.addEventListener(\"click\", function (e) {\n            if (!self.table.modExists(\"edit\") || !self.table.modules.edit.getCurrentCell()) {\n              self.table._clearSelection();\n            }\n            if (!self.selecting) {\n              self.toggleRow(row);\n            }\n          });\n          element.addEventListener(\"mousedown\", function (e) {\n            if (e.shiftKey) {\n              self.table._clearSelection();\n              self.selecting = true;\n              self.selectPrev = [];\n              document.body.addEventListener(\"mouseup\", endSelect);\n              document.body.addEventListener(\"keyup\", endSelect);\n              self.toggleRow(row);\n              return false;\n            }\n          });\n          element.addEventListener(\"mouseenter\", function (e) {\n            if (self.selecting) {\n              self.table._clearSelection();\n              self.toggleRow(row);\n              if (self.selectPrev[1] == row) {\n                self.toggleRow(self.selectPrev[0]);\n              }\n            }\n          });\n          element.addEventListener(\"mouseout\", function (e) {\n            if (self.selecting) {\n              self.table._clearSelection();\n              self.selectPrev.unshift(row);\n            }\n          });\n        }\n      }\n    } else {\n      element.classList.add(\"tabulator-unselectable\");\n      element.classList.remove(\"tabulator-selectable\");\n    }\n  }\n\n  //toggle row selection\n  toggleRow(row) {\n    if (this.table.options.selectableCheck.call(this.table, row.getComponent())) {\n      if (row.modules.select && row.modules.select.selected) {\n        this._deselectRow(row);\n      } else {\n        this._selectRow(row);\n      }\n    }\n  }\n\n  //select a number of rows\n  selectRows(rows) {\n    var rowMatch;\n    switch (typeof rows) {\n      case \"undefined\":\n        this.table.rowManager.rows.forEach(row => {\n          this._selectRow(row, true, true);\n        });\n        this._rowSelectionChanged();\n        break;\n      case \"string\":\n        rowMatch = this.table.rowManager.findRow(rows);\n        if (rowMatch) {\n          this._selectRow(rowMatch, true, true);\n        } else {\n          this.table.rowManager.getRows(rows).forEach(row => {\n            this._selectRow(row, true, true);\n          });\n        }\n        this._rowSelectionChanged();\n        break;\n      default:\n        if (Array.isArray(rows)) {\n          rows.forEach(row => {\n            this._selectRow(row, true, true);\n          });\n          this._rowSelectionChanged();\n        } else {\n          this._selectRow(rows, false, true);\n        }\n        break;\n    }\n  }\n\n  //select an individual row\n  _selectRow(rowInfo, silent, force) {\n    //handle max row count\n    if (!isNaN(this.table.options.selectable) && this.table.options.selectable !== true && !force) {\n      if (this.selectedRows.length >= this.table.options.selectable) {\n        if (this.table.options.selectableRollingSelection) {\n          this._deselectRow(this.selectedRows[0]);\n        } else {\n          return false;\n        }\n      }\n    }\n    var row = this.table.rowManager.findRow(rowInfo);\n    if (row) {\n      if (this.selectedRows.indexOf(row) == -1) {\n        row.getElement().classList.add(\"tabulator-selected\");\n        if (!row.modules.select) {\n          row.modules.select = {};\n        }\n        row.modules.select.selected = true;\n        if (row.modules.select.checkboxEl) {\n          row.modules.select.checkboxEl.checked = true;\n        }\n        this.selectedRows.push(row);\n        if (this.table.options.dataTreeSelectPropagate) {\n          this.childRowSelection(row, true);\n        }\n        this.dispatchExternal(\"rowSelected\", row.getComponent());\n        this._rowSelectionChanged(silent);\n      }\n    } else {\n      if (!silent) {\n        console.warn(\"Selection Error - No such row found, ignoring selection:\" + rowInfo);\n      }\n    }\n  }\n  isRowSelected(row) {\n    return this.selectedRows.indexOf(row) !== -1;\n  }\n\n  //deselect a number of rows\n  deselectRows(rows, silent) {\n    var self = this,\n      rowCount;\n    if (typeof rows == \"undefined\") {\n      rowCount = self.selectedRows.length;\n      for (let i = 0; i < rowCount; i++) {\n        self._deselectRow(self.selectedRows[0], true);\n      }\n      self._rowSelectionChanged(silent);\n    } else {\n      if (Array.isArray(rows)) {\n        rows.forEach(function (row) {\n          self._deselectRow(row, true);\n        });\n        self._rowSelectionChanged(silent);\n      } else {\n        self._deselectRow(rows, silent);\n      }\n    }\n  }\n\n  //deselect an individual row\n  _deselectRow(rowInfo, silent) {\n    var self = this,\n      row = self.table.rowManager.findRow(rowInfo),\n      index;\n    if (row) {\n      index = self.selectedRows.findIndex(function (selectedRow) {\n        return selectedRow == row;\n      });\n      if (index > -1) {\n        row.getElement().classList.remove(\"tabulator-selected\");\n        if (!row.modules.select) {\n          row.modules.select = {};\n        }\n        row.modules.select.selected = false;\n        if (row.modules.select.checkboxEl) {\n          row.modules.select.checkboxEl.checked = false;\n        }\n        self.selectedRows.splice(index, 1);\n        if (this.table.options.dataTreeSelectPropagate) {\n          this.childRowSelection(row, false);\n        }\n        this.dispatchExternal(\"rowDeselected\", row.getComponent());\n        self._rowSelectionChanged(silent);\n      }\n    } else {\n      if (!silent) {\n        console.warn(\"Deselection Error - No such row found, ignoring selection:\" + rowInfo);\n      }\n    }\n  }\n  getSelectedData() {\n    var data = [];\n    this.selectedRows.forEach(function (row) {\n      data.push(row.getData());\n    });\n    return data;\n  }\n  getSelectedRows() {\n    var rows = [];\n    this.selectedRows.forEach(function (row) {\n      rows.push(row.getComponent());\n    });\n    return rows;\n  }\n  _rowSelectionChanged(silent) {\n    if (this.headerCheckboxElement) {\n      if (this.selectedRows.length === 0) {\n        this.headerCheckboxElement.checked = false;\n        this.headerCheckboxElement.indeterminate = false;\n      } else if (this.table.rowManager.rows.length === this.selectedRows.length) {\n        this.headerCheckboxElement.checked = true;\n        this.headerCheckboxElement.indeterminate = false;\n      } else {\n        this.headerCheckboxElement.indeterminate = true;\n        this.headerCheckboxElement.checked = false;\n      }\n    }\n    if (!silent) {\n      this.dispatchExternal(\"rowSelectionChanged\", this.getSelectedData(), this.getSelectedRows());\n    }\n  }\n  registerRowSelectCheckbox(row, element) {\n    if (!row._row.modules.select) {\n      row._row.modules.select = {};\n    }\n    row._row.modules.select.checkboxEl = element;\n  }\n  registerHeaderSelectCheckbox(element) {\n    this.headerCheckboxElement = element;\n  }\n  childRowSelection(row, select) {\n    var children = this.table.modules.dataTree.getChildren(row, true);\n    if (select) {\n      for (let child of children) {\n        this._selectRow(child, true);\n      }\n    } else {\n      for (let child of children) {\n        this._deselectRow(child, true);\n      }\n    }\n  }\n}\nSelectRow.moduleName = \"selectRow\";\n\n//sort numbers\nfunction number$1(a, b, aRow, bRow, column, dir, params) {\n  var alignEmptyValues = params.alignEmptyValues;\n  var decimal = params.decimalSeparator;\n  var thousand = params.thousandSeparator;\n  var emptyAlign = 0;\n  a = String(a);\n  b = String(b);\n  if (thousand) {\n    a = a.split(thousand).join(\"\");\n    b = b.split(thousand).join(\"\");\n  }\n  if (decimal) {\n    a = a.split(decimal).join(\".\");\n    b = b.split(decimal).join(\".\");\n  }\n  a = parseFloat(a);\n  b = parseFloat(b);\n\n  //handle non numeric values\n  if (isNaN(a)) {\n    emptyAlign = isNaN(b) ? 0 : -1;\n  } else if (isNaN(b)) {\n    emptyAlign = 1;\n  } else {\n    //compare valid values\n    return a - b;\n  }\n\n  //fix empty values in position\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n  return emptyAlign;\n}\n\n//sort strings\nfunction string(a, b, aRow, bRow, column, dir, params) {\n  var alignEmptyValues = params.alignEmptyValues;\n  var emptyAlign = 0;\n  var locale;\n\n  //handle empty values\n  if (!a) {\n    emptyAlign = !b ? 0 : -1;\n  } else if (!b) {\n    emptyAlign = 1;\n  } else {\n    //compare valid values\n    switch (typeof params.locale) {\n      case \"boolean\":\n        if (params.locale) {\n          locale = this.langLocale();\n        }\n        break;\n      case \"string\":\n        locale = params.locale;\n        break;\n    }\n    return String(a).toLowerCase().localeCompare(String(b).toLowerCase(), locale);\n  }\n\n  //fix empty values in position\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n  return emptyAlign;\n}\n\n//sort datetime\nfunction datetime$1(a, b, aRow, bRow, column, dir, params) {\n  var DT = window.DateTime || luxon.DateTime;\n  var format = params.format || \"dd/MM/yyyy HH:mm:ss\",\n    alignEmptyValues = params.alignEmptyValues,\n    emptyAlign = 0;\n  if (typeof DT != \"undefined\") {\n    a = DT.fromFormat(String(a), format);\n    b = DT.fromFormat(String(b), format);\n    if (!a.isValid) {\n      emptyAlign = !b.isValid ? 0 : -1;\n    } else if (!b.isValid) {\n      emptyAlign = 1;\n    } else {\n      //compare valid values\n      return a - b;\n    }\n\n    //fix empty values in position\n    if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n      emptyAlign *= -1;\n    }\n    return emptyAlign;\n  } else {\n    console.error(\"Sort Error - 'datetime' sorter is dependant on luxon.js\");\n  }\n}\n\n//sort date\nfunction date(a, b, aRow, bRow, column, dir, params) {\n  if (!params.format) {\n    params.format = \"dd/MM/yyyy\";\n  }\n  return datetime$1.call(this, a, b, aRow, bRow, column, dir, params);\n}\n\n//sort times\nfunction time(a, b, aRow, bRow, column, dir, params) {\n  if (!params.format) {\n    params.format = \"HH:mm\";\n  }\n  return datetime$1.call(this, a, b, aRow, bRow, column, dir, params);\n}\n\n//sort booleans\nfunction boolean(a, b, aRow, bRow, column, dir, params) {\n  var el1 = a === true || a === \"true\" || a === \"True\" || a === 1 ? 1 : 0;\n  var el2 = b === true || b === \"true\" || b === \"True\" || b === 1 ? 1 : 0;\n  return el1 - el2;\n}\n\n//sort if element contains any data\nfunction array(a, b, aRow, bRow, column, dir, params) {\n  var el1 = 0;\n  var el2 = 0;\n  var type = params.type || \"length\";\n  var alignEmptyValues = params.alignEmptyValues;\n  var emptyAlign = 0;\n  function calc(value) {\n    switch (type) {\n      case \"length\":\n        return value.length;\n      case \"sum\":\n        return value.reduce(function (c, d) {\n          return c + d;\n        });\n      case \"max\":\n        return Math.max.apply(null, value);\n      case \"min\":\n        return Math.min.apply(null, value);\n      case \"avg\":\n        return value.reduce(function (c, d) {\n          return c + d;\n        }) / value.length;\n    }\n  }\n\n  //handle non array values\n  if (!Array.isArray(a)) {\n    alignEmptyValues = !Array.isArray(b) ? 0 : -1;\n  } else if (!Array.isArray(b)) {\n    alignEmptyValues = 1;\n  } else {\n    //compare valid values\n    el1 = a ? calc(a) : 0;\n    el2 = b ? calc(b) : 0;\n    return el1 - el2;\n  }\n\n  //fix empty values in position\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n  return emptyAlign;\n}\n\n//sort if element contains any data\nfunction exists(a, b, aRow, bRow, column, dir, params) {\n  var el1 = typeof a == \"undefined\" ? 0 : 1;\n  var el2 = typeof b == \"undefined\" ? 0 : 1;\n  return el1 - el2;\n}\n\n//sort alpha numeric strings\nfunction alphanum(as, bs, aRow, bRow, column, dir, params) {\n  var a,\n    b,\n    a1,\n    b1,\n    i = 0,\n    L,\n    rx = /(\\d+)|(\\D+)/g,\n    rd = /\\d/;\n  var alignEmptyValues = params.alignEmptyValues;\n  var emptyAlign = 0;\n\n  //handle empty values\n  if (!as && as !== 0) {\n    emptyAlign = !bs && bs !== 0 ? 0 : -1;\n  } else if (!bs && bs !== 0) {\n    emptyAlign = 1;\n  } else {\n    if (isFinite(as) && isFinite(bs)) return as - bs;\n    a = String(as).toLowerCase();\n    b = String(bs).toLowerCase();\n    if (a === b) return 0;\n    if (!(rd.test(a) && rd.test(b))) return a > b ? 1 : -1;\n    a = a.match(rx);\n    b = b.match(rx);\n    L = a.length > b.length ? b.length : a.length;\n    while (i < L) {\n      a1 = a[i];\n      b1 = b[i++];\n      if (a1 !== b1) {\n        if (isFinite(a1) && isFinite(b1)) {\n          if (a1.charAt(0) === \"0\") a1 = \".\" + a1;\n          if (b1.charAt(0) === \"0\") b1 = \".\" + b1;\n          return a1 - b1;\n        } else return a1 > b1 ? 1 : -1;\n      }\n    }\n    return a.length > b.length;\n  }\n\n  //fix empty values in position\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n  return emptyAlign;\n}\nvar defaultSorters = {\n  number: number$1,\n  string: string,\n  date: date,\n  time: time,\n  datetime: datetime$1,\n  boolean: boolean,\n  array: array,\n  exists: exists,\n  alphanum: alphanum\n};\nclass Sort extends Module {\n  constructor(table) {\n    super(table);\n    this.sortList = []; //holder current sort\n    this.changed = false; //has the sort changed since last render\n\n    this.registerTableOption(\"sortMode\", \"local\"); //local or remote sorting\n\n    this.registerTableOption(\"initialSort\", false); //initial sorting criteria\n    this.registerTableOption(\"columnHeaderSortMulti\", true); //multiple or single column sorting\n    this.registerTableOption(\"sortOrderReverse\", false); //reverse internal sort ordering\n    this.registerTableOption(\"headerSortElement\", \"<div class='tabulator-arrow'></div>\"); //header sort element\n\n    this.registerColumnOption(\"sorter\");\n    this.registerColumnOption(\"sorterParams\");\n    this.registerColumnOption(\"headerSort\", true);\n    this.registerColumnOption(\"headerSortStartingDir\");\n    this.registerColumnOption(\"headerSortTristate\");\n  }\n  initialize() {\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"table-built\", this.tableBuilt.bind(this));\n    this.registerDataHandler(this.sort.bind(this), 20);\n    this.registerTableFunction(\"setSort\", this.userSetSort.bind(this));\n    this.registerTableFunction(\"getSorters\", this.getSort.bind(this));\n    this.registerTableFunction(\"clearSort\", this.clearSort.bind(this));\n    if (this.table.options.sortMode === \"remote\") {\n      this.subscribe(\"data-params\", this.remoteSortParams.bind(this));\n    }\n  }\n  tableBuilt() {\n    if (this.table.options.initialSort) {\n      this.setSort(this.table.options.initialSort);\n    }\n  }\n  remoteSortParams(data, config, silent, params) {\n    var sorters = this.getSort();\n    sorters.forEach(item => {\n      delete item.column;\n    });\n    params.sort = sorters;\n    return params;\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  userSetSort(sortList, dir) {\n    this.setSort(sortList, dir);\n    // this.table.rowManager.sorterRefresh();\n    this.refreshSort();\n  }\n  clearSort() {\n    this.clear();\n    // this.table.rowManager.sorterRefresh();\n    this.refreshSort();\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  //initialize column header for sorting\n  initializeColumn(column) {\n    var sorter = false,\n      colEl,\n      arrowEl;\n    switch (typeof column.definition.sorter) {\n      case \"string\":\n        if (Sort.sorters[column.definition.sorter]) {\n          sorter = Sort.sorters[column.definition.sorter];\n        } else {\n          console.warn(\"Sort Error - No such sorter found: \", column.definition.sorter);\n        }\n        break;\n      case \"function\":\n        sorter = column.definition.sorter;\n        break;\n    }\n    column.modules.sort = {\n      sorter: sorter,\n      dir: \"none\",\n      params: column.definition.sorterParams || {},\n      startingDir: column.definition.headerSortStartingDir || \"asc\",\n      tristate: column.definition.headerSortTristate\n    };\n    if (column.definition.headerSort !== false) {\n      colEl = column.getElement();\n      colEl.classList.add(\"tabulator-sortable\");\n      arrowEl = document.createElement(\"div\");\n      arrowEl.classList.add(\"tabulator-col-sorter\");\n      if (typeof this.table.options.headerSortElement == \"object\") {\n        arrowEl.appendChild(this.table.options.headerSortElement);\n      } else {\n        arrowEl.innerHTML = this.table.options.headerSortElement;\n      }\n\n      //create sorter arrow\n      column.titleHolderElement.appendChild(arrowEl);\n      column.modules.sort.element = arrowEl;\n\n      //sort on click\n      colEl.addEventListener(\"click\", e => {\n        var dir = \"\",\n          sorters = [],\n          match = false;\n        if (column.modules.sort) {\n          if (column.modules.sort.tristate) {\n            if (column.modules.sort.dir == \"none\") {\n              dir = column.modules.sort.startingDir;\n            } else {\n              if (column.modules.sort.dir == column.modules.sort.startingDir) {\n                dir = column.modules.sort.dir == \"asc\" ? \"desc\" : \"asc\";\n              } else {\n                dir = \"none\";\n              }\n            }\n          } else {\n            switch (column.modules.sort.dir) {\n              case \"asc\":\n                dir = \"desc\";\n                break;\n              case \"desc\":\n                dir = \"asc\";\n                break;\n              default:\n                dir = column.modules.sort.startingDir;\n            }\n          }\n          if (this.table.options.columnHeaderSortMulti && (e.shiftKey || e.ctrlKey)) {\n            sorters = this.getSort();\n            match = sorters.findIndex(sorter => {\n              return sorter.field === column.getField();\n            });\n            if (match > -1) {\n              sorters[match].dir = dir;\n              if (match != sorters.length - 1) {\n                match = sorters.splice(match, 1)[0];\n                if (dir != \"none\") {\n                  sorters.push(match);\n                }\n              }\n            } else {\n              if (dir != \"none\") {\n                sorters.push({\n                  column: column,\n                  dir: dir\n                });\n              }\n            }\n\n            //add to existing sort\n            this.setSort(sorters);\n          } else {\n            if (dir == \"none\") {\n              this.clear();\n            } else {\n              //sort by column only\n              this.setSort(column, dir);\n            }\n          }\n\n          // this.table.rowManager.sorterRefresh(!this.sortList.length);\n          this.refreshSort();\n        }\n      });\n    }\n  }\n  refreshSort() {\n    if (this.table.options.sortMode === \"remote\") {\n      this.reloadData();\n    } else {\n      this.refreshData(true);\n    }\n\n    //TODO - Persist left position of row manager\n    // left = this.scrollLeft;\n    // this.scrollHorizontal(left);\n  }\n\n  //check if the sorters have changed since last use\n  hasChanged() {\n    var changed = this.changed;\n    this.changed = false;\n    return changed;\n  }\n\n  //return current sorters\n  getSort() {\n    var self = this,\n      sorters = [];\n    self.sortList.forEach(function (item) {\n      if (item.column) {\n        sorters.push({\n          column: item.column.getComponent(),\n          field: item.column.getField(),\n          dir: item.dir\n        });\n      }\n    });\n    return sorters;\n  }\n\n  //change sort list and trigger sort\n  setSort(sortList, dir) {\n    var self = this,\n      newSortList = [];\n    if (!Array.isArray(sortList)) {\n      sortList = [{\n        column: sortList,\n        dir: dir\n      }];\n    }\n    sortList.forEach(function (item) {\n      var column;\n      column = self.table.columnManager.findColumn(item.column);\n      if (column) {\n        item.column = column;\n        newSortList.push(item);\n        self.changed = true;\n      } else {\n        console.warn(\"Sort Warning - Sort field does not exist and is being ignored: \", item.column);\n      }\n    });\n    self.sortList = newSortList;\n    this.dispatch(\"sort-changed\");\n  }\n\n  //clear sorters\n  clear() {\n    this.setSort([]);\n  }\n\n  //find appropriate sorter for column\n  findSorter(column) {\n    var row = this.table.rowManager.activeRows[0],\n      sorter = \"string\",\n      field,\n      value;\n    if (row) {\n      row = row.getData();\n      field = column.getField();\n      if (field) {\n        value = column.getFieldValue(row);\n        switch (typeof value) {\n          case \"undefined\":\n            sorter = \"string\";\n            break;\n          case \"boolean\":\n            sorter = \"boolean\";\n            break;\n          default:\n            if (!isNaN(value) && value !== \"\") {\n              sorter = \"number\";\n            } else {\n              if (value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)) {\n                sorter = \"alphanum\";\n              }\n            }\n            break;\n        }\n      }\n    }\n    return Sort.sorters[sorter];\n  }\n\n  //work through sort list sorting data\n  sort(data) {\n    var self = this,\n      sortList = this.table.options.sortOrderReverse ? self.sortList.slice().reverse() : self.sortList,\n      sortListActual = [],\n      rowComponents = [];\n    if (this.subscribedExternal(\"dataSorting\")) {\n      this.dispatchExternal(\"dataSorting\", self.getSort());\n    }\n    self.clearColumnHeaders();\n    if (this.table.options.sortMode !== \"remote\") {\n      //build list of valid sorters and trigger column specific callbacks before sort begins\n      sortList.forEach(function (item, i) {\n        var sortObj = item.column.modules.sort;\n        if (item.column && sortObj) {\n          //if no sorter has been defined, take a guess\n          if (!sortObj.sorter) {\n            sortObj.sorter = self.findSorter(item.column);\n          }\n          item.params = typeof sortObj.params === \"function\" ? sortObj.params(item.column.getComponent(), item.dir) : sortObj.params;\n          sortListActual.push(item);\n        }\n        self.setColumnHeader(item.column, item.dir);\n      });\n\n      //sort data\n      if (sortListActual.length) {\n        self._sortItems(data, sortListActual);\n      }\n    } else {\n      sortList.forEach(function (item, i) {\n        self.setColumnHeader(item.column, item.dir);\n      });\n    }\n    if (this.subscribedExternal(\"dataSorted\")) {\n      data.forEach(row => {\n        rowComponents.push(row.getComponent());\n      });\n      this.dispatchExternal(\"dataSorted\", self.getSort(), rowComponents);\n    }\n    return data;\n  }\n\n  //clear sort arrows on columns\n  clearColumnHeaders() {\n    this.table.columnManager.getRealColumns().forEach(function (column) {\n      if (column.modules.sort) {\n        column.modules.sort.dir = \"none\";\n        column.getElement().setAttribute(\"aria-sort\", \"none\");\n      }\n    });\n  }\n\n  //set the column header sort direction\n  setColumnHeader(column, dir) {\n    column.modules.sort.dir = dir;\n    column.getElement().setAttribute(\"aria-sort\", dir);\n  }\n\n  //sort each item in sort list\n  _sortItems(data, sortList) {\n    var sorterCount = sortList.length - 1;\n    data.sort((a, b) => {\n      var result;\n      for (var i = sorterCount; i >= 0; i--) {\n        let sortItem = sortList[i];\n        result = this._sortRow(a, b, sortItem.column, sortItem.dir, sortItem.params);\n        if (result !== 0) {\n          break;\n        }\n      }\n      return result;\n    });\n  }\n\n  //process individual rows for a sort function on active data\n  _sortRow(a, b, column, dir, params) {\n    var el1Comp, el2Comp;\n\n    //switch elements depending on search direction\n    var el1 = dir == \"asc\" ? a : b;\n    var el2 = dir == \"asc\" ? b : a;\n    a = column.getFieldValue(el1.getData());\n    b = column.getFieldValue(el2.getData());\n    a = typeof a !== \"undefined\" ? a : \"\";\n    b = typeof b !== \"undefined\" ? b : \"\";\n    el1Comp = el1.getComponent();\n    el2Comp = el2.getComponent();\n    return column.modules.sort.sorter.call(this, a, b, el1Comp, el2Comp, column.getComponent(), dir, params);\n  }\n}\nSort.moduleName = \"sort\";\n\n//load defaults\nSort.sorters = defaultSorters;\nvar defaultValidators = {\n  //is integer\n  integer: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    value = Number(value);\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n  },\n  //is float\n  float: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    value = Number(value);\n    return typeof value === 'number' && isFinite(value) && value % 1 !== 0;\n  },\n  //must be a number\n  numeric: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return !isNaN(value);\n  },\n  //must be a string\n  string: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return isNaN(value);\n  },\n  //maximum value\n  max: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return parseFloat(value) <= parameters;\n  },\n  //minimum value\n  min: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return parseFloat(value) >= parameters;\n  },\n  //starts with  value\n  starts: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return String(value).toLowerCase().startsWith(String(parameters).toLowerCase());\n  },\n  //ends with  value\n  ends: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return String(value).toLowerCase().endsWith(String(parameters).toLowerCase());\n  },\n  //minimum string length\n  minLength: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return String(value).length >= parameters;\n  },\n  //maximum string length\n  maxLength: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return String(value).length <= parameters;\n  },\n  //in provided value list\n  in: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    if (typeof parameters == \"string\") {\n      parameters = parameters.split(\"|\");\n    }\n    return value === \"\" || parameters.indexOf(value) > -1;\n  },\n  //must match provided regex\n  regex: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    var reg = new RegExp(parameters);\n    return reg.test(value);\n  },\n  //value must be unique in this column\n  unique: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    var unique = true;\n    var cellData = cell.getData();\n    var column = cell.getColumn()._getSelf();\n    this.table.rowManager.rows.forEach(function (row) {\n      var data = row.getData();\n      if (data !== cellData) {\n        if (value == column.getFieldValue(data)) {\n          unique = false;\n        }\n      }\n    });\n    return unique;\n  },\n  //must have a value\n  required: function (cell, value, parameters) {\n    return value !== \"\" && value !== null && typeof value !== \"undefined\";\n  }\n};\nclass Validate extends Module {\n  constructor(table) {\n    super(table);\n    this.invalidCells = [];\n    this.registerTableOption(\"validationMode\", \"blocking\");\n    this.registerColumnOption(\"validator\");\n    this.registerTableFunction(\"getInvalidCells\", this.getInvalidCells.bind(this));\n    this.registerTableFunction(\"clearCellValidation\", this.userClearCellValidation.bind(this));\n    this.registerTableFunction(\"validate\", this.userValidate.bind(this));\n    this.registerComponentFunction(\"cell\", \"isValid\", this.cellIsValid.bind(this));\n    this.registerComponentFunction(\"cell\", \"clearValidation\", this.clearValidation.bind(this));\n    this.registerComponentFunction(\"cell\", \"validate\", this.cellValidate.bind(this));\n    this.registerComponentFunction(\"column\", \"validate\", this.columnValidate.bind(this));\n    this.registerComponentFunction(\"row\", \"validate\", this.rowValidate.bind(this));\n  }\n  initialize() {\n    this.subscribe(\"cell-delete\", this.clearValidation.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\n  }\n\n  ///////////////////////////////////\n  ////////// Cell Functions /////////\n  ///////////////////////////////////\n\n  cellIsValid(cell) {\n    return cell.modules.validate ? !cell.modules.validate.invalid : true;\n  }\n  cellValidate(cell) {\n    return this.validate(cell.column.modules.validate, cell, cell.getValue());\n  }\n\n  ///////////////////////////////////\n  ///////// Column Functions ////////\n  ///////////////////////////////////\n\n  columnValidate(column) {\n    var invalid = [];\n    column.cells.forEach(function (cell) {\n      if (!this.cellValidate(cell)) {\n        invalid.push(cell.getComponent());\n      }\n    });\n    return invalid.length ? invalid : true;\n  }\n\n  ///////////////////////////////////\n  ////////// Row Functions //////////\n  ///////////////////////////////////\n\n  rowValidate(row) {\n    var invalid = [];\n    row.cells.forEach(function (cell) {\n      if (!this.cellValidate(cell)) {\n        invalid.push(cell.getComponent());\n      }\n    });\n    return invalid.length ? invalid : true;\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  userClearCellValidation(cells) {\n    if (!cells) {\n      cells = this.getInvalidCells();\n    }\n    if (!Array.isArray(cells)) {\n      cells = [cells];\n    }\n    cells.forEach(cell => {\n      this.clearValidation(cell._getSelf());\n    });\n  }\n  userValidate(cells) {\n    var output = [];\n\n    //clear row data\n    this.table.rowManager.rows.forEach(function (row) {\n      var valid = row.validate();\n      if (valid !== true) {\n        output = output.concat(valid);\n      }\n    });\n    return output.length ? output : true;\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  initializeColumnCheck(column) {\n    if (typeof column.definition.validator !== \"undefined\") {\n      this.initializeColumn(column);\n    }\n  }\n\n  //validate\n  initializeColumn(column) {\n    var self = this,\n      config = [],\n      validator;\n    if (column.definition.validator) {\n      if (Array.isArray(column.definition.validator)) {\n        column.definition.validator.forEach(function (item) {\n          validator = self._extractValidator(item);\n          if (validator) {\n            config.push(validator);\n          }\n        });\n      } else {\n        validator = this._extractValidator(column.definition.validator);\n        if (validator) {\n          config.push(validator);\n        }\n      }\n      column.modules.validate = config.length ? config : false;\n    }\n  }\n  _extractValidator(value) {\n    var type, params, pos;\n    switch (typeof value) {\n      case \"string\":\n        pos = value.indexOf(':');\n        if (pos > -1) {\n          type = value.substring(0, pos);\n          params = value.substring(pos + 1);\n        } else {\n          type = value;\n        }\n        return this._buildValidator(type, params);\n      case \"function\":\n        return this._buildValidator(value);\n      case \"object\":\n        return this._buildValidator(value.type, value.parameters);\n    }\n  }\n  _buildValidator(type, params) {\n    var func = typeof type == \"function\" ? type : Validate.validators[type];\n    if (!func) {\n      console.warn(\"Validator Setup Error - No matching validator found:\", type);\n      return false;\n    } else {\n      return {\n        type: typeof type == \"function\" ? \"function\" : type,\n        func: func,\n        params: params\n      };\n    }\n  }\n  validate(validators, cell, value) {\n    var self = this,\n      valid = [],\n      invalidIndex = this.invalidCells.indexOf(cell);\n    if (validators) {\n      validators.forEach(function (item) {\n        if (!item.func.call(self, cell.getComponent(), value, item.params)) {\n          valid.push({\n            type: item.type,\n            parameters: item.params\n          });\n        }\n      });\n    }\n    valid = valid.length ? valid : true;\n    if (!cell.modules.validate) {\n      cell.modules.validate = {};\n    }\n    if (valid === true) {\n      cell.modules.validate.invalid = false;\n      cell.getElement().classList.remove(\"tabulator-validation-fail\");\n      if (invalidIndex > -1) {\n        this.invalidCells.splice(invalidIndex, 1);\n      }\n    } else {\n      cell.modules.validate.invalid = true;\n      if (this.table.options.validationMode !== \"manual\") {\n        cell.getElement().classList.add(\"tabulator-validation-fail\");\n      }\n      if (invalidIndex == -1) {\n        this.invalidCells.push(cell);\n      }\n    }\n    return valid;\n  }\n  getInvalidCells() {\n    var output = [];\n    this.invalidCells.forEach(cell => {\n      output.push(cell.getComponent());\n    });\n    return output;\n  }\n  clearValidation(cell) {\n    var invalidIndex;\n    if (cell.modules.validate && cell.modules.validate.invalid) {\n      cell.getElement().classList.remove(\"tabulator-validation-fail\");\n      cell.modules.validate.invalid = false;\n      invalidIndex = this.invalidCells.indexOf(cell);\n      if (invalidIndex > -1) {\n        this.invalidCells.splice(invalidIndex, 1);\n      }\n    }\n  }\n}\nValidate.moduleName = \"validate\";\n\n//load defaults\nValidate.validators = defaultValidators;\nvar modules = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AccessorModule: Accessor,\n  AjaxModule: Ajax,\n  ClipboardModule: Clipboard,\n  ColumnCalcsModule: ColumnCalcs,\n  DataTreeModule: DataTree,\n  DownloadModule: Download,\n  EditModule: Edit,\n  ExportModule: Export,\n  FilterModule: Filter,\n  FormatModule: Format,\n  FrozenColumnsModule: FrozenColumns,\n  FrozenRowsModule: FrozenRows,\n  GroupRowsModule: GroupRows,\n  HistoryModule: History,\n  HtmlTableImportModule: HtmlTableImport,\n  InteractionModule: Interaction,\n  KeybindingsModule: Keybindings,\n  MenuModule: Menu,\n  MoveColumnsModule: MoveColumns,\n  MoveRowsModule: MoveRows,\n  MutatorModule: Mutator,\n  PageModule: Page,\n  PersistenceModule: Persistence,\n  PrintModule: Print,\n  ReactiveDataModule: ReactiveData,\n  ResizeColumnsModule: ResizeColumns,\n  ResizeRowsModule: ResizeRows,\n  ResizeTableModule: ResizeTable,\n  ResponsiveLayoutModule: ResponsiveLayout,\n  SelectRowModule: SelectRow,\n  SortModule: Sort,\n  ValidateModule: Validate\n});\nvar defaultOptions = {\n  debugEventsExternal: false,\n  //flag to console log events\n  debugEventsInternal: false,\n  //flag to console log events\n  debugInvalidOptions: true,\n  //allow toggling of invalid option warnings\n\n  height: false,\n  //height of tabulator\n  minHeight: false,\n  //minimum height of tabulator\n  maxHeight: false,\n  //maximum height of tabulator\n\n  columnMaxWidth: false,\n  //minimum global width for a column\n  columnHeaderVertAlign: \"top\",\n  //vertical alignment of column headers\n\n  columns: [],\n  //store for colum header info\n  columnDefaults: {},\n  //store column default props\n\n  data: false,\n  //default starting data\n\n  autoColumns: false,\n  //build columns from data row structure\n  autoColumnsDefinitions: false,\n  nestedFieldSeparator: \".\",\n  //separator for nested data\n\n  tooltipGenerationMode: \"load\",\n  //when to generate tooltips\n\n  footerElement: false,\n  //hold footer element\n\n  index: \"id\",\n  //filed for row index\n\n  textDirection: \"auto\",\n  addRowPos: \"bottom\",\n  //position to insert blank rows, top|bottom\n\n  headerVisible: true,\n  //hide header\n\n  renderVertical: \"virtual\",\n  renderHorizontal: \"basic\",\n  renderVerticalBuffer: 0,\n  // set virtual DOM buffer size\n\n  scrollToRowPosition: \"top\",\n  scrollToRowIfVisible: true,\n  scrollToColumnPosition: \"left\",\n  scrollToColumnIfVisible: true,\n  rowFormatter: false,\n  rowFormatterPrint: null,\n  rowFormatterClipboard: null,\n  rowFormatterHtmlOutput: null,\n  placeholder: false,\n  dataLoader: true,\n  dataLoaderLoading: false,\n  dataLoaderError: false,\n  dataSendParams: {},\n  dataReceiveParams: {}\n};\nclass OptionsList {\n  constructor(table, msgType) {\n    let defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.table = table;\n    this.msgType = msgType;\n    this.registeredDefaults = Object.assign({}, defaults);\n  }\n  register(option, value) {\n    this.registeredDefaults[option] = value;\n  }\n  generate(defaultOptions) {\n    let userOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var output = Object.assign({}, this.registeredDefaults);\n    Object.assign(output, defaultOptions);\n    if (userOptions.debugInvalidOptions !== false || this.table.options.debugInvalidOptions) {\n      for (var key in userOptions) {\n        if (!output.hasOwnProperty(key)) {\n          console.warn(\"Invalid \" + this.msgType + \" option:\", key);\n        }\n      }\n    }\n    for (var key in output) {\n      if (key in userOptions) {\n        output[key] = userOptions[key];\n      } else {\n        if (Array.isArray(output[key])) {\n          output[key] = Object.assign([], output[key]);\n        } else if (typeof output[key] === \"object\" && output[key] !== null) {\n          output[key] = Object.assign({}, output[key]);\n        } else if (typeof output[key] === \"undefined\") {\n          delete output[key];\n        }\n      }\n    }\n    return output;\n  }\n}\nclass Renderer extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.elementVertical = table.rowManager.element;\n    this.elementHorizontal = table.columnManager.element;\n    this.tableElement = table.rowManager.tableElement;\n    this.verticalFillMode = \"fit\"; // used by row manager to determin how to size the render area (\"fit\" - fits container to the contents, \"fill\" - fills the contianer without resizing it)\n  }\n\n  ///////////////////////////////////\n  /////// Internal Bindings /////////\n  ///////////////////////////////////\n\n  initialize() {\n    //initialize core functionality\n  }\n  clearRows() {\n    //clear down existing rows layout\n  }\n  clearColumns() {\n    //clear down existing columns layout\n  }\n  reinitializeColumnWidths(columns) {\n    //resize columns to fit data\n  }\n  renderRows() {\n    //render rows from a clean slate\n  }\n  renderColumns() {\n    //render columns from a clean slate\n  }\n  rerenderRows(callback) {\n    // rerender rows and keep position\n    if (callback) {\n      callback();\n    }\n  }\n  rerenderColumns(update, blockRedraw) {\n    //rerender columns\n  }\n  renderRowCells(row) {\n    //render the cells in a row\n  }\n  rerenderRowCells(row, force) {\n    //rerender the cells in a row\n  }\n  scrollColumns(left, dir) {\n    //handle horizontal scrolling\n  }\n  scrollRows(top, dir) {\n    //handle vertical scolling\n  }\n  resize() {\n    //container has rezied, carry out any needed recalculations (DO NOT RERENDER IN THIS FUNCTION)\n  }\n  scrollToRow(row) {\n    //scroll to a specific row\n  }\n  scrollToRowNearestTop(row) {\n    //determine weather the row is nearest the top or bottom of the table, retur true for top or false for bottom\n  }\n  visibleRows(includingBuffer) {\n    //return the visible rows\n    return [];\n  }\n\n  ///////////////////////////////////\n  //////// Helper Functions /////////\n  ///////////////////////////////////\n\n  rows() {\n    return this.table.rowManager.getDisplayRows();\n  }\n  styleRow(row, index) {\n    var rowEl = row.getElement();\n    if (index % 2) {\n      rowEl.classList.add(\"tabulator-row-even\");\n      rowEl.classList.remove(\"tabulator-row-odd\");\n    } else {\n      rowEl.classList.add(\"tabulator-row-odd\");\n      rowEl.classList.remove(\"tabulator-row-even\");\n    }\n  }\n\n  ///////////////////////////////////\n  /////// External Triggers /////////\n  /////// (DO NOT OVERRIDE) /////////\n  ///////////////////////////////////\n\n  clear() {\n    //clear down existing layout\n    this.clearRows();\n    this.clearColumns();\n  }\n  render() {\n    //render from a clean slate\n    this.renderRows();\n    this.renderColumns();\n  }\n  rerender(callback) {\n    // rerender and keep position\n    this.rerenderRows();\n    this.rerenderColumns();\n  }\n  scrollToRowPosition(row, position, ifVisible) {\n    var rowIndex = this.rows().indexOf(row),\n      rowEl = row.getElement(),\n      offset = 0;\n    return new Promise((resolve, reject) => {\n      if (rowIndex > -1) {\n        if (typeof ifVisible === \"undefined\") {\n          ifVisible = this.table.options.scrollToRowIfVisible;\n        }\n\n        //check row visibility\n        if (!ifVisible) {\n          if (Helpers.elVisible(rowEl)) {\n            offset = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top;\n            if (offset > 0 && offset < this.elementVertical.clientHeight - rowEl.offsetHeight) {\n              resolve();\n              return false;\n            }\n          }\n        }\n        if (typeof position === \"undefined\") {\n          position = this.table.options.scrollToRowPosition;\n        }\n        if (position === \"nearest\") {\n          position = this.scrollToRowNearestTop(row) ? \"top\" : \"bottom\";\n        }\n\n        //scroll to row\n        this.scrollToRow(row);\n\n        //align to correct position\n        switch (position) {\n          case \"middle\":\n          case \"center\":\n            if (this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight) {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop + (rowEl.offsetTop - this.elementVertical.scrollTop) - (this.elementVertical.scrollHeight - rowEl.offsetTop) / 2;\n            } else {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight / 2;\n            }\n            break;\n          case \"bottom\":\n            if (this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight) {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.scrollHeight - rowEl.offsetTop) + rowEl.offsetHeight;\n            } else {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight + rowEl.offsetHeight;\n            }\n            break;\n        }\n        resolve();\n      } else {\n        console.warn(\"Scroll Error - Row not visible\");\n        reject(\"Scroll Error - Row not visible\");\n      }\n    });\n  }\n}\nclass BaiscHorizontal extends Renderer {\n  constructor(table) {\n    super(table);\n  }\n  renderRowCells(row) {\n    row.cells.forEach(cell => {\n      row.element.appendChild(cell.getElement());\n      cell.cellRendered();\n    });\n  }\n  reinitializeColumnWidths(columns) {\n    columns.forEach(function (column) {\n      column.reinitializeWidth();\n    });\n  }\n}\nclass VirtualDomHorizontal extends Renderer {\n  constructor(table) {\n    super(table);\n    this.leftCol = 0;\n    this.rightCol = 0;\n    this.scrollLeft = 0;\n    this.vDomScrollPosLeft = 0;\n    this.vDomScrollPosRight = 0;\n    this.vDomPadLeft = 0;\n    this.vDomPadRight = 0;\n    this.fitDataColAvg = 0;\n    this.window = 200; //pixel margin to make column visible before it is shown on screen\n\n    this.initialized = false;\n    this.columns = [];\n  }\n  initialize() {\n    this.compatabilityCheck();\n  }\n  compatabilityCheck() {\n    var columns = this.options(\"columns\"),\n      frozen = false,\n      ok = true;\n    if (this.options(\"layout\") == \"fitDataTable\") {\n      console.warn(\"Horizontal Virtual DOM is not compatible with fitDataTable layout mode\");\n      ok = false;\n    }\n    if (this.options(\"responsiveLayout\")) {\n      console.warn(\"Horizontal Virtual DOM is not compatible with responsive columns\");\n      ok = false;\n    }\n    if (this.options(\"rtl\")) {\n      console.warn(\"Horizontal Virtual DOM is not currently compatible with RTL text direction\");\n      ok = false;\n    }\n    if (columns) {\n      frozen = columns.find(col => {\n        return col.frozen;\n      });\n      if (frozen) {\n        console.warn(\"Horizontal Virtual DOM is not compatible with frozen columns\");\n        ok = false;\n      }\n    }\n\n    // if(!ok){\n    // \toptions.virtualDomHoz = false;\n    // }\n\n    return ok;\n  }\n\n  //////////////////////////////////////\n  ///////// Public Functions ///////////\n  //////////////////////////////////////\n\n  renderColumns(row, force) {\n    this.dataChange();\n  }\n  scrollColumns(left, dir) {\n    if (this.scrollLeft != left) {\n      this.scrollLeft = left;\n      this.scroll(left - (this.vDomScrollPosLeft + this.window));\n    }\n  }\n  rerenderColumns(update, blockRedraw) {\n    var old = {\n      cols: this.columns,\n      leftCol: this.leftCol,\n      rightCol: this.rightCol\n    };\n    if (update && !this.initialized) {\n      return;\n    }\n    this.clear();\n    this.scrollLeft = this.elementVertical.scrollLeft;\n    this.vDomScrollPosLeft = this.scrollLeft - this.window;\n    this.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.window;\n    var colPos = 0;\n    this.table.columnManager.columnsByIndex.forEach(column => {\n      var config = {};\n      if (column.visible) {\n        var width = column.getWidth();\n        config.leftPos = colPos;\n        config.rightPos = colPos + width;\n        config.width = width;\n        if (this.options(\"layout\") === \"fitData\") {\n          config.fitDataCheck = true;\n        }\n        if (colPos + width > this.vDomScrollPosLeft && colPos < this.vDomScrollPosRight) {\n          //column is visible\n\n          if (this.leftCol == -1) {\n            this.leftCol = this.columns.length;\n            this.vDomPadLeft = colPos;\n          }\n          this.rightCol = this.columns.length;\n        } else {\n          // column is hidden\n          if (this.leftCol !== -1) {\n            this.vDomPadRight += width;\n          }\n        }\n        this.columns.push(column);\n        column.modules.vdomHoz = config;\n        colPos += width;\n      }\n    });\n    this.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\n    this.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\n    this.initialized = true;\n    if (!blockRedraw) {\n      if (!update || this.reinitChanged(old)) {\n        this.reinitializeRows();\n      }\n    }\n    this.elementVertical.scrollLeft = this.scrollLeft;\n  }\n  renderRowCells(row) {\n    if (this.initialized) {\n      this.initializeRow(row);\n    } else {\n      row.cells.forEach(cell => {\n        row.element.appendChild(cell.getElement());\n        cell.cellRendered();\n      });\n    }\n  }\n  rerenderRowCells(row, force) {\n    this.reinitializeRow(row, force);\n  }\n  reinitializeColumnWidths(columns) {\n    for (let i = this.leftCol; i <= this.rightCol; i++) {\n      this.columns[i].reinitializeWidth();\n    }\n  }\n\n  //////////////////////////////////////\n  //////// Internal Rendering //////////\n  //////////////////////////////////////\n\n  deinitialize() {\n    this.initialized = false;\n  }\n  clear() {\n    this.columns = [];\n    this.leftCol = -1;\n    this.rightCol = 0;\n    this.vDomScrollPosLeft = 0;\n    this.vDomScrollPosRight = 0;\n    this.vDomPadLeft = 0;\n    this.vDomPadRight = 0;\n  }\n  dataChange() {\n    var change = false,\n      collsWidth = 0,\n      colEnd = 0,\n      row,\n      rowEl;\n    if (this.options(\"layout\") === \"fitData\") {\n      this.table.columnManager.columnsByIndex.forEach(column => {\n        if (!column.definition.width && column.visible) {\n          change = true;\n        }\n      });\n      if (change) {\n        if (change && this.table.rowManager.getDisplayRows().length) {\n          this.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.window;\n          var row = this.chain(\"rows-sample\", [1], [], () => {\n            return this.table.rowManager.getDisplayRows()[0];\n          })[0];\n          if (row) {\n            rowEl = row.getElement();\n            row.generateCells();\n            this.tableElement.appendChild(rowEl);\n            for (var colEnd = 0; colEnd < row.cells.length; colEnd++) {\n              let cell = row.cells[colEnd];\n              rowEl.appendChild(cell.getElement());\n              cell.column.reinitializeWidth();\n              collsWidth += cell.column.getWidth();\n              if (collsWidth > this.vDomScrollPosRight) {\n                break;\n              }\n            }\n            rowEl.parentNode.removeChild(rowEl);\n            this.fitDataColAvg = Math.floor(collsWidth / (colEnd + 1));\n            for (colEnd; colEnd < this.table.columnManager.columnsByIndex.length; colEnd++) {\n              this.table.columnManager.columnsByIndex[colEnd].setWidth(this.fitDataColAvg);\n            }\n            this.rerenderColumns(false, true);\n          }\n        }\n      }\n    } else {\n      if (this.options(\"layout\") === \"fitColumns\") {\n        this.layoutRefresh();\n        this.rerenderColumns(false, true);\n      }\n    }\n  }\n  reinitChanged(old) {\n    var match = true;\n    if (old.cols.length !== this.columns.length || old.leftCol !== this.leftCol || old.rightCol !== this.rightCol) {\n      return true;\n    }\n    old.cols.forEach((col, i) => {\n      if (col !== this.columns[i]) {\n        match = false;\n      }\n    });\n    return !match;\n  }\n  reinitializeRows() {\n    var rows = this.table.rowManager.getVisibleRows();\n    rows.forEach(row => {\n      this.reinitializeRow(row, true);\n    });\n  }\n  scroll(diff) {\n    this.vDomScrollPosLeft += diff;\n    this.vDomScrollPosRight += diff;\n    if (diff > this.elementVertical.clientWidth * .8) {\n      this.rerenderColumns();\n    } else {\n      if (diff > 0) {\n        //scroll right\n        this.addColRight();\n        this.removeColLeft();\n      } else {\n        //scroll left\n        this.addColLeft();\n        this.removeColRight();\n      }\n    }\n  }\n  colPositionAdjust(start, end, diff) {\n    for (let i = start; i < end; i++) {\n      let column = this.columns[i];\n      column.modules.vdomHoz.leftPos += diff;\n      column.modules.vdomHoz.rightPos += diff;\n    }\n  }\n  addColRight() {\n    var column = this.columns[this.rightCol + 1],\n      rows;\n    if (column && column.modules.vdomHoz.leftPos <= this.vDomScrollPosRight) {\n      rows = this.table.rowManager.getVisibleRows();\n      rows.forEach(row => {\n        if (row.type !== \"group\") {\n          var cell = row.getCell(column);\n          row.getElement().appendChild(cell.getElement());\n          cell.cellRendered();\n        }\n      });\n      this.fitDataColActualWidthCheck(column);\n      this.rightCol++;\n      if (this.rightCol >= this.columns.length - 1) {\n        this.vDomPadRight = 0;\n      } else {\n        this.vDomPadRight -= column.getWidth();\n      }\n      this.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\n      this.addColRight();\n    }\n  }\n  addColLeft() {\n    var column = this.columns[this.leftCol - 1],\n      rows;\n    if (column && column.modules.vdomHoz.rightPos >= this.vDomScrollPosLeft) {\n      var rows = this.table.rowManager.getVisibleRows();\n      rows.forEach(row => {\n        if (row.type !== \"group\") {\n          var cell = row.getCell(column);\n          row.getElement().prepend(cell.getElement());\n          cell.cellRendered();\n        }\n      });\n      this.fitDataColActualWidthCheck(column);\n      if (!this.leftCol) {\n        this.vDomPadLeft = 0;\n      } else {\n        this.vDomPadLeft -= column.getWidth();\n      }\n      this.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\n      this.leftCol--;\n      this.addColLeft();\n    }\n  }\n  removeColRight(column) {\n    var column = this.columns[this.rightCol],\n      rows;\n    if (column && column.modules.vdomHoz.leftPos > this.vDomScrollPosRight) {\n      rows = this.table.rowManager.getVisibleRows();\n      column.modules.vdomHoz.visible = false;\n      rows.forEach(row => {\n        if (row.type !== \"group\") {\n          var cell = row.getCell(column);\n          row.getElement().removeChild(cell.getElement());\n        }\n      });\n      this.vDomPadRight += column.getWidth();\n      this.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\n      this.rightCol--;\n      this.removeColRight();\n    }\n  }\n  removeColLeft() {\n    var column = this.columns[this.leftCol],\n      rows;\n    if (column && column.modules.vdomHoz.rightPos < this.vDomScrollPosLeft) {\n      rows = this.table.rowManager.getVisibleRows();\n      rows.forEach(row => {\n        var cell, el;\n        if (row.type !== \"group\") {\n          cell = row.getCell(column);\n          if (cell) {\n            el = cell.getElement();\n            if (el.parentNode) {\n              row.getElement().removeChild(el);\n            }\n          }\n        }\n      });\n      this.vDomPadLeft += column.getWidth();\n      this.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\n      this.leftCol++;\n      this.removeColLeft();\n    }\n  }\n  fitDataColActualWidthCheck(column) {\n    var newWidth, widthDiff;\n    if (column.modules.vdomHoz.fitDataCheck) {\n      column.reinitializeWidth();\n      newWidth = column.getWidth();\n      widthDiff = newWidth - column.modules.vdomHoz.width;\n      if (widthDiff) {\n        column.modules.vdomHoz.rightPos += widthDiff;\n        column.modules.vdomHoz.width = newWidth;\n        this.colPositionAdjust(this.rightCol + 2, this.columns.length, widthDiff);\n      }\n      column.modules.vdomHoz.fitDataCheck = false;\n    }\n  }\n  initializeRow(row) {\n    if (row.type !== \"group\") {\n      row.modules.vdomHoz = {\n        leftCol: this.leftCol,\n        rightCol: this.rightCol\n      };\n      for (let i = this.leftCol; i <= this.rightCol; i++) {\n        let column = this.columns[i];\n        if (column && column.visible) {\n          let cell = row.getCell(column);\n          row.getElement().appendChild(cell.getElement());\n          cell.cellRendered();\n        }\n      }\n    }\n  }\n  reinitializeRow(row, force) {\n    if (row.type !== \"group\") {\n      if (force || !row.modules.vdomHoz || row.modules.vdomHoz.leftCol !== this.leftCol || row.modules.vdomHoz.rightCol !== this.rightCol) {\n        var rowEl = row.getElement();\n        while (rowEl.firstChild) rowEl.removeChild(rowEl.firstChild);\n        this.initializeRow(row);\n      }\n    }\n  }\n}\nclass ColumnManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.blockHozScrollEvent = false;\n    this.headersElement = null;\n    this.element = null; //containing element\n    this.columns = []; // column definition object\n    this.columnsByIndex = []; //columns by index\n    this.columnsByField = {}; //columns by field\n    this.scrollLeft = 0;\n    this.optionsList = new OptionsList(this.table, \"column definition\", defaultColumnOptions);\n    this.renderer = null;\n  }\n\n  ////////////// Setup Functions /////////////////\n\n  initialize() {\n    this.initializeRenderer();\n    this.headersElement = this.createHeadersElement();\n    this.element = this.createHeaderElement();\n    this.element.insertBefore(this.headersElement, this.element.firstChild);\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n  }\n  initializeRenderer() {\n    var renderClass;\n    var renderers = {\n      \"virtual\": VirtualDomHorizontal,\n      \"basic\": BaiscHorizontal\n    };\n    if (typeof this.table.options.renderHorizontal === \"string\") {\n      renderClass = renderers[this.table.options.renderHorizontal];\n    } else {\n      renderClass = this.table.options.renderHorizontal;\n    }\n    if (renderClass) {\n      this.renderer = new renderClass(this.table, this.element, this.tableElement);\n      this.renderer.initialize();\n    } else {\n      console.error(\"Unable to find matching renderer:\", table.options.renderHorizontal);\n    }\n  }\n  createHeadersElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-headers\");\n    el.setAttribute(\"role\", \"row\");\n    return el;\n  }\n  createHeaderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-header\");\n    el.setAttribute(\"role\", \"rowgroup\");\n    if (!this.table.options.headerVisible) {\n      el.classList.add(\"tabulator-header-hidden\");\n    }\n    return el;\n  }\n\n  //return containing element\n  getElement() {\n    return this.element;\n  }\n\n  //return header containing element\n  getHeadersElement() {\n    return this.headersElement;\n  }\n\n  //scroll horizontally to match table body\n  scrollHorizontal(left) {\n    var hozAdjust = 0,\n      scrollWidth = this.element.scrollWidth - this.table.element.clientWidth;\n\n    // this.tempScrollBlock();\n    this.element.scrollLeft = left;\n\n    //adjust for vertical scrollbar moving table when present\n    if (left > scrollWidth) {\n      hozAdjust = left - scrollWidth;\n      this.element.style.marginLeft = -hozAdjust + \"px\";\n    } else {\n      this.element.style.marginLeft = 0;\n    }\n    this.scrollLeft = left;\n    this.renderer.scrollColumns(left);\n  }\n\n  ///////////// Column Setup Functions /////////////\n  generateColumnsFromRowData(data) {\n    var cols = [],\n      definitions = this.table.options.autoColumnsDefinitions,\n      row,\n      sorter;\n    if (data && data.length) {\n      row = data[0];\n      for (var key in row) {\n        let col = {\n          field: key,\n          title: key\n        };\n        let value = row[key];\n        switch (typeof value) {\n          case \"undefined\":\n            sorter = \"string\";\n            break;\n          case \"boolean\":\n            sorter = \"boolean\";\n            break;\n          case \"object\":\n            if (Array.isArray(value)) {\n              sorter = \"array\";\n            } else {\n              sorter = \"string\";\n            }\n            break;\n          default:\n            if (!isNaN(value) && value !== \"\") {\n              sorter = \"number\";\n            } else {\n              if (value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)) {\n                sorter = \"alphanum\";\n              } else {\n                sorter = \"string\";\n              }\n            }\n            break;\n        }\n        col.sorter = sorter;\n        cols.push(col);\n      }\n      if (definitions) {\n        switch (typeof definitions) {\n          case \"function\":\n            this.table.options.columns = definitions.call(this.table, cols);\n            break;\n          case \"object\":\n            if (Array.isArray(definitions)) {\n              cols.forEach(col => {\n                var match = definitions.find(def => {\n                  return def.field === col.field;\n                });\n                if (match) {\n                  Object.assign(col, match);\n                }\n              });\n            } else {\n              cols.forEach(col => {\n                if (definitions[col.field]) {\n                  Object.assign(col, definitions[col.field]);\n                }\n              });\n            }\n            this.table.options.columns = cols;\n            break;\n        }\n      } else {\n        this.table.options.columns = cols;\n      }\n      this.setColumns(this.table.options.columns);\n    }\n  }\n  setColumns(cols, row) {\n    while (this.headersElement.firstChild) this.headersElement.removeChild(this.headersElement.firstChild);\n    this.columns = [];\n    this.columnsByIndex = [];\n    this.columnsByField = {};\n    this.dispatch(\"columns-loading\");\n    cols.forEach((def, i) => {\n      this._addColumn(def);\n    });\n    this._reIndexColumns();\n    this.dispatch(\"columns-loaded\");\n    this.renderer.rerenderColumns(false, true);\n    this.redraw(true);\n  }\n  _addColumn(definition, before, nextToColumn) {\n    var column = new Column$1(definition, this),\n      colEl = column.getElement(),\n      index = nextToColumn ? this.findColumnIndex(nextToColumn) : nextToColumn;\n    if (nextToColumn && index > -1) {\n      var topColumn = nextToColumn.getTopColumn();\n      var parentIndex = this.columns.indexOf(topColumn);\n      var nextEl = topColumn.getElement();\n      if (before) {\n        this.columns.splice(parentIndex, 0, column);\n        nextEl.parentNode.insertBefore(colEl, nextEl);\n      } else {\n        this.columns.splice(parentIndex + 1, 0, column);\n        nextEl.parentNode.insertBefore(colEl, nextEl.nextSibling);\n      }\n    } else {\n      if (before) {\n        this.columns.unshift(column);\n        this.headersElement.insertBefore(column.getElement(), this.headersElement.firstChild);\n      } else {\n        this.columns.push(column);\n        this.headersElement.appendChild(column.getElement());\n      }\n    }\n    column.columnRendered();\n    return column;\n  }\n  registerColumnField(col) {\n    if (col.definition.field) {\n      this.columnsByField[col.definition.field] = col;\n    }\n  }\n  registerColumnPosition(col) {\n    this.columnsByIndex.push(col);\n  }\n  _reIndexColumns() {\n    this.columnsByIndex = [];\n    this.columns.forEach(function (column) {\n      column.reRegisterPosition();\n    });\n  }\n\n  //ensure column headers take up the correct amount of space in column groups\n  verticalAlignHeaders() {\n    var minHeight = 0;\n    this.columns.forEach(column => {\n      var height;\n      column.clearVerticalAlign();\n      height = column.getHeight();\n      if (height > minHeight) {\n        minHeight = height;\n      }\n    });\n    this.columns.forEach(column => {\n      column.verticalAlign(this.table.options.columnHeaderVertAlign, minHeight);\n    });\n    this.table.rowManager.adjustTableSize();\n  }\n\n  //////////////// Column Details /////////////////\n  findColumn(subject) {\n    if (typeof subject == \"object\") {\n      if (subject instanceof Column$1) {\n        //subject is column element\n        return subject;\n      } else if (subject instanceof ColumnComponent) {\n        //subject is public column component\n        return subject._getSelf() || false;\n      } else if (typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement) {\n        //subject is a HTML element of the column header\n        let match = this.columns.find(column => {\n          return column.element === subject;\n        });\n        return match || false;\n      }\n    } else {\n      //subject should be treated as the field name of the column\n      return this.columnsByField[subject] || false;\n    }\n\n    //catch all for any other type of input\n    return false;\n  }\n  getColumnByField(field) {\n    return this.columnsByField[field];\n  }\n  getColumnsByFieldRoot(root) {\n    var matches = [];\n    Object.keys(this.columnsByField).forEach(field => {\n      var fieldRoot = field.split(\".\")[0];\n      if (fieldRoot === root) {\n        matches.push(this.columnsByField[field]);\n      }\n    });\n    return matches;\n  }\n  getColumnByIndex(index) {\n    return this.columnsByIndex[index];\n  }\n  getFirstVisibleColumn(index) {\n    var index = this.columnsByIndex.findIndex(col => {\n      return col.visible;\n    });\n    return index > -1 ? this.columnsByIndex[index] : false;\n  }\n  getColumns() {\n    return this.columns;\n  }\n  findColumnIndex(column) {\n    return this.columnsByIndex.findIndex(col => {\n      return column === col;\n    });\n  }\n\n  //return all columns that are not groups\n  getRealColumns() {\n    return this.columnsByIndex;\n  }\n\n  //travers across columns and call action\n  traverse(callback) {\n    this.columnsByIndex.forEach((column, i) => {\n      callback(column, i);\n    });\n  }\n\n  //get defintions of actual columns\n  getDefinitions(active) {\n    var output = [];\n    this.columnsByIndex.forEach(column => {\n      if (!active || active && column.visible) {\n        output.push(column.getDefinition());\n      }\n    });\n    return output;\n  }\n\n  //get full nested definition tree\n  getDefinitionTree() {\n    var output = [];\n    this.columns.forEach(column => {\n      output.push(column.getDefinition(true));\n    });\n    return output;\n  }\n  getComponents(structured) {\n    var output = [],\n      columns = structured ? this.columns : this.columnsByIndex;\n    columns.forEach(column => {\n      output.push(column.getComponent());\n    });\n    return output;\n  }\n  getWidth() {\n    var width = 0;\n    this.columnsByIndex.forEach(column => {\n      if (column.visible) {\n        width += column.getWidth();\n      }\n    });\n    return width;\n  }\n  moveColumn(from, to, after) {\n    this.moveColumnActual(from, to, after);\n    to.element.parentNode.insertBefore(from.element, to.element);\n    if (after) {\n      to.element.parentNode.insertBefore(to.element, from.element);\n    }\n    this.verticalAlignHeaders();\n    this.table.rowManager.reinitialize();\n  }\n  moveColumnActual(from, to, after) {\n    if (from.parent.isGroup) {\n      this._moveColumnInArray(from.parent.columns, from, to, after);\n    } else {\n      this._moveColumnInArray(this.columns, from, to, after);\n    }\n    this._moveColumnInArray(this.columnsByIndex, from, to, after, true);\n    this.renderer.rerenderColumns(true);\n    this.dispatch(\"column-moved\", from, to, after);\n    if (this.subscribedExternal(\"columnMoved\")) {\n      this.dispatchExternal(\"columnMoved\", from.getComponent(), this.table.columnManager.getComponents());\n    }\n  }\n  _moveColumnInArray(columns, from, to, after, updateRows) {\n    var fromIndex = columns.indexOf(from),\n      toIndex,\n      rows = [];\n    if (fromIndex > -1) {\n      columns.splice(fromIndex, 1);\n      toIndex = columns.indexOf(to);\n      if (toIndex > -1) {\n        if (after) {\n          toIndex = toIndex + 1;\n        }\n      } else {\n        toIndex = fromIndex;\n      }\n      columns.splice(toIndex, 0, from);\n      if (updateRows) {\n        rows = this.chain(\"column-moving-rows\", [from, to, after], null, []) || [];\n        rows = rows.concat(this.table.rowManager.rows);\n        rows.forEach(function (row) {\n          if (row.cells.length) {\n            var cell = row.cells.splice(fromIndex, 1)[0];\n            row.cells.splice(toIndex, 0, cell);\n          }\n        });\n      }\n    }\n  }\n  scrollToColumn(column, position, ifVisible) {\n    var left = 0,\n      offset = 0,\n      adjust = 0,\n      colEl = column.getElement();\n    return new Promise((resolve, reject) => {\n      if (typeof position === \"undefined\") {\n        position = this.table.options.scrollToColumnPosition;\n      }\n      if (typeof ifVisible === \"undefined\") {\n        ifVisible = this.table.options.scrollToColumnIfVisible;\n      }\n      if (column.visible) {\n        //align to correct position\n        switch (position) {\n          case \"middle\":\n          case \"center\":\n            adjust = -this.element.clientWidth / 2;\n            break;\n          case \"right\":\n            adjust = colEl.clientWidth - this.headersElement.clientWidth;\n            break;\n        }\n\n        //check column visibility\n        if (!ifVisible) {\n          offset = colEl.offsetLeft;\n          if (offset > 0 && offset + colEl.offsetWidth < this.element.clientWidth) {\n            return false;\n          }\n        }\n\n        //calculate scroll position\n        left = colEl.offsetLeft + adjust;\n        left = Math.max(Math.min(left, this.table.rowManager.element.scrollWidth - this.table.rowManager.element.clientWidth), 0);\n        this.table.rowManager.scrollHorizontal(left);\n        this.scrollHorizontal(left);\n        resolve();\n      } else {\n        console.warn(\"Scroll Error - Column not visible\");\n        reject(\"Scroll Error - Column not visible\");\n      }\n    });\n  }\n\n  //////////////// Cell Management /////////////////\n  generateCells(row) {\n    var cells = [];\n    this.columnsByIndex.forEach(column => {\n      cells.push(column.generateCell(row));\n    });\n    return cells;\n  }\n\n  //////////////// Column Management /////////////////\n  getFlexBaseWidth() {\n    var totalWidth = this.table.element.clientWidth,\n      //table element width\n      fixedWidth = 0;\n\n    //adjust for vertical scrollbar if present\n    if (this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight) {\n      totalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\n    }\n    this.columnsByIndex.forEach(function (column) {\n      var width, minWidth, colWidth;\n      if (column.visible) {\n        width = column.definition.width || 0;\n        minWidth = parseInt(column.minWidth);\n        if (typeof width == \"string\") {\n          if (width.indexOf(\"%\") > -1) {\n            colWidth = totalWidth / 100 * parseInt(width);\n          } else {\n            colWidth = parseInt(width);\n          }\n        } else {\n          colWidth = width;\n        }\n        fixedWidth += colWidth > minWidth ? colWidth : minWidth;\n      }\n    });\n    return fixedWidth;\n  }\n  addColumn(definition, before, nextToColumn) {\n    return new Promise((resolve, reject) => {\n      var column = this._addColumn(definition, before, nextToColumn);\n      this._reIndexColumns();\n      this.dispatch(\"column-add\", definition, before, nextToColumn);\n      if (this.layoutMode() != \"fitColumns\") {\n        column.reinitializeWidth();\n      }\n      this.redraw(true);\n      this.table.rowManager.reinitialize();\n      this.renderer.rerenderColumns();\n      resolve(column);\n    });\n  }\n\n  //remove column from system\n  deregisterColumn(column) {\n    var field = column.getField(),\n      index;\n\n    //remove from field list\n    if (field) {\n      delete this.columnsByField[field];\n    }\n\n    //remove from index list\n    index = this.columnsByIndex.indexOf(column);\n    if (index > -1) {\n      this.columnsByIndex.splice(index, 1);\n    }\n\n    //remove from column list\n    index = this.columns.indexOf(column);\n    if (index > -1) {\n      this.columns.splice(index, 1);\n    }\n    this.verticalAlignHeaders();\n    this.redraw();\n  }\n\n  //redraw columns\n  redraw(force) {\n    if (Helpers.elVisible(this.element)) {\n      this.verticalAlignHeaders();\n    }\n    if (force) {\n      this.table.rowManager.resetScroll();\n      this.table.rowManager.reinitialize();\n    }\n    if (!this.confirm(\"table-redrawing\", force)) {\n      this.layoutRefresh();\n    }\n    this.dispatch(\"table-redraw\", force);\n    this.table.footerManager.redraw();\n  }\n}\nclass BaiscVertical extends Renderer {\n  constructor(table) {\n    super(table);\n    this.verticalFillMode = \"fill\";\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n  }\n  clearRows() {\n    var element = this.tableElement;\n\n    // element.children.detach();\n    while (element.firstChild) element.removeChild(element.firstChild);\n    element.scrollTop = 0;\n    element.scrollLeft = 0;\n    element.style.minWidth = \"\";\n    element.style.minHeight = \"\";\n    element.style.display = \"\";\n    element.style.visibility = \"\";\n  }\n  renderRows() {\n    var element = this.tableElement,\n      onlyGroupHeaders = true;\n    this.rows().forEach((row, index) => {\n      this.styleRow(row, index);\n      element.appendChild(row.getElement());\n      row.initialize(true);\n      if (row.type !== \"group\") {\n        onlyGroupHeaders = false;\n      }\n    });\n    if (onlyGroupHeaders) {\n      element.style.minWidth = this.table.columnManager.getWidth() + \"px\";\n    } else {\n      element.style.minWidth = \"\";\n    }\n  }\n  rerenderRows(callback) {\n    this.render();\n    if (callback) {\n      callback();\n    }\n  }\n  scrollToRowNearestTop(row) {\n    var rowTop = Helpers.elOffset(row.getElement()).top;\n    return !(Math.abs(this.elementVertical.scrollTop - rowTop) > Math.abs(this.elementVertical.scrollTop + this.elementVertical.clientHeight - rowTop));\n  }\n  scrollToRow(row) {\n    var rowEl = row.getElement();\n    this.elementVertical.scrollTop = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top + this.elementVertical.scrollTop;\n  }\n  visibleRows(includingBuffer) {\n    return this.rows();\n  }\n}\nclass VirtualDomVertical extends Renderer {\n  constructor(table) {\n    super(table);\n    this.verticalFillMode = \"fill\";\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.vDomRowHeight = 20; //approximation of row heights for padding\n\n    this.vDomTop = 0; //hold position for first rendered row in the virtual DOM\n    this.vDomBottom = 0; //hold possition for last rendered row in the virtual DOM\n\n    this.vDomScrollPosTop = 0; //last scroll position of the vDom top;\n    this.vDomScrollPosBottom = 0; //last scroll position of the vDom bottom;\n\n    this.vDomTopPad = 0; //hold value of padding for top of virtual DOM\n    this.vDomBottomPad = 0; //hold value of padding for bottom of virtual DOM\n\n    this.vDomMaxRenderChain = 90; //the maximum number of dom elements that can be rendered in 1 go\n\n    this.vDomWindowBuffer = 0; //window row buffer before removing elements, to smooth scrolling\n\n    this.vDomWindowMinTotalRows = 20; //minimum number of rows to be generated in virtual dom (prevent buffering issues on tables with tall rows)\n    this.vDomWindowMinMarginRows = 5; //minimum number of rows to be generated in virtual dom margin\n\n    this.vDomTopNewRows = []; //rows to normalize after appending to optimize render speed\n    this.vDomBottomNewRows = []; //rows to normalize after appending to optimize render speed\n  }\n\n  //////////////////////////////////////\n  ///////// Public Functions ///////////\n  //////////////////////////////////////\n\n  clearRows() {\n    var element = this.tableElement;\n\n    // element.children.detach();\n    while (element.firstChild) element.removeChild(element.firstChild);\n    element.style.paddingTop = \"\";\n    element.style.paddingBottom = \"\";\n    // element.style.minWidth = \"\";\n    element.style.minHeight = \"\";\n    element.style.display = \"\";\n    element.style.visibility = \"\";\n    this.elementVertical.scrollTop = 0;\n    this.elementVertical.scrollLeft = 0;\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.vDomTop = 0;\n    this.vDomBottom = 0;\n    this.vDomTopPad = 0;\n    this.vDomBottomPad = 0;\n    this.vDomScrollPosTop = 0;\n    this.vDomScrollPosBottom = 0;\n  }\n  renderRows() {\n    this._virtualRenderFill();\n  }\n  rerenderRows(callback) {\n    var scrollTop = this.elementVertical.scrollTop;\n    var topRow = false;\n    var topOffset = false;\n    var left = this.table.rowManager.scrollLeft;\n    var rows = this.rows();\n    for (var i = this.vDomTop; i <= this.vDomBottom; i++) {\n      if (rows[i]) {\n        var diff = scrollTop - rows[i].getElement().offsetTop;\n        if (topOffset === false || Math.abs(diff) < topOffset) {\n          topOffset = diff;\n          topRow = i;\n        } else {\n          break;\n        }\n      }\n    }\n    rows.forEach(row => {\n      row.deinitializeHeight();\n    });\n    if (callback) {\n      callback();\n    }\n    this._virtualRenderFill(topRow === false ? this.rows.length - 1 : topRow, true, topOffset || 0);\n    this.scrollColumns(left);\n  }\n  scrollColumns(left) {\n    this.table.rowManager.scrollHorizontal(left);\n  }\n  scrollRows(top, dir) {\n    var topDiff = top - this.vDomScrollPosTop;\n    var bottomDiff = top - this.vDomScrollPosBottom;\n    var margin = this.vDomWindowBuffer * 2;\n    var rows = this.rows();\n    this.scrollTop = top;\n    if (-topDiff > margin || bottomDiff > margin) {\n      //if big scroll redraw table;\n      var left = this.table.rowManager.scrollLeft;\n      this._virtualRenderFill(Math.floor(this.elementVertical.scrollTop / this.elementVertical.scrollHeight * rows.length));\n      this.scrollColumns(left);\n    } else {\n      if (dir) {\n        //scrolling up\n        if (topDiff < 0) {\n          this._addTopRow(rows, -topDiff);\n        }\n        if (bottomDiff < 0) {\n          //hide bottom row if needed\n          if (this.vDomScrollHeight - this.scrollTop > this.vDomWindowBuffer) {\n            this._removeBottomRow(rows, -bottomDiff);\n          } else {\n            this.vDomScrollPosBottom = this.scrollTop;\n          }\n        }\n      } else {\n        if (bottomDiff >= 0) {\n          this._addBottomRow(rows, bottomDiff);\n        }\n\n        //scrolling down\n        if (topDiff >= 0) {\n          //hide top row if needed\n          if (this.scrollTop > this.vDomWindowBuffer) {\n            this._removeTopRow(rows, topDiff);\n          } else {\n            this.vDomScrollPosTop = this.scrollTop;\n          }\n        }\n      }\n    }\n  }\n  resize() {\n    this.vDomWindowBuffer = this.table.options.renderVerticalBuffer || this.elementVertical.clientHeight;\n  }\n  scrollToRowNearestTop(row) {\n    var rowIndex = this.rows().indexOf(row);\n    return !(Math.abs(this.vDomTop - rowIndex) > Math.abs(this.vDomBottom - rowIndex));\n  }\n  scrollToRow(row) {\n    var index = this.rows().indexOf(row);\n    if (index > -1) {\n      this._virtualRenderFill(index, true);\n    }\n  }\n  visibleRows(includingBuffer) {\n    var topEdge = this.elementVertical.scrollTop,\n      bottomEdge = this.elementVertical.clientHeight + topEdge,\n      topFound = false,\n      topRow = 0,\n      bottomRow = 0,\n      rows = this.rows();\n    if (includingBuffer) {\n      topRow = this.vDomTop;\n      bottomRow = this.vDomBottom;\n    } else {\n      for (var i = this.vDomTop; i <= this.vDomBottom; i++) {\n        if (rows[i]) {\n          if (!topFound) {\n            if (topEdge - rows[i].getElement().offsetTop >= 0) {\n              topRow = i;\n            } else {\n              topFound = true;\n              if (bottomEdge - rows[i].getElement().offsetTop >= 0) {\n                bottomRow = i;\n              } else {\n                break;\n              }\n            }\n          } else {\n            if (bottomEdge - rows[i].getElement().offsetTop >= 0) {\n              bottomRow = i;\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    }\n    return rows.slice(topRow, bottomRow + 1);\n  }\n\n  //////////////////////////////////////\n  //////// Internal Rendering //////////\n  //////////////////////////////////////\n\n  //full virtual render\n  _virtualRenderFill(position, forceMove, offset) {\n    var element = this.tableElement,\n      holder = this.elementVertical,\n      topPad = 0,\n      rowsHeight = 0,\n      heightOccupied = 0,\n      topPadHeight = 0,\n      i = 0,\n      rows = this.rows(),\n      rowsCount = rows.length,\n      containerHeight = this.elementVertical.clientHeight;\n    position = position || 0;\n    offset = offset || 0;\n    if (!position) {\n      this.clear();\n    } else {\n      while (element.firstChild) element.removeChild(element.firstChild);\n\n      //check if position is too close to bottom of table\n      heightOccupied = (rowsCount - position + 1) * this.vDomRowHeight;\n      if (heightOccupied < containerHeight) {\n        position -= Math.ceil((containerHeight - heightOccupied) / this.vDomRowHeight);\n        if (position < 0) {\n          position = 0;\n        }\n      }\n\n      //calculate initial pad\n      topPad = Math.min(Math.max(Math.floor(this.vDomWindowBuffer / this.vDomRowHeight), this.vDomWindowMinMarginRows), position);\n      position -= topPad;\n    }\n    if (rowsCount && Helpers.elVisible(this.elementVertical)) {\n      this.vDomTop = position;\n      this.vDomBottom = position - 1;\n      while ((rowsHeight <= containerHeight + this.vDomWindowBuffer || i < this.vDomWindowMinTotalRows) && this.vDomBottom < rowsCount - 1) {\n        var index = this.vDomBottom + 1,\n          row = rows[index],\n          rowHeight = 0;\n        this.styleRow(row, index);\n        element.appendChild(row.getElement());\n        row.initialize();\n        if (!row.heightInitialized) {\n          row.normalizeHeight(true);\n        }\n        rowHeight = row.getHeight();\n        if (i < topPad) {\n          topPadHeight += rowHeight;\n        } else {\n          rowsHeight += rowHeight;\n        }\n        if (rowHeight > this.vDomWindowBuffer) {\n          this.vDomWindowBuffer = rowHeight * 2;\n        }\n        this.vDomBottom++;\n        i++;\n      }\n      if (!position) {\n        this.vDomTopPad = 0;\n        //adjust rowheight to match average of rendered elements\n        this.vDomRowHeight = Math.floor((rowsHeight + topPadHeight) / i);\n        this.vDomBottomPad = this.vDomRowHeight * (rowsCount - this.vDomBottom - 1);\n        this.vDomScrollHeight = topPadHeight + rowsHeight + this.vDomBottomPad - containerHeight;\n      } else {\n        this.vDomTopPad = !forceMove ? this.scrollTop - topPadHeight : this.vDomRowHeight * this.vDomTop + offset;\n        this.vDomBottomPad = this.vDomBottom == rowsCount - 1 ? 0 : Math.max(this.vDomScrollHeight - this.vDomTopPad - rowsHeight - topPadHeight, 0);\n      }\n      element.style.paddingTop = this.vDomTopPad + \"px\";\n      element.style.paddingBottom = this.vDomBottomPad + \"px\";\n      if (forceMove) {\n        this.scrollTop = this.vDomTopPad + topPadHeight + offset - (this.elementVertical.scrollWidth > this.elementVertical.clientWidth ? this.elementVertical.offsetHeight - containerHeight : 0);\n      }\n      this.scrollTop = Math.min(this.scrollTop, this.elementVertical.scrollHeight - containerHeight);\n\n      //adjust for horizontal scrollbar if present (and not at top of table)\n      if (this.elementVertical.scrollWidth > this.elementVertical.offsetWidth && forceMove) {\n        this.scrollTop += this.elementVertical.offsetHeight - containerHeight;\n      }\n      this.vDomScrollPosTop = this.scrollTop;\n      this.vDomScrollPosBottom = this.scrollTop;\n      holder.scrollTop = this.scrollTop;\n      this.dispatch(\"render-virtual-fill\");\n    }\n  }\n  _addTopRow(rows, fillableSpace) {\n    var table = this.tableElement,\n      addedRows = [],\n      paddingAdjust = 0,\n      index = this.vDomTop - 1,\n      i = 0;\n    while (true) {\n      if (this.vDomTop) {\n        let row = rows[index],\n          rowHeight,\n          initialized;\n        if (row && i < this.vDomMaxRenderChain) {\n          rowHeight = row.getHeight() || this.vDomRowHeight;\n          initialized = row.initialized;\n          if (fillableSpace >= rowHeight) {\n            this.styleRow(row, index);\n            table.insertBefore(row.getElement(), table.firstChild);\n            if (!row.initialized || !row.heightInitialized) {\n              addedRows.push(row);\n            }\n            row.initialize();\n            if (!initialized) {\n              rowHeight = row.getElement().offsetHeight;\n              if (rowHeight > this.vDomWindowBuffer) {\n                this.vDomWindowBuffer = rowHeight * 2;\n              }\n            }\n            fillableSpace -= rowHeight;\n            paddingAdjust += rowHeight;\n            this.vDomTop--;\n            index--;\n            i++;\n          } else {\n            break;\n          }\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    for (let row of addedRows) {\n      row.clearCellHeight();\n    }\n    this._quickNormalizeRowHeight(addedRows);\n    if (paddingAdjust) {\n      this.vDomTopPad -= paddingAdjust;\n      if (this.vDomTopPad < 0) {\n        this.vDomTopPad = index * this.vDomRowHeight;\n      }\n      if (index < 1) {\n        this.vDomTopPad = 0;\n      }\n      table.style.paddingTop = this.vDomTopPad + \"px\";\n      this.vDomScrollPosTop -= paddingAdjust;\n    }\n  }\n  _removeTopRow(rows, fillableSpace) {\n    var removableRows = [],\n      paddingAdjust = 0,\n      i = 0;\n    while (true) {\n      let row = rows[this.vDomTop],\n        rowHeight;\n      if (row && i < this.vDomMaxRenderChain) {\n        rowHeight = row.getHeight() || this.vDomRowHeight;\n        if (fillableSpace >= rowHeight) {\n          this.vDomTop++;\n          fillableSpace -= rowHeight;\n          paddingAdjust += rowHeight;\n          removableRows.push(row);\n          i++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    for (let row of removableRows) {\n      let rowEl = row.getElement();\n      if (rowEl.parentNode) {\n        rowEl.parentNode.removeChild(rowEl);\n      }\n    }\n    if (paddingAdjust) {\n      this.vDomTopPad += paddingAdjust;\n      this.tableElement.style.paddingTop = this.vDomTopPad + \"px\";\n      this.vDomScrollPosTop += this.vDomTop ? paddingAdjust : paddingAdjust + this.vDomWindowBuffer;\n    }\n  }\n  _addBottomRow(rows, fillableSpace) {\n    var table = this.tableElement,\n      addedRows = [],\n      paddingAdjust = 0,\n      index = this.vDomBottom + 1,\n      i = 0;\n    while (true) {\n      let row = rows[index],\n        rowHeight,\n        initialized;\n      if (row && i < this.vDomMaxRenderChain) {\n        rowHeight = row.getHeight() || this.vDomRowHeight;\n        initialized = row.initialized;\n        if (fillableSpace >= rowHeight) {\n          this.styleRow(row, index);\n          table.appendChild(row.getElement());\n          if (!row.initialized || !row.heightInitialized) {\n            addedRows.push(row);\n          }\n          row.initialize();\n          if (!initialized) {\n            rowHeight = row.getElement().offsetHeight;\n            if (rowHeight > this.vDomWindowBuffer) {\n              this.vDomWindowBuffer = rowHeight * 2;\n            }\n          }\n          fillableSpace -= rowHeight;\n          paddingAdjust += rowHeight;\n          this.vDomBottom++;\n          index++;\n          i++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    for (let row of addedRows) {\n      row.clearCellHeight();\n    }\n    this._quickNormalizeRowHeight(addedRows);\n    if (paddingAdjust) {\n      this.vDomBottomPad -= paddingAdjust;\n      if (this.vDomBottomPad < 0 || index == rows.length - 1) {\n        this.vDomBottomPad = 0;\n      }\n      table.style.paddingBottom = this.vDomBottomPad + \"px\";\n      this.vDomScrollPosBottom += paddingAdjust;\n    }\n  }\n  _removeBottomRow(rows, fillableSpace) {\n    var removableRows = [],\n      paddingAdjust = 0,\n      i = 0;\n    while (true) {\n      let row = rows[this.vDomBottom],\n        rowHeight;\n      if (row && i < this.vDomMaxRenderChain) {\n        rowHeight = row.getHeight() || this.vDomRowHeight;\n        if (fillableSpace >= rowHeight) {\n          this.vDomBottom--;\n          fillableSpace -= rowHeight;\n          paddingAdjust += rowHeight;\n          removableRows.push(row);\n          i++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    for (let row of removableRows) {\n      let rowEl = row.getElement();\n      if (rowEl.parentNode) {\n        rowEl.parentNode.removeChild(rowEl);\n      }\n    }\n    if (paddingAdjust) {\n      this.vDomBottomPad += paddingAdjust;\n      if (this.vDomBottomPad < 0) {\n        this.vDomBottomPad = 0;\n      }\n      this.tableElement.style.paddingBottom = this.vDomBottomPad + \"px\";\n      this.vDomScrollPosBottom -= paddingAdjust;\n    }\n  }\n  _quickNormalizeRowHeight(rows) {\n    for (let row of rows) {\n      row.calcHeight();\n    }\n    for (let row of rows) {\n      row.setCellHeight();\n    }\n  }\n}\nclass RowManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.element = this.createHolderElement(); //containing element\n    this.tableElement = this.createTableElement(); //table element\n    this.heightFixer = this.createTableElement(); //table element\n\n    this.firstRender = false; //handle first render\n    this.renderMode = \"virtual\"; //current rendering mode\n    this.fixedHeight = false; //current rendering mode\n\n    this.rows = []; //hold row data objects\n    this.activeRowsPipeline = []; //hold caluclation of active rows\n    this.activeRows = []; //rows currently available to on display in the table\n    this.activeRowsCount = 0; //count of active rows\n\n    this.displayRows = []; //rows currently on display in the table\n    this.displayRowsCount = 0; //count of display rows\n\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.rowNumColumn = false; //hold column component for row number column\n\n    this.redrawBlock = false; //prevent redraws to allow multiple data manipulations becore continuing\n    this.redrawBlockRestoreConfig = false; //store latest redraw function calls for when redraw is needed\n    this.redrawBlockRederInPosition = false; //store latest redraw function calls for when redraw is needed\n\n    this.dataPipeline = []; //hold data pipeline tasks\n    this.displayPipeline = []; //hold data display pipeline tasks\n\n    this.renderer = null;\n  }\n\n  //////////////// Setup Functions /////////////////\n\n  createHolderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-tableholder\");\n    el.setAttribute(\"tabindex\", 0);\n    el.setAttribute(\"role\", \"rowgroup\");\n    return el;\n  }\n  createTableElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-table\");\n    el.setAttribute(\"role\", \"rowgroup\");\n    return el;\n  }\n\n  //return containing element\n  getElement() {\n    return this.element;\n  }\n\n  //return table element\n  getTableElement() {\n    return this.tableElement;\n  }\n\n  //return position of row in table\n  getRowPosition(row, active) {\n    if (active) {\n      return this.activeRows.indexOf(row);\n    } else {\n      return this.rows.indexOf(row);\n    }\n  }\n  initialize() {\n    this.initializeRenderer();\n\n    //initialize manager\n    this.element.appendChild(this.tableElement);\n    this.firstRender = true;\n\n    //scroll header along with table body\n    this.element.addEventListener(\"scroll\", () => {\n      var left = this.element.scrollLeft,\n        leftDir = this.scrollLeft > left,\n        top = this.element.scrollTop,\n        topDir = this.scrollTop > top;\n\n      //handle horizontal scrolling\n      if (this.scrollLeft != left) {\n        this.scrollLeft = left;\n        this.dispatch(\"scroll-horizontal\", left, leftDir);\n        this.dispatchExternal(\"scrollHorizontal\", left, leftDir);\n      }\n\n      //handle verical scrolling\n      if (this.scrollTop != top) {\n        this.scrollTop = top;\n        this.renderer.scrollRows(top, topDir);\n        this.dispatch(\"scroll-vertical\", top, topDir);\n        this.dispatchExternal(\"scrollVertical\", top, topDir);\n      }\n    });\n  }\n\n  ////////////////// Row Manipulation //////////////////\n  findRow(subject) {\n    if (typeof subject == \"object\") {\n      if (subject instanceof Row) {\n        //subject is row element\n        return subject;\n      } else if (subject instanceof RowComponent$1) {\n        //subject is public row component\n        return subject._getSelf() || false;\n      } else if (typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement) {\n        //subject is a HTML element of the row\n        let match = this.rows.find(row => {\n          return row.getElement() === subject;\n        });\n        return match || false;\n      }\n    } else if (typeof subject == \"undefined\" || subject === null) {\n      return false;\n    } else {\n      //subject should be treated as the index of the row\n      let match = this.rows.find(row => {\n        return row.data[this.table.options.index] == subject;\n      });\n      return match || false;\n    }\n\n    //catch all for any other type of input\n    return false;\n  }\n  getRowFromDataObject(data) {\n    var match = this.rows.find(row => {\n      return row.data === data;\n    });\n    return match || false;\n  }\n  getRowFromPosition(position, active) {\n    if (active) {\n      return this.activeRows[position];\n    } else {\n      return this.rows[position];\n    }\n  }\n  scrollToRow(row, position, ifVisible) {\n    return this.renderer.scrollToRowPosition(row, position, ifVisible);\n  }\n\n  ////////////////// Data Handling //////////////////\n  setData(data, renderInPosition, columnsChanged) {\n    return new Promise((resolve, reject) => {\n      if (renderInPosition && this.getDisplayRows().length) {\n        if (this.table.options.pagination) {\n          this._setDataActual(data, true);\n        } else {\n          this.reRenderInPosition(() => {\n            this._setDataActual(data);\n          });\n        }\n      } else {\n        if (this.table.options.autoColumns && columnsChanged && this.table.initialized) {\n          this.table.columnManager.generateColumnsFromRowData(data);\n        }\n        this.resetScroll();\n        this._setDataActual(data);\n      }\n      resolve();\n    });\n  }\n  _setDataActual(data, renderInPosition) {\n    this.dispatchExternal(\"dataProcessing\", data);\n    this._wipeElements();\n    if (Array.isArray(data)) {\n      this.dispatch(\"data-processing\", data);\n      data.forEach((def, i) => {\n        if (def && typeof def === \"object\") {\n          var row = new Row(def, this);\n          this.rows.push(row);\n        } else {\n          console.warn(\"Data Loading Warning - Invalid row data detected and ignored, expecting object but received:\", def);\n        }\n      });\n      this.refreshActiveData(false, false, renderInPosition);\n      this.dispatch(\"data-processed\", data);\n      this.dispatchExternal(\"dataProcessed\", data);\n    } else {\n      console.error(\"Data Loading Error - Unable to process data due to invalid data type \\nExpecting: array \\nReceived: \", typeof data, \"\\nData:     \", data);\n    }\n  }\n  _wipeElements() {\n    this.dispatch(\"rows-wipe\");\n    this.rows.forEach(row => {\n      row.wipe();\n    });\n    this.rows = [];\n    this.activeRows = [];\n    this.activeRowsPipeline = [];\n    this.activeRowsCount = 0;\n    this.displayRows = [];\n    this.displayRowsCount = 0;\n    this.adjustTableSize();\n  }\n  deleteRow(row, blockRedraw) {\n    var allIndex = this.rows.indexOf(row),\n      activeIndex = this.activeRows.indexOf(row);\n    if (activeIndex > -1) {\n      this.activeRows.splice(activeIndex, 1);\n    }\n    if (allIndex > -1) {\n      this.rows.splice(allIndex, 1);\n    }\n    this.setActiveRows(this.activeRows);\n    this.displayRowIterator(rows => {\n      var displayIndex = rows.indexOf(row);\n      if (displayIndex > -1) {\n        rows.splice(displayIndex, 1);\n      }\n    });\n    if (!blockRedraw) {\n      this.reRenderInPosition();\n    }\n    this.regenerateRowNumbers();\n    this.dispatchExternal(\"rowDeleted\", row.getComponent());\n    if (!this.displayRowsCount) {\n      this._showPlaceholder();\n    }\n    if (this.subscribedExternal(\"dataChanged\")) {\n      this.dispatchExternal(\"dataChanged\", this.getData());\n    }\n  }\n  addRow(data, pos, index, blockRedraw) {\n    var row = this.addRowActual(data, pos, index, blockRedraw);\n    this.dispatch(\"row-added\", row, data, pos, index);\n    return row;\n  }\n\n  //add multiple rows\n  addRows(data, pos, index) {\n    var rows = [];\n    return new Promise((resolve, reject) => {\n      pos = this.findAddRowPos(pos);\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n      data.length - 1;\n      if (typeof index == \"undefined\" && pos || typeof index !== \"undefined\" && !pos) {\n        data.reverse();\n      }\n      data.forEach((item, i) => {\n        var row = this.addRow(item, pos, index, true);\n        rows.push(row);\n        this.dispatch(\"row-added\", row, data, pos, index);\n      });\n      this.refreshActiveData(false, false, true);\n      this.regenerateRowNumbers();\n      if (rows.length) {\n        this._clearPlaceholder();\n      }\n      resolve(rows);\n    });\n  }\n  findAddRowPos(pos) {\n    if (typeof pos === \"undefined\") {\n      pos = this.table.options.addRowPos;\n    }\n    if (pos === \"pos\") {\n      pos = true;\n    }\n    if (pos === \"bottom\") {\n      pos = false;\n    }\n    return pos;\n  }\n  addRowActual(data, pos, index, blockRedraw) {\n    var row = data instanceof Row ? data : new Row(data || {}, this),\n      top = this.findAddRowPos(pos),\n      allIndex = -1,\n      activeIndex,\n      chainResult;\n    if (!index) {\n      chainResult = this.chain(\"row-adding-position\", [row, top], null, {\n        index,\n        top\n      });\n      index = chainResult.index;\n      top = chainResult.top;\n    }\n    if (typeof index !== \"undefined\") {\n      index = this.findRow(index);\n    }\n    index = this.chain(\"row-adding-index\", [row, index, top], null, index);\n    if (index) {\n      allIndex = this.rows.indexOf(index);\n    }\n    if (index && allIndex > -1) {\n      activeIndex = this.activeRows.indexOf(index);\n      this.displayRowIterator(function (rows) {\n        var displayIndex = rows.indexOf(index);\n        if (displayIndex > -1) {\n          rows.splice(top ? displayIndex : displayIndex + 1, 0, row);\n        }\n      });\n      if (activeIndex > -1) {\n        this.activeRows.splice(top ? activeIndex : activeIndex + 1, 0, row);\n      }\n      this.rows.splice(top ? allIndex : allIndex + 1, 0, row);\n    } else {\n      if (top) {\n        this.displayRowIterator(function (rows) {\n          rows.unshift(row);\n        });\n        this.activeRows.unshift(row);\n        this.rows.unshift(row);\n      } else {\n        this.displayRowIterator(function (rows) {\n          rows.push(row);\n        });\n        this.activeRows.push(row);\n        this.rows.push(row);\n      }\n    }\n    this.setActiveRows(this.activeRows);\n    this.dispatchExternal(\"rowAdded\", row.getComponent());\n    if (this.subscribedExternal(\"dataChanged\")) {\n      this.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\n    }\n    if (!blockRedraw) {\n      this.reRenderInPosition();\n    }\n    return row;\n  }\n  moveRow(from, to, after) {\n    this.dispatch(\"row-move\", from, to, after);\n    this.moveRowActual(from, to, after);\n    this.regenerateRowNumbers();\n    this.dispatch(\"row-moved\", from, to, after);\n    this.dispatchExternal(\"rowMoved\", from.getComponent());\n  }\n  moveRowActual(from, to, after) {\n    this.moveRowInArray(this.rows, from, to, after);\n    this.moveRowInArray(this.activeRows, from, to, after);\n    this.displayRowIterator(rows => {\n      this.moveRowInArray(rows, from, to, after);\n    });\n    this.dispatch(\"row-moving\", from, to, after);\n  }\n  moveRowInArray(rows, from, to, after) {\n    var fromIndex, toIndex, start, end;\n    if (from !== to) {\n      fromIndex = rows.indexOf(from);\n      if (fromIndex > -1) {\n        rows.splice(fromIndex, 1);\n        toIndex = rows.indexOf(to);\n        if (toIndex > -1) {\n          if (after) {\n            rows.splice(toIndex + 1, 0, from);\n          } else {\n            rows.splice(toIndex, 0, from);\n          }\n        } else {\n          rows.splice(fromIndex, 0, from);\n        }\n      }\n\n      //restyle rows\n      if (rows === this.getDisplayRows()) {\n        start = fromIndex < toIndex ? fromIndex : toIndex;\n        end = toIndex > fromIndex ? toIndex : fromIndex + 1;\n        for (let i = start; i <= end; i++) {\n          if (rows[i]) {\n            this.styleRow(rows[i], i);\n          }\n        }\n      }\n    }\n  }\n  clearData() {\n    this.setData([]);\n  }\n  getRowIndex(row) {\n    return this.findRowIndex(row, this.rows);\n  }\n  getDisplayRowIndex(row) {\n    var index = this.getDisplayRows().indexOf(row);\n    return index > -1 ? index : false;\n  }\n  nextDisplayRow(row, rowOnly) {\n    var index = this.getDisplayRowIndex(row),\n      nextRow = false;\n    if (index !== false && index < this.displayRowsCount - 1) {\n      nextRow = this.getDisplayRows()[index + 1];\n    }\n    if (nextRow && (!(nextRow instanceof Row) || nextRow.type != \"row\")) {\n      return this.nextDisplayRow(nextRow, rowOnly);\n    }\n    return nextRow;\n  }\n  prevDisplayRow(row, rowOnly) {\n    var index = this.getDisplayRowIndex(row),\n      prevRow = false;\n    if (index) {\n      prevRow = this.getDisplayRows()[index - 1];\n    }\n    if (rowOnly && prevRow && (!(prevRow instanceof Row) || prevRow.type != \"row\")) {\n      return this.prevDisplayRow(prevRow, rowOnly);\n    }\n    return prevRow;\n  }\n  findRowIndex(row, list) {\n    var rowIndex;\n    row = this.findRow(row);\n    if (row) {\n      rowIndex = list.indexOf(row);\n      if (rowIndex > -1) {\n        return rowIndex;\n      }\n    }\n    return false;\n  }\n  getData(active, transform) {\n    var output = [],\n      rows = this.getRows(active);\n    rows.forEach(function (row) {\n      if (row.type == \"row\") {\n        output.push(row.getData(transform || \"data\"));\n      }\n    });\n    return output;\n  }\n  getComponents(active) {\n    var output = [],\n      rows = this.getRows(active);\n    rows.forEach(function (row) {\n      output.push(row.getComponent());\n    });\n    return output;\n  }\n  getDataCount(active) {\n    var rows = this.getRows(active);\n    return rows.length;\n  }\n  scrollHorizontal(left) {\n    this.scrollLeft = left;\n    this.element.scrollLeft = left;\n    this.dispatch(\"scroll-horizontal\", left);\n  }\n  registerDataPipelineHandler(handler, priority) {\n    if (typeof priority !== \"undefined\") {\n      this.dataPipeline.push({\n        handler,\n        priority\n      });\n      this.dataPipeline.sort((a, b) => {\n        return a.priority - b.priority;\n      });\n    } else {\n      console.error(\"Data pipeline handlers must have a priority in order to be registered\");\n    }\n  }\n  registerDisplayPipelineHandler(handler, priority) {\n    if (typeof priority !== \"undefined\") {\n      this.displayPipeline.push({\n        handler,\n        priority\n      });\n      this.displayPipeline.sort((a, b) => {\n        return a.priority - b.priority;\n      });\n    } else {\n      console.error(\"Display pipeline handlers must have a priority in order to be registered\");\n    }\n  }\n\n  //set active data set\n  refreshActiveData(handler, skipStage, renderInPosition) {\n    var table = this.table,\n      stage = \"\",\n      index = 0,\n      cascadeOrder = [\"all\", \"dataPipeline\", \"display\", \"displayPipeline\", \"end\"];\n    if (typeof handler === \"function\") {\n      index = this.dataPipeline.findIndex(item => {\n        return item.handler === handler;\n      });\n      if (index > -1) {\n        stage = \"dataPipeline\";\n        if (skipStage) {\n          if (index == this.dataPipeline.length - 1) {\n            stage = \"display\";\n          } else {\n            index++;\n          }\n        }\n      } else {\n        index = this.displayPipeline.findIndex(item => {\n          return item.handler === handler;\n        });\n        if (index > -1) {\n          stage = \"displayPipeline\";\n          if (skipStage) {\n            if (index == this.displayPipeline.length - 1) {\n              stage = \"end\";\n            } else {\n              index++;\n            }\n          }\n        } else {\n          console.error(\"Unable to refresh data, invalid handler provided\", handler);\n          return;\n        }\n      }\n    } else {\n      stage = handler || \"all\";\n      index = 0;\n    }\n    if (this.redrawBlock) {\n      if (!this.redrawBlockRestoreConfig || this.redrawBlockRestoreConfig && (this.redrawBlockRestoreConfig.stage === stage && index < this.redrawBlockRestoreConfig.index || cascadeOrder.indexOf(stage) < cascadeOrder.indexOf(this.redrawBlockRestoreConfig.stage))) {\n        this.redrawBlockRestoreConfig = {\n          handler: handler,\n          skipStage: skipStage,\n          renderInPosition: renderInPosition,\n          stage: stage,\n          index: index\n        };\n      }\n      return;\n    } else {\n      this.dispatch(\"data-refeshing\");\n      if (!handler) {\n        this.activeRowsPipeline[0] = this.rows.slice(0);\n      }\n\n      //cascade through data refresh stages\n      switch (stage) {\n        case \"all\":\n        //handle case where alldata needs refreshing\n\n        case \"dataPipeline\":\n          for (let i = index; i < this.dataPipeline.length; i++) {\n            let result = this.dataPipeline[i].handler(this.activeRowsPipeline[i].slice(0));\n            this.activeRowsPipeline[i + 1] = result || this.activeRowsPipeline[i].slice(0);\n          }\n          this.setActiveRows(this.activeRowsPipeline[this.dataPipeline.length]);\n          this.regenerateRowNumbers();\n        case \"display\":\n          index = 0;\n          this.resetDisplayRows();\n        case \"displayPipeline\":\n          for (let i = index; i < this.displayPipeline.length; i++) {\n            let result = this.displayPipeline[i].handler((i ? this.getDisplayRows(i - 1) : this.activeRows).slice(0), renderInPosition);\n            this.setDisplayRows(result || this.getDisplayRows(i - 1).slice(0), i);\n          }\n        //case to handle scenario when trying to skip past end stage\n      }\n\n      if (Helpers.elVisible(this.element)) {\n        if (renderInPosition) {\n          this.reRenderInPosition();\n        } else {\n          if (!handler) {\n            this.table.columnManager.renderer.renderColumns();\n          }\n          this.renderTable();\n          if (table.options.layoutColumnsOnNewData) {\n            this.table.columnManager.redraw(true);\n          }\n        }\n      }\n      this.dispatch(\"data-refeshed\");\n    }\n  }\n\n  //regenerate row numbers for row number formatter if in use\n  regenerateRowNumbers() {\n    if (this.rowNumColumn) {\n      this.activeRows.forEach(row => {\n        var cell = row.getCell(this.rowNumColumn);\n        if (cell) {\n          cell._generateContents();\n        }\n      });\n    }\n  }\n  setActiveRows(activeRows) {\n    this.activeRows = activeRows;\n    this.activeRowsCount = this.activeRows.length;\n  }\n\n  //reset display rows array\n  resetDisplayRows() {\n    this.displayRows = [];\n    this.displayRows.push(this.activeRows.slice(0));\n    this.displayRowsCount = this.displayRows[0].length;\n  }\n  getNextDisplayIndex() {\n    return this.displayRows.length;\n  }\n\n  //set display row pipeline data\n  setDisplayRows(displayRows, index) {\n    var output = true;\n    if (index && typeof this.displayRows[index] != \"undefined\") {\n      this.displayRows[index] = displayRows;\n      output = true;\n    } else {\n      this.displayRows.push(displayRows);\n      output = index = this.displayRows.length - 1;\n    }\n    if (index == this.displayRows.length - 1) {\n      this.displayRowsCount = this.displayRows[this.displayRows.length - 1].length;\n    }\n    return output;\n  }\n  getDisplayRows(index) {\n    if (typeof index == \"undefined\") {\n      return this.displayRows.length ? this.displayRows[this.displayRows.length - 1] : [];\n    } else {\n      return this.displayRows[index] || [];\n    }\n  }\n  getVisibleRows(chain, viewable) {\n    var rows = Object.assign([], this.renderer.visibleRows(!viewable));\n    if (chain) {\n      rows = this.chain(\"rows-visible\", [viewable], rows, rows);\n    }\n    return rows;\n  }\n\n  //repeat action accross display rows\n  displayRowIterator(callback) {\n    this.activeRowsPipeline.forEach(callback);\n    this.displayRows.forEach(callback);\n    this.displayRowsCount = this.displayRows[this.displayRows.length - 1].length;\n  }\n\n  //return only actual rows (not group headers etc)\n  getRows(type) {\n    var rows;\n    switch (type) {\n      case \"active\":\n        rows = this.activeRows;\n        break;\n      case \"display\":\n        rows = this.table.rowManager.getDisplayRows();\n        break;\n      case \"visible\":\n        rows = this.getVisibleRows(true);\n        break;\n      default:\n        rows = this.chain(\"rows-retrieve\", type, null, this.rows) || this.rows;\n    }\n    return rows;\n  }\n\n  ///////////////// Table Rendering /////////////////\n  //trigger rerender of table in current position\n  reRenderInPosition(callback) {\n    if (this.redrawBlock) {\n      if (callback) {\n        callback();\n      } else {\n        this.redrawBlockRederInPosition = true;\n      }\n    } else {\n      this.renderer.rerenderRows(callback);\n    }\n  }\n  initializeRenderer() {\n    var renderClass;\n    var renderers = {\n      \"virtual\": VirtualDomVertical,\n      \"basic\": BaiscVertical\n    };\n    if (typeof this.table.options.renderVertical === \"string\") {\n      renderClass = renderers[this.table.options.renderVertical];\n    } else {\n      renderClass = this.table.options.renderVertical;\n    }\n    if (renderClass) {\n      this.renderer = new renderClass(this.table, this.element, this.tableElement);\n      this.renderer.initialize();\n      if (this.table.element.clientHeight || this.table.options.height) {\n        this.fixedHeight = true;\n      } else {\n        this.fixedHeight = false;\n      }\n    } else {\n      console.error(\"Unable to find matching renderer:\", table.options.renderVertical);\n    }\n  }\n  getRenderMode() {\n    return this.renderMode;\n  }\n  renderTable() {\n    this.dispatchExternal(\"renderStarted\");\n    this.element.scrollTop = 0;\n    this._clearTable();\n    if (this.displayRowsCount) {\n      this.renderer.renderRows();\n      if (this.firstRender) {\n        this.firstRender = false;\n        this.layoutRefresh();\n      }\n    } else {\n      this.renderEmptyScroll();\n    }\n    if (!this.fixedHeight) {\n      this.adjustTableSize();\n    }\n    this.dispatch(\"table-layout\");\n    if (!this.displayRowsCount) {\n      this._showPlaceholder();\n    }\n    this.dispatchExternal(\"renderComplete\");\n  }\n\n  //show scrollbars on empty table div\n  renderEmptyScroll() {\n    if (this.table.options.placeholder) {\n      this.tableElement.style.display = \"none\";\n    } else {\n      this.tableElement.style.minWidth = this.table.columnManager.getWidth() + \"px\";\n      // this.tableElement.style.minHeight = \"1px\";\n      // this.tableElement.style.visibility = \"hidden\";\n    }\n  }\n\n  _clearTable() {\n    var element = this.tableElement;\n    this._clearPlaceholder();\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.renderer.clearRows();\n  }\n  _showPlaceholder() {\n    if (this.table.options.placeholder) {\n      this.table.options.placeholder.setAttribute(\"tabulator-render-mode\", this.renderMode);\n      this.getElement().appendChild(this.table.options.placeholder);\n      this.table.options.placeholder.style.width = this.table.columnManager.getWidth() + \"px\";\n    }\n  }\n  _clearPlaceholder() {\n    if (this.table.options.placeholder && this.table.options.placeholder.parentNode) {\n      this.table.options.placeholder.parentNode.removeChild(this.table.options.placeholder);\n    }\n  }\n  styleRow(row, index) {\n    var rowEl = row.getElement();\n    if (index % 2) {\n      rowEl.classList.add(\"tabulator-row-even\");\n      rowEl.classList.remove(\"tabulator-row-odd\");\n    } else {\n      rowEl.classList.add(\"tabulator-row-odd\");\n      rowEl.classList.remove(\"tabulator-row-even\");\n    }\n  }\n\n  //normalize height of active rows\n  normalizeHeight() {\n    this.activeRows.forEach(function (row) {\n      row.normalizeHeight();\n    });\n  }\n\n  //adjust the height of the table holder to fit in the Tabulator element\n  adjustTableSize() {\n    var initialHeight = this.element.clientHeight;\n    if (this.renderer.verticalFillMode === \"fill\") {\n      let otherHeight = Math.floor(this.table.columnManager.getElement().getBoundingClientRect().height + (this.table.footerManager && this.table.footerManager.active && !this.table.footerManager.external ? this.table.footerManager.getElement().getBoundingClientRect().height : 0));\n      if (this.fixedHeight) {\n        this.element.style.minHeight = \"calc(100% - \" + otherHeight + \"px)\";\n        this.element.style.height = \"calc(100% - \" + otherHeight + \"px)\";\n        this.element.style.maxHeight = \"calc(100% - \" + otherHeight + \"px)\";\n      } else {\n        this.element.style.height = \"\";\n        this.element.style.height = this.table.element.clientHeight - otherHeight + \"px\";\n        this.element.scrollTop = this.scrollTop;\n      }\n      this.renderer.resize();\n\n      //check if the table has changed size when dealing with variable height tables\n      if (!this.fixedHeight && initialHeight != this.element.clientHeight) {\n        if (this.subscribed(\"table-resize\")) {\n          this.dispatch(\"table-resize\");\n        } else {\n          this.redraw();\n        }\n      }\n    }\n  }\n\n  //renitialize all rows\n  reinitialize() {\n    this.rows.forEach(function (row) {\n      row.reinitialize(true);\n    });\n  }\n\n  //prevent table from being redrawn\n  blockRedraw() {\n    this.redrawBlock = true;\n    this.redrawBlockRestoreConfig = false;\n  }\n\n  //restore table redrawing\n  restoreRedraw() {\n    this.redrawBlock = false;\n    if (this.redrawBlockRestoreConfig) {\n      this.refreshActiveData(this.redrawBlockRestoreConfig.handler, this.redrawBlockRestoreConfig.skipStage, this.redrawBlockRestoreConfig.renderInPosition);\n      this.redrawBlockRestoreConfig = false;\n    } else {\n      if (this.redrawBlockRederInPosition) {\n        this.reRenderInPosition();\n      }\n    }\n    this.redrawBlockRederInPosition = false;\n  }\n\n  //redraw table\n  redraw(force) {\n    var left = this.scrollLeft;\n    this.adjustTableSize();\n    this.table.tableWidth = this.table.element.clientWidth;\n    if (!force) {\n      this.reRenderInPosition();\n      this.scrollHorizontal(left);\n      if (!this.displayRowsCount) {\n        if (this.table.options.placeholder) {\n          this.getElement().appendChild(this.table.options.placeholder);\n        }\n      }\n    } else {\n      this.renderTable();\n    }\n  }\n  resetScroll() {\n    this.element.scrollLeft = 0;\n    this.element.scrollTop = 0;\n    if (this.table.browser === \"ie\") {\n      var event = document.createEvent(\"Event\");\n      event.initEvent(\"scroll\", false, true);\n      this.element.dispatchEvent(event);\n    } else {\n      this.element.dispatchEvent(new Event('scroll'));\n    }\n  }\n}\nclass FooterManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.active = false;\n    this.element = this.createElement(); //containing element\n    this.external = false;\n    this.links = [];\n    this.initializeElement();\n  }\n  initialize() {\n    this.initializeElement();\n  }\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-footer\");\n    return el;\n  }\n  initializeElement() {\n    if (this.table.options.footerElement) {\n      switch (typeof this.table.options.footerElement) {\n        case \"string\":\n          if (this.table.options.footerElement[0] === \"<\") {\n            this.element.innerHTML = this.table.options.footerElement;\n          } else {\n            this.external = true;\n            this.element = document.querySelector(this.table.options.footerElement);\n          }\n          break;\n        default:\n          this.element = this.table.options.footerElement;\n          break;\n      }\n    }\n  }\n  getElement() {\n    return this.element;\n  }\n  append(element, parent) {\n    this.activate(parent);\n    this.element.appendChild(element);\n    this.table.rowManager.adjustTableSize();\n  }\n  prepend(element, parent) {\n    this.activate(parent);\n    this.element.insertBefore(element, this.element.firstChild);\n    this.table.rowManager.adjustTableSize();\n  }\n  remove(element) {\n    element.parentNode.removeChild(element);\n    this.deactivate();\n  }\n  deactivate(force) {\n    if (!this.element.firstChild || force) {\n      if (!this.external) {\n        this.element.parentNode.removeChild(this.element);\n      }\n      this.active = false;\n    }\n  }\n  activate(parent) {\n    if (!this.active) {\n      this.active = true;\n      if (!this.external) {\n        this.table.element.appendChild(this.getElement());\n        this.table.element.style.display = '';\n      }\n    }\n    if (parent) {\n      this.links.push(parent);\n    }\n  }\n  redraw() {\n    this.links.forEach(function (link) {\n      link.footerRedraw();\n    });\n  }\n}\nclass InteractionManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.el = null;\n    this.abortClasses = [\"tabulator-headers\", \"tabulator-table\"];\n    this.previousTargets = {};\n    this.listeners = [\"click\", \"dblclick\", \"contextmenu\", \"mouseenter\", \"mouseleave\", \"mouseover\", \"mouseout\", \"mousemove\", \"touchstart\", \"touchend\"];\n    this.componentMap = {\n      \"tabulator-cell\": \"cell\",\n      \"tabulator-row\": \"row\",\n      \"tabulator-group\": \"group\",\n      \"tabulator-col\": \"column\"\n    };\n    this.pseudoTrackers = {\n      \"row\": {\n        subscriber: null,\n        target: null\n      },\n      \"cell\": {\n        subscriber: null,\n        target: null\n      },\n      \"group\": {\n        subscriber: null,\n        target: null\n      },\n      \"column\": {\n        subscriber: null,\n        target: null\n      }\n    };\n    this.pseudoTracking = false;\n  }\n  initialize() {\n    this.el = this.table.element;\n    this.buildListenerMap();\n    this.bindSubscriptionWatchers();\n  }\n  buildListenerMap() {\n    var listenerMap = {};\n    this.listeners.forEach(listener => {\n      listenerMap[listener] = {\n        handler: null,\n        components: []\n      };\n    });\n    this.listeners = listenerMap;\n  }\n  bindPseudoEvents() {\n    Object.keys(this.pseudoTrackers).forEach(key => {\n      this.pseudoTrackers[key].subscriber = this.pseudoMouseEnter.bind(this, key);\n      this.subscribe(key + \"-mouseover\", this.pseudoTrackers[key].subscriber);\n    });\n    this.pseudoTracking = true;\n  }\n  pseudoMouseEnter(key, e, target) {\n    if (this.pseudoTrackers[key].target !== target) {\n      if (this.pseudoTrackers[key].target) {\n        this.dispatch(key + \"-mouseleave\", e, target);\n      }\n      this.pseudoMouseLeave(key, e);\n      this.pseudoTrackers[key].target = target;\n      this.dispatch(key + \"-mouseenter\", e, target);\n    }\n  }\n  pseudoMouseLeave(key, e) {\n    var leaveList = Object.keys(this.pseudoTrackers),\n      linkedKeys = {\n        \"row\": [\"cell\"],\n        \"cell\": [\"row\"]\n      };\n    leaveList = leaveList.filter(item => {\n      var links = linkedKeys[key];\n      return item !== key && (!links || links && !links.includes(item));\n    });\n    leaveList.forEach(key => {\n      var target = this.pseudoTrackers[key].target;\n      if (this.pseudoTrackers[key].target) {\n        this.dispatch(key + \"-mouseleave\", e, target);\n        this.pseudoTrackers[key].target = null;\n      }\n    });\n  }\n  bindSubscriptionWatchers() {\n    var listeners = Object.keys(this.listeners),\n      components = Object.values(this.componentMap);\n    for (let comp of components) {\n      for (let listener of listeners) {\n        let key = comp + \"-\" + listener;\n        this.subscriptionChange(key, this.subscriptionChanged.bind(this, comp, listener));\n      }\n    }\n    this.subscribe(\"table-destroy\", this.clearWatchers.bind(this));\n  }\n  subscriptionChanged(component, key, added) {\n    var listener = this.listeners[key].components,\n      index = listener.indexOf(component),\n      changed = false;\n    if (added) {\n      if (index === -1) {\n        listener.push(component);\n        changed = true;\n      }\n    } else {\n      if (!this.subscribed(component + \"-\" + key)) {\n        if (index > -1) {\n          listener.splice(index, 1);\n          changed = true;\n        }\n      }\n    }\n    if ((key === \"mouseenter\" || key === \"mouseleave\") && !this.pseudoTracking) {\n      this.bindPseudoEvents();\n    }\n    if (changed) {\n      this.updateEventListeners();\n    }\n  }\n  updateEventListeners() {\n    for (let key in this.listeners) {\n      let listener = this.listeners[key];\n      if (listener.components.length) {\n        if (!listener.handler) {\n          listener.handler = this.track.bind(this, key);\n          this.el.addEventListener(key, listener.handler);\n          // this.el.addEventListener(key, listener.handler, {passive: true})\n        }\n      } else {\n        if (listener.handler) {\n          this.el.removeEventListener(key, listener.handler);\n          listener.handler = null;\n        }\n      }\n    }\n  }\n  track(type, e) {\n    var path = e.composedPath && e.composedPath() || e.path;\n    var targets = this.findTargets(path);\n    targets = this.bindComponents(type, targets);\n    this.triggerEvents(type, e, targets);\n    if (this.pseudoTracking && (type == \"mouseover\" || type == \"mouseleave\") && !Object.keys(targets).length) {\n      this.pseudoMouseLeave(\"none\", e);\n    }\n  }\n  findTargets(path) {\n    var targets = {};\n    let componentMap = Object.keys(this.componentMap);\n    for (let el of path) {\n      let classList = el.classList ? [...el.classList] : [];\n      let abort = classList.filter(item => {\n        return this.abortClasses.includes(item);\n      });\n      if (abort.length) {\n        break;\n      }\n      let elTargets = classList.filter(item => {\n        return componentMap.includes(item);\n      });\n      for (let target of elTargets) {\n        targets[this.componentMap[target]] = el;\n      }\n    }\n    if (targets.group && targets.group === targets.row) {\n      delete targets.row;\n    }\n    return targets;\n  }\n  bindComponents(type, targets) {\n    //ensure row component is looked up before cell\n    var keys = Object.keys(targets).reverse(),\n      listener = this.listeners[type],\n      targetMatches = {};\n    for (let key of keys) {\n      let component;\n      let target = targets[key];\n      let previousTarget = this.previousTargets[key];\n      if (previousTarget && previousTarget.target === target) {\n        component = previousTarget.component;\n      } else {\n        switch (key) {\n          case \"row\":\n          case \"group\":\n            if (listener.components.includes(\"row\") || listener.components.includes(\"cell\")) {\n              let rows = this.table.rowManager.getVisibleRows(true);\n              component = rows.find(row => {\n                return row.getElement() === target;\n              });\n            }\n            break;\n          case \"column\":\n            if (listener.components.includes(\"column\")) {\n              component = this.table.columnManager.findColumn(target);\n            }\n            break;\n          case \"cell\":\n            if (listener.components.includes(\"cell\")) {\n              component = targets[\"row\"].findCell(target);\n            }\n            break;\n        }\n      }\n      if (component) {\n        targets[key] = component;\n        targetMatches[key] = {\n          target: target,\n          component: component\n        };\n      }\n    }\n    this.previousTargets = targetMatches;\n    return targets;\n  }\n  triggerEvents(type, e, targets) {\n    var listener = this.listeners[type];\n    for (let key in targets) {\n      if (targets[key] && listener.components.includes(key)) {\n        this.dispatch(key + \"-\" + type, e, targets[key]);\n      }\n    }\n  }\n  clearWatchers() {\n    for (let key in this.listeners) {\n      let listener = this.listeners[key];\n      if (listener.handler) {\n        this.el.removeEventListener(key, listener.handler);\n        listener.handler = null;\n      }\n    }\n  }\n}\nclass ComponentFunctionBinder {\n  constructor(table) {\n    this.table = table;\n    this.bindings = {};\n  }\n  bind(type, funcName, handler) {\n    if (!this.bindings[type]) {\n      this.bindings[type] = {};\n    }\n    if (this.bindings[type][funcName]) {\n      console.warn(\"Unable to bind component handler, a matching function name is already bound\", type, funcName, hanlder);\n    } else {\n      this.bindings[type][funcName] = handler;\n    }\n  }\n  handle(type, component, name) {\n    if (this.bindings[type] && this.bindings[type][name]) {\n      return this.bindings[type][name].bind(null, component);\n    } else {\n      if (name !== \"then\" && typeof name === \"string\" && !name.startsWith(\"_\")) {\n        console.error(\"The \" + type + \" component does not have a \" + name + \" function, have you checked that you have the correct Tabulator module installed?\");\n      }\n    }\n  }\n}\nclass DataLoader extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.loaderElement = this.createLoaderElement(); //loader message div\n    this.msgElement = this.createMsgElement(); //message element\n    this.loadingElement = null;\n    this.errorElement = null;\n    this.requestOrder = 0; //prevent requests comming out of sequence if overridden by another load request\n    this.loading = false;\n  }\n  initialize() {\n    var template;\n    this.loaderElement.appendChild(this.msgElement);\n    if (this.table.options.dataLoaderLoading) {\n      if (typeof this.table.options.dataLoaderLoading == \"string\") {\n        template = document.createElement('template');\n        template.innerHTML = this.table.options.dataLoaderLoading.trim();\n        this.loadingElement = template.firstElementChild;\n      } else {\n        this.loadingElement = this.table.options.dataLoaderLoading;\n      }\n    }\n    if (this.table.options.dataLoaderError) {\n      if (typeof this.table.options.dataLoaderError == \"string\") {\n        template = document.createElement('template');\n        template.innerHTML = this.table.options.dataLoaderError.trim();\n        this.errorElement = template.firstElementChild;\n      } else {\n        this.errorElement = this.table.options.dataLoaderError;\n      }\n    }\n  }\n  createLoaderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-loader\");\n    return el;\n  }\n  createMsgElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-loader-msg\");\n    el.setAttribute(\"role\", \"alert\");\n    return el;\n  }\n  load(data, params, config, replace, silent) {\n    var requestNo = ++this.requestOrder;\n    this.dispatchExternal(\"dataLoading\", data);\n\n    //parse json data to array\n    if (data && (data.indexOf(\"{\") == 0 || data.indexOf(\"[\") == 0)) {\n      data = JSON.parse(data);\n    }\n    if (this.confirm(\"data-loading\", [data, params, config, silent])) {\n      this.loading = true;\n      if (!silent) {\n        this.showLoader();\n      }\n\n      //get params for request\n      params = this.chain(\"data-params\", [data, config, silent], params || {}, params || {});\n      params = this.mapParams(params, this.table.options.dataSendParams);\n      var result = this.chain(\"data-load\", [data, params, config, silent], Promise.resolve([]));\n      return result.then(response => {\n        if (!Array.isArray(response) && typeof response == \"object\") {\n          response = this.mapParams(response, this.objectInvert(this.table.options.dataReceiveParams));\n        }\n        var rowData = this.chain(\"data-loaded\", response, null, response);\n        if (requestNo == this.requestOrder) {\n          this.hideLoader();\n          if (rowData !== false) {\n            this.dispatchExternal(\"dataLoaded\", rowData);\n            this.table.rowManager.setData(rowData, replace, !replace);\n          }\n        } else {\n          console.warn(\"Data Load Response Blocked - An active data load request was blocked by an attempt to change table data while the request was being made\");\n        }\n      }).catch(error => {\n        console.error(\"Data Load Error: \", error);\n        this.dispatchExternal(\"dataLoadError\", error);\n        if (!silent) {\n          this.showError();\n        }\n        setTimeout(() => {\n          this.hideLoader();\n        }, 3000);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.dispatchExternal(\"dataLoaded\", data);\n      if (!data) {\n        data = [];\n      }\n      this.table.rowManager.setData(data, replace, !replace);\n      return Promise.resolve();\n    }\n  }\n  mapParams(params, map) {\n    var output = {};\n    for (let key in params) {\n      output[map.hasOwnProperty(key) ? map[key] : key] = params[key];\n    }\n    return output;\n  }\n  objectInvert(obj) {\n    var output = {};\n    for (let key in obj) {\n      output[obj[key]] = key;\n    }\n    return output;\n  }\n  blockActiveLoad() {\n    this.requestOrder++;\n  }\n  showLoader() {\n    var shouldLoad = typeof this.table.options.dataLoader === \"function\" ? this.table.options.dataLoader() : this.table.options.dataLoader;\n    if (shouldLoad) {\n      this.hideLoader();\n      while (this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\n      this.msgElement.classList.remove(\"tabulator-error\");\n      this.msgElement.classList.add(\"tabulator-loading\");\n      if (this.loadingElement) {\n        this.msgElement.appendChild(this.loadingElement);\n      } else {\n        this.msgElement.innerHTML = this.langText(\"data|loading\");\n      }\n      this.table.element.appendChild(this.loaderElement);\n    }\n  }\n  showError() {\n    this.hideLoader();\n    while (this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\n    this.msgElement.classList.remove(\"tabulator-loading\");\n    this.msgElement.classList.add(\"tabulator-error\");\n    if (this.errorElement) {\n      this.msgElement.appendChild(this.errorElement);\n    } else {\n      this.msgElement.innerHTML = this.langText(\"data|error\");\n    }\n    this.table.element.appendChild(this.loaderElement);\n  }\n  hideLoader() {\n    if (this.loaderElement.parentNode) {\n      this.loaderElement.parentNode.removeChild(this.loaderElement);\n    }\n  }\n}\nclass ExternalEventBus {\n  constructor(table, optionsList, debug) {\n    this.table = table;\n    this.events = {};\n    this.optionsList = optionsList || {};\n    this.subscriptionNotifiers = {};\n    this.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\n    this.debug = debug;\n  }\n  subscriptionChange(key, callback) {\n    if (!this.subscriptionNotifiers[key]) {\n      this.subscriptionNotifiers[key] = [];\n    }\n    this.subscriptionNotifiers[key].push(callback);\n    if (this.subscribed(key)) {\n      this._notifiySubscriptionChange(key, true);\n    }\n  }\n  subscribe(key, callback) {\n    if (!this.events[key]) {\n      this.events[key] = [];\n    }\n    this.events[key].push(callback);\n    this._notifiySubscriptionChange(key, true);\n  }\n  unsubscribe(key, callback) {\n    var index;\n    if (this.events[key]) {\n      if (callback) {\n        index = this.events[key].findIndex(item => {\n          return item === callback;\n        });\n        if (index > -1) {\n          this.events[key].splice(index, 1);\n        } else {\n          console.warn(\"Cannot remove event, no matching event found:\", key, callback);\n          return;\n        }\n      } else {\n        delete this.events[key];\n      }\n    } else {\n      console.warn(\"Cannot remove event, no events set on:\", key);\n      return;\n    }\n    this._notifiySubscriptionChange(key, false);\n  }\n  subscribed(key) {\n    return this.events[key] && this.events[key].length;\n  }\n  _notifiySubscriptionChange(key, subscribed) {\n    var notifiers = this.subscriptionNotifiers[key];\n    if (notifiers) {\n      notifiers.forEach(callback => {\n        callback(subscribed);\n      });\n    }\n  }\n  _dispatch() {\n    var args = Array.from(arguments),\n      key = args.shift(),\n      result;\n    if (this.events[key]) {\n      this.events[key].forEach((callback, i) => {\n        let callResult = callback.apply(this.table, args);\n        if (!i) {\n          result = callResult;\n        }\n      });\n    }\n    return result;\n  }\n  _debugDispatch() {\n    var args = Array.from(arguments),\n      key = args[0];\n    args[0] = \"ExternalEvent:\" + args[0];\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n    return this._dispatch(...arguments);\n  }\n}\nclass InternalEventBus {\n  constructor(debug) {\n    this.events = {};\n    this.subscriptionNotifiers = {};\n    this.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\n    this.chain = debug ? this._debugChain.bind(this) : this._chain.bind(this);\n    this.confirm = debug ? this._debugConfirm.bind(this) : this._confirm.bind(this);\n    this.debug = debug;\n  }\n  subscriptionChange(key, callback) {\n    if (!this.subscriptionNotifiers[key]) {\n      this.subscriptionNotifiers[key] = [];\n    }\n    this.subscriptionNotifiers[key].push(callback);\n    if (this.subscribed(key)) {\n      this._notifiySubscriptionChange(key, true);\n    }\n  }\n  subscribe(key, callback) {\n    let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10000;\n    if (!this.events[key]) {\n      this.events[key] = [];\n    }\n    this.events[key].push({\n      callback,\n      priority\n    });\n    this.events[key].sort((a, b) => {\n      return a.priority - b.priority;\n    });\n    this._notifiySubscriptionChange(key, true);\n  }\n  unsubscribe(key, callback) {\n    var index;\n    if (this.events[key]) {\n      if (callback) {\n        index = this.events[key].findIndex(item => {\n          return item.callback === callback;\n        });\n        if (index > -1) {\n          this.events[key].splice(index, 1);\n        } else {\n          console.warn(\"Cannot remove event, no matching event found:\", key, callback);\n          return;\n        }\n      }\n    } else {\n      console.warn(\"Cannot remove event, no events set on:\", key);\n      return;\n    }\n    this._notifiySubscriptionChange(key, false);\n  }\n  subscribed(key) {\n    return this.events[key] && this.events[key].length;\n  }\n  _chain(key, args, initialValue, fallback) {\n    var value = initialValue;\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n    if (this.subscribed(key)) {\n      this.events[key].forEach((subscriber, i) => {\n        value = subscriber.callback.apply(this, args.concat([value]));\n      });\n      return value;\n    } else {\n      return typeof fallback === \"function\" ? fallback() : fallback;\n    }\n  }\n  _confirm(key, args) {\n    var confirmed = false;\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n    if (this.subscribed(key)) {\n      this.events[key].forEach((subscriber, i) => {\n        if (subscriber.callback.apply(this, args)) {\n          confirmed = true;\n        }\n      });\n    }\n    return confirmed;\n  }\n  _notifiySubscriptionChange(key, subscribed) {\n    var notifiers = this.subscriptionNotifiers[key];\n    if (notifiers) {\n      notifiers.forEach(callback => {\n        callback(subscribed);\n      });\n    }\n  }\n  _dispatch() {\n    var args = Array.from(arguments),\n      key = args.shift();\n    if (this.events[key]) {\n      this.events[key].forEach(subscriber => {\n        let callResult = subscriber.callback.apply(this, args);\n      });\n    }\n  }\n  _debugDispatch() {\n    var args = Array.from(arguments),\n      key = args[0];\n    args[0] = \"InternalEvent:\" + key;\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n    return this._dispatch(...arguments);\n  }\n  _debugChain() {\n    var args = Array.from(arguments),\n      key = args[0];\n    args[0] = \"InternalEvent:\" + key;\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n    return this._chain(...arguments);\n  }\n  _debugConfirm() {\n    var args = Array.from(arguments),\n      key = args[0];\n    args[0] = \"InternalEvent:\" + key;\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n    return this._confirm(...arguments);\n  }\n}\nclass TableRegistry {\n  static register(table) {\n    TableRegistry.tables.push(table);\n  }\n  static deregister(table) {\n    var index = TableRegistry.tables.indexOf(table);\n    if (index > -1) {\n      TableRegistry.tables.splice(index, 1);\n    }\n  }\n  static lookupTable(query, silent) {\n    var results = [],\n      matches,\n      match;\n    if (typeof query === \"string\") {\n      matches = document.querySelectorAll(query);\n      if (matches.length) {\n        for (var i = 0; i < matches.length; i++) {\n          match = TableRegistry.matchElement(matches[i]);\n          if (match) {\n            results.push(match);\n          }\n        }\n      }\n    } else if (typeof HTMLElement !== \"undefined\" && query instanceof HTMLElement || query instanceof Tabulator) {\n      match = TableRegistry.matchElement(query);\n      if (match) {\n        results.push(match);\n      }\n    } else if (Array.isArray(query)) {\n      query.forEach(function (item) {\n        results = results.concat(TableRegistry.lookupTable(item));\n      });\n    } else {\n      if (!silent) {\n        console.warn(\"Table Connection Error - Invalid Selector\", query);\n      }\n    }\n    return results;\n  }\n  static matchElement(element) {\n    return TableRegistry.tables.find(function (table) {\n      return element instanceof Tabulator ? table === element : table.element === element;\n    });\n  }\n}\nTableRegistry.tables = [];\n\n//resize columns to fit data they contain\nfunction fitData(columns) {\n  this.table.columnManager.renderer.reinitializeColumnWidths(columns);\n  if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n    this.table.modules.responsiveLayout.update();\n  }\n}\n\n//resize columns to fit data they contain and stretch row to fill table, also used for fitDataTable\nfunction fitDataGeneral(columns) {\n  columns.forEach(function (column) {\n    column.reinitializeWidth();\n  });\n  if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n    this.table.modules.responsiveLayout.update();\n  }\n}\n\n//resize columns to fit data the contain and stretch last column to fill table\nfunction fitDataStretch(columns) {\n  var colsWidth = 0,\n    tableWidth = this.table.rowManager.element.clientWidth,\n    gap = 0,\n    lastCol = false;\n  columns.forEach((column, i) => {\n    if (!column.widthFixed) {\n      column.reinitializeWidth();\n    }\n    if (this.table.options.responsiveLayout ? column.modules.responsive.visible : column.visible) {\n      lastCol = column;\n    }\n    if (column.visible) {\n      colsWidth += column.getWidth();\n    }\n  });\n  if (lastCol) {\n    gap = tableWidth - colsWidth + lastCol.getWidth();\n    if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n      lastCol.setWidth(0);\n      this.table.modules.responsiveLayout.update();\n    }\n    if (gap > 0) {\n      lastCol.setWidth(gap);\n    } else {\n      lastCol.reinitializeWidth();\n    }\n  } else {\n    if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n      this.table.modules.responsiveLayout.update();\n    }\n  }\n}\n\n//resize columns to fit\nfunction fitColumns(columns) {\n  var totalWidth = this.table.element.clientWidth; //table element width\n  var fixedWidth = 0; //total width of columns with a defined width\n  var flexWidth = 0; //total width available to flexible columns\n  var flexGrowUnits = 0; //total number of widthGrow blocks accross all columns\n  var flexColWidth = 0; //desired width of flexible columns\n  var flexColumns = []; //array of flexible width columns\n  var fixedShrinkColumns = []; //array of fixed width columns that can shrink\n  var flexShrinkUnits = 0; //total number of widthShrink blocks accross all columns\n  var overflowWidth = 0; //horizontal overflow width\n  var gapFill = 0; //number of pixels to be added to final column to close and half pixel gaps\n\n  function calcWidth(width) {\n    var colWidth;\n    if (typeof width == \"string\") {\n      if (width.indexOf(\"%\") > -1) {\n        colWidth = totalWidth / 100 * parseInt(width);\n      } else {\n        colWidth = parseInt(width);\n      }\n    } else {\n      colWidth = width;\n    }\n    return colWidth;\n  }\n\n  //ensure columns resize to take up the correct amount of space\n  function scaleColumns(columns, freeSpace, colWidth, shrinkCols) {\n    var oversizeCols = [],\n      oversizeSpace = 0,\n      remainingSpace = 0,\n      nextColWidth = 0,\n      remainingFlexGrowUnits = flexGrowUnits,\n      gap = 0,\n      changeUnits = 0,\n      undersizeCols = [];\n    function calcGrow(col) {\n      return colWidth * (col.column.definition.widthGrow || 1);\n    }\n    function calcShrink(col) {\n      return calcWidth(col.width) - colWidth * (col.column.definition.widthShrink || 0);\n    }\n    columns.forEach(function (col, i) {\n      var width = shrinkCols ? calcShrink(col) : calcGrow(col);\n      if (col.column.minWidth >= width) {\n        oversizeCols.push(col);\n      } else {\n        if (col.column.maxWidth && col.column.maxWidth < width) {\n          col.width = col.column.maxWidth;\n          freeSpace -= col.column.maxWidth;\n          remainingFlexGrowUnits -= shrinkCols ? col.column.definition.widthShrink || 1 : col.column.definition.widthGrow || 1;\n          if (remainingFlexGrowUnits) {\n            colWidth = Math.floor(freeSpace / remainingFlexGrowUnits);\n          }\n        } else {\n          undersizeCols.push(col);\n          changeUnits += shrinkCols ? col.column.definition.widthShrink || 1 : col.column.definition.widthGrow || 1;\n        }\n      }\n    });\n    if (oversizeCols.length) {\n      oversizeCols.forEach(function (col) {\n        oversizeSpace += shrinkCols ? col.width - col.column.minWidth : col.column.minWidth;\n        col.width = col.column.minWidth;\n      });\n      remainingSpace = freeSpace - oversizeSpace;\n      nextColWidth = changeUnits ? Math.floor(remainingSpace / changeUnits) : remainingSpace;\n      gap = remainingSpace - nextColWidth * changeUnits;\n      gap += scaleColumns(undersizeCols, remainingSpace, nextColWidth, shrinkCols);\n    } else {\n      gap = changeUnits ? freeSpace - Math.floor(freeSpace / changeUnits) * changeUnits : freeSpace;\n      undersizeCols.forEach(function (column) {\n        column.width = shrinkCols ? calcShrink(column) : calcGrow(column);\n      });\n    }\n    return gap;\n  }\n  if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n    this.table.modules.responsiveLayout.update();\n  }\n\n  //adjust for vertical scrollbar if present\n  if (this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight) {\n    totalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\n  }\n  columns.forEach(function (column) {\n    var width, minWidth, colWidth;\n    if (column.visible) {\n      width = column.definition.width;\n      minWidth = parseInt(column.minWidth);\n      if (width) {\n        colWidth = calcWidth(width);\n        fixedWidth += colWidth > minWidth ? colWidth : minWidth;\n        if (column.definition.widthShrink) {\n          fixedShrinkColumns.push({\n            column: column,\n            width: colWidth > minWidth ? colWidth : minWidth\n          });\n          flexShrinkUnits += column.definition.widthShrink;\n        }\n      } else {\n        flexColumns.push({\n          column: column,\n          width: 0\n        });\n        flexGrowUnits += column.definition.widthGrow || 1;\n      }\n    }\n  });\n\n  //calculate available space\n  flexWidth = totalWidth - fixedWidth;\n\n  //calculate correct column size\n  flexColWidth = Math.floor(flexWidth / flexGrowUnits);\n\n  //generate column widths\n  var gapFill = scaleColumns(flexColumns, flexWidth, flexColWidth, false);\n\n  //increase width of last column to account for rounding errors\n  if (flexColumns.length && gapFill > 0) {\n    flexColumns[flexColumns.length - 1].width += +gapFill;\n  }\n\n  //caculate space for columns to be shrunk into\n  flexColumns.forEach(function (col) {\n    flexWidth -= col.width;\n  });\n  overflowWidth = Math.abs(gapFill) + flexWidth;\n\n  //shrink oversize columns if there is no available space\n  if (overflowWidth > 0 && flexShrinkUnits) {\n    gapFill = scaleColumns(fixedShrinkColumns, overflowWidth, Math.floor(overflowWidth / flexShrinkUnits), true);\n  }\n\n  //decrease width of last column to account for rounding errors\n  if (fixedShrinkColumns.length) {\n    fixedShrinkColumns[fixedShrinkColumns.length - 1].width -= gapFill;\n  }\n  flexColumns.forEach(function (col) {\n    col.column.setWidth(col.width);\n  });\n  fixedShrinkColumns.forEach(function (col) {\n    col.column.setWidth(col.width);\n  });\n}\nvar defaultModes = {\n  fitData: fitData,\n  fitDataFill: fitDataGeneral,\n  fitDataTable: fitDataGeneral,\n  fitDataStretch: fitDataStretch,\n  fitColumns: fitColumns\n};\nclass Layout extends Module {\n  constructor(table) {\n    super(table, \"layout\");\n    this.mode = null;\n    this.registerTableOption(\"layout\", \"fitData\"); //layout type\n    this.registerTableOption(\"layoutColumnsOnNewData\", false); //update column widths on setData\n\n    this.registerColumnOption(\"widthGrow\");\n    this.registerColumnOption(\"widthShrink\");\n  }\n\n  //initialize layout system\n  initialize() {\n    var layout = this.table.options.layout;\n    if (Layout.modes[layout]) {\n      this.mode = layout;\n    } else {\n      console.warn(\"Layout Error - invalid mode set, defaulting to 'fitData' : \" + layout);\n      this.mode = 'fitData';\n    }\n    this.table.element.setAttribute(\"tabulator-layout\", this.mode);\n  }\n  getMode() {\n    return this.mode;\n  }\n\n  //trigger table layout\n  layout() {\n    Layout.modes[this.mode].call(this, this.table.columnManager.columnsByIndex);\n    this.dispatch(\"layout-refreshed\");\n  }\n}\nLayout.moduleName = \"layout\";\n\n//load defaults\nLayout.modes = defaultModes;\nvar defaultLangs = {\n  \"default\": {\n    //hold default locale text\n    \"groups\": {\n      \"item\": \"item\",\n      \"items\": \"items\"\n    },\n    \"columns\": {},\n    \"data\": {\n      \"loading\": \"Loading\",\n      \"error\": \"Error\"\n    },\n    \"pagination\": {\n      \"page_size\": \"Page Size\",\n      \"page_title\": \"Show Page\",\n      \"first\": \"First\",\n      \"first_title\": \"First Page\",\n      \"last\": \"Last\",\n      \"last_title\": \"Last Page\",\n      \"prev\": \"Prev\",\n      \"prev_title\": \"Prev Page\",\n      \"next\": \"Next\",\n      \"next_title\": \"Next Page\",\n      \"all\": \"All\"\n    },\n    \"headerFilters\": {\n      \"default\": \"filter column...\",\n      \"columns\": {}\n    }\n  }\n};\nclass Localize extends Module {\n  constructor(table) {\n    super(table);\n    this.locale = \"default\"; //current locale\n    this.lang = false; //current language\n    this.bindings = {}; //update events to call when locale is changed\n    this.langList = {};\n    this.registerTableOption(\"locale\", false); //current system language\n    this.registerTableOption(\"langs\", {});\n  }\n  initialize() {\n    this.langList = Helpers.deepClone(Localize.langs);\n    if (this.table.options.columnDefaults.headerFilterPlaceholder !== false) {\n      this.setHeaderFilterPlaceholder(this.table.options.columnDefaults.headerFilterPlaceholder);\n    }\n    for (let locale in this.table.options.langs) {\n      this.installLang(locale, this.table.options.langs[locale]);\n    }\n    this.setLocale(this.table.options.locale);\n    this.registerTableFunction(\"setLocale\", this.setLocale.bind(this));\n    this.registerTableFunction(\"getLocale\", this.getLocale.bind(this));\n    this.registerTableFunction(\"getLang\", this.getLang.bind(this));\n  }\n\n  //set header placehoder\n  setHeaderFilterPlaceholder(placeholder) {\n    this.langList.default.headerFilters.default = placeholder;\n  }\n\n  //set header filter placeholder by column\n  setHeaderFilterColumnPlaceholder(column, placeholder) {\n    this.langList.default.headerFilters.columns[column] = placeholder;\n    if (this.lang && !this.lang.headerFilters.columns[column]) {\n      this.lang.headerFilters.columns[column] = placeholder;\n    }\n  }\n\n  //setup a lang description object\n  installLang(locale, lang) {\n    if (this.langList[locale]) {\n      this._setLangProp(this.langList[locale], lang);\n    } else {\n      this.langList[locale] = lang;\n    }\n  }\n  _setLangProp(lang, values) {\n    for (let key in values) {\n      if (lang[key] && typeof lang[key] == \"object\") {\n        this._setLangProp(lang[key], values[key]);\n      } else {\n        lang[key] = values[key];\n      }\n    }\n  }\n\n  //set current locale\n  setLocale(desiredLocale) {\n    desiredLocale = desiredLocale || \"default\";\n\n    //fill in any matching languge values\n    function traverseLang(trans, path) {\n      for (var prop in trans) {\n        if (typeof trans[prop] == \"object\") {\n          if (!path[prop]) {\n            path[prop] = {};\n          }\n          traverseLang(trans[prop], path[prop]);\n        } else {\n          path[prop] = trans[prop];\n        }\n      }\n    }\n\n    //determing correct locale to load\n    if (desiredLocale === true && navigator.language) {\n      //get local from system\n      desiredLocale = navigator.language.toLowerCase();\n    }\n    if (desiredLocale) {\n      //if locale is not set, check for matching top level locale else use default\n      if (!this.langList[desiredLocale]) {\n        let prefix = desiredLocale.split(\"-\")[0];\n        if (this.langList[prefix]) {\n          console.warn(\"Localization Error - Exact matching locale not found, using closest match: \", desiredLocale, prefix);\n          desiredLocale = prefix;\n        } else {\n          console.warn(\"Localization Error - Matching locale not found, using default: \", desiredLocale);\n          desiredLocale = \"default\";\n        }\n      }\n    }\n    this.locale = desiredLocale;\n\n    //load default lang template\n    this.lang = Helpers.deepClone(this.langList.default || {});\n    if (desiredLocale != \"default\") {\n      traverseLang(this.langList[desiredLocale], this.lang);\n    }\n    this.dispatchExternal(\"localized\", this.locale, this.lang);\n    this._executeBindings();\n  }\n\n  //get current locale\n  getLocale(locale) {\n    return this.locale;\n  }\n\n  //get lang object for given local or current if none provided\n  getLang(locale) {\n    return locale ? this.langList[locale] : this.lang;\n  }\n\n  //get text for current locale\n  getText(path, value) {\n    var path = value ? path + \"|\" + value : path,\n      pathArray = path.split(\"|\"),\n      text = this._getLangElement(pathArray, this.locale);\n\n    // if(text === false){\n    // \tconsole.warn(\"Localization Error - Matching localized text not found for given path: \", path);\n    // }\n\n    return text || \"\";\n  }\n\n  //traverse langs object and find localized copy\n  _getLangElement(path, locale) {\n    var root = this.lang;\n    path.forEach(function (level) {\n      var rootPath;\n      if (root) {\n        rootPath = root[level];\n        if (typeof rootPath != \"undefined\") {\n          root = rootPath;\n        } else {\n          root = false;\n        }\n      }\n    });\n    return root;\n  }\n\n  //set update binding\n  bind(path, callback) {\n    if (!this.bindings[path]) {\n      this.bindings[path] = [];\n    }\n    this.bindings[path].push(callback);\n    callback(this.getText(path), this.lang);\n  }\n\n  //itterate through bindings and trigger updates\n  _executeBindings() {\n    for (let path in this.bindings) {\n      this.bindings[path].forEach(binding => {\n        binding(this.getText(path), this.lang);\n      });\n    }\n  }\n}\nLocalize.moduleName = \"localize\";\n\n//load defaults\nLocalize.langs = defaultLangs;\nclass Comms extends Module {\n  constructor(table) {\n    super(table);\n  }\n  initialize() {\n    this.registerTableFunction(\"tableComms\", this.receive.bind(this));\n  }\n  getConnections(selectors) {\n    var connections = [],\n      connection;\n    connection = TableRegistry.lookupTable(selectors);\n    connection.forEach(con => {\n      if (this.table !== con) {\n        connections.push(con);\n      }\n    });\n    return connections;\n  }\n  send(selectors, module, action, data) {\n    var connections = this.getConnections(selectors);\n    connections.forEach(connection => {\n      connection.tableComms(this.table.element, module, action, data);\n    });\n    if (!connections.length && selectors) {\n      console.warn(\"Table Connection Error - No tables matching selector found\", selectors);\n    }\n  }\n  receive(table, module, action, data) {\n    if (this.table.modExists(module)) {\n      return this.table.modules[module].commsReceived(table, action, data);\n    } else {\n      console.warn(\"Inter-table Comms Error - no such module:\", module);\n    }\n  }\n}\nComms.moduleName = \"comms\";\nvar coreModules = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LayoutModule: Layout,\n  LocalizeModule: Localize,\n  CommsModule: Comms\n});\nclass ModuleBinder {\n  constructor(tabulator, modules) {\n    this.bindStaticFuctionality(tabulator);\n    this.bindModules(tabulator, coreModules, true);\n    if (modules) {\n      this.bindModules(tabulator, modules);\n    }\n  }\n  bindStaticFuctionality(tabulator) {\n    tabulator.moduleBindings = {};\n    tabulator.extendModule = function (name, property, values) {\n      if (tabulator.moduleBindings[name]) {\n        var source = tabulator.moduleBindings[name][property];\n        if (source) {\n          if (typeof values == \"object\") {\n            for (let key in values) {\n              source[key] = values[key];\n            }\n          } else {\n            console.warn(\"Module Error - Invalid value type, it must be an object\");\n          }\n        } else {\n          console.warn(\"Module Error - property does not exist:\", property);\n        }\n      } else {\n        console.warn(\"Module Error - module does not exist:\", name);\n      }\n    };\n    tabulator.registerModule = function (modules) {\n      if (!Array.isArray(modules)) {\n        modules = [modules];\n      }\n      modules.forEach(mod => {\n        tabulator.registerModuleBinding(mod);\n      });\n    };\n    tabulator.registerModuleBinding = function (mod) {\n      tabulator.moduleBindings[mod.moduleName] = mod;\n    };\n    tabulator.findTable = function (query) {\n      var results = TableRegistry.lookupTable(query, true);\n      return Array.isArray(results) && !results.length ? false : results;\n    };\n\n    //ensure that module are bound to instantiated function\n    tabulator.prototype.bindModules = function () {\n      this.modules = {};\n      for (var name in tabulator.moduleBindings) {\n        let mod = tabulator.moduleBindings[name];\n        this.modules[name] = new mod(this);\n        if (mod.prototype.moduleCore) {\n          this.modulesCore[name] = this.modules[name];\n        } else {\n          this.modulesRegular[name] = this.modules[name];\n        }\n      }\n    };\n  }\n  bindModules(tabulator, modules, core) {\n    var mods = Object.values(modules);\n    if (core) {\n      mods.forEach(mod => {\n        mod.prototype.moduleCore = true;\n      });\n    }\n    tabulator.registerModule(mods);\n  }\n}\nclass Tabulator {\n  constructor(element, options) {\n    this.options = {};\n    this.columnManager = null; // hold Column Manager\n    this.rowManager = null; //hold Row Manager\n    this.footerManager = null; //holder Footer Manager\n    this.vdomHoz = null; //holder horizontal virtual dom\n    this.externalEvents = null; //handle external event messaging\n    this.eventBus = null; //handle internal event messaging\n    this.interactionMonitor = false; //track user interaction\n    this.browser = \"\"; //hold current browser type\n    this.browserSlow = false; //handle reduced functionality for slower browsers\n    this.browserMobile = false; //check if running on mobile, prevent resize cancelling edit on keyboard appearance\n    this.rtl = false; //check if the table is in RTL mode\n    this.originalElement = null; //hold original table element if it has been replaced\n\n    this.componentFunctionBinder = new ComponentFunctionBinder(this); //bind component functions\n    this.dataLoader = false; //bind component functions\n\n    this.modules = {}; //hold all modules bound to this table\n    this.modulesCore = {}; //hold core modules bound to this table (for initialization purposes)\n    this.modulesRegular = {}; //hold regular modules bound to this table (for initialization purposes)\n\n    this.optionsList = new OptionsList(this, \"table constructor\");\n    this.initialized = false;\n    if (this.initializeElement(element)) {\n      this.initialzeCoreSystems(options);\n\n      //delay table creation to allow event bindings immediately after the constructor\n      setTimeout(() => {\n        this._create();\n      });\n    }\n    TableRegistry.register(this); //register table for inter-device communication\n  }\n\n  initializeElement(element) {\n    if (typeof HTMLElement !== \"undefined\" && element instanceof HTMLElement) {\n      this.element = element;\n      return true;\n    } else if (typeof element === \"string\") {\n      this.element = document.querySelector(element);\n      if (this.element) {\n        return true;\n      } else {\n        console.error(\"Tabulator Creation Error - no element found matching selector: \", element);\n        return false;\n      }\n    } else {\n      console.error(\"Tabulator Creation Error - Invalid element provided:\", element);\n      return false;\n    }\n  }\n  initialzeCoreSystems(options) {\n    this.columnManager = new ColumnManager(this);\n    this.rowManager = new RowManager(this);\n    this.footerManager = new FooterManager(this);\n    this.dataLoader = new DataLoader(this);\n    this.bindModules();\n    this.options = this.optionsList.generate(Tabulator.defaultOptions, options);\n    this._clearObjectPointers();\n    this._mapDeprecatedFunctionality();\n    this.externalEvents = new ExternalEventBus(this, this.options, this.options.debugEventsExternal);\n    this.eventBus = new InternalEventBus(this.options.debugEventsInternal);\n    this.interactionMonitor = new InteractionManager(this);\n    this.dataLoader.initialize();\n    this.columnManager.initialize();\n    this.rowManager.initialize();\n    this.footerManager.initialize();\n  }\n\n  //convert deprecated functionality to new functions\n  _mapDeprecatedFunctionality() {\n    //all previously deprecated functionality removed in the 5.0 release\n  }\n  _clearSelection() {\n    this.element.classList.add(\"tabulator-block-select\");\n    if (window.getSelection) {\n      if (window.getSelection().empty) {\n        // Chrome\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges) {\n        // Firefox\n        window.getSelection().removeAllRanges();\n      }\n    } else if (document.selection) {\n      // IE?\n      document.selection.empty();\n    }\n    this.element.classList.remove(\"tabulator-block-select\");\n  }\n\n  //create table\n  _create() {\n    this.externalEvents.dispatch(\"tableBuilding\");\n    this.eventBus.dispatch(\"table-building\");\n    this._rtlCheck();\n    this._buildElement();\n    this._initializeTable();\n    this._loadInitialData();\n    this.initialized = true;\n    this.externalEvents.dispatch(\"tableBuilt\");\n  }\n  _rtlCheck() {\n    var style = window.getComputedStyle(this.element);\n    switch (this.options.textDirection) {\n      case \"auto\":\n        if (style.direction !== \"rtl\") {\n          break;\n        }\n      case \"rtl\":\n        this.element.classList.add(\"tabulator-rtl\");\n        this.rtl = true;\n        break;\n      case \"ltr\":\n        this.element.classList.add(\"tabulator-ltr\");\n      default:\n        this.rtl = false;\n    }\n  }\n\n  //clear pointers to objects in default config object\n  _clearObjectPointers() {\n    this.options.columns = this.options.columns.slice(0);\n    if (this.options.data && !this.options.reactiveData) {\n      this.options.data = this.options.data.slice(0);\n    }\n  }\n\n  //build tabulator element\n  _buildElement() {\n    var element = this.element,\n      options = this.options,\n      newElement;\n    if (element.tagName === \"TABLE\") {\n      this.originalElement = this.element;\n      newElement = document.createElement(\"div\");\n\n      //transfer attributes to new element\n      var attributes = element.attributes;\n\n      // loop through attributes and apply them on div\n      for (var i in attributes) {\n        if (typeof attributes[i] == \"object\") {\n          newElement.setAttribute(attributes[i].name, attributes[i].value);\n        }\n      }\n\n      // replace table with div element\n      element.parentNode.replaceChild(newElement, element);\n      this.element = element = newElement;\n    }\n    element.classList.add(\"tabulator\");\n    element.setAttribute(\"role\", \"grid\");\n\n    //empty element\n    while (element.firstChild) element.removeChild(element.firstChild);\n\n    //set table height\n    if (options.height) {\n      options.height = isNaN(options.height) ? options.height : options.height + \"px\";\n      element.style.height = options.height;\n    }\n\n    //set table min height\n    if (options.minHeight !== false) {\n      options.minHeight = isNaN(options.minHeight) ? options.minHeight : options.minHeight + \"px\";\n      element.style.minHeight = options.minHeight;\n    }\n\n    //set table maxHeight\n    if (options.maxHeight !== false) {\n      options.maxHeight = isNaN(options.maxHeight) ? options.maxHeight : options.maxHeight + \"px\";\n      element.style.maxHeight = options.maxHeight;\n    }\n  }\n\n  //initialize core systems and modules\n  _initializeTable() {\n    var element = this.element,\n      options = this.options;\n    this.interactionMonitor.initialize();\n    this.columnManager.initialize();\n    this.rowManager.initialize();\n    this._detectBrowser();\n\n    //initialize core modules\n    for (let key in this.modulesCore) {\n      let mod = this.modulesCore[key];\n      mod.initialize();\n    }\n\n    //configure placeholder element\n    if (typeof options.placeholder == \"string\") {\n      var el = document.createElement(\"div\");\n      el.classList.add(\"tabulator-placeholder\");\n      var span = document.createElement(\"span\");\n      span.innerHTML = options.placeholder;\n      el.appendChild(span);\n      options.placeholder = el;\n    }\n\n    //build table elements\n    element.appendChild(this.columnManager.getElement());\n    element.appendChild(this.rowManager.getElement());\n    if (options.footerElement) {\n      this.footerManager.activate();\n    }\n    if (options.autoColumns && options.data) {\n      this.columnManager.generateColumnsFromRowData(this.options.data);\n    }\n\n    //initialize regular modules\n    for (let key in this.modulesRegular) {\n      let mod = this.modulesRegular[key];\n      mod.initialize();\n    }\n    this.columnManager.setColumns(options.columns);\n    this.eventBus.dispatch(\"table-built\");\n  }\n  _loadInitialData() {\n    this.dataLoader.load(this.options.data);\n  }\n\n  //deconstructor\n  destroy() {\n    var element = this.element;\n    TableRegistry.deregister(this); //deregister table from inter-device communication\n\n    this.eventBus.dispatch(\"table-destroy\");\n\n    //clear row data\n    this.rowManager.rows.forEach(function (row) {\n      row.wipe();\n    });\n    this.rowManager.rows = [];\n    this.rowManager.activeRows = [];\n    this.rowManager.displayRows = [];\n\n    //clear DOM\n    while (element.firstChild) element.removeChild(element.firstChild);\n    element.classList.remove(\"tabulator\");\n  }\n  _detectBrowser() {\n    var ua = navigator.userAgent || navigator.vendor || window.opera;\n    if (ua.indexOf(\"Trident\") > -1) {\n      this.browser = \"ie\";\n      this.browserSlow = true;\n    } else if (ua.indexOf(\"Edge\") > -1) {\n      this.browser = \"edge\";\n      this.browserSlow = true;\n    } else if (ua.indexOf(\"Firefox\") > -1) {\n      this.browser = \"firefox\";\n      this.browserSlow = false;\n    } else {\n      this.browser = \"other\";\n      this.browserSlow = false;\n    }\n    this.browserMobile = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(ua) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(ua.substr(0, 4));\n  }\n\n  ////////////////// Data Handling //////////////////\n  //block table redrawing\n  blockRedraw() {\n    return this.rowManager.blockRedraw();\n  }\n\n  //restore table redrawing\n  restoreRedraw() {\n    return this.rowManager.restoreRedraw();\n  }\n\n  //local data from local file\n  setDataFromLocalFile(extensions) {\n    return new Promise((resolve, reject) => {\n      var input = document.createElement(\"input\");\n      input.type = \"file\";\n      input.accept = extensions || \".json,application/json\";\n      input.addEventListener(\"change\", e => {\n        var file = input.files[0],\n          reader = new FileReader(),\n          data;\n        reader.readAsText(file);\n        reader.onload = e => {\n          try {\n            data = JSON.parse(reader.result);\n          } catch (e) {\n            console.warn(\"File Load Error - File contents is invalid JSON\", e);\n            reject(e);\n            return;\n          }\n          this.setData(data).then(data => {\n            resolve(data);\n          }).catch(err => {\n            resolve(err);\n          });\n        };\n        reader.onerror = e => {\n          console.warn(\"File Load Error - Unable to read file\");\n          reject();\n        };\n      });\n      input.click();\n    });\n  }\n\n  //load data\n  setData(data, params, config) {\n    if (this.initialized) {\n      return this.dataLoader.load(data, params, config, false);\n    } else {\n      console.warn(\"setData failed - table not yet initialized. To set initial data please use the 'data' property in the table constructor.\");\n    }\n  }\n\n  //clear data\n  clearData() {\n    this.dataLoader.blockActiveLoad();\n    this.rowManager.clearData();\n  }\n\n  //get table data array\n  getData(active) {\n    return this.rowManager.getData(active);\n  }\n\n  //get table data array count\n  getDataCount(active) {\n    return this.rowManager.getDataCount(active);\n  }\n\n  //replace data, keeping table in position with same sort\n  replaceData(data, params, config) {\n    if (this.initialized) {\n      return this.dataLoader.load(data, params, config, true, true);\n    } else {\n      console.warn(\"replaceData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n\n  //update table data\n  updateData(data) {\n    var responses = 0;\n    if (this.initialized) {\n      return new Promise((resolve, reject) => {\n        this.dataLoader.blockActiveLoad();\n        if (typeof data === \"string\") {\n          data = JSON.parse(data);\n        }\n        if (data) {\n          data.forEach(item => {\n            var row = this.rowManager.findRow(item[this.options.index]);\n            if (row) {\n              responses++;\n              row.updateData(item).then(() => {\n                responses--;\n                if (!responses) {\n                  resolve();\n                }\n              });\n            }\n          });\n        } else {\n          console.warn(\"Update Error - No data provided\");\n          reject(\"Update Error - No data provided\");\n        }\n      });\n    } else {\n      console.warn(\"updateData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n  addData(data, pos, index) {\n    if (this.initialized) {\n      return new Promise((resolve, reject) => {\n        this.dataLoader.blockActiveLoad();\n        if (typeof data === \"string\") {\n          data = JSON.parse(data);\n        }\n        if (data) {\n          this.rowManager.addRows(data, pos, index).then(rows => {\n            var output = [];\n            rows.forEach(function (row) {\n              output.push(row.getComponent());\n            });\n            resolve(output);\n          });\n        } else {\n          console.warn(\"Update Error - No data provided\");\n          reject(\"Update Error - No data provided\");\n        }\n      });\n    } else {\n      console.warn(\"addData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n\n  //update table data\n  updateOrAddData(data) {\n    var rows = [],\n      responses = 0;\n    if (this.initialized) {\n      return new Promise((resolve, reject) => {\n        this.dataLoader.blockActiveLoad();\n        if (typeof data === \"string\") {\n          data = JSON.parse(data);\n        }\n        if (data) {\n          data.forEach(item => {\n            var row = this.rowManager.findRow(item[this.options.index]);\n            responses++;\n            if (row) {\n              row.updateData(item).then(() => {\n                responses--;\n                rows.push(row.getComponent());\n                if (!responses) {\n                  resolve(rows);\n                }\n              });\n            } else {\n              this.rowManager.addRows(item).then(newRows => {\n                responses--;\n                rows.push(newRows[0].getComponent());\n                if (!responses) {\n                  resolve(rows);\n                }\n              });\n            }\n          });\n        } else {\n          console.warn(\"Update Error - No data provided\");\n          reject(\"Update Error - No data provided\");\n        }\n      });\n    } else {\n      console.warn(\"updateOrAddData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n\n  //get row object\n  getRow(index) {\n    var row = this.rowManager.findRow(index);\n    if (row) {\n      return row.getComponent();\n    } else {\n      console.warn(\"Find Error - No matching row found:\", index);\n      return false;\n    }\n  }\n\n  //get row object\n  getRowFromPosition(position, active) {\n    var row = this.rowManager.getRowFromPosition(position, active);\n    if (row) {\n      return row.getComponent();\n    } else {\n      console.warn(\"Find Error - No matching row found:\", position);\n      return false;\n    }\n  }\n\n  //delete row from table\n  deleteRow(index) {\n    var foundRows = [];\n    if (!Array.isArray(index)) {\n      index = [index];\n    }\n\n    //find matching rows\n    for (let item of index) {\n      let row = this.rowManager.findRow(item, true);\n      if (row) {\n        foundRows.push(row);\n      } else {\n        console.error(\"Delete Error - No matching row found:\", item);\n        return Promise.reject(\"Delete Error - No matching row found\");\n      }\n    }\n\n    //sort rows into correct order to ensure smooth delete from table\n    foundRows.sort((a, b) => {\n      return this.rowManager.rows.indexOf(a) > this.rowManager.rows.indexOf(b) ? 1 : -1;\n    });\n\n    //delete rows\n    foundRows.forEach(row => {\n      row.delete();\n    });\n    this.rowManager.reRenderInPosition();\n    return Promise.resolve();\n  }\n\n  //add row to table\n  addRow(data, pos, index) {\n    if (this.initialized) {\n      if (typeof data === \"string\") {\n        data = JSON.parse(data);\n      }\n      return this.rowManager.addRows(data, pos, index).then(rows => {\n        return rows[0].getComponent();\n      });\n    } else {\n      console.warn(\"addRow failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n\n  //update a row if it exitsts otherwise create it\n  updateOrAddRow(index, data) {\n    var row = this.rowManager.findRow(index);\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n    if (row) {\n      return row.updateData(data).then(() => {\n        return row.getComponent();\n      });\n    } else {\n      return this.rowManager.addRows(data).then(rows => {\n        return rows[0].getComponent();\n      });\n    }\n  }\n\n  //update row data\n  updateRow(index, data) {\n    var row = this.rowManager.findRow(index);\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n    if (row) {\n      return row.updateData(data).then(() => {\n        return Promise.resolve(row.getComponent());\n      });\n    } else {\n      console.warn(\"Update Error - No matching row found:\", index);\n      return Promise.reject(\"Update Error - No matching row found\");\n    }\n  }\n\n  //scroll to row in DOM\n  scrollToRow(index, position, ifVisible) {\n    var row = this.rowManager.findRow(index);\n    if (row) {\n      return this.rowManager.scrollToRow(row, position, ifVisible);\n    } else {\n      console.warn(\"Scroll Error - No matching row found:\", index);\n      return Promise.reject(\"Scroll Error - No matching row found\");\n    }\n  }\n  moveRow(from, to, after) {\n    var fromRow = this.rowManager.findRow(from);\n    if (fromRow) {\n      fromRow.moveToRow(to, after);\n    } else {\n      console.warn(\"Move Error - No matching row found:\", from);\n    }\n  }\n  getRows(active) {\n    return this.rowManager.getComponents(active);\n  }\n\n  //get position of row in table\n  getRowPosition(index, active) {\n    var row = this.rowManager.findRow(index);\n    if (row) {\n      return this.rowManager.getRowPosition(row, active);\n    } else {\n      console.warn(\"Position Error - No matching row found:\", index);\n      return false;\n    }\n  }\n\n  /////////////// Column Functions  ///////////////\n  setColumns(definition) {\n    if (this.initialized) {\n      this.columnManager.setColumns(definition);\n    } else {\n      console.warn(\"setColumns failed - table not yet initialized. To set initial data please use the 'columns' property in the table constructor.\");\n    }\n  }\n  getColumns(structured) {\n    return this.columnManager.getComponents(structured);\n  }\n  getColumn(field) {\n    var col = this.columnManager.findColumn(field);\n    if (col) {\n      return col.getComponent();\n    } else {\n      console.warn(\"Find Error - No matching column found:\", field);\n      return false;\n    }\n  }\n  getColumnDefinitions() {\n    return this.columnManager.getDefinitionTree();\n  }\n  showColumn(field) {\n    var column = this.columnManager.findColumn(field);\n    if (column) {\n      column.show();\n    } else {\n      console.warn(\"Column Show Error - No matching column found:\", field);\n      return false;\n    }\n  }\n  hideColumn(field) {\n    var column = this.columnManager.findColumn(field);\n    if (column) {\n      column.hide();\n    } else {\n      console.warn(\"Column Hide Error - No matching column found:\", field);\n      return false;\n    }\n  }\n  toggleColumn(field) {\n    var column = this.columnManager.findColumn(field);\n    if (column) {\n      if (column.visible) {\n        column.hide();\n      } else {\n        column.show();\n      }\n    } else {\n      console.warn(\"Column Visibility Toggle Error - No matching column found:\", field);\n      return false;\n    }\n  }\n  addColumn(definition, before, field) {\n    var column = this.columnManager.findColumn(field);\n    return this.columnManager.addColumn(definition, before, column).then(column => {\n      return column.getComponent();\n    });\n  }\n  deleteColumn(field) {\n    var column = this.columnManager.findColumn(field);\n    if (column) {\n      return column.delete();\n    } else {\n      console.warn(\"Column Delete Error - No matching column found:\", field);\n      return Promise.reject();\n    }\n  }\n  updateColumnDefinition(field, definition) {\n    var column = this.columnManager.findColumn(field);\n    if (column) {\n      return column.updateDefinition(definition);\n    } else {\n      console.warn(\"Column Update Error - No matching column found:\", field);\n      return Promise.reject();\n    }\n  }\n  moveColumn(from, to, after) {\n    var fromColumn = this.columnManager.findColumn(from);\n    var toColumn = this.columnManager.findColumn(to);\n    if (fromColumn) {\n      if (toColumn) {\n        this.columnManager.moveColumn(fromColumn, toColumn, after);\n      } else {\n        console.warn(\"Move Error - No matching column found:\", toColumn);\n      }\n    } else {\n      console.warn(\"Move Error - No matching column found:\", from);\n    }\n  }\n\n  //scroll to column in DOM\n  scrollToColumn(field, position, ifVisible) {\n    return new Promise((resolve, reject) => {\n      var column = this.columnManager.findColumn(field);\n      if (column) {\n        return this.columnManager.scrollToColumn(column, position, ifVisible);\n      } else {\n        console.warn(\"Scroll Error - No matching column found:\", field);\n        return Promise.reject(\"Scroll Error - No matching column found\");\n      }\n    });\n  }\n\n  //////////// General Public Functions ////////////\n  //redraw list without updating data\n  redraw(force) {\n    if (this.initialized) {\n      this.columnManager.redraw(force);\n      this.rowManager.redraw(force);\n    } else {\n      console.warn(\"redraw failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n  setHeight(height) {\n    this.options.height = isNaN(height) ? height : height + \"px\";\n    this.element.style.height = this.options.height;\n    this.rowManager.initializeRenderer();\n    this.rowManager.redraw();\n  }\n\n  //////////////////// Event Bus ///////////////////\n\n  on(key, callback) {\n    this.externalEvents.subscribe(key, callback);\n  }\n  off(key, callback) {\n    this.externalEvents.unsubscribe(key, callback);\n  }\n  dispatchEvent() {\n    var args = Array.from(arguments),\n      key = args.shift();\n    this.externalEvents.dispatch(...arguments);\n  }\n\n  ////////////// Extension Management //////////////\n  modExists(plugin, required) {\n    if (this.modules[plugin]) {\n      return true;\n    } else {\n      if (required) {\n        console.error(\"Tabulator Module Not Installed: \" + plugin);\n      }\n      return false;\n    }\n  }\n  module(key) {\n    var mod = this.modules[key];\n    if (!mod) {\n      console.error(\"Tabulator module not installed: \" + key);\n    }\n    return mod;\n  }\n}\n\n//default setup options\nTabulator.defaultOptions = defaultOptions;\n\n//bind modules and static functionality\nnew ModuleBinder(Tabulator);\n\n//tabulator with all modules installed\n\nclass TabulatorFull extends Tabulator {}\n//bind modules and static functionality\nnew ModuleBinder(TabulatorFull, modules);\nclass PseudoRow {\n  constructor(type) {\n    this.type = type;\n    this.element = this._createElement();\n  }\n  _createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-row\");\n    return el;\n  }\n  getElement() {\n    return this.element;\n  }\n  getComponent() {\n    return false;\n  }\n  getData() {\n    return {};\n  }\n  getHeight() {\n    return this.element.outerHeight;\n  }\n  initialize() {}\n  reinitialize() {}\n  normalizeHeight() {}\n  generateCells() {}\n  reinitializeHeight() {}\n  calcHeight() {}\n  setCellHeight() {}\n  clearCellHeight() {}\n}\nexport { Accessor as AccessorModule, Ajax as AjaxModule, CalcComponent, CellComponent, Clipboard as ClipboardModule, ColumnCalcs as ColumnCalcsModule, ColumnComponent, DataTree as DataTreeModule, Download as DownloadModule, Edit as EditModule, Export as ExportModule, Filter as FilterModule, Format as FormatModule, FrozenColumns as FrozenColumnsModule, FrozenRows as FrozenRowsModule, GroupComponent, GroupRows as GroupRowsModule, History as HistoryModule, HtmlTableImport as HtmlTableImportModule, Interaction as InteractionModule, Keybindings as KeybindingsModule, Menu as MenuModule, Module, MoveColumns as MoveColumnsModule, MoveRows as MoveRowsModule, Mutator as MutatorModule, Page as PageModule, Persistence as PersistenceModule, Print as PrintModule, PseudoRow, ReactiveData as ReactiveDataModule, Renderer, ResizeColumns as ResizeColumnsModule, ResizeRows as ResizeRowsModule, ResizeTable as ResizeTableModule, ResponsiveLayout as ResponsiveLayoutModule, RowComponent$1 as RowComponent, SelectRow as SelectRowModule, Sort as SortModule, Tabulator, TabulatorFull, Validate as ValidateModule };","map":{"version":3,"mappings":"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","names":["CoreFeature","constructor","table","reloadData","data","silent","dataLoader","load","undefined","langText","modules","localize","getText","arguments","langBind","bind","langLocale","getLocale","commsConnections","comms","getConnections","commsSend","send","layoutMode","layout","getMode","layoutRefresh","subscribe","eventBus","unsubscribe","subscribed","key","subscriptionChange","dispatch","chain","confirm","dispatchExternal","externalEvents","subscribedExternal","subscriptionChangeExternal","options","setOption","value","module","Module","name","_handler","initialize","registerTableOption","optionsList","register","registerColumnOption","columnManager","registerTableFunction","func","console","warn","registerComponentFunction","component","handler","componentFunctionBinder","registerDataHandler","priority","rowManager","registerDataPipelineHandler","registerDisplayHandler","registerDisplayPipelineHandler","refreshData","renderInPosition","refreshActiveData","Helpers","elVisible","el","offsetWidth","offsetHeight","elOffset","box","getBoundingClientRect","top","window","pageYOffset","document","documentElement","clientTop","left","pageXOffset","clientLeft","deepClone","obj","clone","list","objectProto","__proto__","arrayProto","Object","assign","Array","isArray","i","subject","match","copy","findIndex","item","unshift","Accessor","allowedTypes","initializeColumn","transformRow","column","config","forEach","type","charAt","toUpperCase","slice","accessor","definition","lookupAccessor","params","accessors","row","rowComponent","getComponent","traverse","colCompnent","getFieldValue","setFieldValue","moduleName","defautlAccessors","method","generateParamsList","prefix","output","concat","push","serializeParams","encoded","encodeURIComponent","join","url","keys","length","toLowerCase","includes","contentType","Promise","resolve","reject","urlGenerator","call","ajaxContentType","contentTypeFormatters","headers","body","Accept","mode","location","origin","credentials","fetch","then","response","ok","json","catch","error","status","statusText","JSON","stringify","form","FormData","append","Ajax","loaderPromise","ajaxRequestFunc","defaultLoaderPromise","ajaxURLGenerator","defaultURLGenerator","ajaxParams","setParams","ajaxConfig","setConfig","ajaxURL","setUrl","getUrl","requestDataCheck","requestData","previousData","sendRequest","update","getParams","_loadDefaultConfig","force","defaultConfig","defaultPasteActions","replace","rows","insert","defaultPasteParsers","clipboard","headerFindSuccess","columns","columnMap","pasteParser","pasteAction","customSelection","rowRange","e","plain","html","setData","element","setPasteParser","clipboardPasteParser","reset","blocked","generatePlainContent","col","rowData","range","internal","textRange","getSelection","selectNodeContents","sel","removeAllRanges","selection","moveToElementText","setPasteAction","action","parser","paste","mutateData","checkPaseOrigin","valid","getPasteData","clipboardData","getData","Clipboard","pasteActions","CalcComponent","get","target","transform","getElement","getTable","getCells","cell","cells","getCell","_getSelf","getValue","getOldValue","getInitialValue","getRow","getField","getColumn","setValue","mutate","restoreOldValue","restoreInitialValue","checkHeight","Cell","initialValue","oldValue","height","width","build","generateElement","className","_configureCell","field","vertAligns","bottom","middle","hozAligns","right","center","vertAlign","hozAlign","classNames","_generateContents","val","cellRendered","_generateTooltip","tooltip","changed","setValueProcessData","setValueActual","layoutElement","setWidth","clearWidth","getWidth","setMinWidth","minWidth","setMaxWidth","maxWidth","clearHeight","setHeight","getHeight","show","hide","delete","getIndex","ColumnComponent","_column","getDefinition","isVisible","toggle","getSubColumns","getParentColumn","scrollTo","move","to","toColumn","getNextColumn","getPrevColumn","updateDefinition","result","defaultColumnOptions","parent","contentElement","titleHolderElement","titleElement","groupElement","isGroup","fieldStructure","widthStyled","maxWidthStyled","minWidthStyled","Column","newCol","Column$1","def","checkColumnVisibility","createElement","classList","setAttribute","createGroupElement","mapDefinitions","defaults","checkDefinition","setField","nestedFieldSeparator","_getNestedData","_getFlatData","registerColumnPosition","registerColumnField","reRegisterPosition","_mapDepricatedFunctionality","setTooltip","_initialize","_buildGroupHeader","_bindEvents","dblTap","tapHold","tap","headerClick","headerDblClick","headerContext","passive","headerDblTap","clearTimeout","addEventListener","_buildColumnHeader","classeNames","_buildColumnHeaderContent","_buildColumnHeaderTitle","stopPropagation","_formatColumnHeaderTitle","contents","appendChild","textAlign","structure","dataObj","_setFlatData","_setNestedData","attachColumn","verticalAlign","alignment","style","paddingTop","clientHeight","clearVerticalAlign","bindModuleColumns","getGroupElement","getFirstColumn","getLastColumn","getColumns","getTopColumn","colDefs","visible","matchChildWidths","childWidth","removeChild","index","setWidthActual","isNaN","Math","checkCellHeights","heightInitialized","offsetParent","clearCellHeight","cellCount","deregisterColumn","columnRendered","generateCell","nextColumn","_nextVisibleColumn","prevColumn","_prevVisibleColumn","reinitializeWidth","fitToData","deleteCell","RowComponent$1","getPosition","normalizeHeight","reformat","getNextRow","getPrevRow","Row","heightStyled","manualHeight","outerHeight","created","create","detachElement","generateCells","initialized","reinitializeHeight","deinitializeHeight","reinitialize","calcHeight","minHeight","maxHeight","max","setCellHeight","updateData","tempData","newRowData","updatedData","getCellIndex","findCell","nextRow","prevRow","moveToRow","toRow","deleteActual","detatchModules","deleteCells","wipe","getGroup","defaultCalculations","values","precision","calcParams","parseFloat","toString","Number","ColumnCalcs","topCalcs","botCalcs","genColumn","topElement","botElement","topRow","botRow","botInitialized","rowsUpdated","recalcActiveRows","tableRedraw","userRecalc","visibleRows","recalcRowGroup","cellValueChanged","groupBy","initializeColumnCheck","topCalcParams","botCalcParams","topCalc","bottomCalc","botCalc","removeCalcs","initializeTopRow","initializeBottomRow","scrollHorizontal","recalc","generateRow","rowsToData","recalcAll","groups","recalcGroup","group","calcs","generateRowData","generateTopRow","generateBottomRow","dataTree","modExists","formatter","pos","paramKey","columnCalcs","hasTopCalcs","hasBottomCalcs","redraw","getResults","results","getGroupResults","subGroups","subGroupResults","DataTree","indent","collapseEl","expandEl","elementField","startOpen","displayIndex","toggleRow","dataTreeBranchElement","branchEl","dummyEl","firstChild","dataTreeCollapseElement","dataTreeExpandElement","layoutRow","rowDelete","initializeElementField","firstCol","getRowChildren","columnMoving","rowDataChanged","initializeRow","childArray","children","open","controlEl","reinitializeRowChildren","child","insertBefore","marginRight","paddingRight","parseInt","generateControlElement","oldControl","replaceChild","setDisplayIndex","getDisplayIndex","getRows","getChildren","allChildren","subChildren","generateChildren","childRow","expandRow","collapseRow","getTreeParent","getFilteredTreeChildren","childIndex","findChildIndex","addTreeChildRow","RowComponent","HTMLElement","getTreeChildren","recurse","getChildField","redrawNeeded","csv","fileContents","pdf","autoTableParams","rowGroupStyles","fontStyle","fontSize","cellPadding","fillColor","rowCalcStyles","jsPDFParams","title","header","content","colSpan","rowSpan","styles","doc","jspdf","autoTable","xlsx","sheetName","workbook","tableFeatures","Sheets","generateSheet","merges","worksheet","s","c","r","Date","XLSX","setFileContents","sheets","sheetOnly","active","intercept","s2ab","ArrayBuffer","view","Uint8Array","bookType","bookSST","defaultDownloaders","Download","downloadToTab","download","buildLink","interceptCallback","downloadFunc","generateExportList","groupHeader","triggerDownload","mime","filename","blob","newTab","navigator","commsReceived","downloaders","maskInput","maskLetter","maskNumber","maskWildcard","fillSymbols","symbol","mask","char","input","success","cancel","editorParams","onRendered","preventScroll","onChange","cellValue","keyCode","textarea","vertNav","count","scrollHeight","display","padding","focus","setTimeout","heightNow","stopImmediatePropagation","number","removeEventListener","select","cellEl","initialDisplayValue","listEl","multiselect","dataItems","currentItem","displayItems","currentItems","blurable","blockListShow","searchWord","searchWordTimeout","getUniqueColumnValues","displayList","processComplexListItem","label","itemParams","elementAttributes","setItem","dataList","inputValues","b","a","fillList","tabIndex","innerHTML","toggleItem","chooseItem","setCurrentItem","behavior","block","inline","indexOf","fillInput","unsetItem","hideList","chooseItems","len","cancelItem","showList","parseItems","removeScrollListener","self","character","readOnly","unsetItems","preventDefault","scrollTovalue","autocomplete","uniqueColumnValues","add","genUniqueColumnValues","sortValuesList","items","matches","addNotice","searchingPlaceholder","fillListIfNotEmpty","term","clearList","searchEl","notice","Node","itemList","listItemFormatter","intialLoad","current","parentNode","filterList","star","maxStars","size","getElementsByTagName","stars","starsHolder","starChange","buildStar","starHolder","changeValue","progress","min","percent","handle","bar","mouseDrag","mouseDragWidth","updateValue","position","tickCross","tristate","indetermValue","indetermState","indeterminate","checked","defaultEditors","Edit","currentCell","mouseClick","invalidEdit","editors","navigatePrev","navigateLeft","clearEdited","rowDeleteCheck","cancelEdit","keybindingNavigateNext","newRow","addRow","nav","cellisEdited","cellCancelEdit","clearCellEdited","nextCell","navigateNext","navigateRight","navigateUp","navigateDown","findNextEditableCell","edit","allowEdit","findPrevEditableCell","prevCell","columnDeleteCheck","editor","check","getCurrentCell","clearEditor","bindEditor","button","focusCellNoEvent","recursionBlock","editCell","forceEdit","focusScrollAdjust","bottomEdge","rowEl","offset","offsetTop","topEdge","scrollTop","rightEdge","leftEdge","scrollLeft","offsetLeft","rendered","cellEditor","edited","getEditedCells","editIndex","editedCells","ExportRow","ExportColumn","Export","cloneTableStyle","colVisProp","columnHeaders","genereateTable","rowLookup","generateColumnGroupHeaders","colData","processColumnGroup","maxDepth","groupData","depth","subGroupData","columnVisCheck","headersToExportRows","headerDepth","exportRows","parseColumnGroup","bodyToExportRows","rowGroups","exportCols","genereateTableElement","headerEl","bodyEl","rowFormatter","setup","lookupTableStyles","oddRow","evenRow","firstGroup","genereateHeaderElement","mapElementStyles","genereateGroupElement","genereateCalcElement","genereateRowElement","cellWrapper","firstCell","_row","format","genereateHTMLTable","holder","getHtml","lookup","fromStyle","getComputedStyle","props","defaultFilters","rowVal","filterVal","RegExp","String","keywords","Filter","headerFilters","headerFilterColumns","prevHeaderFilterChangeCheck","userSetFilter","userRefreshFilter","getHeaderFilters","initializeColumnHeaderFilter","showHeaderFilterElements","tableBuilt","remoteFilterParams","userAddFilter","userSetHeaderFilterFocus","userGetHeaderFilterValue","userSetHeaderFilterValue","userRemoveFilter","userClearFilter","userClearHeaderFilter","searchRows","searchData","headerFilter","filterChangeCheck","filterFunc","colVal","refreshFilter","attrType","tagType","emptyFunc","generateHeaderFilterElement","filterElement","editorElement","typingTimer","searchTrigger","headerFilterParams","headerFilterLiveFilterDelay","headerFilterLiveFilter","hideHeaderFilterElements","setHeaderFilterFocus","getHeaderFilterValue","setHeaderFilterValue","reloadHeaderFilter","trackChanges","hasChanged","setFilter","addFilter","filter","findFilter","filters","findSubFilters","getFilters","all","ajax","filtersToArray","removeFilter","clearFilter","clearHeaderFilter","search","activeRows","activeRowComponents","filterMode","rowList","filterRow","filterRecurse","emptyToSpace","sanitizeHTML","floatVal","sign","integer","decimal","rgx","decimalSym","thousandSym","formatterParams","after","symbolAfter","negativeSign","toFixed","link","urlPrefix","labelField","urlField","image","src","tickCross$1","empty","truthy","allowTruthy","tick","cross","datetime","DT","DateTime","luxon","outputFormat","invalid","newDatetime","timezone","datetimediff","inputFormat","suffix","humanize","date","star$1","starActive","starInactive","nextStar","traffic","colors","color","percentValue","progress$1","legendAlign","legend","legendColor","unit","barEl","barContainer","legendEl","CellComponent","holderEl","responsiveCollapse","toggleList","checkbox","toggleSelect","defaultFormatters","plaintext","html$1","textarea$1","money","buttonTick","buttonCross","rownum","rowSelection","formatterPrint","print","formatterClipboard","lookupFormatter","htmlOutput","Format","formatHeader","callback","mockCell","formatValue","formatExportValue","entityMap","getFormatter","formatters","leftColumns","rightColumns","leftMargin","rightMargin","initializationMode","layoutCell","margin","edge","frozenCheck","calcMargins","layoutColumnPosition","_calcSpace","layoutCalcRows","topInitialized","layoutGroupCalcs","frozen","parentEl","leftParents","allCells","getColGroupParentElement","FrozenColumns","isRowFrozen","isFrozen","freezeRow","adjustTableSize","unfreezeRow","detachRow","styleRows","FrozenRows","Proxy","receiver","getKey","_group","getSubGroups","getParentGroup","toggleVisibility","Group","groupManager","level","hasSubGroups","old","groupList","generator","elementContents","arrowElement","createElements","arrow","createValueGroups","addBindings","toggleElement","_createGroup","groupID","groupKey","_addRowToGroup","_addRow","insertRow","toIndex","splice","updateGroupRows","scrollHeader","getRowIndex","conformRowData","removeRow","groupValues","removeGroup","getHeadersAndRows","getRowCount","prev","_visSet","getRowGroup","compoment","generateGroupHeaderContents","getPath","path","remove","childNodes","groupIDLookups","headerGenerator","allowedValues","displayHandler","setGroupValues","configureGroupSetup","cols","lookupFunc","getColumnByField","rowSample","getGroups","prevValue","virtualRenderFill","rowAddingIndex","groupRows","setGroupBy","setGroupStartOpen","groupStartOpen","setGroupHeader","userGetGroups","userGetGroupedData","rowGetGroup","rowMoving","toGroup","fromGroup","rowDeleting","cellUpdated","groupComponents","getChildGroups","pullGroupListData","groupListData","childData","getGroupedData","countGroups","generateGroups","createGroup","assignRowToExistingGroup","oldGroups","assignRowToGroup","newGroupNeeded","reassignRowToGroup","oldGroupPath","newGroupPath","samePath","oldRowGroup","getExpectedPath","groupPath","scrollHeaders","renderer","GroupRows","cellEdit","rowAdd","_rebindRow","History","rowMoved","posFrom","posTo","rowAdded","rowDeleted","newValue","clear","history","getHistoryUndoSize","getHistoryRedoSize","clearComponentHistory","undo","redo","oldRow","defaultUndoers","redoers","HtmlTableImport","fieldIndex","tableElementCheck","parseTable","_generateBlankHeaders","_extractOptions","defaultOptions","attributes","optionsArr","attrib","_attribValue","_findCol","_extractHeaders","exists","getAttribute","rowClick","rowDblClick","rowContext","rowMouseEnter","rowMouseLeave","rowMouseOver","rowMouseOut","rowMouseMove","rowTap","rowDblTap","rowTapHold","cellClick","cellDblClick","cellContext","cellMouseEnter","cellMouseLeave","cellMouseOver","cellMouseOut","cellMouseMove","cellTap","cellDblTap","cellTapHold","headerMouseEnter","headerMouseLeave","headerMouseOver","headerMouseOut","headerMouseMove","headerTap","headerTapHold","groupClick","groupDblClick","groupContext","groupMouseEnter","groupMouseLeave","groupMouseOver","groupMouseOut","groupMouseMove","groupTap","groupDblTap","groupTapHold","subscribers","touchSubscribers","touchWatchers","tapDbl","cellContentsSelectionFixer","initializeExternalEvents","subscriptionChanged","added","eventMap","subscribeTouchEvents","unsubscribeTouchEvents","notouch","handleTouch","watchers","dispatchEvent","componentObj","Interaction","defaultBindings","navPrev","navNext","navUp","navDown","scrollPageUp","scrollPageDown","scrollToEnd","copyToClipboard","defaultActions","keyBlock","newPos","scrollMax","scrollToRow","scrollToStart","getDisplayRows","navLeft","navRight","Keybindings","watchKeys","bindings","mergedBindings","mapBindings","actions","mapBinding","binding","ctrl","shift","meta","symbols","bindEvents","clearBindings","checkBinding","Menu","menuElements","blurEvent","escEvent","nestedMenuBlock","initializeColumnHeader","headerMenuEl","LoadMenuEvent","menu","loaded","initializeCell","rowClickMenu","initializeGroup","loadMenu","touch","MouseEvent","menuEl","isOpen","hideMenu","itemEl","disabled","hideOldSubMenus","pop","positionMenu","x","y","parentOffset","pageY","docHeight","escMenu","MoveColumns","placeholderElement","hoverElement","checkTimeout","checkPeriod","moving","toCol","startX","autoScrollMargin","autoScrollTimeout","createPlaceholderElement","colEl","touches","bindTouchEvents","startXMove","nextCol","prevCol","nextColWidth","prevColWidth","nextColWidthLast","prevColWidthLast","diff","moveToCol","moveColumn","startMove","headerElement","headersElement","pageX","_bindMouseMove","_unbindMouseMove","movingCells","toColAfter","endMove","moveHover","xPos","scrollPos","MoveRows","toRowAfter","hasHandle","tableRowDropEvent","touchMove","connection","connectionSelectorsTables","connectionElements","connections","connectedTable","connectedRow","movableRowsConnectedTables","connectionSelectorsElements","initializeGroupHeader","mousemove","nextSibling","moveRow","tableRowDrop","which","rowHandle","startYMove","nextRowHeight","prevRowHeight","nextRowHeightLast","prevRowHeightLast","setStartPosition","whiteSpace","moveHoverTable","yPos","moveHoverConnections","elementRowDrop","connectToTables","connectionTables","query","dropEvent","disconnectFromTables","connect","disconnect","dropComplete","sender","prototype","fromRow","defaultMutators","Mutator","enabled","mutator","lookupMutator","transformCell","enable","disable","Page","initialLoad","dataChanging","pageSizes","setMaxPage","initialLoadComplete","remotePageParams","rowAddingPosition","dispRows","calculatePageSizes","paginationSize","testElRow","testElCell","floor","userSetPageToRow","setPageToRow","userSetPageSize","scrollVertical","restOnRenderBefore","firstBut","nextBut","generatePageSizeSelectList","paginationSizeSelector","initializePaginator","pageSelectLabel","prevBut","setPage","previousPage","nextPage","paginationElement","pageSizeSelect","pagesElement","initializeProgressive","progressiveLoad","setMaxRows","rowCount","page","setPageSize","_setPageButtons","leftSize","rightSize","lastBut","_generatePageButton","getPage","getPageMax","getPageSize","start","end","trigger","finally","_parseRemoteData","footerRedraw","footer","defaultReaders","local","id","localStorage","cookie","cookiePos","expireDate","setDate","Persistence","defWatcherBlock","localStorageTest","testKey","persistence","retreivedData","readers","readFunc","persistenceWriterFunc","sort","retreiveData","eventSave","sorters","initialSort","getColumnLayout","setColumnLayout","set","mergeDefinition","newCols","from","oldCols","_findColumn","find","save","parseColumns","validateSorters","writeFunc","getGroupConfig","getPageConfig","definitions","excludedKeys","defStore","colDef","defaultWriters","Print","manualBlock","replaceTable","cleanup","printFullscreen","scrollY","footerEl","tableEl","headerContent","footerContent","printHeader","scrollX","ReactiveData","origFuncs","currentVersion","watchData","version","enumerable","configurable","args","defineProperty","newRows","startRow","oldRows","unwatchData","writable","watchRow","watchTreeChildren","rebuildTree","childField","apply","watchKey","getOwnPropertyDescriptor","unwatchRow","unblock","ResizeColumns","prevHandle","layoutCellHandles","layoutColumnHeader","variableHeight","_mouseDown","nearestColumn","colIndex","_checkResizability","rtl","mouseUp","startColumn","ResizeRows","handleDown","observer","autoResize","tableStyle","containerHeight","containerWidth","ResizeObserver","nodeHeight","nodeWidth","tableHeight","rerenderColumns","browserMobile","tableResized","ResizeTable","ResponsiveLayout","hiddenColumns","collapseStartOpen","initializeResponsivity","responsiveLayout","collapseHandleColumn","order","generateCollapsedRowContent","updateColumnVisibility","hideColumn","colCount","showColumn","working","generateCollapsedContent","generateCollapsedRowData","mockCellComponent","formatCollapsedData","titleData","node_content","titleHighlight","text","valueData","SelectRow","selecting","lastClickedRow","selectPrev","headerCheckboxElement","rowRetrieve","clearSelectionData","selected","selectable","shiftKey","rowIdx","fromRowIdx","lastClickedRowIdx","toggledRows","toggledRow","deselectRows","selectRows","rowMatch","_rowSelectionChanged","_selectRow","rowInfo","selectedRows","isRowSelected","_deselectRow","selectedRow","getSelectedData","getSelectedRows","registerRowSelectCheckbox","registerHeaderSelectCheckbox","childRowSelection","alignEmptyValues","decimalSeparator","thousand","thousandSeparator","emptyAlign","dir","string","locale","datetime$1","aRow","bRow","el1","el2","calc","d","alphanum","a1","b1","L","rx","rd","bs","as","defaultSorters","time","boolean","array","Sort","sortList","remoteSortParams","userSetSort","setSort","clearSort","sorter","arrowEl","startingDir","columnHeaderSortMulti","refreshSort","getSort","newSortList","findSorter","sortListActual","rowComponents","sortMode","sortObj","_sortItems","clearColumnHeaders","setColumnHeader","_sortRow","el1Comp","el2Comp","isFinite","float","parameters","numeric","starts","ends","minLength","maxLength","in","regex","reg","unique","cellData","required","Validate","clearValidation","cellIsValid","cellValidate","columnValidate","rowValidate","userClearCellValidation","userValidate","validator","_extractValidator","_buildValidator","validate","validators","invalidIndex","getInvalidCells","invalidCells","ResizeColumnsModule","ResizeRowsModule","ResizeTableModule","ResponsiveLayoutModule","SelectRowModule","SortModule","ValidateModule","debugEventsExternal","debugEventsInternal","debugInvalidOptions","columnMaxWidth","columnHeaderVertAlign","columnDefaults","autoColumns","autoColumnsDefinitions","tooltipGenerationMode","footerElement","textDirection","addRowPos","headerVisible","renderVertical","renderHorizontal","renderVerticalBuffer","scrollToRowPosition","scrollToRowIfVisible","scrollToColumnPosition","scrollToColumnIfVisible","rowFormatterPrint","rowFormatterClipboard","rowFormatterHtmlOutput","placeholder","dataLoaderLoading","dataLoaderError","dataSendParams","dataReceiveParams","OptionsList","msgType","generate","userOptions","Renderer","clearRows","clearColumns","reinitializeColumnWidths","renderRows","renderColumns","rerenderRows","renderRowCells","rerenderRowCells","scrollColumns","scrollRows","resize","scrollToRowNearestTop","styleRow","render","rerender","ifVisible","rowIndex","elementVertical","BaiscHorizontal","VirtualDomHorizontal","rightCol","vDomScrollPosRight","vDomPadLeft","compatabilityCheck","leftCol","colPos","reinitChanged","deinitialize","dataChange","change","collsWidth","colEnd","columnsByIndex","reinitializeRows","reinitializeRow","scroll","removeColRight","colPositionAdjust","addColRight","addColLeft","paddingLeft","removeColLeft","fitDataColActualWidthCheck","newWidth","widthDiff","vdomHoz","ColumnManager","blockHozScrollEvent","RendererVirtualDomHorizontal","initializeRenderer","renderClass","renderers","createHeadersElement","createHeaderElement","getHeadersElement","hozAdjust","scrollWidth","generateColumnsFromRowData","setColumns","_addColumn","nextToColumn","topColumn","parentIndex","before","nextEl","_reIndexColumns","verticalAlignHeaders","findColumn","getColumnsByFieldRoot","getColumnByIndex","getFirstVisibleColumn","findColumnIndex","getRealColumns","getDefinitions","getDefinitionTree","getComponents","structured","moveColumnActual","_moveColumnInArray","fromIndex","updateRows","scrollToColumn","adjust","getFlexBaseWidth","totalWidth","fixedWidth","colWidth","addColumn","BaiscVertical","onlyGroupHeaders","VirtualDomVertical","vDomRowHeight","vDomTop","vDomScrollPosBottom","vDomBottomPad","paddingBottom","topOffset","topDiff","bottomDiff","_addBottomRow","topFound","bottomRow","_virtualRenderFill","topPad","rowsHeight","heightOccupied","topPadHeight","rowsCount","rowHeight","vDomWindowBuffer","forceMove","_addTopRow","fillableSpace","addedRows","paddingAdjust","vDomScrollPosTop","_removeTopRow","removableRows","vDomBottom","_removeBottomRow","_quickNormalizeRowHeight","RowManager","tableElement","heightFixer","createTableElement","firstRender","renderMode","displayRows","displayRowsCount","rowNumColumn","createHolderElement","getTableElement","getRowPosition","leftDir","topDir","findRow","getRowFromDataObject","getRowFromPosition","_setDataActual","_wipeElements","deleteRow","allIndex","activeIndex","displayRowIterator","regenerateRowNumbers","blockRedraw","addRows","_clearPlaceholder","findAddRowPos","addRowActual","chainResult","setActiveRows","moveRowActual","moveRowInArray","clearData","findRowIndex","getDisplayRowIndex","nextDisplayRow","prevDisplayRow","getDataCount","skipStage","stage","cascadeOrder","dataPipeline","reRenderInPosition","resetDisplayRows","getNextDisplayIndex","setDisplayRows","getVisibleRows","fixedHeight","getRenderMode","renderTable","_clearTable","renderEmptyScroll","_showPlaceholder","initialHeight","otherHeight","redrawBlock","restoreRedraw","redrawBlockRestoreConfig","resetScroll","event","FooterManager","initializeElement","prepend","deactivate","activate","links","InteractionManager","subscriber","buildListenerMap","listenerMap","components","bindPseudoEvents","pseudoTrackers","pseudoMouseEnter","pseudoMouseLeave","linkedKeys","leaveList","bindSubscriptionWatchers","listeners","listener","updateEventListeners","track","targets","findTargets","componentMap","bindComponents","targetMatches","previousTarget","previousTargets","triggerEvents","ComponentFunctionBinder","funcName","DataLoader","msgElement","template","loadingElement","createLoaderElement","createMsgElement","mapParams","map","objectInvert","blockActiveLoad","requestOrder","showLoader","shouldLoad","showError","errorElement","hideLoader","debug","subscriptionNotifiers","_notifiySubscriptionChange","notifiers","_dispatch","_debugDispatch","events","_chain","_confirm","confirmed","callResult","_debugChain","_debugConfirm","TableRegistry","lookupTable","matchElement","Tabulator","fitData","fitDataStretch","colsWidth","tableWidth","gap","lastCol","flexGrowUnits","flexColWidth","flexColumns","fixedShrinkColumns","flexShrinkUnits","overflowWidth","gapFill","calcWidth","scaleColumns","oversizeCols","oversizeSpace","remainingSpace","remainingFlexGrowUnits","changeUnits","undersizeCols","calcGrow","calcShrink","shrinkCols","freeSpace","flexWidth","defaultModes","fitDataFill","fitDataTable","fitColumns","Layout","defaultLangs","Localize","setHeaderFilterPlaceholder","setHeaderFilterColumnPlaceholder","installLang","lang","_setLangProp","langList","setLocale","desiredLocale","traverseLang","trans","getLang","pathArray","_getLangElement","root","rootPath","_executeBindings","Comms","con","coreModules","LayoutModule","LocalizeModule","CommsModule","ModuleBinder","bindStaticFuctionality","tabulator","source","registerModule","modulesCore","bindModules","mods","mod","footerManager","interactionMonitor","browser","originalElement","initialzeCoreSystems","_clearObjectPointers","_mapDeprecatedFunctionality","_clearSelection","_create","_loadInitialData","_rtlCheck","_buildElement","newElement","_initializeTable","_detectBrowser","span","modulesRegular","destroy","ua","setDataFromLocalFile","extensions","accept","file","reader","FileReader","onload","replaceData","responses","parse","addData","updateOrAddData","foundRows","updateOrAddRow","updateRow","getColumnDefinitions","toggleColumn","deleteColumn","updateColumnDefinition","fromColumn","on","off","plugin","TabulatorFull","PseudoRow","_createElement"],"sources":["C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\CoreFeature.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\Module.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\Helpers.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Accessor\\defaults\\accessors.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Accessor\\Accessor.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\config.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\urlGenerator.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\loaderPromise.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\contentTypeFormatters.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\Ajax.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Clipboard\\defaults\\pasteActions.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Clipboard\\defaults\\pasteParsers.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Clipboard\\Clipboard.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\ColumnCalcs\\CalcComponent.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\cell\\CellComponent.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\cell\\Cell.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\column\\ColumnComponent.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\column\\defaults\\options.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\column\\Column.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\row\\RowComponent.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\row\\Row.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\ColumnCalcs\\defaults\\calculations.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\ColumnCalcs\\ColumnCalcs.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\DataTree\\DataTree.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\csv.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\json.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\pdf.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\xlsx.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\html.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\Download.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\inputMask.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\input.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\textarea.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\number.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\range.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\select.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\autocomplete.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\star.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\progress.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\tickCross.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\Edit.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Export\\ExportRow.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Export\\ExportColumn.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Export\\Export.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Filter\\defaults\\filters.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Filter\\Filter.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\plaintext.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\html.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\textarea.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\money.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\link.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\image.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\tickCross.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\datetime.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\datetimediff.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\lookup.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\star.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\traffic.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\progress.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\color.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\buttonTick.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\buttonCross.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\rownum.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\handle.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\responsiveCollapse.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\rowSelection.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\Format.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\FrozenColumns\\FrozenColumns.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\FrozenRows\\FrozenRows.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\GroupRows\\GroupComponent.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\GroupRows\\Group.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\GroupRows\\GroupRows.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\History\\defaults\\undoers.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\History\\defaults\\redoers.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\History\\History.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\HtmlTableImport\\HtmlTableImport.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Interaction\\Interaction.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Keybindings\\defaults\\bindings.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Keybindings\\defaults\\actions.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Keybindings\\Keybindings.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Menu\\Menu.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\MoveColumns\\MoveColumns.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\MoveRows\\MoveRows.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Mutator\\defaults\\mutators.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Mutator\\Mutator.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Page\\Page.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Persistence\\defaults\\readers.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Persistence\\defaults\\writers.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Persistence\\Persistence.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Print\\Print.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\ReactiveData\\ReactiveData.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\ResizeColumns\\ResizeColumns.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\ResizeRows\\ResizeRows.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\ResizeTable\\ResizeTable.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\ResponsiveLayout\\ResponsiveLayout.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\SelectRow\\SelectRow.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\number.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\string.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\datetime.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\date.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\time.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\boolean.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\array.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\exists.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\alphanum.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\Sort.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Validate\\defaults\\validators.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Validate\\Validate.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\defaults\\options.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\OptionsList.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\Renderer.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\BasicHorizontal.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\VirtualDomHorizontal.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\ColumnManager.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\BasicVertical.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\VirtualDomVertical.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\RowManager.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\FooterManager.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\InteractionMonitor.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\ComponentFunctionBinder.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\DataLoader.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\ExternalEventBus.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\InternalEventBus.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\TableRegistry.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitData.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitDataGeneral.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitDataStretch.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitColumns.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\Layout.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Localize\\defaults\\langs.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Localize\\Localize.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\modules\\Comms\\Comms.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\ModuleBinder.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\Tabulator.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\TabulatorFull.js","C:\\Development\\uno\\node_modules\\tabulator-tables\\src\\js\\core\\row\\PseudoRow.js"],"sourcesContent":["export default class CoreFeature{\r\n\r\n\tconstructor(table){\r\n\t\tthis.table = table;\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t/////////////// DataLoad /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\treloadData(data, silent){\r\n\t\treturn this.table.dataLoader.load(data, undefined, undefined, undefined, silent);\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t///////////// Localization ///////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tlangText(){\r\n\t\treturn this.table.modules.localize.getText(...arguments);\r\n\t}\r\n\r\n\tlangBind(){\r\n\t\treturn this.table.modules.localize.bind(...arguments);\r\n\t}\r\n\r\n\tlangLocale(){\r\n\t\treturn this.table.modules.localize.getLocale(...arguments);\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////\r\n\t////////// Inter Table Comms /////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tcommsConnections(){\r\n\t\treturn this.table.modules.comms.getConnections(...arguments);\r\n\t}\r\n\r\n\tcommsSend(){\r\n\t\treturn this.table.modules.comms.send(...arguments);\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t//////////////// Layout  /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tlayoutMode(){\r\n\t\treturn this.table.modules.layout.getMode();\r\n\t}\r\n\r\n\tlayoutRefresh(){\r\n\t\treturn this.table.modules.layout.layout();\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////\r\n\t/////////////// Event Bus ////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tsubscribe(){\r\n\t\treturn this.table.eventBus.subscribe(...arguments);\r\n\t}\r\n\r\n\tunsubscribe(){\r\n\t\treturn this.table.eventBus.unsubscribe(...arguments);\r\n\t}\r\n\r\n\tsubscribed(key){\r\n\t\treturn this.table.eventBus.subscribed(key);\r\n\t}\r\n\r\n\tsubscriptionChange(){\r\n\t\treturn this.table.eventBus.subscriptionChange(...arguments);\r\n\t}\r\n\r\n\tdispatch(){\r\n\t\treturn this.table.eventBus.dispatch(...arguments);\r\n\t}\r\n\r\n\tchain(){\r\n\t\treturn this.table.eventBus.chain(...arguments);\r\n\t}\r\n\r\n\tconfirm(){\r\n\t\treturn this.table.eventBus.confirm(...arguments);\r\n\t}\r\n\r\n\tdispatchExternal(){\r\n\t\treturn this.table.externalEvents.dispatch(...arguments);\r\n\t}\r\n\r\n\tsubscribedExternal(key){\r\n\t\treturn this.table.externalEvents.subscribed(key);\r\n\t}\r\n\r\n\tsubscriptionChangeExternal(){\r\n\t\treturn this.table.externalEvents.subscriptionChange(...arguments);\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t//////////////// Options /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\toptions(key){\r\n\t\treturn this.table.options[key];\r\n\t}\r\n\r\n\tsetOption(key, value){\r\n\t\tif(typeof value !== \"undefined\"){\r\n\t\t\tthis.table.options[key] = value;\r\n\t\t}\r\n\r\n\t\treturn this.table.options[key];\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////\r\n\t//////////////// Modules /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tmodule(key){\r\n\t\treturn this.table.module(key);\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\n\r\nclass Module extends CoreFeature{\r\n\r\n\tconstructor(table, name){\r\n\t\tsuper(table);\r\n\r\n\t\tthis._handler = null;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\t// setup module when table is initialized, to be overriden in module\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t////// Options Registration ///////\r\n\t///////////////////////////////////\r\n\r\n\tregisterTableOption(key, value){\r\n\t\tthis.table.optionsList.register(key, value);\r\n\t}\r\n\r\n\tregisterColumnOption(key, value){\r\n\t\tthis.table.columnManager.optionsList.register(key, value);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t/// Public Function Registation ///\r\n\t///////////////////////////////////\r\n\r\n\tregisterTableFunction(name, func){\r\n\t\tif(typeof this.table[name] === \"undefined\"){\r\n\t\t\tthis.table[name] = func;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Unable to bind table function, name already in use\", name)\r\n\t\t}\r\n\t}\r\n\r\n\tregisterComponentFunction(component, func, handler){\r\n\t\treturn this.table.componentFunctionBinder.bind(component, func, handler);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t////////// Data Pipeline //////////\r\n\t///////////////////////////////////\r\n\r\n\tregisterDataHandler(handler, priority){\r\n\t\tthis.table.rowManager.registerDataPipelineHandler(handler, priority)\r\n\t\tthis._handler = handler;\r\n\t}\r\n\r\n\tregisterDisplayHandler(handler, priority){\r\n\t\tthis.table.rowManager.registerDisplayPipelineHandler(handler, priority)\r\n\t\tthis._handler = handler;\r\n\t}\r\n\r\n\trefreshData(renderInPosition, handler){\r\n\t\tif(!handler){\r\n\t\t\thandler = this._handler;\r\n\t\t}\r\n\r\n\t\tif(handler){\r\n\t\t\tthis.table.rowManager.refreshActiveData(handler, false, renderInPosition);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Module;","export default class Helpers{\r\n\r\n\tstatic elVisible(el){\r\n\t\treturn !(el.offsetWidth <= 0 && el.offsetHeight <= 0);\r\n\t}\r\n\r\n\tstatic elOffset(el){\r\n\t\tvar box = el.getBoundingClientRect();\r\n\r\n\t\treturn {\r\n\t\t\ttop: box.top + window.pageYOffset - document.documentElement.clientTop,\r\n\t\t\tleft: box.left + window.pageXOffset - document.documentElement.clientLeft\r\n\t\t};\r\n\t}\r\n\r\n\tstatic deepClone(obj, clone, list = []){\r\n\t\tvar objectProto = {}.__proto__,\r\n\t\tarrayProto = [].__proto__;\r\n\r\n\t\tif (!clone){\r\n\t\t\tclone = Object.assign(Array.isArray(obj) ? [] : {}, obj);\r\n\t\t}\r\n\r\n\t\tfor(var i in obj) {\r\n\t\t\tlet subject = obj[i],\r\n\t\t\tmatch, copy;\r\n\r\n\t\t\tif(subject != null && typeof subject === \"object\" && (subject.__proto__ === objectProto || subject.__proto__ === arrayProto)){\r\n\t\t\t\tmatch = list.findIndex((item) => {\r\n\t\t\t\t\treturn item.subject === subject;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(match > -1){\r\n\t\t\t\t\tclone[i] = list[match].copy;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcopy = Object.assign(Array.isArray(subject) ? [] : {}, subject);\r\n\r\n\t\t\t\t\tlist.unshift({subject, copy});\r\n\r\n\t\t\t\t\tclone[i] = this.deepClone(subject, copy, list);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn clone;\r\n\t}\r\n}","export default {}","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport defautlAccessors from './defaults/accessors.js';\r\n\r\nclass Accessor extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.allowedTypes = [\"\", \"data\", \"download\", \"clipboard\", \"print\", \"htmlOutput\"] //list of accessor types\r\n\r\n\t\tthis.registerColumnOption(\"accessor\");\r\n\t\tthis.registerColumnOption(\"accessorParams\");\r\n\t\tthis.registerColumnOption(\"accessorData\");\r\n\t\tthis.registerColumnOption(\"accessorDataParams\");\r\n\t\tthis.registerColumnOption(\"accessorDownload\");\r\n\t\tthis.registerColumnOption(\"accessorDownloadParams\");\r\n\t\tthis.registerColumnOption(\"accessorClipboard\");\r\n\t\tthis.registerColumnOption(\"accessorClipboardParams\");\r\n\t\tthis.registerColumnOption(\"accessorPrint\");\r\n\t\tthis.registerColumnOption(\"accessorPrintParams\");\r\n\t\tthis.registerColumnOption(\"accessorHtmlOutput\");\r\n\t\tthis.registerColumnOption(\"accessorHtmlOutputParams\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"row-data-retrieve\", this.transformRow.bind(this));\r\n\t}\r\n\r\n\t//initialize column accessor\r\n\tinitializeColumn(column){\r\n\t\tvar match = false,\r\n\t\tconfig = {};\r\n\r\n\t\tthis.allowedTypes.forEach((type) => {\r\n\t\t\tvar key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\t\taccessor;\r\n\r\n\t\t\tif(column.definition[key]){\r\n\t\t\t\taccessor = this.lookupAccessor(column.definition[key]);\r\n\r\n\t\t\t\tif(accessor){\r\n\t\t\t\t\tmatch = true;\r\n\r\n\t\t\t\t\tconfig[key] = {\r\n\t\t\t\t\t\taccessor:accessor,\r\n\t\t\t\t\t\tparams: column.definition[key + \"Params\"] || {},\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(match){\r\n\t\t\tcolumn.modules.accessor = config;\r\n\t\t}\r\n\t}\r\n\r\n\tlookupAccessor(value){\r\n\t\tvar accessor = false;\r\n\r\n\t\t//set column accessor\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Accessor.accessors[value]){\r\n\t\t\t\taccessor = Accessor.accessors[value]\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Accessor Error - No such accessor found, ignoring: \", value);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\taccessor = value;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn accessor;\r\n\t}\r\n\r\n\t//apply accessor to row\r\n\ttransformRow(row, type){\r\n\t\tvar key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\trowComponent = row.getComponent();\r\n\r\n\t\t//clone data object with deep copy to isolate internal data from returned result\r\n\t\tvar data = Helpers.deepClone(row.data || {});\r\n\r\n\t\tthis.table.columnManager.traverse(function(column){\r\n\t\t\tvar value, accessor, params, colCompnent;\r\n\r\n\t\t\tif(column.modules.accessor){\r\n\r\n\t\t\t\taccessor = column.modules.accessor[key] || column.modules.accessor.accessor || false;\r\n\r\n\t\t\t\tif(accessor){\r\n\t\t\t\t\tvalue = column.getFieldValue(data);\r\n\r\n\t\t\t\t\tif(value != \"undefined\"){\r\n\t\t\t\t\t\tcolCompnent = column.getComponent();\r\n\t\t\t\t\t\tparams = typeof accessor.params === \"function\" ? accessor.params(value, data, type, colCompnent, rowComponent) : accessor.params;\r\n\t\t\t\t\t\tcolumn.setFieldValue(data, accessor.accessor(value, data, type, params, colCompnent, rowComponent));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\n//load defaults\r\nAccessor.moduleName = \"accessor\";\r\nAccessor.accessors = defautlAccessors;\r\n\r\nexport default Accessor;","export default {\r\n\tmethod: \"GET\",\r\n};","function generateParamsList(data, prefix){\r\n\tvar output = [];\r\n\r\n\tprefix = prefix || \"\";\r\n\r\n\tif(Array.isArray(data)){\r\n\t\tdata.forEach((item, i) => {\r\n\t\t\toutput = output.concat(generateParamsList(item, prefix ? prefix + \"[\" + i + \"]\" : i));\r\n\t\t});\r\n\t}else if (typeof data === \"object\"){\r\n\t\tfor (var key in data){\r\n\t\t\toutput = output.concat(generateParamsList(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\r\n\t\t}\r\n\t}else{\r\n\t\toutput.push({key:prefix, value:data});\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\nfunction serializeParams(params){\r\n\tvar output = generateParamsList(params),\r\n\tencoded = [];\r\n\r\n\toutput.forEach(function(item){\r\n\t\tencoded.push(encodeURIComponent(item.key) + \"=\" + encodeURIComponent(item.value));\r\n\t});\r\n\r\n\treturn encoded.join(\"&\");\r\n}\r\n\r\nexport default function(url, config, params){\r\n\tif(url){\r\n\t\tif(params && Object.keys(params).length){\r\n\t\t\tif(!config.method || config.method.toLowerCase() == \"get\"){\r\n\t\t\t\tconfig.method = \"get\";\r\n\r\n\t\t\t\turl += (url.includes(\"?\") ? \"&\" : \"?\") + serializeParams(params);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn url;\r\n};","export default function(url, config, params){\r\n\tvar contentType;\r\n\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t//set url\r\n\t\turl = this.urlGenerator.call(this.table, url, config, params);\r\n\r\n\t\t//set body content if not GET request\r\n\t\tif(config.method.toUpperCase() != \"GET\"){\r\n\t\t\tcontentType = typeof this.table.options.ajaxContentType === \"object\" ?  this.table.options.ajaxContentType : this.contentTypeFormatters[this.table.options.ajaxContentType];\r\n\t\t\tif(contentType){\r\n\r\n\t\t\t\tfor(var key in contentType.headers){\r\n\t\t\t\t\tif(!config.headers){\r\n\t\t\t\t\t\tconfig.headers = {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(typeof config.headers[key] === \"undefined\"){\r\n\t\t\t\t\t\tconfig.headers[key] = contentType.headers[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconfig.body = contentType.body.call(this, url, config, params);\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Ajax Error - Invalid ajaxContentType value:\", this.table.options.ajaxContentType);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(url){\r\n\t\t\t//configure headers\r\n\t\t\tif(typeof config.headers === \"undefined\"){\r\n\t\t\t\tconfig.headers = {};\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof config.headers.Accept === \"undefined\"){\r\n\t\t\t\tconfig.headers.Accept = \"application/json\";\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof config.headers[\"X-Requested-With\"] === \"undefined\"){\r\n\t\t\t\tconfig.headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof config.mode === \"undefined\"){\r\n\t\t\t\tconfig.mode = \"cors\";\r\n\t\t\t}\r\n\r\n\t\t\tif(config.mode == \"cors\"){\r\n\t\t\t\tif(typeof config.headers[\"Origin\"] === \"undefined\"){\r\n\t\t\t\t\tconfig.headers[\"Origin\"] = window.location.origin;\r\n\t\t\t\t}\r\n        \r\n\t\t\t\tif(typeof config.credentials === \"undefined\"){\r\n\t\t\t\t\tconfig.credentials = 'same-origin';\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(typeof config.credentials === \"undefined\"){\r\n\t\t\t\t\tconfig.credentials = 'include';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//send request\r\n\t\t\tfetch(url, config)\r\n\t\t\t.then((response)=>{\r\n\t\t\t\tif(response.ok) {\r\n\t\t\t\t\tresponse.json()\r\n\t\t\t\t\t.then((data)=>{\r\n\t\t\t\t\t\tresolve(data);\r\n\t\t\t\t\t}).catch((error)=>{\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\tconsole.warn(\"Ajax Load Error - Invalid JSON returned\", error);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.error(\"Ajax Load Error - Connection Error: \" + response.status, response.statusText);\r\n\t\t\t\t\treject(response);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error)=>{\r\n\t\t\t\tconsole.error(\"Ajax Load Error - Connection Error: \", error);\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Ajax Load Error - No URL Set\");\r\n\t\t\tresolve([]);\r\n\t\t}\r\n\t});\r\n};","function generateParamsList(data, prefix){\r\n\tvar output = [];\r\n\r\n\tprefix = prefix || \"\";\r\n\r\n\tif(Array.isArray(data)){\r\n\t\tdata.forEach((item, i) => {\r\n\t\t\toutput = output.concat(generateParamsList(item, prefix ? prefix + \"[\" + i + \"]\" : i));\r\n\t\t});\r\n\t}else if (typeof data === \"object\"){\r\n\t\tfor (var key in data){\r\n\t\t\toutput = output.concat(generateParamsList(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\r\n\t\t}\r\n\t}else{\r\n\t\toutput.push({key:prefix, value:data});\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\nexport default {\r\n\t\"json\":{\r\n\t\theaders:{\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody:function(url, config, params){\r\n\t\t\treturn JSON.stringify(params);\r\n\t\t},\r\n\t},\r\n\t\"form\":{\r\n\t\theaders:{\r\n\t\t},\r\n\t\tbody:function(url, config, params){\r\n\r\n\t\t\tvar output = generateParamsList(params),\r\n\t\t\tform = new FormData();\r\n\r\n\t\t\toutput.forEach(function(item){\r\n\t\t\t\tform.append(item.key, item.value);\r\n\t\t\t});\r\n\r\n\t\t\treturn form;\r\n\t\t},\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultConfig from './defaults/config.js';\r\nimport defaultURLGenerator from './defaults/urlGenerator.js';\r\nimport defaultLoaderPromise from './defaults/loaderPromise.js';\r\nimport defaultContentTypeFormatters from './defaults/contentTypeFormatters.js';\r\n\r\nclass Ajax extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.config = false; //hold config object for ajax request\r\n\t\tthis.url = \"\"; //request URL\r\n\t\tthis.urlGenerator = false;\r\n\t\tthis.params = false; //request parameters\r\n\r\n\t\tthis.loaderPromise = false;\r\n\r\n\t\tthis.registerTableOption(\"ajaxURL\", false); //url for ajax loading\r\n\t\tthis.registerTableOption(\"ajaxURLGenerator\", false);\r\n\t\tthis.registerTableOption(\"ajaxParams\", {});  //params for ajax loading\r\n\t\tthis.registerTableOption(\"ajaxConfig\", \"get\"); //ajax request type\r\n\t\tthis.registerTableOption(\"ajaxContentType\", \"form\"); //ajax request type\r\n\t\tthis.registerTableOption(\"ajaxRequestFunc\", false); //promise function\r\n\r\n\t\tthis.registerTableOption(\"ajaxRequesting\", function(){});\r\n\t\tthis.registerTableOption(\"ajaxResponse\", false);\r\n\r\n\t\tthis.contentTypeFormatters = Ajax.contentTypeFormatters;\r\n\t}\r\n\r\n\t//initialize setup options\r\n\tinitialize(){\r\n\t\tthis.loaderPromise = this.table.options.ajaxRequestFunc || Ajax.defaultLoaderPromise;\r\n\t\tthis.urlGenerator = this.table.options.ajaxURLGenerator || Ajax.defaultURLGenerator;\r\n\r\n\t\tif(this.table.options.ajaxParams){\r\n\t\t\tthis.setParams(this.table.options.ajaxParams);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.ajaxConfig){\r\n\t\t\tthis.setConfig(this.table.options.ajaxConfig);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.ajaxURL){\r\n\t\t\tthis.setUrl(this.table.options.ajaxURL);\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"getAjaxUrl\", this.getUrl.bind(this));\r\n\r\n\t\tthis.subscribe(\"data-loading\", this.requestDataCheck.bind(this));\r\n\t\tthis.subscribe(\"data-load\", this.requestData.bind(this));\r\n\t}\r\n\r\n\r\n\trequestDataCheck(data, params, config, silent){\r\n\t\treturn !!((!data && this.url) || typeof data === \"string\");\r\n\t}\r\n\r\n\trequestData(data, params, config, silent, previousData){\r\n\t\tif(this.requestDataCheck(data)){\r\n\t\t\tif(data){\r\n\t\t\t\tthis.setUrl(data);\r\n\t\t\t}\r\n\r\n\t\t\tif(params){\r\n\t\t\t\tthis.setParams(params, true);\r\n\t\t\t}\r\n\r\n\t\t\tif(config){\r\n\t\t\t\tthis.setConfig(config);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.sendRequest();\r\n\t\t}else{\r\n\t\t\treturn previousData;\r\n\t\t}\r\n\t}\r\n\r\n\t//set ajax params\r\n\tsetParams(params, update){\r\n\t\tif(update){\r\n\t\t\tthis.params = this.params || {};\r\n\r\n\t\t\tfor(let key in params){\r\n\t\t\t\tthis.params[key] = params[key];\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.params = params;\r\n\t\t}\r\n\t}\r\n\r\n\tgetParams(){\r\n\t\treturn this.params || {};\r\n\t}\r\n\r\n\t//load config object\r\n\tsetConfig(config){\r\n\t\tthis._loadDefaultConfig();\r\n\r\n\t\tif(typeof config == \"string\"){\r\n\t\t\tthis.config.method = config;\r\n\t\t}else{\r\n\t\t\tfor(let key in config){\r\n\t\t\t\tthis.config[key] = config[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//create config object from default\r\n\t_loadDefaultConfig(force){\r\n\t\tif(!this.config || force){\r\n\r\n\t\t\tthis.config = {};\r\n\r\n\t\t\t//load base config from defaults\r\n\t\t\tfor(let key in Ajax.defaultConfig){\r\n\t\t\t\tthis.config[key] = Ajax.defaultConfig[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//set request url\r\n\tsetUrl(url){\r\n\t\tthis.url = url;\r\n\t}\r\n\r\n\t//get request url\r\n\tgetUrl(){\r\n\t\treturn this.url;\r\n\t}\r\n\r\n\t//send ajax request\r\n\tsendRequest(silent){\r\n\t\tvar url = this.url,\r\n\t\tesc, query;\r\n\r\n\t\tthis._loadDefaultConfig();\r\n\r\n\t\tif(this.table.options.ajaxRequesting.call(this.table, this.url, this.params) !== false){\r\n\t\t\treturn this.loaderPromise(url, this.config, this.params)\r\n\t\t\t.then((data)=>{\r\n\t\t\t\tif(this.table.options.ajaxResponse){\r\n\t\t\t\t\tdata = this.table.options.ajaxResponse.call(this.table, this.url, this.params, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nAjax.moduleName = \"ajax\";\r\n\r\n//load defaults\r\nAjax.defaultConfig = defaultConfig;\r\nAjax.defaultURLGenerator = defaultURLGenerator;\r\nAjax.defaultLoaderPromise = defaultLoaderPromise;\r\nAjax.contentTypeFormatters = defaultContentTypeFormatters;\r\n\r\nexport default Ajax;","export default {\r\n\treplace:function(rows){\r\n\t\treturn this.table.setData(rows);\r\n\t},\r\n\tupdate:function(rows){\r\n\t\treturn this.table.updateOrAddData(rows);\r\n\t},\r\n\tinsert:function(rows){\r\n\t\treturn this.table.addData(rows);\r\n\t},\r\n};","export default {\r\n\ttable:function(clipboard){\r\n\t\tvar data = [],\r\n\t\tsuccess = false,\r\n\t\theaderFindSuccess = true,\r\n\t\tcolumns = this.table.columnManager.columns,\r\n\t\tcolumnMap = [],\r\n\t\trows = [];\r\n\r\n\t\t//get data from clipboard into array of columns and rows.\r\n\t\tclipboard = clipboard.split(\"\\n\");\r\n\r\n\t\tclipboard.forEach(function(row){\r\n\t\t\tdata.push(row.split(\"\\t\"));\r\n\t\t});\r\n\r\n\t\tif(data.length && !(data.length === 1 && data[0].length < 2)){\r\n\t\t\tsuccess = true;\r\n\r\n\t\t\t//check if headers are present by title\r\n\t\t\tdata[0].forEach(function(value){\r\n\t\t\t\tvar column = columns.find(function(column){\r\n\t\t\t\t\treturn value && column.definition.title && value.trim() && column.definition.title.trim() === value.trim();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tcolumnMap.push(column);\r\n\t\t\t\t}else{\r\n\t\t\t\t\theaderFindSuccess = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//check if column headers are present by field\r\n\t\t\tif(!headerFindSuccess){\r\n\t\t\t\theaderFindSuccess = true;\r\n\t\t\t\tcolumnMap = [];\r\n\r\n\t\t\t\tdata[0].forEach(function(value){\r\n\t\t\t\t\tvar column = columns.find(function(column){\r\n\t\t\t\t\t\treturn value && column.field && value.trim() && column.field.trim() === value.trim();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(column){\r\n\t\t\t\t\t\tcolumnMap.push(column);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\theaderFindSuccess = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(!headerFindSuccess){\r\n\t\t\t\t\tcolumnMap = this.table.columnManager.columnsByIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//remove header row if found\r\n\t\t\tif(headerFindSuccess){\r\n\t\t\t\tdata.shift();\r\n\t\t\t}\r\n\r\n\t\t\tdata.forEach(function(item){\r\n\t\t\t\tvar row = {};\r\n\r\n\t\t\t\titem.forEach(function(value, i){\r\n\t\t\t\t\tif(columnMap[i]){\r\n\t\t\t\t\t\trow[columnMap[i].field] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\trows.push(row);\r\n\t\t\t});\r\n\r\n\t\t\treturn rows;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultPasteActions from './defaults/pasteActions.js';\r\nimport defaultPasteParsers from './defaults/pasteParsers.js';\r\n\r\nclass Clipboard extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.mode = true;\r\n\t\tthis.pasteParser = function(){};\r\n\t\tthis.pasteAction = function(){};\r\n\t\tthis.customSelection = false;\r\n\t\tthis.rowRange = false;\r\n\t\tthis.blocked = true; //block copy actions not originating from this command\r\n\r\n\t\tthis.registerTableOption(\"clipboard\", false); //enable clipboard\r\n\t\tthis.registerTableOption(\"clipboardCopyStyled\", true); //formatted table data\r\n\t\tthis.registerTableOption(\"clipboardCopyConfig\", false); //clipboard config\r\n\t\tthis.registerTableOption(\"clipboardCopyFormatter\", false); //DEPRICATED - REMOVE in 5.0\r\n\t\tthis.registerTableOption(\"clipboardCopyRowRange\", \"active\"); //restrict clipboard to visible rows only\r\n\t\tthis.registerTableOption(\"clipboardPasteParser\", \"table\"); //convert pasted clipboard data to rows\r\n\t\tthis.registerTableOption(\"clipboardPasteAction\", \"insert\"); //how to insert pasted data into the table\r\n\r\n\t\tthis.registerColumnOption(\"clipboard\");\r\n\t\tthis.registerColumnOption(\"titleClipboard\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.mode = this.table.options.clipboard;\r\n\r\n\t\tthis.rowRange = this.table.options.clipboardCopyRowRange;\r\n\r\n\t\tif(this.mode === true || this.mode === \"copy\"){\r\n\t\t\tthis.table.element.addEventListener(\"copy\", (e) => {\r\n\t\t\t\tvar plain, html, list;\r\n\r\n\t\t\t\tif(!this.blocked){\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\tif(this.customSelection){\r\n\t\t\t\t\t\tplain = this.customSelection;\r\n\r\n\t\t\t\t\t\tif(this.table.options.clipboardCopyFormatter){\r\n\t\t\t\t\t\t\tplain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\r\n\t\t\t\t\t\tvar list = this.table.modules.export.generateExportList(this.table.options.clipboardCopyConfig, this.table.options.clipboardCopyStyled, this.rowRange, \"clipboard\");\r\n\r\n\t\t\t\t\t\thtml = this.table.modules.export.genereateHTMLTable(list);\r\n\t\t\t\t\t\tplain = html ? this.generatePlainContent(list) : \"\";\r\n\r\n\t\t\t\t\t\tif(this.table.options.clipboardCopyFormatter){\r\n\t\t\t\t\t\t\tplain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\r\n\t\t\t\t\t\t\thtml = this.table.options.clipboardCopyFormatter(\"html\", html);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (window.clipboardData && window.clipboardData.setData) {\r\n\t\t\t\t\t\twindow.clipboardData.setData('Text', plain);\r\n\t\t\t\t\t} else if (e.clipboardData && e.clipboardData.setData) {\r\n\t\t\t\t\t\te.clipboardData.setData('text/plain', plain);\r\n\t\t\t\t\t\tif(html){\r\n\t\t\t\t\t\t\te.clipboardData.setData('text/html', html);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (e.originalEvent && e.originalEvent.clipboardData.setData) {\r\n\t\t\t\t\t\te.originalEvent.clipboardData.setData('text/plain', plain);\r\n\t\t\t\t\t\tif(html){\r\n\t\t\t\t\t\t\te.originalEvent.clipboardData.setData('text/html', html);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dispatchExternal(\"clipboardCopied\", plain, html);\r\n\r\n\t\t\t\t\tthis.reset();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.mode === true || this.mode === \"paste\"){\r\n\t\t\tthis.table.element.addEventListener(\"paste\", (e) => {\r\n\t\t\t\tthis.paste(e);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.setPasteParser(this.table.options.clipboardPasteParser);\r\n\t\tthis.setPasteAction(this.table.options.clipboardPasteAction);\r\n\r\n\t\tthis.registerTableFunction(\"copyToClipboard\", this.copy.bind(this));\r\n\t}\r\n\r\n\treset(){\r\n\t\tthis.blocked = true;\r\n\t\tthis.customSelection = false;\r\n\t}\r\n\r\n\tgeneratePlainContent (list) {\r\n\t\tvar output = [];\r\n\r\n\t\tlist.forEach((row) => {\r\n\t\t\tvar rowData = [];\r\n\r\n\t\t\trow.columns.forEach((col) => {\r\n\t\t\t\tvar value = \"\";\r\n\r\n\t\t\t\tif(col){\r\n\r\n\t\t\t\t\tif(row.type === \"group\"){\r\n\t\t\t\t\t\tcol.value = col.component.getKey();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(col.value === null){\r\n\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tswitch(typeof col.value){\r\n\t\t\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\t\t\tvalue = JSON.stringify(col.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tvalue = col.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowData.push(value);\r\n\t\t\t});\r\n\r\n\t\t\toutput.push(rowData.join(\"\\t\"));\r\n\t\t});\r\n\r\n\t\treturn output.join(\"\\n\");\r\n\t}\r\n\r\n\tcopy (range, internal) {\r\n\t\tvar range, sel, textRange;\r\n\t\tthis.blocked = false;\r\n\t\tthis.customSelection = false;\r\n\r\n\t\tif (this.mode === true || this.mode === \"copy\") {\r\n\r\n\t\t\tthis.rowRange = range || this.table.options.clipboardCopyRowRange;\r\n\r\n\t\t\tif (typeof window.getSelection != \"undefined\" && typeof document.createRange != \"undefined\") {\r\n\t\t\t\trange = document.createRange();\r\n\t\t\t\trange.selectNodeContents(this.table.element);\r\n\t\t\t\tsel = window.getSelection();\r\n\r\n\t\t\t\tif (sel.toString() && internal) {\r\n\t\t\t\t\tthis.customSelection = sel.toString();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsel.removeAllRanges();\r\n\t\t\t\tsel.addRange(range);\r\n\t\t\t} else if (typeof document.selection != \"undefined\" && typeof document.body.createTextRange != \"undefined\") {\r\n\t\t\t\ttextRange = document.body.createTextRange();\r\n\t\t\t\ttextRange.moveToElementText(this.table.element);\r\n\t\t\t\ttextRange.select();\r\n\t\t\t}\r\n\r\n\t\t\tdocument.execCommand('copy');\r\n\r\n\t\t\tif (sel) {\r\n\t\t\t\tsel.removeAllRanges();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//PASTE EVENT HANDLING\r\n\tsetPasteAction(action){\r\n\r\n\t\tswitch(typeof action){\r\n\t\t\tcase \"string\":\r\n\t\t\tthis.pasteAction = Clipboard.pasteActions[action];\r\n\r\n\t\t\tif(!this.pasteAction){\r\n\t\t\t\tconsole.warn(\"Clipboard Error - No such paste action found:\", action);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tthis.pasteAction = action;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tsetPasteParser(parser){\r\n\t\tswitch(typeof parser){\r\n\t\t\tcase \"string\":\r\n\t\t\tthis.pasteParser = Clipboard.pasteParsers[parser];\r\n\r\n\t\t\tif(!this.pasteParser){\r\n\t\t\t\tconsole.warn(\"Clipboard Error - No such paste parser found:\", parser);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tthis.pasteParser = parser;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpaste(e){\r\n\t\tvar data, rowData, rows;\r\n\r\n\t\tif(this.checkPaseOrigin(e)){\r\n\r\n\t\t\tdata = this.getPasteData(e);\r\n\r\n\t\t\trowData = this.pasteParser.call(this, data);\r\n\r\n\t\t\tif(rowData){\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(this.table.modExists(\"mutator\")){\r\n\t\t\t\t\trowData = this.mutateData(rowData);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trows = this.pasteAction.call(this, rowData);\r\n\r\n\t\t\t\tthis.dispatchExternal(\"clipboardPasted\", data, rowData, rows);\r\n\t\t\t}else{\r\n\t\t\t\tthis.dispatchExternal(\"clipboardPasteError\", data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmutateData(data){\r\n\t\tvar output = [];\r\n\r\n\t\tif(Array.isArray(data)){\r\n\t\t\tdata.forEach((row) => {\r\n\t\t\t\toutput.push(this.table.modules.mutator.transformRow(row, \"clipboard\"));\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\toutput = data;\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tcheckPaseOrigin(e){\r\n\t\tvar valid = true;\r\n\r\n\t\tif(e.target.tagName != \"DIV\" || this.table.modules.edit.currentCell){\r\n\t\t\tvalid = false;\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\t}\r\n\r\n\tgetPasteData(e){\r\n\t\tvar data;\r\n\r\n\t\tif (window.clipboardData && window.clipboardData.getData) {\r\n\t\t\tdata = window.clipboardData.getData('Text');\r\n\t\t} else if (e.clipboardData && e.clipboardData.getData) {\r\n\t\t\tdata = e.clipboardData.getData('text/plain');\r\n\t\t} else if (e.originalEvent && e.originalEvent.clipboardData.getData) {\r\n\t\t\tdata = e.originalEvent.clipboardData.getData('text/plain');\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\nClipboard.moduleName = \"clipboard\";\r\n\r\n//load defaults\r\nClipboard.pasteActions = defaultPasteActions;\r\nClipboard.pasteParsers = defaultPasteParsers;\r\n\r\nexport default Clipboard;","class CalcComponent{\r\n\tconstructor (row){\r\n\t\tthis._row = row;\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._row.table.componentFunctionBinder.handle(\"row\", target._row, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetData(transform){\r\n\t\treturn this._row.getData(transform);\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._row.getElement();\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._row.table;\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis._row.getCells().forEach(function(cell){\r\n\t\t\tcells.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tgetCell(column){\r\n\t\tvar cell = this._row.getCell(column);\r\n\t\treturn cell ? cell.getComponent() : false;\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._row;\r\n\t}\r\n}\r\n\r\nexport default CalcComponent;","//public cell object\r\nexport default class CellComponent {\r\n\r\n\tconstructor (cell){\r\n\t\tthis._cell = cell;\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._cell.table.componentFunctionBinder.handle(\"cell\", target._cell, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetValue(){\r\n\t\treturn this._cell.getValue();\r\n\t}\r\n\r\n\tgetOldValue(){\r\n\t\treturn this._cell.getOldValue();\r\n\t}\r\n\r\n\tgetInitialValue(){\r\n\t\treturn this._cell.initialValue;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._cell.getElement();\r\n\t}\r\n\r\n\tgetRow(){\r\n\t\treturn this._cell.row.getComponent();\r\n\t}\r\n\r\n\tgetData(){\r\n\t\treturn this._cell.row.getData();\r\n\t}\r\n\r\n\tgetField(){\r\n\t\treturn this._cell.column.getField();\r\n\t}\r\n\r\n\tgetColumn(){\r\n\t\treturn this._cell.column.getComponent();\r\n\t}\r\n\r\n\tsetValue(value, mutate){\r\n\t\tif(typeof mutate == \"undefined\"){\r\n\t\t\tmutate = true;\r\n\t\t}\r\n\r\n\t\tthis._cell.setValue(value, mutate);\r\n\t}\r\n\r\n\trestoreOldValue(){\r\n\t\tthis._cell.setValueActual(this._cell.getOldValue());\r\n\t}\r\n\r\n\trestoreInitialValue(){\r\n\t\tthis._cell.setValueActual(this._cell.initialValue);\r\n\t}\r\n\r\n\tcheckHeight(){\r\n\t\tthis._cell.checkHeight();\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._cell.table;\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._cell;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport CellComponent from './CellComponent.js';\r\n\r\nexport default class Cell extends CoreFeature{\r\n\tconstructor(column, row){\r\n\t\tsuper(column.table);\r\n\r\n\t\tthis.table = column.table;\r\n\t\tthis.column = column;\r\n\t\tthis.row = row;\r\n\t\tthis.element = null;\r\n\t\tthis.value = null;\r\n\t\tthis.initialValue;\r\n\t\tthis.oldValue = null;\r\n\t\tthis.modules = {};\r\n\r\n\t\tthis.height = null;\r\n\t\tthis.width = null;\r\n\t\tthis.minWidth = null;\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\tthis.loaded = false; //track if the cell has been added to the DOM yet\r\n\r\n\t\tthis.build();\r\n\t}\r\n\r\n\t//////////////// Setup Functions /////////////////\r\n\t//generate element\r\n\tbuild(){\r\n\t\tthis.generateElement();\r\n\r\n\t\tthis.setWidth();\r\n\r\n\t\tthis._configureCell();\r\n\r\n\t\tthis.setValueActual(this.column.getFieldValue(this.row.data));\r\n\r\n\t\tthis.initialValue = this.value;\r\n\t}\r\n\r\n\tgenerateElement(){\r\n\t\tthis.element = document.createElement('div');\r\n\t\tthis.element.className = \"tabulator-cell\";\r\n\t\tthis.element.setAttribute(\"role\", \"gridcell\");\r\n\t\tthis.element = this.element;\r\n\t}\r\n\r\n\t_configureCell(){\r\n\t\tvar element = this.element,\r\n\t\tfield = this.column.getField(),\r\n\t\tvertAligns = {\r\n\t\t\ttop:\"flex-start\",\r\n\t\t\tbottom:\"flex-end\",\r\n\t\t\tmiddle:\"center\",\r\n\t\t},\r\n\t\thozAligns = {\r\n\t\t\tleft:\"flex-start\",\r\n\t\t\tright:\"flex-end\",\r\n\t\t\tcenter:\"center\",\r\n\t\t};\r\n\r\n\t\t//set text alignment\r\n\t\telement.style.textAlign = this.column.hozAlign;\r\n\r\n\t\tif(this.column.vertAlign){\r\n\t\t\telement.style.display = \"inline-flex\";\r\n\r\n\t\t\telement.style.alignItems = vertAligns[this.column.vertAlign] || \"\";\r\n\r\n\t\t\tif(this.column.hozAlign){\r\n\t\t\t\telement.style.justifyContent = hozAligns[this.column.hozAlign] || \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(field){\r\n\t\t\telement.setAttribute(\"tabulator-field\", field);\r\n\t\t}\r\n\r\n\t\t//add class to cell if needed\r\n\t\tif(this.column.definition.cssClass){\r\n\t\t\tvar classNames = this.column.definition.cssClass.split(\" \")\r\n\t\t\tclassNames.forEach((className) => {\r\n\t\t\t\telement.classList.add(className)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t//update tooltip on mouse enter\r\n\t\tif (this.table.options.tooltipGenerationMode === \"hover\"){\r\n\t\t\telement.addEventListener(\"mouseenter\", (e) => {\r\n\t\t\t\tthis._generateTooltip();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"cell-init\", this);\r\n\r\n\t\t//hide cell if not visible\r\n\t\tif(!this.column.visible){\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t//generate cell contents\r\n\t_generateContents(){\r\n\t\tvar val;\r\n\r\n\t\tval = this.chain(\"cell-format\", this, null, () => {\r\n\t\t\treturn this.element.innerHTML = this.value;\r\n\t\t});\r\n\r\n\t\tswitch(typeof val){\r\n\t\t\tcase \"object\":\r\n\t\t\tif(val instanceof Node){\r\n\r\n\t\t\t\t//clear previous cell contents\r\n\t\t\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\t\t\tthis.element.appendChild(val);\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.innerHTML = \"\";\r\n\r\n\t\t\t\tif(val != null){\r\n\t\t\t\t\tconsole.warn(\"Format Error - Formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"undefined\":\r\n\t\t\tcase \"null\":\r\n\t\t\tthis.element.innerHTML = \"\";\r\n\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\tthis.element.innerHTML = val;\r\n\t\t}\r\n\t}\r\n\r\n\tcellRendered(){\r\n\t\tthis.dispatch(\"cell-rendered\", this);\r\n\t}\r\n\r\n\t//generate tooltip text\r\n\t_generateTooltip(){\r\n\t\tvar tooltip = this.column.tooltip;\r\n\r\n\t\tif(tooltip){\r\n\t\t\tif(tooltip === true){\r\n\t\t\t\ttooltip = this.value;\r\n\t\t\t}else if(typeof(tooltip) == \"function\"){\r\n\t\t\t\ttooltip = tooltip(this.getComponent());\r\n\r\n\t\t\t\tif(tooltip === false){\r\n\t\t\t\t\ttooltip = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof tooltip === \"undefined\"){\r\n\t\t\t\ttooltip = \"\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.setAttribute(\"title\", tooltip);\r\n\t\t}else{\r\n\t\t\tthis.element.setAttribute(\"title\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////////// Getters ////////////////////\r\n\tgetElement(containerOnly){\r\n\t\tif(!this.loaded){\r\n\t\t\tthis.loaded = true;\r\n\t\t\tif(!containerOnly){\r\n\t\t\t\tthis.layoutElement();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tgetValue(){\r\n\t\treturn this.value;\r\n\t}\r\n\r\n\tgetOldValue(){\r\n\t\treturn this.oldValue;\r\n\t}\r\n\r\n\t//////////////////// Actions ////////////////////\r\n\tsetValue(value, mutate){\r\n\t\tvar changed = this.setValueProcessData(value, mutate);\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.dispatch(\"cell-value-updated\", this);\r\n\r\n\t\t\tthis.cellRendered();\r\n\r\n\t\t\tthis.dispatchExternal(\"cellEdited\", this.getComponent());\r\n\r\n\t\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\t\tthis.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetValueProcessData(value, mutate){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(this.value != value){\r\n\r\n\t\t\tchanged = true;\r\n\r\n\t\t\tif(mutate){\r\n\t\t\t\tvalue = this.chain(\"cell-value-changing\", [this, value], null, value);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setValueActual(value);\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.dispatch(\"cell-value-changed\", this);\r\n\t\t}\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\tsetValueActual(value){\r\n\t\tthis.oldValue = this.value;\r\n\r\n\t\tthis.value = value;\r\n\r\n\t\tthis.dispatch(\"cell-value-save-before\", this);\r\n\r\n\t\tthis.column.setFieldValue(this.row.data, value);\r\n\r\n\t\tthis.dispatch(\"cell-value-save-after\", this);\r\n\r\n\t\tif(this.loaded){\r\n\t\t\tthis.layoutElement();\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutElement(){\r\n\t\tthis._generateContents();\r\n\t\tthis._generateTooltip();\r\n\r\n\t\tthis.dispatch(\"cell-layout\", this);\r\n\t}\r\n\r\n\tsetWidth(){\r\n\t\tthis.width = this.column.width;\r\n\t\tthis.element.style.width = this.column.widthStyled;\r\n\t}\r\n\r\n\tclearWidth(){\r\n\t\tthis.width = \"\";\r\n\t\tthis.element.style.width = \"\";\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\treturn this.width || this.element.offsetWidth;\r\n\t}\r\n\r\n\tsetMinWidth(){\r\n\t\tthis.minWidth = this.column.minWidth;\r\n\t\tthis.element.style.minWidth = this.column.minWidthStyled;\r\n\t}\r\n\r\n\tsetMaxWidth(){\r\n\t\tthis.maxWidth = this.column.maxWidth;\r\n\t\tthis.element.style.maxWidth = this.column.maxWidthStyled;\r\n\t}\r\n\r\n\tcheckHeight(){\r\n\t\t// var height = this.element.css(\"height\");\r\n\t\tthis.row.reinitializeHeight();\r\n\t}\r\n\r\n\tclearHeight(){\r\n\t\tthis.element.style.height = \"\";\r\n\t\tthis.height = null;\r\n\t}\r\n\r\n\tsetHeight(){\r\n\t\tthis.height = this.row.height;\r\n\t\tthis.element.style.height =  this.row.heightStyled;\r\n\t}\r\n\r\n\tgetHeight(){\r\n\t\treturn this.height || this.element.offsetHeight;\r\n\t}\r\n\r\n\tshow(){\r\n\t\tthis.element.style.display = this.column.vertAlign ? \"inline-flex\" : \"\";\r\n\t}\r\n\r\n\thide(){\r\n\t\tthis.element.style.display = \"none\";\r\n\t}\r\n\r\n\tdelete(){\r\n\t\tthis.dispatch(\"cell-delete\", this);\r\n\r\n\t\tif(!this.table.rowManager.redrawBlock && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t}\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.column.deleteCell(this);\r\n\t\tthis.row.deleteCell(this);\r\n\t\tthis.calcs = {};\r\n\t}\r\n\r\n\tgetIndex(){\r\n\t\treturn this.row.getCellIndex(this);\r\n\t}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new CellComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}","//public column object\r\nexport default class ColumnComponent {\r\n\tconstructor (column){\r\n\t\tthis._column = column;\r\n\t\tthis.type = \"ColumnComponent\";\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._column.table.componentFunctionBinder.handle(\"column\", target._column, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._column.getElement();\r\n\t}\r\n\r\n\tgetDefinition(){\r\n\t\treturn this._column.getDefinition();\r\n\t}\r\n\r\n\tgetField(){\r\n\t\treturn this._column.getField();\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis._column.cells.forEach(function(cell){\r\n\t\t\tcells.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tisVisible(){\r\n\t\treturn this._column.visible;\r\n\t}\r\n\r\n\tshow(){\r\n\t\tif(this._column.isGroup){\r\n\t\t\tthis._column.columns.forEach(function(column){\r\n\t\t\t\tcolumn.show();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis._column.show();\r\n\t\t}\r\n\t}\r\n\r\n\thide(){\r\n\t\tif(this._column.isGroup){\r\n\t\t\tthis._column.columns.forEach(function(column){\r\n\t\t\t\tcolumn.hide();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis._column.hide();\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle(){\r\n\t\tif(this._column.visible){\r\n\t\t\tthis.hide();\r\n\t\t}else{\r\n\t\t\tthis.show();\r\n\t\t}\r\n\t}\r\n\r\n\tdelete(){\r\n\t\treturn this._column.delete();\r\n\t}\r\n\r\n\tgetSubColumns(){\r\n\t\tvar output = [];\r\n\r\n\t\tif(this._column.columns.length){\r\n\t\t\tthis._column.columns.forEach(function(column){\r\n\t\t\t\toutput.push(column.getComponent());\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetParentColumn(){\r\n\t\treturn this._column.parent instanceof Column ? this._column.parent.getComponent() : false;\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._column;\r\n\t}\r\n\r\n\tscrollTo(){\r\n\t\treturn this._column.table.columnManager.scrollToColumn(this._column);\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._column.table;\r\n\t}\r\n\r\n\tmove(to, after){\r\n\t\tvar toColumn = this._column.table.columnManager.findColumn(to);\r\n\r\n\t\tif(toColumn){\r\n\t\t\tthis._column.table.columnManager.moveColumn(this._column, toColumn, after)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching column found:\", toColumn);\r\n\t\t}\r\n\t}\r\n\r\n\tgetNextColumn(){\r\n\t\tvar nextCol = this._column.nextColumn();\r\n\r\n\t\treturn nextCol ? nextCol.getComponent() : false;\r\n\t}\r\n\r\n\tgetPrevColumn(){\r\n\t\tvar prevCol = this._column.prevColumn();\r\n\r\n\t\treturn prevCol ? prevCol.getComponent() : false;\r\n\t}\r\n\r\n\tupdateDefinition(updates){\r\n\t\treturn this._column.updateDefinition(updates);\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\treturn this._column.getWidth();\r\n\t}\r\n\r\n\tsetWidth(width){\r\n\t\tvar result;\r\n\r\n\t\tif(width === true){\r\n\t\t\tresult =  this._column.reinitializeWidth(true);\r\n\t\t}else{\r\n\t\t\tresult =  this._column.setWidth(width);\r\n\t\t}\r\n\r\n\t\tthis._column.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\treturn result;\r\n\t}\r\n}","export default {\r\n\t\"title\": undefined,\r\n\t\"field\": undefined,\r\n\t\"columns\": undefined,\r\n\t\"visible\": undefined,\r\n\t\"hozAlign\": undefined,\r\n\t\"vertAlign\": undefined,\r\n\t\"width\": undefined,\r\n\t\"minWidth\": 40,\r\n\t\"maxWidth\": undefined,\r\n\t\"tooltip\": undefined,\r\n\t\"cssClass\": undefined,\r\n\t\"variableHeight\": undefined,\r\n\t\"headerTooltip\": undefined,\r\n\t\"headerVertical\": undefined,\r\n\t\"headerHozAlign\": undefined,\r\n\t\"editableTitle\": undefined,\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport ColumnComponent from './ColumnComponent.js';\r\nimport defaultOptions from './defaults/options.js';\r\n\r\nimport Cell from '../cell/Cell.js';\r\n\r\nclass Column extends CoreFeature{\r\n\r\n\tconstructor(def, parent){\r\n\t\tsuper(parent.table);\r\n\r\n\t\tthis.definition = def; //column definition\r\n\t\tthis.parent = parent; //hold parent object\r\n\t\tthis.type = \"column\"; //type of element\r\n\t\tthis.columns = []; //child columns\r\n\t\tthis.cells = []; //cells bound to this column\r\n\t\tthis.element = this.createElement(); //column header element\r\n\t\tthis.contentElement = false;\r\n\t\tthis.titleHolderElement = false;\r\n\t\tthis.titleElement = false;\r\n\t\tthis.groupElement = this.createGroupElement(); //column group holder element\r\n\t\tthis.isGroup = false;\r\n\t\tthis.tooltip = false; //hold column tooltip\r\n\t\tthis.hozAlign = \"\"; //horizontal text alignment\r\n\t\tthis.vertAlign = \"\"; //vert text alignment\r\n\r\n\t\t//multi dimensional filed handling\r\n\t\tthis.field =\"\";\r\n\t\tthis.fieldStructure = \"\";\r\n\t\tthis.getFieldValue = \"\";\r\n\t\tthis.setFieldValue = \"\";\r\n\r\n\t\tthis.titleFormatterRendered = false;\r\n\r\n\t\tthis.mapDefinitions();\r\n\r\n\t\tthis.setField(this.definition.field);\r\n\r\n\t\tthis.modules = {}; //hold module variables;\r\n\r\n\t\tthis.width = null; //column width\r\n\t\tthis.widthStyled = \"\"; //column width prestyled to improve render efficiency\r\n\t\tthis.maxWidth = null; //column maximum width\r\n\t\tthis.maxWidthStyled = \"\"; //column maximum prestyled to improve render efficiency\r\n\t\tthis.minWidth = null; //column minimum width\r\n\t\tthis.minWidthStyled = \"\"; //column minimum prestyled to improve render efficiency\r\n\t\tthis.widthFixed = false; //user has specified a width for this column\r\n\r\n\t\tthis.visible = true; //default visible state\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\t//initialize column\r\n\t\tif(this.definition.columns){\r\n\r\n\t\t\tthis.isGroup = true;\r\n\r\n\t\t\tthis.definition.columns.forEach((def, i) => {\r\n\t\t\t\tvar newCol = new Column(def, this);\r\n\t\t\t\tthis.attachColumn(newCol);\r\n\t\t\t});\r\n\r\n\t\t\tthis.checkColumnVisibility();\r\n\t\t}else{\r\n\t\t\tparent.registerColumnField(this);\r\n\t\t}\r\n\r\n\t\tthis._initialize();\r\n\r\n\t\tthis.bindModuleColumns();\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-col\");\r\n\t\tel.setAttribute(\"role\", \"columnheader\");\r\n\t\tel.setAttribute(\"aria-sort\", \"none\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateGroupElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-col-group-cols\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tmapDefinitions(){\r\n\t\tvar defaults = this.table.options.columnDefaults;\r\n\r\n\t\t//map columnDefaults onto column definitions\r\n\t\tif(defaults){\r\n\t\t\tfor(let key in defaults){\r\n\t\t\t\tif(typeof this.definition[key] === \"undefined\"){\r\n\t\t\t\t\tthis.definition[key] = defaults[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.definition = this.table.columnManager.optionsList.generate(Column.defaultOptionList, this.definition)\r\n\t}\r\n\r\n\tcheckDefinition(){\r\n\t\tObject.keys(this.definition).forEach((key) => {\r\n\t\t\tif(Column.defaultOptionList.indexOf(key) === -1){\r\n\t\t\t\tconsole.warn(\"Invalid column definition option in '\" + (this.field || this.definition.title) + \"' column:\", key)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsetField(field){\r\n\t\tthis.field = field;\r\n\t\tthis.fieldStructure = field ? (this.table.options.nestedFieldSeparator ? field.split(this.table.options.nestedFieldSeparator) : [field]) : [];\r\n\t\tthis.getFieldValue = this.fieldStructure.length > 1 ? this._getNestedData : this._getFlatData;\r\n\t\tthis.setFieldValue = this.fieldStructure.length > 1 ? this._setNestedData : this._setFlatData;\r\n\t}\r\n\r\n\t//register column position with column manager\r\n\tregisterColumnPosition(column){\r\n\t\tthis.parent.registerColumnPosition(column);\r\n\t}\r\n\r\n\t//register column position with column manager\r\n\tregisterColumnField(column){\r\n\t\tthis.parent.registerColumnField(column);\r\n\t}\r\n\r\n\t//trigger position registration\r\n\treRegisterPosition(){\r\n\t\tif(this.isGroup){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tcolumn.reRegisterPosition();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.registerColumnPosition(this);\r\n\t\t}\r\n\t}\r\n\r\n\t_mapDepricatedFunctionality(){\r\n\t\t//all previously deprecated functionality removed in the 5.0 release\r\n\t}\r\n\r\n\tsetTooltip(){\r\n\t\tvar def = this.definition;\r\n\r\n\t\t//set header tooltips\r\n\t\tvar tooltip = def.headerTooltip;\r\n\r\n\t\tif(tooltip){\r\n\t\t\tif(tooltip === true){\r\n\t\t\t\tif(def.field){\r\n\t\t\t\t\tthis.langBind(\"columns|\" + def.field, (value) => {\r\n\t\t\t\t\t\tthis.element.setAttribute(\"title\", value || def.title);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.element.setAttribute(\"title\", def.title);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tif(typeof(tooltip) == \"function\"){\r\n\t\t\t\t\ttooltip = tooltip(this.getComponent());\r\n\r\n\t\t\t\t\tif(tooltip === false){\r\n\t\t\t\t\t\ttooltip = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.element.setAttribute(\"title\", tooltip);\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tthis.element.setAttribute(\"title\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\t//build header element\r\n\t_initialize(){\r\n\t\tvar def = this.definition;\r\n\r\n\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\tif(def.headerVertical){\r\n\t\t\tthis.element.classList.add(\"tabulator-col-vertical\");\r\n\r\n\t\t\tif(def.headerVertical === \"flip\"){\r\n\t\t\t\tthis.element.classList.add(\"tabulator-col-vertical-flip\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.contentElement = this._bindEvents();\r\n\r\n\t\tthis.contentElement = this._buildColumnHeaderContent();\r\n\r\n\t\tthis.element.appendChild(this.contentElement);\r\n\r\n\t\tif(this.isGroup){\r\n\t\t\tthis._buildGroupHeader();\r\n\t\t}else{\r\n\t\t\tthis._buildColumnHeader();\r\n\t\t}\r\n\r\n\t\tthis.setTooltip();\r\n\r\n\t\tthis.dispatch(\"column-init\", this);\r\n\r\n\t\t//update header tooltip on mouse enter\r\n\t\tthis.element.addEventListener(\"mouseenter\", (e) => {\r\n\t\t\tthis.setTooltip();\r\n\t\t});\r\n\t}\r\n\r\n\t_bindEvents(){\r\n\t\tvar def = this.definition,\r\n\t\tdblTap,\ttapHold, tap;\r\n\r\n\t\t//setup header click event bindings\r\n\t\tif(typeof(def.headerClick) == \"function\"){\r\n\t\t\tthis.element.addEventListener(\"click\", (e) => {def.headerClick(e, this.getComponent());});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerDblClick) == \"function\"){\r\n\t\t\tthis.element.addEventListener(\"dblclick\", (e) => {def.headerDblClick(e, this.getComponent());});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerContext) == \"function\"){\r\n\t\t\tthis.element.addEventListener(\"contextmenu\", (e) => {def.headerContext(e, this.getComponent());});\r\n\t\t}\r\n\r\n\t\t//setup header tap event bindings\r\n\t\tif(typeof(def.headerTap) == \"function\"){\r\n\t\t\ttap = false;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\ttap = true;\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tif(tap){\r\n\t\t\t\t\tdef.headerTap(e, this.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttap = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerDblTap) == \"function\"){\r\n\t\t\tdblTap = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\r\n\t\t\t\tif(dblTap){\r\n\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\tdblTap = null;\r\n\r\n\t\t\t\t\tdef.headerDblTap(e, this.getComponent());\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tdblTap = setTimeout(() => {\r\n\t\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\t\tdblTap = null;\r\n\t\t\t\t\t}, 300);\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerTapHold) == \"function\"){\r\n\t\t\ttapHold = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\r\n\t\t\t\ttapHold = setTimeout(function(){\r\n\t\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\t\ttapHold = null;\r\n\t\t\t\t\ttap = false;\r\n\t\t\t\t\tdef.headerTapHold(e, this.getComponent());\r\n\t\t\t\t}, 1000);\r\n\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\ttapHold = null;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//build header element for header\r\n\t_buildColumnHeader(){\r\n\t\tvar def = this.definition,\r\n\t\ttable = this.table;\r\n\r\n\t\tthis.dispatch(\"column-layout\", this);\r\n\r\n\t\t//set column visibility\r\n\t\tif(typeof def.visible != \"undefined\"){\r\n\t\t\tif(def.visible){\r\n\t\t\t\tthis.show(true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.hide(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//asign additional css classes to column header\r\n\t\tif(def.cssClass){\r\n\t\t\tvar classeNames = def.cssClass.split(\" \");\r\n\t\t\tclasseNames.forEach((className) => {\r\n\t\t\t\tthis.element.classList.add(className);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(def.field){\r\n\t\t\tthis.element.setAttribute(\"tabulator-field\", def.field);\r\n\t\t}\r\n\r\n\t\t//set min width if present\r\n\t\tthis.setMinWidth(parseInt(def.minWidth));\r\n\r\n\t\tif(def.maxWidth){\r\n\t\t\tthis.setMaxWidth(parseInt(def.maxWidth));\r\n\t\t}\r\n\r\n\t\tthis.reinitializeWidth();\r\n\r\n\t\t//set tooltip if present\r\n\t\tthis.tooltip = this.definition.tooltip;\r\n\r\n\t\t//set orizontal text alignment\r\n\t\tthis.hozAlign = this.definition.hozAlign;\r\n\t\tthis.vertAlign = this.definition.vertAlign;\r\n\r\n\t\tthis.titleElement.style.textAlign = this.definition.headerHozAlign;\r\n\t}\r\n\r\n\t_buildColumnHeaderContent(){\r\n\t\tvar def = this.definition,\r\n\t\ttable = this.table;\r\n\r\n\t\tvar contentElement = document.createElement(\"div\");\r\n\t\tcontentElement.classList.add(\"tabulator-col-content\");\r\n\r\n\t\tthis.titleHolderElement = document.createElement(\"div\");\r\n\t\tthis.titleHolderElement.classList.add(\"tabulator-col-title-holder\");\r\n\r\n\t\tcontentElement.appendChild(this.titleHolderElement);\r\n\r\n\t\tthis.titleElement = this._buildColumnHeaderTitle();\r\n\r\n\t\tthis.titleHolderElement.appendChild(this.titleElement);\r\n\r\n\t\treturn contentElement;\r\n\t}\r\n\r\n\t//build title element of column\r\n\t_buildColumnHeaderTitle(){\r\n\t\tvar def = this.definition,\r\n\t\ttitle;\r\n\r\n\t\tvar titleHolderElement = document.createElement(\"div\");\r\n\t\ttitleHolderElement.classList.add(\"tabulator-col-title\");\r\n\r\n\t\tif(def.editableTitle){\r\n\t\t\tvar titleElement = document.createElement(\"input\");\r\n\t\t\ttitleElement.classList.add(\"tabulator-title-editor\");\r\n\r\n\t\t\ttitleElement.addEventListener(\"click\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\ttitleElement.focus();\r\n\t\t\t});\r\n\r\n\t\t\ttitleElement.addEventListener(\"change\", () => {\r\n\t\t\t\tdef.title = titleElement.value;\r\n\t\t\t\tthis.dispatchExternal(\"columnTitleChanged\", this.getComponent());\r\n\t\t\t});\r\n\r\n\t\t\ttitleHolderElement.appendChild(titleElement);\r\n\r\n\t\t\tif(def.field){\r\n\t\t\t\tthis.langBind(\"columns|\" + def.field, (text) => {\r\n\t\t\t\t\ttitleElement.value = text || (def.title || \"&nbsp;\");\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\ttitleElement.value  = def.title || \"&nbsp;\";\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tif(def.field){\r\n\t\t\t\tthis.langBind(\"columns|\" + def.field, (text) => {\r\n\t\t\t\t\tthis._formatColumnHeaderTitle(titleHolderElement, text || (def.title || \"&nbsp;\"));\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tthis._formatColumnHeaderTitle(titleHolderElement, def.title || \"&nbsp;\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn titleHolderElement;\r\n\t}\r\n\r\n\t_formatColumnHeaderTitle(el, title){\r\n\t\tvar contents = this.chain(\"column-format\", [this, title, el], null, () => {\r\n\t\t\treturn title;\r\n\t\t});\r\n\r\n\t\tswitch(typeof contents){\r\n\t\t\tcase \"object\":\r\n\t\t\tif(contents instanceof Node){\r\n\t\t\t\tel.appendChild(contents);\r\n\t\t\t}else{\r\n\t\t\t\tel.innerHTML = \"\";\r\n\t\t\t\tconsole.warn(\"Format Error - Title formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", contents);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"undefined\":\r\n\t\t\tcase \"null\":\r\n\t\t\tel.innerHTML = \"\";\r\n\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\tel.innerHTML = contents;\r\n\t\t}\r\n\t}\r\n\r\n\t//build header element for column group\r\n\t_buildGroupHeader(){\r\n\t\tthis.element.classList.add(\"tabulator-col-group\");\r\n\t\tthis.element.setAttribute(\"role\", \"columngroup\");\r\n\t\tthis.element.setAttribute(\"aria-title\", this.definition.title);\r\n\r\n\t\t//asign additional css classes to column header\r\n\t\tif(this.definition.cssClass){\r\n\t\t\tvar classeNames = this.definition.cssClass.split(\" \");\r\n\t\t\tclasseNames.forEach((className) => {\r\n\t\t\t\tthis.element.classList.add(className);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.titleElement.style.textAlign = this.definition.headerHozAlign;\r\n\r\n\t\tthis.element.appendChild(this.groupElement);\r\n\t}\r\n\r\n\t//flat field lookup\r\n\t_getFlatData(data){\r\n\t\treturn data[this.field];\r\n\t}\r\n\r\n\t//nested field lookup\r\n\t_getNestedData(data){\r\n\t\tvar dataObj = data,\r\n\t\tstructure = this.fieldStructure,\r\n\t\tlength = structure.length,\r\n\t\toutput;\r\n\r\n\t\tfor(let i = 0; i < length; i++){\r\n\r\n\t\t\tdataObj = dataObj[structure[i]];\r\n\r\n\t\t\toutput = dataObj;\r\n\r\n\t\t\tif(!dataObj){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//flat field set\r\n\t_setFlatData(data, value){\r\n\t\tif(this.field){\r\n\t\t\tdata[this.field] = value;\r\n\t\t}\r\n\t}\r\n\r\n\t//nested field set\r\n\t_setNestedData(data, value){\r\n\t\tvar dataObj = data,\r\n\t\tstructure = this.fieldStructure,\r\n\t\tlength = structure.length;\r\n\r\n\t\tfor(let i = 0; i < length; i++){\r\n\r\n\t\t\tif(i == length -1){\r\n\t\t\t\tdataObj[structure[i]] = value;\r\n\t\t\t}else{\r\n\t\t\t\tif(!dataObj[structure[i]]){\r\n\t\t\t\t\tif(typeof value !== \"undefined\"){\r\n\t\t\t\t\t\tdataObj[structure[i]] = {};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataObj = dataObj[structure[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//attach column to this group\r\n\tattachColumn(column){\r\n\t\tif(this.groupElement){\r\n\t\t\tthis.columns.push(column);\r\n\t\t\tthis.groupElement.appendChild(column.getElement());\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Warning - Column being attached to another column instead of column group\");\r\n\t\t}\r\n\t}\r\n\r\n\t//vertically align header in column\r\n\tverticalAlign(alignment, height){\r\n\r\n\t\t//calculate height of column header and group holder element\r\n\t\tvar parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : (height || this.parent.getHeadersElement().clientHeight);\r\n\t\t// var parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : this.parent.getHeadersElement().clientHeight;\r\n\r\n\t\tthis.element.style.height = parentHeight + \"px\";\r\n\r\n\t\tif(this.isGroup){\r\n\t\t\tthis.groupElement.style.minHeight = (parentHeight - this.contentElement.offsetHeight) + \"px\";\r\n\t\t}\r\n\r\n\t\t//vertically align cell contents\r\n\t\tif(!this.isGroup && alignment !== \"top\"){\r\n\t\t\tif(alignment === \"bottom\"){\r\n\t\t\t\tthis.element.style.paddingTop = (this.element.clientHeight - this.contentElement.offsetHeight) + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.style.paddingTop = ((this.element.clientHeight - this.contentElement.offsetHeight) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tcolumn.verticalAlign(alignment);\r\n\t\t});\r\n\t}\r\n\r\n\t//clear vertical alignmenet\r\n\tclearVerticalAlign(){\r\n\t\tthis.element.style.paddingTop = \"\";\r\n\t\tthis.element.style.height = \"\";\r\n\t\tthis.element.style.minHeight = \"\";\r\n\t\tthis.groupElement.style.minHeight = \"\";\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tcolumn.clearVerticalAlign();\r\n\t\t});\r\n\t}\r\n\r\n\tbindModuleColumns (){\r\n\t\t//check if rownum formatter is being used on a column\r\n\t\tif(this.definition.formatter == \"rownum\"){\r\n\t\t\tthis.table.rowManager.rowNumColumn = this;\r\n\t\t}\r\n\t}\r\n\r\n\t//// Retreive Column Information ////\r\n\t//return column header element\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t//return colunm group element\r\n\tgetGroupElement(){\r\n\t\treturn this.groupElement;\r\n\t}\r\n\r\n\t//return field name\r\n\tgetField(){\r\n\t\treturn this.field;\r\n\t}\r\n\r\n\t//return the first column in a group\r\n\tgetFirstColumn(){\r\n\t\tif(!this.isGroup){\r\n\t\t\treturn this;\r\n\t\t}else{\r\n\t\t\tif(this.columns.length){\r\n\t\t\t\treturn this.columns[0].getFirstColumn();\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//return the last column in a group\r\n\tgetLastColumn(){\r\n\t\tif(!this.isGroup){\r\n\t\t\treturn this;\r\n\t\t}else{\r\n\t\t\tif(this.columns.length){\r\n\t\t\t\treturn this.columns[this.columns.length -1].getLastColumn();\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//return all columns in a group\r\n\tgetColumns(){\r\n\t\treturn this.columns;\r\n\t}\r\n\r\n\t//return all columns in a group\r\n\tgetCells(){\r\n\t\treturn this.cells;\r\n\t}\r\n\r\n\t//retreive the top column in a group of columns\r\n\tgetTopColumn(){\r\n\t\tif(this.parent.isGroup){\r\n\t\t\treturn this.parent.getTopColumn();\r\n\t\t}else{\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\t//return column definition object\r\n\tgetDefinition(updateBranches){\r\n\t\tvar colDefs = [];\r\n\r\n\t\tif(this.isGroup && updateBranches){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tcolDefs.push(column.getDefinition(true));\r\n\t\t\t});\r\n\r\n\t\t\tthis.definition.columns = colDefs;\r\n\t\t}\r\n\r\n\t\treturn this.definition;\r\n\t}\r\n\r\n\t//////////////////// Actions ////////////////////\r\n\tcheckColumnVisibility(){\r\n\t\tvar visible = false;\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tif(column.visible){\r\n\t\t\t\tvisible = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(visible){\r\n\t\t\tthis.show();\r\n\t\t\tthis.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\r\n\t\t}else{\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t//show column\r\n\tshow(silent, responsiveToggle){\r\n\t\tif(!this.visible){\r\n\t\t\tthis.visible = true;\r\n\r\n\t\t\tthis.element.style.display = \"\";\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.checkColumnVisibility();\r\n\t\t\t}\r\n\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tcell.show();\r\n\t\t\t});\r\n\r\n\t\t\tif(!this.isGroup && this.width === null){\r\n\t\t\t\tthis.reinitializeWidth();\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.columnManager.verticalAlignHeaders();\r\n\r\n\t\t\tthis.dispatch(\"column-show\", this, responsiveToggle);\r\n\r\n\t\t\tif(!silent){\r\n\t\t\t\tthis.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), true);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.matchChildWidths();\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.silent){\r\n\t\t\t\tthis.table.columnManager.renderer.rerenderColumns();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//hide column\r\n\thide(silent, responsiveToggle){\r\n\t\tif(this.visible){\r\n\t\t\tthis.visible = false;\r\n\r\n\t\t\tthis.element.style.display = \"none\";\r\n\r\n\t\t\tthis.table.columnManager.verticalAlignHeaders();\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.checkColumnVisibility();\r\n\t\t\t}\r\n\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tcell.hide();\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatch(\"column-hide\", this, responsiveToggle);\r\n\r\n\t\t\tif(!silent){\r\n\t\t\t\tthis.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.matchChildWidths();\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.silent){\r\n\t\t\t\tthis.table.columnManager.renderer.rerenderColumns();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmatchChildWidths(){\r\n\t\tvar childWidth = 0;\r\n\r\n\t\tif(this.contentElement && this.columns.length){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tif(column.visible){\r\n\t\t\t\t\tchildWidth += column.getWidth();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.contentElement.style.maxWidth = (childWidth - 1) + \"px\";\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.matchChildWidths();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremoveChild(child){\r\n\t\tvar index = this.columns.indexOf(child);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.columns.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tif(!this.columns.length){\r\n\t\t\tthis.delete();\r\n\t\t}\r\n\t}\r\n\r\n\tsetWidth(width){\r\n\t\tthis.widthFixed = true;\r\n\t\tthis.setWidthActual(width);\r\n\t}\r\n\r\n\tsetWidthActual(width){\r\n\t\tif(isNaN(width)){\r\n\t\t\twidth = Math.floor((this.table.element.clientWidth/100) * parseInt(width));\r\n\t\t}\r\n\r\n\t\twidth = Math.max(this.minWidth, width);\r\n\r\n\t\tif(this.maxWidth){\r\n\t\t\twidth = Math.min(this.maxWidth, width);\r\n\t\t}\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.widthStyled = width ? width + \"px\" : \"\";\r\n\r\n\t\tthis.element.style.width = this.widthStyled;\r\n\r\n\t\tif(!this.isGroup){\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tcell.setWidth();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.parent.isGroup){\r\n\t\t\tthis.parent.matchChildWidths();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"column-width\", this);\r\n\t}\r\n\r\n\tcheckCellHeights(){\r\n\t\tvar rows = [];\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tif(cell.row.heightInitialized){\r\n\t\t\t\tif(cell.row.getElement().offsetParent !== null){\r\n\t\t\t\t\trows.push(cell.row);\r\n\t\t\t\t\tcell.row.clearCellHeight();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcell.row.heightInitialized = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\trow.calcHeight();\r\n\t\t});\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\trow.setCellHeight();\r\n\t\t});\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\tvar width = 0;\r\n\r\n\t\tif(this.isGroup){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tif(column.visible){\r\n\t\t\t\t\twidth += column.getWidth();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\twidth = this.width;\r\n\t\t}\r\n\r\n\t\treturn width;\r\n\t}\r\n\r\n\tgetHeight(){\r\n\t\treturn this.element.offsetHeight;\r\n\t}\r\n\r\n\tsetMinWidth(minWidth){\r\n\t\tthis.minWidth = minWidth;\r\n\t\tthis.minWidthStyled = minWidth ? minWidth + \"px\" : \"\";\r\n\r\n\t\tthis.element.style.minWidth = this.minWidthStyled;\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.setMinWidth();\r\n\t\t});\r\n\t}\r\n\r\n\tsetMaxWidth(maxWidth){\r\n\t\tthis.maxWidth = maxWidth;\r\n\t\tthis.maxWidthStyled = maxWidth ? maxWidth + \"px\" : \"\";\r\n\r\n\t\tthis.element.style.maxWidth = this.maxWidthStyled;\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.setMaxWidth();\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar index;\r\n\r\n\t\t\tif(this.isGroup){\r\n\t\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\t\tcolumn.delete();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"column-delete\", this);\r\n\r\n\t\t\tvar cellCount = this.cells.length;\r\n\r\n\t\t\tfor(let i = 0; i < cellCount; i++){\r\n\t\t\t\tthis.cells[0].delete();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.element.parentNode){\r\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\t}\r\n\r\n\t\t\tthis.element = false;\r\n\t\t\tthis.contentElement = false;\r\n\t\t\tthis.titleElement = false;\r\n\t\t\tthis.groupElement = false;\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.removeChild(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.columnManager.deregisterColumn(this);\r\n\r\n\t\t\tthis.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\tcolumnRendered(){\r\n\t\tif(this.titleFormatterRendered){\r\n\t\t\tthis.titleFormatterRendered();\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////// Cell Management /////////////////\r\n\t//generate cell for this column\r\n\tgenerateCell(row){\r\n\t\tvar cell = new Cell(this, row);\r\n\r\n\t\tthis.cells.push(cell);\r\n\r\n\t\treturn cell;\r\n\t}\r\n\r\n\tnextColumn(){\r\n\t\tvar index = this.table.columnManager.findColumnIndex(this);\r\n\t\treturn index > -1 ? this._nextVisibleColumn(index + 1) : false;\r\n\t}\r\n\r\n\t_nextVisibleColumn(index){\r\n\t\tvar column = this.table.columnManager.getColumnByIndex(index);\r\n\t\treturn !column || column.visible ? column : this._nextVisibleColumn(index + 1);\r\n\t}\r\n\r\n\tprevColumn(){\r\n\t\tvar index = this.table.columnManager.findColumnIndex(this);\r\n\t\treturn index > -1 ? this._prevVisibleColumn(index - 1) : false;\r\n\t}\r\n\r\n\t_prevVisibleColumn(index){\r\n\t\tvar column = this.table.columnManager.getColumnByIndex(index);\r\n\t\treturn !column || column.visible ? column : this._prevVisibleColumn(index - 1);\r\n\t}\r\n\r\n\treinitializeWidth(force){\r\n\t\tthis.widthFixed = false;\r\n\r\n\t\t//set width if present\r\n\t\tif(typeof this.definition.width !== \"undefined\" && !force){\r\n\t\t\tthis.setWidth(this.definition.width);\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"column-width-fit-before\", this);\r\n\r\n\t\tthis.fitToData();\r\n\r\n\t\tthis.dispatch(\"column-width-fit-after\", this);\r\n\t}\r\n\r\n\t//set column width to maximum cell width for non group columns\r\n\tfitToData(){\r\n\t\tif(this.isGroup){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!this.widthFixed){\r\n\t\t\tthis.element.style.width = \"\";\r\n\r\n\t\t\tthis.cells.forEach((cell) => {\r\n\t\t\t\tcell.clearWidth();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar maxWidth = this.element.offsetWidth;\r\n\r\n\t\tif(!this.width || !this.widthFixed){\r\n\t\t\tthis.cells.forEach((cell) => {\r\n\t\t\t\tvar width = cell.getWidth();\r\n\r\n\t\t\t\tif(width > maxWidth){\r\n\t\t\t\t\tmaxWidth = width;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(maxWidth){\r\n\t\t\t\tthis.setWidthActual(maxWidth + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tupdateDefinition(updates){\r\n\t\tvar definition;\r\n\r\n\t\tif(!this.isGroup){\r\n\t\t\tif(!this.parent.isGroup){\r\n\t\t\t\tdefinition = Object.assign({}, this.getDefinition());\r\n\t\t\t\tdefinition = Object.assign(definition, updates);\r\n\r\n\t\t\t\treturn this.table.columnManager.addColumn(definition, false, this)\r\n\t\t\t\t.then((column) => {\r\n\r\n\t\t\t\t\tif(definition.field == this.field){\r\n\t\t\t\t\t\tthis.field = false; //cleair field name to prevent deletion of duplicate column from arrays\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this.delete()\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\r\n\t\t\t\treturn Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\r\n\t\t\treturn Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteCell(cell){\r\n\t\tvar index = this.cells.indexOf(cell);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.cells.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new ColumnComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}\r\n\r\nColumn.defaultOptionList = defaultOptions;\r\n\r\nexport default Column;","//public row object\r\nexport default class RowComponent {\r\n\r\n\tconstructor (row){\r\n\t\tthis._row = row;\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._row.table.componentFunctionBinder.handle(\"row\", target._row, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetData(transform){\r\n\t\treturn this._row.getData(transform);\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._row.getElement();\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis._row.getCells().forEach(function(cell){\r\n\t\t\tcells.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tgetCell(column){\r\n\t\tvar cell = this._row.getCell(column);\r\n\t\treturn cell ? cell.getComponent() : false;\r\n\t}\r\n\r\n\tgetIndex(){\r\n\t\treturn this._row.getData(\"data\")[this._row.table.options.index];\r\n\t}\r\n\r\n\tgetPosition(active){\r\n\t\treturn this._row.table.rowManager.getRowPosition(this._row, active);\r\n\t}\r\n\r\n\tdelete(){\r\n\t\treturn this._row.delete();\r\n\t}\r\n\r\n\tscrollTo(){\r\n\t\treturn this._row.table.rowManager.scrollToRow(this._row);\r\n\t}\r\n\r\n\tmove(to, after){\r\n\t\tthis._row.moveToRow(to, after);\r\n\t}\r\n\r\n\tupdate(data){\r\n\t\treturn this._row.updateData(data);\r\n\t}\r\n\r\n\tnormalizeHeight(){\r\n\t\tthis._row.normalizeHeight(true);\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._row;\r\n\t}\r\n\r\n\treformat(){\r\n\t\treturn this._row.reinitialize();\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._row.table;\r\n\t}\r\n\r\n\tgetNextRow(){\r\n\t\tvar row = this._row.nextRow();\r\n\t\treturn row ? row.getComponent() : row;\r\n\t}\r\n\r\n\tgetPrevRow(){\r\n\t\tvar row = this._row.prevRow();\r\n\t\treturn row ? row.getComponent() : row;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport RowComponent from './RowComponent.js';\r\nimport Helpers from '../tools/Helpers.js';\r\n\r\nexport default class Row extends CoreFeature{\r\n\tconstructor (data, parent, type = \"row\"){\r\n\t\tsuper(parent.table);\r\n\r\n\t\tthis.parent = parent;\r\n\t\tthis.data = {};\r\n\t\tthis.type = type; //type of element\r\n\t\tthis.element = false;\r\n\t\tthis.modules = {}; //hold module variables;\r\n\t\tthis.cells = [];\r\n\t\tthis.height = 0; //hold element height\r\n\t\tthis.heightStyled = \"\"; //hold element height prestyled to improve render efficiency\r\n\t\tthis.manualHeight = false; //user has manually set row height\r\n\t\tthis.outerHeight = 0; //holde lements outer height\r\n\t\tthis.initialized = false; //element has been rendered\r\n\t\tthis.heightInitialized = false; //element has resized cells to fit\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\tthis.created = false;\r\n\r\n\t\tthis.setData(data);\r\n\t}\r\n\r\n\tcreate(){\r\n\t\tif(!this.created){\r\n\t\t\tthis.created = true;\r\n\t\t\tthis.generateElement();\r\n\t\t}\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-row\");\r\n\t\tel.setAttribute(\"role\", \"row\");\r\n\r\n\t\tthis.element = el;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\tthis.create();\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tdetachElement(){\r\n\t\tif (this.element && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateElement(){\r\n\t\tthis.createElement();\r\n\t\tthis.dispatch(\"row-init\", this);\r\n\t}\r\n\r\n\tgenerateCells(){\r\n\t\tthis.cells = this.table.columnManager.generateCells(this);\r\n\t}\r\n\r\n\t//functions to setup on first render\r\n\tinitialize(force){\r\n\t\tthis.create();\r\n\r\n\t\tif(!this.initialized || force){\r\n\r\n\t\t\tthis.deleteCells();\r\n\r\n\t\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\t\tthis.dispatch(\"row-layout-before\", this);\r\n\r\n\t\t\tthis.generateCells();\r\n\r\n\t\t\tthis.table.columnManager.renderer.renderRowCells(this);\r\n\r\n\t\t\tif(force){\r\n\t\t\t\tthis.normalizeHeight();\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"row-layout\", this);\r\n\r\n\t\t\tif(this.table.options.rowFormatter){\r\n\t\t\t\tthis.table.options.rowFormatter(this.getComponent());\r\n\t\t\t}\r\n\r\n\t\t\tthis.initialized = true;\r\n\r\n\t\t\tthis.dispatch(\"row-layout-after\", this);\r\n\t\t}else{\r\n\t\t\tthis.table.columnManager.renderer.rerenderRowCells(this);\r\n\t\t}\r\n\t}\r\n\r\n\treinitializeHeight(){\r\n\t\tthis.heightInitialized = false;\r\n\r\n\t\tif(this.element && this.element.offsetParent !== null){\r\n\t\t\tthis.normalizeHeight(true);\r\n\t\t}\r\n\t}\r\n\r\n\tdeinitializeHeight(){\r\n\t\tthis.heightInitialized = false;\r\n\t}\r\n\r\n\treinitialize(children){\r\n\t\tthis.initialized = false;\r\n\t\tthis.heightInitialized = false;\r\n\r\n\t\tif(!this.manualHeight){\r\n\t\t\tthis.height = 0;\r\n\t\t\tthis.heightStyled = \"\";\r\n\t\t}\r\n\r\n\t\tif(this.element && this.element.offsetParent !== null){\r\n\t\t\tthis.initialize(true);\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"row-relayout\", this);\r\n\t}\r\n\r\n\t//get heights when doing bulk row style calcs in virtual DOM\r\n\tcalcHeight(force){\r\n\r\n\t\tvar maxHeight = 0,\r\n\t\tminHeight = this.table.options.resizableRows ? this.element.clientHeight : 0;\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tvar height = cell.getHeight();\r\n\t\t\tif(height > maxHeight){\r\n\t\t\t\tmaxHeight = height;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(force){\r\n\t\t\tthis.height = Math.max(maxHeight, minHeight);\r\n\t\t}else{\r\n\t\t\tthis.height = this.manualHeight ? this.height : Math.max(maxHeight, minHeight);\r\n\t\t}\r\n\r\n\t\tthis.heightStyled = this.height ? this.height + \"px\" : \"\";\r\n\t\tthis.outerHeight = this.element.offsetHeight;\r\n\t}\r\n\r\n\t//set of cells\r\n\tsetCellHeight(){\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.setHeight();\r\n\t\t});\r\n\r\n\t\tthis.heightInitialized = true;\r\n\t}\r\n\r\n\tclearCellHeight(){\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.clearHeight();\r\n\t\t});\r\n\t}\r\n\r\n\t//normalize the height of elements in the row\r\n\tnormalizeHeight(force){\r\n\t\tif(force){\r\n\t\t\tthis.clearCellHeight();\r\n\t\t}\r\n\r\n\t\tthis.calcHeight(force);\r\n\r\n\t\tthis.setCellHeight();\r\n\t}\r\n\r\n\t//set height of rows\r\n\tsetHeight(height, force){\r\n\t\tif(this.height != height || force){\r\n\r\n\t\t\tthis.manualHeight = true;\r\n\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.heightStyled = height ? height + \"px\" : \"\";\r\n\r\n\t\t\tthis.setCellHeight();\r\n\r\n\t\t\t// this.outerHeight = this.element.outerHeight();\r\n\t\t\tthis.outerHeight = this.element.offsetHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t//return rows outer height\r\n\tgetHeight(){\r\n\t\treturn this.outerHeight;\r\n\t}\r\n\r\n\t//return rows outer Width\r\n\tgetWidth(){\r\n\t\treturn this.element.offsetWidth;\r\n\t}\r\n\r\n\t//////////////// Cell Management /////////////////\r\n\tdeleteCell(cell){\r\n\t\tvar index = this.cells.indexOf(cell);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.cells.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////// Data Management /////////////////\r\n\tsetData(data){\r\n\t\tthis.data = this.chain(\"row-data-init-before\", [this, data], undefined, data);\r\n\r\n\t\tthis.dispatch(\"row-data-init-after\", this);\r\n\t}\r\n\r\n\t//update the rows data\r\n\tupdateData(updatedData){\r\n\t\tvar visible = this.element && Helpers.elVisible(this.element),\r\n\t\ttempData = {},\r\n\t\tnewRowData;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tif(typeof updatedData === \"string\"){\r\n\t\t\t\tupdatedData = JSON.parse(updatedData);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"row-data-save-before\", this);\r\n\r\n\t\t\tif(this.subscribed(\"row-data-changing\")){\r\n\t\t\t\ttempData = Object.assign(tempData, this.data);\r\n\t\t\t\ttempData = Object.assign(tempData, updatedData);\r\n\t\t\t}\r\n\r\n\t\t\tnewRowData = this.chain(\"row-data-changing\", [this, tempData, updatedData], null, updatedData);\r\n\r\n\t\t\t//set data\r\n\t\t\tfor (var attrname in newRowData) {\r\n\t\t\t\tthis.data[attrname] = newRowData[attrname];\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"row-data-save-after\", this);\r\n\r\n\t\t\t//update affected cells only\r\n\t\t\tfor (var attrname in updatedData) {\r\n\r\n\t\t\t\tlet columns = this.table.columnManager.getColumnsByFieldRoot(attrname);\r\n\r\n\t\t\t\tcolumns.forEach((column) => {\r\n\t\t\t\t\tlet cell = this.getCell(column.getField());\r\n\r\n\t\t\t\t\tif(cell){\r\n\t\t\t\t\t\tlet value = column.getFieldValue(newRowData);\r\n\t\t\t\t\t\tif(cell.getValue() != value){\r\n\t\t\t\t\t\t\tcell.setValueProcessData(value);\r\n\r\n\t\t\t\t\t\t\tif(visible){\r\n\t\t\t\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t//Partial reinitialization if visible\r\n\t\t\tif(visible){\r\n\t\t\t\tthis.normalizeHeight(true);\r\n\r\n\t\t\t\tif(this.table.options.rowFormatter){\r\n\t\t\t\t\tthis.table.options.rowFormatter(this.getComponent());\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.initialized = false;\r\n\t\t\t\tthis.height = 0;\r\n\t\t\t\tthis.heightStyled = \"\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"row-data-changed\", this, visible, updatedData);\r\n\r\n\t\t\t//this.reinitialize();\r\n\r\n\t\t\tthis.dispatchExternal(\"rowUpdated\", this.getComponent());\r\n\r\n\t\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\t\tthis.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\r\n\t\t\t}\r\n\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\tgetData(transform){\r\n\t\tif(transform){\r\n\t\t\treturn this.chain(\"row-data-retrieve\", [this, transform], null, this.data);\r\n\t\t}\r\n\r\n\t\treturn this.data;\r\n\t}\r\n\r\n\tgetCell(column){\r\n\t\tvar match = false;\r\n\r\n\t\tcolumn = this.table.columnManager.findColumn(column);\r\n\r\n\t\tif(!this.initialized){\r\n\t\t\tthis.generateCells();\r\n\t\t}\r\n\r\n\t\tmatch = this.cells.find(function(cell){\r\n\t\t\treturn cell.column === column;\r\n\t\t});\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tgetCellIndex(findCell){\r\n\t\treturn this.cells.findIndex(function(cell){\r\n\t\t\treturn cell === findCell;\r\n\t\t});\r\n\t}\r\n\r\n\tfindCell(subject){\r\n\t\treturn this.cells.find((cell) => {\r\n\t\t\treturn cell.element === subject;\r\n\t\t});\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tif(!this.initialized){\r\n\t\t\tthis.generateCells();\r\n\t\t}\r\n\r\n\t\treturn this.cells;\r\n\t}\r\n\r\n\tnextRow(){\r\n\t\tvar row = this.table.rowManager.nextDisplayRow(this, true);\r\n\t\treturn row || false;\r\n\t}\r\n\r\n\tprevRow(){\r\n\t\tvar row = this.table.rowManager.prevDisplayRow(this, true);\r\n\t\treturn row || false;\r\n\t}\r\n\r\n\tmoveToRow(to, before){\r\n\t\tvar toRow = this.table.rowManager.findRow(to);\r\n\r\n\t\tif(toRow){\r\n\t\t\tthis.table.rowManager.moveRowActual(this, toRow, !before);\r\n\t\t\tthis.table.rowManager.refreshActiveData(\"display\", false, true);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching row found:\", to);\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////// Actions  /////////////////////\r\n\tdelete(){\r\n\t\tthis.dispatch(\"row-delete\", this);\r\n\r\n\t\tthis.deleteActual();\r\n\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\tdeleteActual(blockRedraw){\r\n\t\tvar index = this.table.rowManager.getRowIndex(this);\r\n\r\n\t\tthis.detatchModules();\r\n\r\n\t\tthis.table.rowManager.deleteRow(this, blockRedraw);\r\n\r\n\t\tthis.deleteCells();\r\n\r\n\t\tthis.initialized = false;\r\n\t\tthis.heightInitialized = false;\r\n\t\tthis.element = false;\r\n\r\n\t\tthis.dispatch(\"row-deleted\", this);\r\n\t}\r\n\r\n\tdetatchModules(){\r\n\t\tthis.dispatch(\"row-deleting\", this);\r\n\t}\r\n\r\n\tdeleteCells(){\r\n\t\tvar cellCount = this.cells.length;\r\n\r\n\t\tfor(let i = 0; i < cellCount; i++){\r\n\t\t\tthis.cells[0].delete();\r\n\t\t}\r\n\t}\r\n\r\n\twipe(){\r\n\t\tthis.detatchModules();\r\n\t\tthis.deleteCells();\r\n\r\n\t\tif(this.element){\r\n\t\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\t\tif(this.element.parentNode){\r\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.modules = {};\r\n\t}\r\n\r\n\tgetGroup(){\r\n\t\treturn this.modules.group || false;\r\n\t}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new RowComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}","export default {\r\n\t\"avg\":function(values, data, calcParams){\r\n\t\tvar output = 0,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : 2\r\n\r\n\t\tif(values.length){\r\n\t\t\toutput = values.reduce(function(sum, value){\r\n\t\t\t\treturn Number(sum) + Number(value);\r\n\t\t\t});\r\n\r\n\t\t\toutput = output / values.length;\r\n\r\n\t\t\toutput = precision !== false ? output.toFixed(precision) : output;\r\n\t\t}\r\n\r\n\t\treturn parseFloat(output).toString();\r\n\t},\r\n\t\"max\":function(values, data, calcParams){\r\n\t\tvar output = null,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\r\n\r\n\t\tvalues.forEach(function(value){\r\n\r\n\t\t\tvalue = Number(value);\r\n\r\n\t\t\tif(value > output || output === null){\r\n\t\t\t\toutput = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output !== null ? (precision !== false ? output.toFixed(precision) : output) : \"\";\r\n\t},\r\n\t\"min\":function(values, data, calcParams){\r\n\t\tvar output = null,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\r\n\r\n\t\tvalues.forEach(function(value){\r\n\r\n\t\t\tvalue = Number(value);\r\n\r\n\t\t\tif(value < output || output === null){\r\n\t\t\t\toutput = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output !== null ? (precision !== false ? output.toFixed(precision) : output) : \"\";\r\n\t},\r\n\t\"sum\":function(values, data, calcParams){\r\n\t\tvar output = 0,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\r\n\r\n\t\tif(values.length){\r\n\t\t\tvalues.forEach(function(value){\r\n\t\t\t\tvalue = Number(value);\r\n\r\n\t\t\t\toutput += !isNaN(value) ? Number(value) : 0;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn precision !== false ? output.toFixed(precision) : output;\r\n\t},\r\n\t\"concat\":function(values, data, calcParams){\r\n\t\tvar output = 0;\r\n\r\n\t\tif(values.length){\r\n\t\t\toutput = values.reduce(function(sum, value){\r\n\t\t\t\treturn String(sum) + String(value);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t},\r\n\t\"count\":function(values, data, calcParams){\r\n\t\tvar output = 0;\r\n\r\n\t\tif(values.length){\r\n\t\t\tvalues.forEach(function(value){\r\n\t\t\t\tif(value){\r\n\t\t\t\t\toutput ++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport CalcComponent from './CalcComponent.js';\r\n\r\nimport Cell from '../../core/cell/Cell.js';\r\nimport Column from '../../core/column/Column.js';\r\nimport Row from '../../core/row/Row.js';\r\n\r\nimport defaultCalculations from './defaults/calculations.js';\r\n\r\nclass ColumnCalcs extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.topCalcs = [];\r\n\t\tthis.botCalcs = [];\r\n\t\tthis.genColumn = false;\r\n\t\tthis.topElement = this.createElement();\r\n\t\tthis.botElement = this.createElement();\r\n\t\tthis.topRow = false;\r\n\t\tthis.botRow = false;\r\n\t\tthis.topInitialized = false;\r\n\t\tthis.botInitialized = false;\r\n\r\n\t\tthis.registerTableOption(\"columnCalcs\", true);\r\n\r\n\t\tthis.registerColumnOption(\"topCalc\");\r\n\t\tthis.registerColumnOption(\"topCalcParams\");\r\n\t\tthis.registerColumnOption(\"topCalcFormatter\");\r\n\t\tthis.registerColumnOption(\"topCalcFormatterParams\");\r\n\t\tthis.registerColumnOption(\"bottomCalc\");\r\n\t\tthis.registerColumnOption(\"bottomCalcParams\");\r\n\t\tthis.registerColumnOption(\"bottomCalcFormatter\");\r\n\t\tthis.registerColumnOption(\"bottomCalcFormatterParams\");\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\tel.classList.add(\"tabulator-calcs-holder\");\r\n\t\treturn el;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.genColumn = new Column({field:\"value\"}, this);\r\n\r\n\t\tthis.subscribe(\"cell-value-changed\", this.cellValueChanged.bind(this));\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumnCheck.bind(this));\r\n\t\tthis.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t\tthis.subscribe(\"row-added\", this.rowsUpdated.bind(this));\r\n\t\tthis.subscribe(\"column-moved\", this.recalcActiveRows.bind(this));\r\n\t\tthis.subscribe(\"column-add\", this.recalcActiveRows.bind(this));\r\n\t\tthis.subscribe(\"data-refeshed\", this.recalcActiveRows.bind(this));\r\n\t\tthis.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\r\n\t\tthis.subscribe(\"rows-visible\", this.visibleRows.bind(this));\r\n\r\n\t\tthis.registerTableFunction(\"getCalcResults\", this.getResults.bind(this));\r\n\t\tthis.registerTableFunction(\"recalc\", this.userRecalc.bind(this));\r\n\t}\r\n\r\n\ttableRedraw(force){\r\n\t\tthis.recalc(this.table.rowManager.activeRows);\r\n\r\n\t\tif(force){\r\n\t\t\tthis.redraw();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\tuserRecalc(){\r\n\t\tthis.recalc(this.table.rowManager.activeRows);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tvisibleRows(viewable, rows){\r\n\t\tif(this.topRow){\r\n\t\t\trows.unshift(this.topRow);\r\n\t\t}\r\n\r\n\t\tif(this.botRow){\r\n\t\t\trows.push(this.botRow);\r\n\t\t}\r\n\t\r\n\t\treturn rows;\r\n\t}\r\n\r\n\trowsUpdated(row){\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tthis.recalcRowGroup(this);\r\n\t\t}else{\r\n\t\t\tthis.recalcActiveRows();\r\n\t\t}\r\n\t}\r\n\r\n\trecalcActiveRows(){\r\n\t\tthis.recalc(this.table.rowManager.activeRows);\r\n\t}\r\n\r\n\tcellValueChanged(cell){\r\n\t\tif(cell.column.definition.topCalc || cell.column.definition.bottomCalc){\r\n\t\t\tif(this.table.options.groupBy){\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs == \"table\" || this.table.options.columnCalcs == \"both\"){\r\n\t\t\t\t\tthis.recalcActiveRows();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs != \"table\"){\r\n\t\t\t\t\tthis.recalcRowGroup(cell.row);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.recalcActiveRows();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumnCheck(column){\r\n\t\tif(column.definition.topCalc || column.definition.bottomCalc){\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize column calcs\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.definition\r\n\r\n\t\tvar config = {\r\n\t\t\ttopCalcParams:def.topCalcParams || {},\r\n\t\t\tbotCalcParams:def.bottomCalcParams || {},\r\n\t\t};\r\n\r\n\t\tif(def.topCalc){\r\n\r\n\t\t\tswitch(typeof def.topCalc){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(ColumnCalcs.calculations[def.topCalc]){\r\n\t\t\t\t\tconfig.topCalc = ColumnCalcs.calculations[def.topCalc]\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.topCalc);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tconfig.topCalc = def.topCalc;\r\n\t\t\t\tbreak\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(config.topCalc){\r\n\t\t\t\tcolumn.modules.columnCalcs = config;\r\n\t\t\t\tthis.topCalcs.push(column);\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs != \"group\"){\r\n\t\t\t\t\tthis.initializeTopRow();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif(def.bottomCalc){\r\n\t\t\tswitch(typeof def.bottomCalc){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(ColumnCalcs.calculations[def.bottomCalc]){\r\n\t\t\t\t\tconfig.botCalc = ColumnCalcs.calculations[def.bottomCalc]\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.bottomCalc);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tconfig.botCalc = def.bottomCalc;\r\n\t\t\t\tbreak\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(config.botCalc){\r\n\t\t\t\tcolumn.modules.columnCalcs = config;\r\n\t\t\t\tthis.botCalcs.push(column);\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs != \"group\"){\r\n\t\t\t\t\tthis.initializeBottomRow();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//dummy functions to handle being mock column manager\r\n\tregisterColumnField(){};\r\n\r\n\tremoveCalcs(){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(this.topInitialized){\r\n\t\t\tthis.topInitialized = false;\r\n\t\t\tthis.topElement.parentNode.removeChild(this.topElement);\r\n\t\t\tchanged = true;\r\n\t\t}\r\n\r\n\t\tif(this.botInitialized){\r\n\t\t\tthis.botInitialized = false;\r\n\t\t\tthis.table.footerManager.remove(this.botElement);\r\n\t\t\tchanged = true;\r\n\t\t}\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeTopRow(){\r\n\t\tif(!this.topInitialized){\r\n\t\t\tthis.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\r\n\t\t\tthis.topInitialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeBottomRow(){\r\n\t\tif(!this.botInitialized){\r\n\t\t\tthis.table.footerManager.prepend(this.botElement);\r\n\t\t\tthis.botInitialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tscrollHorizontal(left){\r\n\t\tif(this.botInitialized && this.botRow){\r\n\t\t\tthis.botRow.getElement().style.marginLeft = (-left) + \"px\";\r\n\t\t}\r\n\t}\r\n\r\n\trecalc(rows){\r\n\t\tvar data, row;\r\n\r\n\t\tif(this.topInitialized || this.botInitialized){\r\n\t\t\tdata = this.rowsToData(rows);\r\n\r\n\t\t\tif(this.topInitialized){\r\n\t\t\t\tif(this.topRow){\r\n\t\t\t\t\tthis.topRow.deleteCells();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow = this.generateRow(\"top\", this.rowsToData(rows))\r\n\t\t\t\tthis.topRow = row;\r\n\t\t\t\twhile(this.topElement.firstChild) this.topElement.removeChild(this.topElement.firstChild);\r\n\t\t\t\tthis.topElement.appendChild(row.getElement());\r\n\t\t\t\trow.initialize(true);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.botInitialized){\r\n\t\t\t\tif(this.botRow){\r\n\t\t\t\t\tthis.botRow.deleteCells();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow = this.generateRow(\"bottom\", this.rowsToData(rows))\r\n\t\t\t\tthis.botRow = row;\r\n\t\t\t\twhile(this.botElement.firstChild) this.botElement.removeChild(this.botElement.firstChild);\r\n\t\t\t\tthis.botElement.appendChild(row.getElement());\r\n\t\t\t\trow.initialize(true);\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\r\n\t\t\t//set resizable handles\r\n\t\t\tif(this.table.modExists(\"frozenColumns\")){\r\n\t\t\t\tthis.table.modules.frozenColumns.layout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trecalcRowGroup(row){\r\n\t\tthis.recalcGroup(this.table.modules.groupRows.getRowGroup(row));\r\n\t}\r\n\r\n\trecalcAll(){\r\n\t\tif(this.topCalcs.length || this.botCalcs.length){\r\n\t\t\tif(this.table.options.columnCalcs !== \"group\"){\r\n\t\t\t\tthis.recalcActiveRows();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.groupBy && this.table.options.columnCalcs !== \"table\"){\r\n\r\n\r\n\t\t\t\tvar groups = this.table.modules.groupRows.getChildGroups();\r\n\r\n\t\t\t\tgroups.forEach((group) => {\r\n\t\t\t\t\tthis.recalcGroup(group);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trecalcGroup(group){\r\n\t\tvar data, rowData;\r\n\r\n\t\tif(group){\r\n\t\t\tif(group.calcs){\r\n\t\t\t\tif(group.calcs.bottom){\r\n\t\t\t\t\tdata = this.rowsToData(group.rows);\r\n\t\t\t\t\trowData = this.generateRowData(\"bottom\", data);\r\n\r\n\t\t\t\t\tgroup.calcs.bottom.updateData(rowData);\r\n\t\t\t\t\tgroup.calcs.bottom.reinitialize();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(group.calcs.top){\r\n\t\t\t\t\tdata = this.rowsToData(group.rows);\r\n\t\t\t\t\trowData = this.generateRowData(\"top\", data);\r\n\r\n\t\t\t\t\tgroup.calcs.top.updateData(rowData);\r\n\t\t\t\t\tgroup.calcs.top.reinitialize();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//generate top stats row\r\n\tgenerateTopRow(rows){\r\n\t\treturn this.generateRow(\"top\", this.rowsToData(rows));\r\n\t}\r\n\t//generate bottom stats row\r\n\tgenerateBottomRow(rows){\r\n\t\treturn this.generateRow(\"bottom\", this.rowsToData(rows));\r\n\t}\r\n\r\n\trowsToData(rows){\r\n\t\tvar data = [];\r\n\r\n\t\trows.forEach((row) => {\r\n\t\t\tdata.push(row.getData());\r\n\r\n\t\t\tif(this.table.options.dataTree && this.table.options.dataTreeChildColumnCalcs){\r\n\t\t\t\tif(row.modules.dataTree.open){\r\n\t\t\t\t\tvar children = this.rowsToData(this.table.modules.dataTree.getFilteredTreeChildren(row));\r\n\t\t\t\t\tdata = data.concat(children);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//generate stats row\r\n\tgenerateRow(pos, data){\r\n\t\tvar rowData = this.generateRowData(pos, data),\r\n\t\trow;\r\n\r\n\t\tif(this.table.modExists(\"mutator\")){\r\n\t\t\tthis.table.modules.mutator.disable();\r\n\t\t}\r\n\r\n\t\trow = new Row(rowData, this, \"calc\");\r\n\r\n\t\tif(this.table.modExists(\"mutator\")){\r\n\t\t\tthis.table.modules.mutator.enable();\r\n\t\t}\r\n\r\n\t\trow.getElement().classList.add(\"tabulator-calcs\", \"tabulator-calcs-\" + pos);\r\n\r\n\t\trow.component = false;\r\n\r\n\t\trow.getComponent = () => {\r\n\t\t\tif(!row.component){\r\n\t\t\t\trow.component = new CalcComponent(row);\r\n\t\t\t}\r\n\r\n\t\t\treturn row.component;\r\n\t\t};\r\n\r\n\t\trow.generateCells = () => {\r\n\r\n\t\t\tvar cells = [];\r\n\r\n\t\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\r\n\t\t\t\t\t//set field name of mock column\r\n\t\t\t\t\tthis.genColumn.setField(column.getField());\r\n\t\t\t\t\tthis.genColumn.hozAlign = column.hozAlign;\r\n\r\n\t\t\t\t\tif(column.definition[pos + \"CalcFormatter\"] && this.table.modExists(\"format\")){\r\n\t\t\t\t\t\tthis.genColumn.modules.format = {\r\n\t\t\t\t\t\t\tformatter: this.table.modules.format.getFormatter(column.definition[pos + \"CalcFormatter\"]),\r\n\t\t\t\t\t\t\tparams: column.definition[pos + \"CalcFormatterParams\"] || {},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.genColumn.modules.format = {\r\n\t\t\t\t\t\t\tformatter: this.table.modules.format.getFormatter(\"plaintext\"),\r\n\t\t\t\t\t\t\tparams:{}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//ensure css class defintion is replicated to calculation cell\r\n\t\t\t\t\tthis.genColumn.definition.cssClass = column.definition.cssClass;\r\n\r\n\t\t\t\t\t//generate cell and assign to correct column\r\n\t\t\t\t\tvar cell = new Cell(this.genColumn, row);\r\n\t\t\t\t\tcell.getElement();\r\n\t\t\t\t\tcell.column = column;\r\n\t\t\t\t\tcell.setWidth();\r\n\r\n\t\t\t\t\tcolumn.cells.push(cell);\r\n\t\t\t\t\tcells.push(cell);\r\n\r\n\t\t\t\t\tif(!column.visible){\r\n\t\t\t\t\t\tcell.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\trow.cells = cells;\r\n\t\t};\r\n\r\n\t\treturn row;\r\n\t}\r\n\r\n\t//generate stats row\r\n\tgenerateRowData(pos, data){\r\n\t\tvar rowData = {},\r\n\t\tcalcs = pos == \"top\" ? this.topCalcs : this.botCalcs,\r\n\t\ttype = pos == \"top\" ? \"topCalc\" : \"botCalc\",\r\n\t\tparams, paramKey;\r\n\r\n\t\tcalcs.forEach(function(column){\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tif(column.modules.columnCalcs && column.modules.columnCalcs[type]){\r\n\t\t\t\tdata.forEach(function(item){\r\n\t\t\t\t\tvalues.push(column.getFieldValue(item));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tparamKey = type + \"Params\";\r\n\t\t\t\tparams = typeof column.modules.columnCalcs[paramKey] === \"function\" ? column.modules.columnCalcs[paramKey](values, data) : column.modules.columnCalcs[paramKey];\r\n\r\n\t\t\t\tcolumn.setFieldValue(rowData, column.modules.columnCalcs[type](values, data, params));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowData;\r\n\t}\r\n\r\n\thasTopCalcs(){\r\n\t\treturn\t!!(this.topCalcs.length);\r\n\t}\r\n\r\n\thasBottomCalcs(){\r\n\t\treturn\t!!(this.botCalcs.length);\r\n\t}\r\n\r\n\t//handle table redraw\r\n\tredraw(){\r\n\t\tif(this.topRow){\r\n\t\t\tthis.topRow.normalizeHeight(true);\r\n\t\t}\r\n\t\tif(this.botRow){\r\n\t\t\tthis.botRow.normalizeHeight(true);\r\n\t\t}\r\n\t}\r\n\r\n\t//return the calculated\r\n\tgetResults(){\r\n\t\tvar results = {},\r\n\t\tgroups;\r\n\r\n\t\tif(this.table.options.groupBy && this.table.modExists(\"groupRows\")){\r\n\t\t\tgroups = this.table.modules.groupRows.getGroups(true);\r\n\r\n\t\t\tgroups.forEach((group) => {\r\n\t\t\t\tresults[group.getKey()] = this.getGroupResults(group);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tresults = {\r\n\t\t\t\ttop: this.topRow ? this.topRow.getData() : {},\r\n\t\t\t\tbottom: this.botRow ? this.botRow.getData() : {},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\t//get results from a group\r\n\tgetGroupResults(group){\r\n\t\tvar groupObj = group._getSelf(),\r\n\t\tsubGroups = group.getSubGroups(),\r\n\t\tsubGroupResults = {},\r\n\t\tresults = {};\r\n\r\n\t\tsubGroups.forEach((subgroup) => {\r\n\t\t\tsubGroupResults[subgroup.getKey()] = this.getGroupResults(subgroup);\r\n\t\t});\r\n\r\n\t\tresults = {\r\n\t\t\ttop: groupObj.calcs.top ? groupObj.calcs.top.getData() : {},\r\n\t\t\tbottom: groupObj.calcs.bottom ? groupObj.calcs.bottom.getData() : {},\r\n\t\t\tgroups: subGroupResults,\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n}\r\n\r\nColumnCalcs.moduleName = \"columnCalcs\";\r\n\r\n//load defaults\r\nColumnCalcs.calculations = defaultCalculations;\r\n\r\nexport default ColumnCalcs;","import Module from '../../core/Module.js';\r\n\r\nimport Row from '../../core/row/Row.js';\r\n\r\nclass DataTree extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.indent = 10;\r\n\t\tthis.field = \"\";\r\n\t\tthis.collapseEl = null;\r\n\t\tthis.expandEl = null;\r\n\t\tthis.branchEl = null;\r\n\t\tthis.elementField = false;\r\n\r\n\t\tthis.startOpen = function(){};\r\n\r\n\t\tthis.displayIndex = 0;\r\n\r\n\t\tthis.registerTableOption(\"dataTree\", false); //enable data tree\r\n\t\tthis.registerTableOption(\"dataTreeFilter\", true); //filter child rows\r\n\t\tthis.registerTableOption(\"dataTreeSort\", true); //sort child rows\r\n\t\tthis.registerTableOption(\"dataTreeElementColumn\", false);\r\n\t\tthis.registerTableOption(\"dataTreeBranchElement\", true);//show data tree branch element\r\n\t\tthis.registerTableOption(\"dataTreeChildIndent\", 9); //data tree child indent in px\r\n\t\tthis.registerTableOption(\"dataTreeChildField\", \"_children\");//data tre column field to look for child rows\r\n\t\tthis.registerTableOption(\"dataTreeCollapseElement\", false);//data tree row collapse element\r\n\t\tthis.registerTableOption(\"dataTreeExpandElement\", false);//data tree row expand element\r\n\t\tthis.registerTableOption(\"dataTreeStartExpanded\", false);\r\n\t\tthis.registerTableOption(\"dataTreeChildColumnCalcs\", false);//include visible data tree rows in column calculations\r\n\t\tthis.registerTableOption(\"dataTreeSelectPropagate\", false);//seleccting a parent row selects its children\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"treeCollapse\", this.collapseRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"treeExpand\", this.expandRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"treeToggle\", this.toggleRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"getTreeParent\", this.getTreeParent.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"getTreeChildren\", this.getRowChildren.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"addTreeChild\", this.addTreeChildRow.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.dataTree){\r\n\t\t\tvar dummyEl = null,\r\n\t\t\toptions = this.table.options;\r\n\r\n\t\t\tthis.field = options.dataTreeChildField;\r\n\t\t\tthis.indent = options.dataTreeChildIndent;\r\n\r\n\t\t\tif(options.dataTreeBranchElement){\r\n\r\n\t\t\t\tif(options.dataTreeBranchElement === true){\r\n\t\t\t\t\tthis.branchEl = document.createElement(\"div\");\r\n\t\t\t\t\tthis.branchEl.classList.add(\"tabulator-data-tree-branch\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(typeof options.dataTreeBranchElement === \"string\"){\r\n\t\t\t\t\t\tdummyEl = document.createElement(\"div\");\r\n\t\t\t\t\t\tdummyEl.innerHTML = options.dataTreeBranchElement;\r\n\t\t\t\t\t\tthis.branchEl = dummyEl.firstChild;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.branchEl = options.dataTreeBranchElement;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(options.dataTreeCollapseElement){\r\n\t\t\t\tif(typeof options.dataTreeCollapseElement === \"string\"){\r\n\t\t\t\t\tdummyEl = document.createElement(\"div\");\r\n\t\t\t\t\tdummyEl.innerHTML = options.dataTreeCollapseElement;\r\n\t\t\t\t\tthis.collapseEl = dummyEl.firstChild;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.collapseEl = options.dataTreeCollapseElement;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.collapseEl = document.createElement(\"div\");\r\n\t\t\t\tthis.collapseEl.classList.add(\"tabulator-data-tree-control\");\r\n\t\t\t\tthis.collapseEl.tabIndex = 0;\r\n\t\t\t\tthis.collapseEl.innerHTML = \"<div class='tabulator-data-tree-control-collapse'></div>\";\r\n\t\t\t}\r\n\r\n\t\t\tif(options.dataTreeExpandElement){\r\n\t\t\t\tif(typeof options.dataTreeExpandElement === \"string\"){\r\n\t\t\t\t\tdummyEl = document.createElement(\"div\");\r\n\t\t\t\t\tdummyEl.innerHTML = options.dataTreeExpandElement;\r\n\t\t\t\t\tthis.expandEl = dummyEl.firstChild;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.expandEl = options.dataTreeExpandElement;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.expandEl = document.createElement(\"div\");\r\n\t\t\t\tthis.expandEl.classList.add(\"tabulator-data-tree-control\");\r\n\t\t\t\tthis.expandEl.tabIndex = 0;\r\n\t\t\t\tthis.expandEl.innerHTML = \"<div class='tabulator-data-tree-control-expand'></div>\";\r\n\t\t\t}\r\n\r\n\r\n\t\t\tswitch(typeof options.dataTreeStartExpanded){\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\tthis.startOpen = function(row, index){\r\n\t\t\t\t\treturn options.dataTreeStartExpanded;\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tthis.startOpen = options.dataTreeStartExpanded;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tthis.startOpen = function(row, index){\r\n\t\t\t\t\treturn options.dataTreeStartExpanded[index];\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t\tthis.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\r\n\t\t\tthis.subscribe(\"row-deleted\", this.rowDelete.bind(this),0);\r\n\t\t\tthis.subscribe(\"row-data-changed\", this.rowDataChanged.bind(this), 10);\r\n\t\t\tthis.subscribe(\"cell-value-updated\", this.cellValueChanged.bind(this));\r\n\t\t\tthis.subscribe(\"edit-cancelled\", this.cellValueChanged.bind(this));\r\n\t\t\tthis.subscribe(\"column-moving-rows\", this.columnMoving.bind(this));\r\n\t\t\tthis.subscribe(\"table-built\", this.initializeElementField.bind(this));\r\n\r\n\t\t\tthis.registerDisplayHandler(this.getRows.bind(this), 30);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeElementField(){\r\n\t\tvar firstCol = this.table.columnManager.getFirstVisibleColumn();\r\n\r\n\t\tthis.elementField = this.table.options.dataTreeElementColumn || (firstCol ? firstCol.field : false);\r\n\t}\r\n\t\r\n\tgetRowChildren(row){\r\n\t\treturn this.getTreeChildren(row, true);\r\n\t}\r\n\r\n\tcolumnMoving(){\r\n\t\tvar rows = [];\r\n\r\n\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\trows = rows.concat(this.getTreeChildren(row, false, true));\r\n\t\t});\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\trowDataChanged(row, visible, updatedData){\r\n\t\tif(this.redrawNeeded(updatedData)){\r\n\t\t\tthis.initializeRow(row);\r\n\r\n\t\t\tif(visible){\r\n\t\t\t\tthis.layoutRow(row);\r\n\t\t\t\tthis.refreshData(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcellValueChanged(cell){\r\n\t\tvar field = cell.column.getField();\r\n\r\n\t\tif(field === this.elementField){\r\n\t\t\tthis.layoutRow(cell.row);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar childArray = row.getData()[this.field];\r\n\t\tvar isArray = Array.isArray(childArray);\r\n\r\n\t\tvar children = isArray || (!isArray && typeof childArray === \"object\" && childArray !== null);\r\n\r\n\t\tif(!children && row.modules.dataTree && row.modules.dataTree.branchEl){\r\n\t\t\trow.modules.dataTree.branchEl.parentNode.removeChild(row.modules.dataTree.branchEl);\r\n\t\t}\r\n\r\n\t\tif(!children && row.modules.dataTree && row.modules.dataTree.controlEl){\r\n\t\t\trow.modules.dataTree.controlEl.parentNode.removeChild(row.modules.dataTree.controlEl);\r\n\t\t}\r\n\r\n\t\trow.modules.dataTree = {\r\n\t\t\tindex: row.modules.dataTree ? row.modules.dataTree.index : 0,\r\n\t\t\topen: children ? (row.modules.dataTree ? row.modules.dataTree.open : this.startOpen(row.getComponent(), 0)) : false,\r\n\t\t\tcontrolEl: row.modules.dataTree && children ? row.modules.dataTree.controlEl : false,\r\n\t\t\tbranchEl: row.modules.dataTree && children ? row.modules.dataTree.branchEl : false,\r\n\t\t\tparent: row.modules.dataTree ? row.modules.dataTree.parent : false,\r\n\t\t\tchildren:children,\r\n\t\t};\r\n\t}\r\n\r\n\treinitializeRowChildren(row){\r\n\t\tvar children = this.getTreeChildren(row, false, true);\r\n\r\n\t\tchildren.forEach(function(child){\r\n\t\t\tchild.reinitialize(true);\r\n\t\t});\r\n\t}\r\n\r\n\tlayoutRow(row){\r\n\t\tvar cell = this.elementField ? row.getCell(this.elementField) : row.getCells()[0],\r\n\t\tel = cell.getElement(),\r\n\t\tconfig = row.modules.dataTree;\r\n\r\n\t\tif(config.branchEl){\r\n\t\t\tif(config.branchEl.parentNode){\r\n\t\t\t\tconfig.branchEl.parentNode.removeChild(config.branchEl);\r\n\t\t\t}\r\n\t\t\tconfig.branchEl = false;\r\n\t\t}\r\n\r\n\t\tif(config.controlEl){\r\n\t\t\tif(config.controlEl.parentNode){\r\n\t\t\t\tconfig.controlEl.parentNode.removeChild(config.controlEl);\r\n\t\t\t}\r\n\t\t\tconfig.controlEl = false;\r\n\t\t}\r\n\r\n\t\tthis.generateControlElement(row, el);\r\n\r\n\t\trow.getElement().classList.add(\"tabulator-tree-level-\" + config.index);\r\n\r\n\t\tif(config.index){\r\n\t\t\tif(this.branchEl){\r\n\t\t\t\tconfig.branchEl = this.branchEl.cloneNode(true);\r\n\t\t\t\tel.insertBefore(config.branchEl, el.firstChild);\r\n\r\n\t\t\t\tif(this.table.rtl){\r\n\t\t\t\t\tconfig.branchEl.style.marginRight = (((config.branchEl.offsetWidth + config.branchEl.style.marginLeft) * (config.index - 1)) + (config.index * this.indent)) + \"px\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconfig.branchEl.style.marginLeft = (((config.branchEl.offsetWidth + config.branchEl.style.marginRight) * (config.index - 1)) + (config.index * this.indent)) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\r\n\t\t\t\tif(this.table.rtl){\r\n\t\t\t\t\tel.style.paddingRight = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-right')) + (config.index * this.indent) + \"px\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tel.style.paddingLeft = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-left')) + (config.index * this.indent) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateControlElement(row, el){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\tel = el || row.getCells()[0].getElement(),\r\n\t\toldControl = config.controlEl;\r\n\r\n\t\tif(config.children !== false){\r\n\r\n\t\t\tif(config.open){\r\n\t\t\t\tconfig.controlEl = this.collapseEl.cloneNode(true);\r\n\t\t\t\tconfig.controlEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tthis.collapseRow(row);\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tconfig.controlEl = this.expandEl.cloneNode(true);\r\n\t\t\t\tconfig.controlEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tthis.expandRow(row);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconfig.controlEl.addEventListener(\"mousedown\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\tif(oldControl && oldControl.parentNode === el){\r\n\t\t\t\toldControl.parentNode.replaceChild(config.controlEl,oldControl);\r\n\t\t\t}else{\r\n\t\t\t\tel.insertBefore(config.controlEl, el.firstChild);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetDisplayIndex (index) {\r\n\t\tthis.displayIndex = index;\r\n\t}\r\n\r\n\tgetDisplayIndex () {\r\n\t\treturn this.displayIndex;\r\n\t}\r\n\r\n\tgetRows(rows){\r\n\t\tvar output = [];\r\n\r\n\t\trows.forEach((row, i) => {\r\n\t\t\tvar config, children;\r\n\r\n\t\t\toutput.push(row);\r\n\r\n\t\t\tif(row instanceof Row){\r\n\r\n\t\t\t\trow.create();\r\n\r\n\t\t\t\tconfig = row.modules.dataTree.children;\r\n\r\n\t\t\t\tif(!config.index && config.children !== false){\r\n\t\t\t\t\tchildren = this.getChildren(row);\r\n\r\n\t\t\t\t\tchildren.forEach((child) => {\r\n\t\t\t\t\t\tchild.create();\r\n\t\t\t\t\t\toutput.push(child);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetChildren(row, allChildren){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\tchildren = [],\r\n\t\toutput = [];\r\n\r\n\t\tif(config.children !== false && (config.open || allChildren)){\r\n\t\t\tif(!Array.isArray(config.children)){\r\n\t\t\t\tconfig.children = this.generateChildren(row);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"filter\") && this.table.options.dataTreeFilter){\r\n\t\t\t\tchildren = this.table.modules.filter.filter(config.children);\r\n\t\t\t}else{\r\n\t\t\t\tchildren = config.children;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"sort\") && this.table.options.dataTreeSort){\r\n\t\t\t\tthis.table.modules.sort.sort(children);\r\n\t\t\t}\r\n\r\n\t\t\tchildren.forEach((child) => {\r\n\t\t\t\toutput.push(child);\r\n\r\n\t\t\t\tvar subChildren = this.getChildren(child);\r\n\r\n\t\t\t\tsubChildren.forEach((sub) => {\r\n\t\t\t\t\toutput.push(sub);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgenerateChildren(row){\r\n\t\tvar children = [];\r\n\r\n\t\tvar childArray = row.getData()[this.field];\r\n\r\n\t\tif(!Array.isArray(childArray)){\r\n\t\t\tchildArray = [childArray];\r\n\t\t}\r\n\r\n\t\tchildArray.forEach((childData) => {\r\n\t\t\tvar childRow = new Row(childData || {}, this.table.rowManager);\r\n\r\n\t\t\tchildRow.create();\r\n\r\n\t\t\tchildRow.modules.dataTree.index = row.modules.dataTree.index + 1;\r\n\t\t\tchildRow.modules.dataTree.parent = row;\r\n\r\n\t\t\tif(childRow.modules.dataTree.children){\r\n\t\t\t\tchildRow.modules.dataTree.open = this.startOpen(childRow.getComponent(), childRow.modules.dataTree.index);\r\n\t\t\t}\r\n\t\t\tchildren.push(childRow);\r\n\t\t});\r\n\r\n\t\treturn children;\r\n\t}\r\n\r\n\texpandRow(row, silent){\r\n\t\tvar config = row.modules.dataTree;\r\n\r\n\t\tif(config.children !== false){\r\n\t\t\tconfig.open = true;\r\n\r\n\t\t\trow.reinitialize();\r\n\r\n\t\t\tthis.refreshData(true);\r\n\r\n\t\t\tthis.dispatchExternal(\"dataTreeRowExpanded\", row.getComponent(), row.modules.dataTree.index);\r\n\t\t}\r\n\t}\r\n\r\n\tcollapseRow(row){\r\n\t\tvar config = row.modules.dataTree;\r\n\r\n\t\tif(config.children !== false){\r\n\t\t\tconfig.open = false;\r\n\r\n\t\t\trow.reinitialize();\r\n\r\n\t\t\tthis.refreshData(true);\r\n\r\n\t\t\tthis.dispatchExternal(\"dataTreeRowCollapsed\", row.getComponent(), row.modules.dataTree.index);\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleRow(row){\r\n\t\tvar config = row.modules.dataTree;\r\n\r\n\t\tif(config.children !== false){\r\n\t\t\tif(config.open){\r\n\t\t\t\tthis.collapseRow(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.expandRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetTreeParent(row){\r\n\t\treturn row.modules.dataTree.parent ? row.modules.dataTree.parent.getComponent() : false;\r\n\t}\r\n\r\n\tgetFilteredTreeChildren(row){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\toutput = [], children;\r\n\r\n\t\tif(config.children){\r\n\r\n\t\t\tif(!Array.isArray(config.children)){\r\n\t\t\t\tconfig.children = this.generateChildren(row);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"filter\") && this.table.options.dataTreeFilter){\r\n\t\t\t\tchildren = this.table.modules.filter.filter(config.children);\r\n\t\t\t}else{\r\n\t\t\t\tchildren = config.children;\r\n\t\t\t}\r\n\r\n\t\t\tchildren.forEach((childRow) => {\r\n\t\t\t\tif(childRow instanceof Row){\r\n\t\t\t\t\toutput.push(childRow);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\trowDelete(row){\r\n\t\tvar parent = row.modules.dataTree.parent,\r\n\t\tchildIndex;\r\n\r\n\t\tif(parent){\r\n\t\t\tchildIndex = this.findChildIndex(row, parent);\r\n\r\n\t\t\tif(childIndex !== false){\r\n\t\t\t\tparent.data[this.field].splice(childIndex, 1);\r\n\t\t\t}\r\n\r\n\t\t\tif(!parent.data[this.field].length){\r\n\t\t\t\tdelete parent.data[this.field];\r\n\t\t\t}\r\n\r\n\t\t\tthis.initializeRow(parent);\r\n\t\t\tthis.layoutRow(parent);\r\n\t\t}\r\n\r\n\t\tthis.refreshData(true);\r\n\t}\r\n\r\n\taddTreeChildRow(row, data, top, index){\r\n\t\tvar childIndex = false;\r\n\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(!Array.isArray(row.data[this.field])){\r\n\t\t\trow.data[this.field] = [];\r\n\r\n\t\t\trow.modules.dataTree.open = this.startOpen(row.getComponent(), row.modules.dataTree.index);\r\n\t\t}\r\n\r\n\t\tif(typeof index !== \"undefined\"){\r\n\t\t\tchildIndex = this.findChildIndex(index, row);\r\n\r\n\t\t\tif(childIndex !== false){\r\n\t\t\t\trow.data[this.field].splice((top ? childIndex : childIndex + 1), 0, data);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndex === false){\r\n\t\t\tif(top){\r\n\t\t\t\trow.data[this.field].unshift(data);\r\n\t\t\t}else{\r\n\t\t\t\trow.data[this.field].push(data);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.initializeRow(row);\r\n\t\tthis.layoutRow(row);\r\n\r\n\t\tthis.refreshData(true);\r\n\t}\r\n\r\n\tfindChildIndex(subject, parent){\r\n\t\tvar match = false;\r\n\r\n\t\tif(typeof subject == \"object\"){\r\n\r\n\t\t\tif(subject instanceof Row){\r\n\t\t\t\t//subject is row element\r\n\t\t\t\tmatch = subject.data;\r\n\t\t\t}else if(subject instanceof RowComponent){\r\n\t\t\t\t//subject is public row component\r\n\t\t\t\tmatch = subject._getSelf().data;\r\n\t\t\t}else if(typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement){\r\n\t\t\t\tif(parent.modules.dataTree){\r\n\t\t\t\t\tmatch = parent.modules.dataTree.children.find((childRow) => {\r\n\t\t\t\t\t\treturn childRow instanceof Row ? childRow.element === subject : false;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(match){\r\n\t\t\t\t\t\tmatch = match.data;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}else if(typeof subject == \"undefined\" || subject === null){\r\n\t\t\tmatch = false\r\n\t\t}else{\r\n\t\t\t//subject should be treated as the index of the row\r\n\t\t\tmatch = parent.data[this.field].find((row) => {\r\n\t\t\t\treturn row.data[this.table.options.index] == subject;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(match){\r\n\r\n\t\t\tif(Array.isArray(parent.data[this.field])){\r\n\t\t\t\tmatch = parent.data[this.field].indexOf(match);\r\n\t\t\t}\r\n\r\n\t\t\tif(match == -1){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//catch all for any other type of input\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tgetTreeChildren(row, component, recurse){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\toutput = [];\r\n\r\n\t\tif(config.children){\r\n\r\n\t\t\tif(!Array.isArray(config.children)){\r\n\t\t\t\tconfig.children = this.generateChildren(row);\r\n\t\t\t}\r\n\r\n\t\t\tconfig.children.forEach((childRow) => {\r\n\t\t\t\tif(childRow instanceof Row){\r\n\t\t\t\t\toutput.push(component ? childRow.getComponent() : childRow);\r\n\r\n\t\t\t\t\tif(recurse){\r\n\t\t\t\t\t\toutput = output.concat(this.getTreeChildren(childRow, component, recurse));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetChildField(){\r\n\t\treturn this.field;\r\n\t}\r\n\r\n\tredrawNeeded(data){\r\n\t\tconsole.log(\"needed?\", data)\r\n\t\treturn (this.field ? typeof data[this.field] !== \"undefined\" : false) || (this.elementField ? typeof data[this.elementField] !== \"undefined\" : false);\r\n\t}\r\n}\r\n\r\nDataTree.moduleName = \"dataTree\";\r\n\r\nexport default DataTree;","export default function(list, options, setFileContents){\r\n\tvar delimiter = options && options.delimiter ? options.delimiter : \",\",\r\n\tfileContents = [],\r\n\theaders = [];\r\n\r\n\tlist.forEach((row) => {\r\n\t\tvar item = [];\r\n\r\n\t\tswitch(row.type){\r\n\t\t\tcase \"group\":\r\n\t\t\tconsole.warn(\"Download Warning - CSV downloader cannot process row groups\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\tconsole.warn(\"Download Warning - CSV downloader cannot process column calculations\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"header\":\r\n\t\t\trow.columns.forEach((col, i) => {\r\n\t\t\t\tif(col && col.depth === 1){\r\n\t\t\t\t\theaders[i] = typeof col.value == \"undefined\"  || col.value === null ? \"\" : ('\"' + String(col.value).split('\"').join('\"\"') + '\"');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\trow.columns.forEach((col) => {\r\n\r\n\t\t\t\tif(col){\r\n\r\n\t\t\t\t\tswitch(typeof col.value){\r\n\t\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\t\tcol.value = JSON.stringify(col.value);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\t\tcase \"null\":\r\n\t\t\t\t\t\tcol.value = \"\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titem.push('\"' + String(col.value).split('\"').join('\"\"') + '\"');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfileContents.push(item.join(delimiter));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(headers.length){\r\n\t\tfileContents.unshift(headers.join(delimiter));\r\n\t}\r\n\r\n\tfileContents = fileContents.join(\"\\n\");\r\n\r\n\tif(options.bom){\r\n\t\tfileContents = \"\\ufeff\" + fileContents;\r\n\t}\r\n\r\n\tsetFileContents(fileContents, \"text/csv\");\r\n};","export default function(list, options, setFileContents){\r\n\tvar fileContents = [];\r\n\r\n\tlist.forEach((row) => {\r\n\t\tvar item = {};\r\n\r\n\t\tswitch(row.type){\r\n\t\t\tcase \"header\":\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\tconsole.warn(\"Download Warning - JSON downloader cannot process row groups\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\tconsole.warn(\"Download Warning - JSON downloader cannot process column calculations\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\trow.columns.forEach((col) => {\r\n\t\t\t\tif(col){\r\n\t\t\t\t\titem[col.component.getField()] = col.value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfileContents.push(item);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tfileContents = JSON.stringify(fileContents, null, '\\t');\r\n\r\n\tsetFileContents(fileContents, \"application/json\");\r\n};","export default function(list, options, setFileContents){\r\n\tvar header = [],\r\n\tbody = [],\r\n\tautoTableParams = {},\r\n\trowGroupStyles = options.rowGroupStyles || {\r\n\t\tfontStyle: \"bold\",\r\n\t\tfontSize: 12,\r\n\t\tcellPadding: 6,\r\n\t\tfillColor: 220,\r\n\t},\r\n\trowCalcStyles = options.rowCalcStyles || {\r\n\t\tfontStyle: \"bold\",\r\n\t\tfontSize: 10,\r\n\t\tcellPadding: 4,\r\n\t\tfillColor: 232,\r\n\t},\r\n\tjsPDFParams = options.jsPDF || {},\r\n\ttitle = options && options.title ? options.title : \"\";\r\n\r\n\tif(!jsPDFParams.orientation){\r\n\t\tjsPDFParams.orientation = options.orientation || \"landscape\";\r\n\t}\r\n\r\n\tif(!jsPDFParams.unit){\r\n\t\tjsPDFParams.unit = \"pt\";\r\n\t}\r\n\r\n\t//parse row list\r\n\tlist.forEach((row) => {\r\n\t\tvar item = {};\r\n\r\n\t\tswitch(row.type){\r\n\t\t\tcase \"header\":\r\n\t\t\theader.push(parseRow(row));\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\tbody.push(parseRow(row, rowGroupStyles));\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\tbody.push(parseRow(row, rowCalcStyles));\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\tbody.push(parseRow(row));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction parseRow(row, styles){\r\n\t\tvar rowData = [];\r\n\r\n\t\trow.columns.forEach((col) =>{\r\n\t\t\tvar cell;\r\n\r\n\t\t\tif(col){\r\n\t\t\t\tswitch(typeof col.value){\r\n\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\tcol.value = JSON.stringify(col.value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tcase \"null\":\r\n\t\t\t\t\tcol.value = \"\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcell = {\r\n\t\t\t\t\tcontent:col.value,\r\n\t\t\t\t\tcolSpan:col.width,\r\n\t\t\t\t\trowSpan:col.height,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif(styles){\r\n\t\t\t\t\tcell.styles = styles;\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowData.push(cell);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowData;\r\n\t}\r\n\r\n\r\n\t//configure PDF\r\n\tvar doc = new jspdf.jsPDF(jsPDFParams); //set document to landscape, better for most tables\r\n\r\n\tif(options && options.autoTable){\r\n\t\tif(typeof options.autoTable === \"function\"){\r\n\t\t\tautoTableParams = options.autoTable(doc) || {};\r\n\t\t}else{\r\n\t\t\tautoTableParams = options.autoTable;\r\n\t\t}\r\n\t}\r\n\r\n\tif(title){\r\n\t\tautoTableParams.didDrawPage = function(data) {\r\n\t\t\tdoc.text(title, 40, 30);\r\n\t\t};\r\n\t}\r\n\r\n\tautoTableParams.head = header;\r\n\tautoTableParams.body = body;\r\n\r\n\tdoc.autoTable(autoTableParams);\r\n\r\n\tif(options && options.documentProcessing){\r\n\t\toptions.documentProcessing(doc);\r\n\t}\r\n\r\n\tsetFileContents(doc.output(\"arraybuffer\"), \"application/pdf\");\r\n};","import CoreFeature from '../../../../core/CoreFeature.js';\r\n\r\nexport default function(list, options, setFileContents){\r\n\tvar self = this,\r\n\tsheetName = options.sheetName || \"Sheet1\",\r\n\tworkbook = XLSX.utils.book_new(),\r\n\ttableFeatures = new CoreFeature(this),\r\n\toutput;\r\n\r\n\tworkbook.SheetNames = [];\r\n\tworkbook.Sheets = {};\r\n\r\n\tfunction generateSheet(){\r\n\t\tvar rows = [],\r\n\t\tmerges = [],\r\n\t\tworksheet = {},\r\n\t\trange = {s: {c:0, r:0}, e: {c:(list[0] ? list[0].columns.reduce((a, b) => a + (b && b.width ? b.width : 1), 0) : 0), r:list.length }};\r\n\r\n\t\t//parse row list\r\n\t\tlist.forEach((row, i) => {\r\n\t\t\tvar rowData = [];\r\n\r\n\t\t\trow.columns.forEach(function(col, j){\r\n\r\n\t\t\t\tif(col){\r\n\t\t\t\t\trowData.push(!(col.value instanceof Date) && typeof col.value === \"object\" ? JSON.stringify(col.value) : col.value);\r\n\r\n\t\t\t\t\tif(col.width > 1 || col.height > -1){\r\n\t\t\t\t\t\tif(col.height > 1 || col.width > 1){\r\n\t\t\t\t\t\t\tmerges.push({s:{r:i,c:j},e:{r:i + col.height - 1,c:j + col.width - 1}});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\trowData.push(\"\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\trows.push(rowData);\r\n\t\t});\r\n\r\n\t\t//convert rows to worksheet\r\n\t\tXLSX.utils.sheet_add_aoa(worksheet, rows);\r\n\r\n\t\tworksheet['!ref'] = XLSX.utils.encode_range(range);\r\n\r\n\t\tif(merges.length){\r\n\t\t\tworksheet[\"!merges\"] = merges;\r\n\t\t}\r\n\r\n\t\treturn worksheet;\r\n\t}\r\n\r\n\tif(options.sheetOnly){\r\n\t\tsetFileContents(generateSheet());\r\n\t\treturn;\r\n\t}\r\n\r\n\tif(options.sheets){\r\n\t\tfor(var sheet in options.sheets){\r\n\r\n\t\t\tif(options.sheets[sheet] === true){\r\n\t\t\t\tworkbook.SheetNames.push(sheet);\r\n\t\t\t\tworkbook.Sheets[sheet] = generateSheet();\r\n\t\t\t}else{\r\n\r\n\t\t\t\tworkbook.SheetNames.push(sheet);\r\n\r\n\t\t\t\ttableFeatures.commsSend(options.sheets[sheet], \"download\", \"intercept\",{\r\n\t\t\t\t\ttype:\"xlsx\",\r\n\t\t\t\t\toptions:{sheetOnly:true},\r\n\t\t\t\t\tactive:self.active,\r\n\t\t\t\t\tintercept:function(data){\r\n\t\t\t\t\t\tworkbook.Sheets[sheet] = data;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tworkbook.SheetNames.push(sheetName);\r\n\t\tworkbook.Sheets[sheetName] = generateSheet();\r\n\t}\r\n\r\n\tif(options.documentProcessing){\r\n\t\tworkbook = options.documentProcessing(workbook);\r\n\t}\r\n\r\n\t//convert workbook to binary array\r\n\tfunction s2ab(s) {\r\n\t\tvar buf = new ArrayBuffer(s.length);\r\n\t\tvar view = new Uint8Array(buf);\r\n\t\tfor (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n\t\t\treturn buf;\r\n\t}\r\n\r\n\toutput = XLSX.write(workbook, {bookType:'xlsx', bookSST:true, type: 'binary'});\r\n\r\n\tsetFileContents(s2ab(output), \"application/octet-stream\");\r\n};","export default function(list, options, setFileContents){\r\n\tif(this.modExists(\"export\", true)){\r\n\t\tsetFileContents(this.modules.export.genereateHTMLTable(list), \"text/html\");\r\n\t}\r\n};","import csv from './downloaders/csv.js';\r\nimport json from './downloaders/json.js';\r\nimport pdf from './downloaders/pdf.js';\r\nimport xlsx from './downloaders/xlsx.js';\r\nimport html from './downloaders/html.js';\r\n\r\nexport default {\r\n\tcsv:csv,\r\n\tjson:json,\r\n\tpdf:pdf,\r\n\txlsx:xlsx,\r\n\thtml:html,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultDownloaders from './defaults/downloaders.js';\r\n\r\nclass Download extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.registerTableOption(\"downloadReady\", function(data, blob){return blob;}); //function to manipulate download data\r\n\t\tthis.registerTableOption(\"downloadConfig\", {}); //download config\r\n\t\tthis.registerTableOption(\"downloadRowRange\", \"active\"); //restrict download to active rows only\r\n\r\n\t\tthis.registerColumnOption(\"download\");\r\n\t\tthis.registerColumnOption(\"titleDownload\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.registerTableFunction(\"download\", this.download.bind(this));\r\n\t\tthis.registerTableFunction(\"downloadToTab\", this.downloadToTab.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tdownloadToTab(type, filename, options, active){\r\n\t\tthis.download(type, filename, options, active, true);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\t//trigger file download\r\n\tdownload(type, filename, options, range, interceptCallback){\r\n\t\tvar downloadFunc = false;\r\n\r\n\t\tfunction buildLink(data, mime){\r\n\t\t\tif(interceptCallback){\r\n\t\t\t\tif(interceptCallback === true){\r\n\t\t\t\t\tthis.triggerDownload(data, mime, type, filename, true);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tinterceptCallback(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.triggerDownload(data, mime, type, filename);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(typeof type == \"function\"){\r\n\t\t\tdownloadFunc = type;\r\n\t\t}else{\r\n\t\t\tif(Download.downloaders[type]){\r\n\t\t\t\tdownloadFunc = Download.downloaders[type];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Download Error - No such download type found: \", type);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(downloadFunc){\r\n\t\t\tvar list = this.generateExportList(range);\r\n\r\n\t\t\tdownloadFunc.call(this.table, list , options || {}, buildLink.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateExportList(range){\r\n\t\tvar list = this.table.modules.export.generateExportList(this.table.options.downloadConfig, false, range || this.table.options.downloadRowRange, \"download\");\r\n\r\n\t\t//assign group header formatter\r\n\t\tvar groupHeader = this.table.options.groupHeaderDownload;\r\n\r\n\t\tif(groupHeader && !Array.isArray(groupHeader)){\r\n\t\t\tgroupHeader = [groupHeader];\r\n\t\t}\r\n\r\n\t\tlist.forEach((row) => {\r\n\t\t\tvar group;\r\n\r\n\t\t\tif(row.type === \"group\"){\r\n\t\t\t\tgroup = row.columns[0];\r\n\r\n\t\t\t\tif(groupHeader && groupHeader[row.indent]){\r\n\t\t\t\t\tgroup.value = groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn list;\r\n\t}\r\n\r\n\ttriggerDownload(data, mime, type, filename, newTab){\r\n\t\tvar element = document.createElement('a'),\r\n\t\tblob = new Blob([data],{type:mime}),\r\n\t\tfilename = filename || \"Tabulator.\" + (typeof type === \"function\" ? \"txt\" : type);\r\n\r\n\t\tblob = this.table.options.downloadReady(data, blob);\r\n\r\n\t\tif(blob){\r\n\r\n\t\t\tif(newTab){\r\n\t\t\t\twindow.open(window.URL.createObjectURL(blob));\r\n\t\t\t}else{\r\n\t\t\t\tif(navigator.msSaveOrOpenBlob){\r\n\t\t\t\t\tnavigator.msSaveOrOpenBlob(blob, filename);\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.setAttribute('href', window.URL.createObjectURL(blob));\r\n\r\n\t\t\t\t\t//set file title\r\n\t\t\t\t\telement.setAttribute('download', filename);\r\n\r\n\t\t\t\t\t//trigger download\r\n\t\t\t\t\telement.style.display = 'none';\r\n\t\t\t\t\tdocument.body.appendChild(element);\r\n\t\t\t\t\telement.click();\r\n\r\n\t\t\t\t\t//remove temporary link element\r\n\t\t\t\t\tdocument.body.removeChild(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchExternal(\"downloadComplete\");\r\n\t\t}\r\n\t}\r\n\r\n\tcommsReceived(table, action, data){\r\n\t\tswitch(action){\r\n\t\t\tcase \"intercept\":\r\n\t\t\tthis.download(data.type, \"\", data.options, data.active, data.intercept);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nDownload.moduleName = \"download\";\r\n\r\n//load defaults\r\nDownload.downloaders = defaultDownloaders;\r\n\r\nexport default Download;","export default function maskInput(el, options){\r\n\tvar mask = options.mask,\r\n\tmaskLetter = typeof options.maskLetterChar !== \"undefined\" ? options.maskLetterChar : \"A\",\r\n\tmaskNumber = typeof options.maskNumberChar !== \"undefined\" ? options.maskNumberChar : \"9\",\r\n\tmaskWildcard = typeof options.maskWildcardChar !== \"undefined\" ? options.maskWildcardChar : \"*\",\r\n\tsuccess = false;\r\n\r\n\tfunction fillSymbols(index){\r\n\t\tvar symbol = mask[index];\r\n\t\tif(typeof symbol !== \"undefined\" && symbol !== maskWildcard && symbol !== maskLetter && symbol !== maskNumber){\r\n\t\t\tel.value = el.value + \"\" + symbol;\r\n\t\t\tfillSymbols(index+1);\r\n\t\t}\r\n\t}\r\n\r\n\tel.addEventListener(\"keydown\", (e) => {\r\n\t\tvar index = el.value.length,\r\n\t\tchar = e.key;\r\n\r\n\t\tif(e.keyCode > 46){\r\n\t\t\tif(index >= mask.length){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tsuccess = false;\r\n\t\t\t\treturn false;\r\n\t\t\t}else{\r\n\t\t\t\tswitch(mask[index]){\r\n\t\t\t\t\tcase maskLetter:\r\n\t\t\t\t\tif(char.toUpperCase() == char.toLowerCase()){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase maskNumber:\r\n\t\t\t\t\tif(isNaN(char)){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase maskWildcard:\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tif(char !== mask[index]){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuccess = true;\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t});\r\n\r\n\tel.addEventListener(\"keyup\", (e) => {\r\n\t\tif(e.keyCode > 46){\r\n\t\t\tif(options.maskAutoFill){\r\n\t\t\t\tfillSymbols(el.value.length);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tif(!el.placeholder){\r\n\t\tel.placeholder = mask;\r\n\t}\r\n\r\n\tif(options.maskAutoFill){\r\n\t\tfillSymbols(el.value.length);\r\n\t}\r\n}","import maskInput from '../../inputMask.js';\r\n\r\n//input element\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\t//create and style input\r\n\tvar cellValue = cell.getValue(),\r\n\tinput = document.createElement(\"input\");\r\n\r\n\tinput.setAttribute(\"type\", editorParams.search ? \"search\" : \"text\");\r\n\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = typeof cellValue !== \"undefined\" ? cellValue : \"\";\r\n\r\n\tonRendered(function(){\r\n\t\tinput.focus({preventScroll: true});\r\n\t\tinput.style.height = \"100%\";\r\n\t});\r\n\r\n\tfunction onChange(e){\r\n\t\tif(((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\") || input.value !== cellValue){\r\n\t\t\tif(success(input.value)){\r\n\t\t\t\tcellValue = input.value; //persist value if successfully validated incase editor is used as header filter\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcancel();\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on blur or change\r\n\tinput.addEventListener(\"change\", onChange);\r\n\tinput.addEventListener(\"blur\", onChange);\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\t// case 9:\r\n\t\t\tcase 13:\r\n\t\t\tonChange(e);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27:\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 35:\r\n\t\t\tcase 36:\r\n\t\t\te.stopPropagation();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(editorParams.mask){\r\n\t\tmaskInput(input, editorParams);\r\n\t}\r\n\r\n\treturn input;\r\n};","import maskInput from '../../inputMask.js';\r\n\r\n//resizable text area element\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n    var self = this,\r\n    cellValue = cell.getValue(),\r\n    vertNav = editorParams.verticalNavigation || \"hybrid\",\r\n    value = String(cellValue !== null && typeof cellValue !== \"undefined\"  ? cellValue : \"\"),\r\n    count = (value.match(/(?:\\r\\n|\\r|\\n)/g) || []).length + 1,\r\n    input = document.createElement(\"textarea\"),\r\n    scrollHeight = 0;\r\n\r\n    //create and style input\r\n    input.style.display = \"block\";\r\n    input.style.padding = \"2px\";\r\n    input.style.height = \"100%\";\r\n    input.style.width = \"100%\";\r\n    input.style.boxSizing = \"border-box\";\r\n    input.style.whiteSpace = \"pre-wrap\";\r\n    input.style.resize = \"none\";\r\n\r\n    if(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n        for (let key in editorParams.elementAttributes){\r\n            if(key.charAt(0) == \"+\"){\r\n                key = key.slice(1);\r\n                input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n            }else{\r\n                input.setAttribute(key, editorParams.elementAttributes[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    input.value = value;\r\n\r\n    onRendered(function(){\r\n        input.focus({preventScroll: true});\r\n        input.style.height = \"100%\";\r\n\r\n        input.scrollHeight;\r\n        input.style.height = input.scrollHeight + \"px\";\r\n        cell.getRow().normalizeHeight();\r\n    });\r\n\r\n    function onChange(e){\r\n\r\n        if(((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\") || input.value !== cellValue){\r\n\r\n            if(success(input.value)){\r\n                cellValue = input.value; //persist value if successfully validated incase editor is used as header filter\r\n            }\r\n\r\n            setTimeout(function(){\r\n                cell.getRow().normalizeHeight();\r\n            },300)\r\n        }else{\r\n            cancel();\r\n        }\r\n    }\r\n\r\n    //submit new value on blur or change\r\n    input.addEventListener(\"change\", onChange);\r\n    input.addEventListener(\"blur\", onChange);\r\n\r\n    input.addEventListener(\"keyup\", function(){\r\n\r\n        input.style.height = \"\";\r\n\r\n        var heightNow = input.scrollHeight;\r\n\r\n        input.style.height = heightNow + \"px\";\r\n\r\n        if(heightNow != scrollHeight){\r\n            scrollHeight = heightNow;\r\n            cell.getRow().normalizeHeight();\r\n        }\r\n    });\r\n\r\n    input.addEventListener(\"keydown\", function(e){\r\n\r\n        switch(e.keyCode){\r\n            case 27:\r\n            cancel();\r\n            break;\r\n\r\n            case 38: //up arrow\r\n            if(vertNav == \"editor\" || (vertNav == \"hybrid\" && input.selectionStart)){\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n            }\r\n\r\n            break;\r\n\r\n            case 40: //down arrow\r\n            if(vertNav == \"editor\" || (vertNav == \"hybrid\" && input.selectionStart !== input.value.length)){\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n            }\r\n            break;\r\n\r\n            case 35:\r\n            case 36:\r\n            e.stopPropagation();\r\n            break;\r\n        }\r\n    });\r\n\r\n    if(editorParams.mask){\r\n        maskInput(input, editorParams);\r\n    }\r\n\r\n    return input;\r\n};","import maskInput from '../../inputMask.js';\r\n\r\n//input element with type of number\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar cellValue = cell.getValue(),\r\n\tvertNav = editorParams.verticalNavigation || \"editor\",\r\n\tinput = document.createElement(\"input\");\r\n\r\n\tinput.setAttribute(\"type\", \"number\");\r\n\r\n\tif(typeof editorParams.max != \"undefined\"){\r\n\t\tinput.setAttribute(\"max\", editorParams.max);\r\n\t}\r\n\r\n\tif(typeof editorParams.min != \"undefined\"){\r\n\t\tinput.setAttribute(\"min\", editorParams.min);\r\n\t}\r\n\r\n\tif(typeof editorParams.step != \"undefined\"){\r\n\t\tinput.setAttribute(\"step\", editorParams.step);\r\n\t}\r\n\r\n\t//create and style input\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = cellValue;\r\n\r\n\tvar blurFunc = function(e){\r\n\t\tonChange();\r\n\t};\r\n\r\n\tonRendered(function () {\r\n\t\t//submit new value on blur\r\n\t\tinput.removeEventListener(\"blur\", blurFunc);\r\n\r\n\t\tinput.focus({preventScroll: true});\r\n\t\tinput.style.height = \"100%\";\r\n\r\n\t\t//submit new value on blur\r\n\t\tinput.addEventListener(\"blur\", blurFunc);\r\n\t});\r\n\r\n\tfunction onChange(){\r\n\t\tvar value = input.value;\r\n\r\n\t\tif(!isNaN(value) && value !==\"\"){\r\n\t\t\tvalue = Number(value);\r\n\t\t}\r\n\r\n\t\tif(value !== cellValue){\r\n\t\t\tif(success(value)){\r\n\t\t\t\tcellValue = value; //persist value if successfully validated incase editor is used as header filter\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcancel();\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 13:\r\n\t\t\t// case 9:\r\n\t\t\tonChange();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27:\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tcase 40: //down arrow\r\n\t\t\tif(vertNav == \"editor\"){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 35:\r\n\t\t\tcase 36:\r\n\t\t\te.stopPropagation();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(editorParams.mask){\r\n\t\tmaskInput(input, editorParams);\r\n\t}\r\n\r\n\treturn input;\r\n};","//input element with type of number\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar cellValue = cell.getValue(),\r\n\tinput = document.createElement(\"input\");\r\n\r\n\tinput.setAttribute(\"type\", \"range\");\r\n\r\n\tif (typeof editorParams.max != \"undefined\") {\r\n\t\tinput.setAttribute(\"max\", editorParams.max);\r\n\t}\r\n\r\n\tif (typeof editorParams.min != \"undefined\") {\r\n\t\tinput.setAttribute(\"min\", editorParams.min);\r\n\t}\r\n\r\n\tif (typeof editorParams.step != \"undefined\") {\r\n\t\tinput.setAttribute(\"step\", editorParams.step);\r\n\t}\r\n\r\n\t//create and style input\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = cellValue;\r\n\r\n\tonRendered(function () {\r\n\t\tinput.focus({preventScroll: true});\r\n\t\tinput.style.height = \"100%\";\r\n\t});\r\n\r\n\tfunction onChange(){\r\n\t\tvar value = input.value;\r\n\r\n\t\tif(!isNaN(value) && value !==\"\"){\r\n\t\t\tvalue = Number(value);\r\n\t\t}\r\n\r\n\t\tif(value != cellValue){\r\n\t\t\tif(success(value)){\r\n\t\t\t\tcellValue = value; //persist value if successfully validated incase editor is used as header filter\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcancel();\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on blur\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tonChange();\r\n\t});\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 13:\r\n\t\t\t// case 9:\r\n\t\t\tonChange();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27:\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\treturn input;\r\n};","import Helpers from '../../../../core/tools/Helpers.js';\r\n\r\n//dropdown select editor\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar self = this,\r\n\tcellEl = cell.getElement(),\r\n\tinitialValue = cell.getValue(),\r\n\tvertNav = editorParams.verticalNavigation || \"editor\",\r\n\tinitialDisplayValue = typeof initialValue !== \"undefined\" || initialValue === null ? (Array.isArray(initialValue) ? initialValue : [initialValue]) : (typeof editorParams.defaultValue !== \"undefined\" ? editorParams.defaultValue : []),\r\n\tinput = document.createElement(\"input\"),\r\n\tlistEl = document.createElement(\"div\"),\r\n\tmultiselect = editorParams.multiselect,\r\n\tdataItems = [],\r\n\tcurrentItem = {},\r\n\tdisplayItems = [],\r\n\tcurrentItems = [],\r\n\tblurable = true,\r\n\tblockListShow = false,\r\n\tsearchWord = \"\",\r\n\tsearchWordTimeout = null;\r\n\r\n\tif(Array.isArray(editorParams) || (!Array.isArray(editorParams) && typeof editorParams === \"object\" && !editorParams.values)){\r\n\t\tconsole.warn(\"DEPRECATION WARNING - values for the select editor must now be passed into the values property of the editorParams object, not as the editorParams object\");\r\n\t\teditorParams = {values:editorParams};\r\n\t}\r\n\r\n\tfunction getUniqueColumnValues(field){\r\n\t\tvar output = {},\r\n\t\tdata = self.table.getData(),\r\n\t\tcolumn;\r\n\r\n\t\tif(field){\r\n\t\t\tcolumn = self.table.columnManager.getColumnByField(field);\r\n\t\t}else{\r\n\t\t\tcolumn = cell.getColumn()._getSelf();\r\n\t\t}\r\n\r\n\t\tif(column){\r\n\t\t\tdata.forEach(function(row){\r\n\t\t\t\tvar val = column.getFieldValue(row);\r\n\r\n\t\t\t\tif(val !== null && typeof val !== \"undefined\" && val !== \"\"){\r\n\t\t\t\t\toutput[val] = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"unable to find matching column to create select lookup list:\", field);\r\n\t\t}\r\n\r\n\t\treturn Object.keys(output);\r\n\t}\r\n\r\n\tfunction parseItems(inputValues, curentValues){\r\n\t\tvar dataList = [];\r\n\t\tvar displayList = [];\r\n\r\n\t\tfunction processComplexListItem(item){\r\n\t\t\tvar item = {\r\n\t\t\t\tlabel:item.label,\r\n\t\t\t\tvalue:item.value,\r\n\t\t\t\titemParams:item.itemParams,\r\n\t\t\t\telementAttributes: item.elementAttributes,\r\n\t\t\t\telement:false,\r\n\t\t\t};\r\n\r\n\t\t\t// if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\r\n\t\t\t// \tsetCurrentItem(item);\r\n\t\t\t// }\r\n\r\n\t\t\tif(curentValues.indexOf(item.value) > -1){\r\n\t\t\t\tsetItem(item);\r\n\t\t\t}\r\n\r\n\t\t\tdataList.push(item);\r\n\t\t\tdisplayList.push(item);\r\n\r\n\t\t\treturn item;\r\n\t\t}\r\n\r\n\t\tif(typeof inputValues == \"function\"){\r\n\t\t\tinputValues = inputValues(cell);\r\n\t\t}\r\n\r\n\t\tif(Array.isArray(inputValues)){\r\n\t\t\tinputValues.forEach(function(value){\r\n\t\t\t\tvar item;\r\n\r\n\t\t\t\tif(typeof value === \"object\"){\r\n\r\n\t\t\t\t\tif(value.options){\r\n\t\t\t\t\t\titem = {\r\n\t\t\t\t\t\t\tlabel:value.label,\r\n\t\t\t\t\t\t\tgroup:true,\r\n\t\t\t\t\t\t\titemParams:value.itemParams,\r\n\t\t\t\t\t\t\telementAttributes:value.elementAttributes,\r\n\t\t\t\t\t\t\telement:false,\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tdisplayList.push(item);\r\n\r\n\t\t\t\t\t\tvalue.options.forEach(function(item){\r\n\t\t\t\t\t\t\tprocessComplexListItem(item);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tprocessComplexListItem(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\titem = {\r\n\t\t\t\t\t\tlabel:value,\r\n\t\t\t\t\t\tvalue:value,\r\n\t\t\t\t\t\telement:false,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\r\n\t\t\t\t\t// \tsetCurrentItem(item);\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\tif(curentValues.indexOf(item.value) > -1){\r\n\t\t\t\t\t\tsetItem(item);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataList.push(item);\r\n\t\t\t\t\tdisplayList.push(item);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tfor(var key in inputValues){\r\n\t\t\t\tvar item = {\r\n\t\t\t\t\tlabel:inputValues[key],\r\n\t\t\t\t\tvalue:key,\r\n\t\t\t\t\telement:false,\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\r\n\t\t\t\t// \tsetCurrentItem(item);\r\n\t\t\t\t// }\r\n\r\n\t\t\t\tif(curentValues.indexOf(item.value) > -1){\r\n\t\t\t\t\tsetItem(item);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataList.push(item);\r\n\t\t\t\tdisplayList.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(editorParams.sortValuesList){\r\n\t\t\tdataList.sort((a, b) => {\r\n\t\t\t\treturn a.label < b.label ? -1 : (a.label > b.label ? 1 : 0);\r\n\t\t\t});\r\n\r\n\t\t\tdisplayList.sort((a, b) => {\r\n\t\t\t\treturn a.label < b.label ? -1 : (a.label > b.label ? 1 : 0);\r\n\t\t\t});\r\n\r\n\t\t\tif(editorParams.sortValuesList !== \"asc\"){\r\n\t\t\t\tdataList.reverse();\r\n\t\t\t\tdisplayList.reverse();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdataItems = dataList;\r\n\t\tdisplayItems = displayList;\r\n\r\n\t\tfillList();\r\n\t}\r\n\r\n\tfunction fillList(){\r\n\t\twhile(listEl.firstChild) listEl.removeChild(listEl.firstChild);\r\n\r\n\t\tdisplayItems.forEach(function(item){\r\n\r\n\t\t\tvar el = item.element;\r\n\r\n\t\t\tif(!el){\r\n\t\t\t\tel = document.createElement(\"div\");\r\n\t\t\t\titem.label = editorParams.listItemFormatter ? editorParams.listItemFormatter(item.value, item.label, cell, el, item.itemParams) : item.label;\r\n\t\t\t\tif(item.group){\r\n\t\t\t\t\tel.classList.add(\"tabulator-edit-select-list-group\");\r\n\t\t\t\t\tel.tabIndex = 0;\r\n\t\t\t\t\tel.innerHTML = item.label === \"\" ? \"&nbsp;\" : item.label;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tel.classList.add(\"tabulator-edit-select-list-item\");\r\n\t\t\t\t\tel.tabIndex = 0;\r\n\t\t\t\t\tel.innerHTML = item.label === \"\" ? \"&nbsp;\" : item.label;\r\n\r\n\t\t\t\t\tel.addEventListener(\"click\", function(){\r\n\t\t\t\t\t\tblockListShow = true;\r\n\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tblockListShow = false;\r\n\t\t\t\t\t\t}, 10);\r\n\r\n\t\t\t\t\t\t// setCurrentItem(item);\r\n\t\t\t\t\t\t// chooseItem();\r\n\t\t\t\t\t\tif(multiselect){\r\n\t\t\t\t\t\t\ttoggleItem(item);\r\n\t\t\t\t\t\t\tinput.focus();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tchooseItem(item);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// if(item === currentItem){\r\n\t\t\t\t\t// \tel.classList.add(\"active\");\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\tif(currentItems.indexOf(item) > -1){\r\n\t\t\t\t\t\tel.classList.add(\"active\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(item.elementAttributes && typeof item.elementAttributes == \"object\"){\r\n\t\t\t\t\tfor (let key in item.elementAttributes){\r\n\t\t\t\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\t\t\t\tkey = key.slice(1);\r\n\t\t\t\t\t\t\tel.setAttribute(key, input.getAttribute(key) + item.elementAttributes[\"+\" + key]);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tel.setAttribute(key, item.elementAttributes[key]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tel.addEventListener(\"mousedown\", function(){\r\n\t\t\t\t\tblurable = false;\r\n\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tblurable = true;\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t});\r\n\r\n\t\t\t\titem.element = el;\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlistEl.appendChild(el);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tfunction setCurrentItem(item, active){\r\n\r\n\t\tif(!multiselect && currentItem && currentItem.element){\r\n\t\t\tcurrentItem.element.classList.remove(\"active\");\r\n\t\t}\r\n\r\n\t\tif(currentItem && currentItem.element){\r\n\t\t\tcurrentItem.element.classList.remove(\"focused\");\r\n\t\t}\r\n\r\n\t\tcurrentItem = item;\r\n\r\n\t\tif(item.element){\r\n\t\t\titem.element.classList.add(\"focused\");\r\n\t\t\tif(active){\r\n\t\t\t\titem.element.classList.add(\"active\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(item && item.element && item.element.scrollIntoView){\r\n\t\t\titem.element.scrollIntoView({behavior: 'smooth', block: 'nearest', inline: 'start'});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// function chooseItem(){\r\n\t// \thideList();\r\n\r\n\t// \tif(initialValue !== currentItem.value){\r\n\t// \t\tinitialValue = currentItem.value;\r\n\t// \t\tsuccess(currentItem.value);\r\n\t// \t}else{\r\n\t// \t\tcancel();\r\n\t// \t}\r\n\t// }\r\n\r\n\tfunction setItem(item) {\r\n\t\tvar index = currentItems.indexOf(item);\r\n\r\n\t\tif(index == -1){\r\n\t\t\tcurrentItems.push(item);\r\n\t\t\tsetCurrentItem(item, true);\r\n\t\t}\r\n\r\n\t\tfillInput();\r\n\t}\r\n\r\n\tfunction unsetItem(index) {\r\n\t\tvar item = currentItems[index];\r\n\r\n\t\tif(index > -1){\r\n\t\t\tcurrentItems.splice(index, 1);\r\n\t\t\tif(item.element){\r\n\t\t\t\titem.element.classList.remove(\"active\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction toggleItem(item) {\r\n\t\tif(!item){\r\n\t\t\titem = currentItem;\r\n\t\t}\r\n\r\n\t\tvar index = currentItems.indexOf(item);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tunsetItem(index);\r\n\t\t}else{\r\n\t\t\tif(multiselect !== true && currentItems.length >= multiselect){\r\n\t\t\t\tunsetItem(0);\r\n\t\t\t}\r\n\r\n\t\t\tsetItem(item);\r\n\t\t}\r\n\r\n\t\tfillInput();\r\n\r\n\t}\r\n\r\n\tfunction chooseItem(item){\r\n\t\thideList();\r\n\r\n\t\tif(!item){\r\n\t\t\titem = currentItem;\r\n\t\t}\r\n\r\n\t\tif(item){\r\n\t\t\tinput.value = item.label;\r\n\t\t\tsuccess(item.value);\r\n\t\t}\r\n\r\n\t\tinitialDisplayValue = [item.value];\r\n\t}\r\n\r\n\r\n\tfunction chooseItems(silent){\r\n\t\tif(!silent){\r\n\t\t\thideList();\r\n\t\t}\r\n\r\n\t\tvar output = [];\r\n\r\n\t\tcurrentItems.forEach((item) => {\r\n\t\t\toutput.push(item.value);\r\n\t\t});\r\n\r\n\t\tinitialDisplayValue = output;\r\n\r\n\t\tsuccess(output);\r\n\t}\r\n\r\n\tfunction fillInput(){\r\n\t\tvar output = [];\r\n\r\n\t\tcurrentItems.forEach((item) => {\r\n\t\t\toutput.push(item.label);\r\n\t\t});\r\n\r\n\t\tinput.value = output.join(\", \");\r\n\r\n\t\tif(self.currentCell === false){\r\n\t\t\tchooseItems(true);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction unsetItems() {\r\n\r\n\t\tvar len = currentItems.length;\r\n\r\n\t\tfor(let i = 0; i < len; i++){\r\n\t\t\tunsetItem(0);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction cancelItem(){\r\n\t\thideList();\r\n\t\tcancel();\r\n\t}\r\n\r\n\tfunction showList(){\r\n\t\tcurrentItems = [];\r\n\r\n\t\tif(!listEl.parentNode){\r\n\t\t\tif(editorParams.values === true){\r\n\t\t\t\tparseItems(getUniqueColumnValues(), initialDisplayValue);\r\n\t\t\t}else if(typeof editorParams.values === \"string\"){\r\n\t\t\t\tparseItems(getUniqueColumnValues(editorParams.values), initialDisplayValue);\r\n\t\t\t}else{\r\n\t\t\t\tparseItems(editorParams.values || [], initialDisplayValue);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar offset = Helpers.elOffset(cellEl);\r\n\r\n\t\t\tlistEl.style.minWidth = cellEl.offsetWidth + \"px\";\r\n\r\n\t\t\tlistEl.style.top = (offset.top + cellEl.offsetHeight) + \"px\";\r\n\t\t\tlistEl.style.left = offset.left + \"px\";\r\n\r\n\r\n\t\t\tlistEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tblurable = false;\r\n\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tblurable = true;\r\n\t\t\t\t}, 10);\r\n\t\t\t});\r\n\r\n\t\t\tdocument.body.appendChild(listEl);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hideList(){\r\n\t\tif(listEl.parentNode){\r\n\t\t\tlistEl.parentNode.removeChild(listEl);\r\n\t\t}\r\n\r\n\t\tremoveScrollListener();\r\n\t}\r\n\r\n\tfunction removeScrollListener() {\r\n\t\tself.table.rowManager.element.removeEventListener(\"scroll\", cancelItem);\r\n\t}\r\n\r\n\tfunction scrollTovalue(char){\r\n\r\n\t\tclearTimeout(searchWordTimeout);\r\n\r\n\t\tvar character = String.fromCharCode(event.keyCode).toLowerCase();\r\n\t\tsearchWord += character.toLowerCase();\r\n\r\n\t\tvar match = dataItems.find((item) => {\r\n\t\t\treturn typeof item.label !== \"undefined\" && item.label.toLowerCase().startsWith(searchWord);\r\n\t\t});\r\n\r\n\t\tif(match){\r\n\t\t\tsetCurrentItem(match, !multiselect);\r\n\t\t}\r\n\r\n\t\tsearchWordTimeout = setTimeout(() => {\r\n\t\t\tsearchWord = \"\";\r\n\t\t}, 800)\r\n\t}\r\n\r\n\t//style input\r\n\tinput.setAttribute(\"type\", \"text\");\r\n\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\tinput.style.cursor = \"default\";\r\n\tinput.readOnly = (this.currentCell != false);\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = typeof initialValue !== \"undefined\" || initialValue === null ? initialValue : \"\";\r\n\r\n\t// if(editorParams.values === true){\r\n\t// \tparseItems(getUniqueColumnValues(), initialValue);\r\n\t// }else if(typeof editorParams.values === \"string\"){\r\n\t// \tparseItems(getUniqueColumnValues(editorParams.values), initialValue);\r\n\t// }else{\r\n\t// \tparseItems(editorParams.values || [], initialValue);\r\n\t// }\r\n\r\n\tinput.addEventListener(\"search\", function(e){\r\n\t\tif(!input.value){\r\n\t\t\tunsetItems();\r\n\t\t\tchooseItems();\r\n\t\t}\r\n\t});\r\n\r\n\t//allow key based navigation\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tvar index;\r\n\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tindex = dataItems.indexOf(currentItem);\r\n\r\n\t\t\tif(vertNav == \"editor\" || (vertNav == \"hybrid\" && index)){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(index > 0){\r\n\t\t\t\t\tsetCurrentItem(dataItems[index - 1], !multiselect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 40: //down arrow\r\n\t\t\tindex = dataItems.indexOf(currentItem);\r\n\r\n\t\t\tif(vertNav == \"editor\" || (vertNav == \"hybrid\" && index < dataItems.length - 1)){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(index < dataItems.length - 1){\r\n\t\t\t\t\tif(index == -1){\r\n\t\t\t\t\t\tsetCurrentItem(dataItems[0], !multiselect);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsetCurrentItem(dataItems[index + 1], !multiselect);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tcase 39: //right arrow\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 13: //enter\r\n\t\t\t// chooseItem();\r\n\r\n\t\t\tif(multiselect){\r\n\t\t\t\ttoggleItem();\r\n\t\t\t}else{\r\n\t\t\t\tchooseItem();\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancelItem();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 9: //tab\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tif(self.currentCell === false){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tif(e.keyCode >= 38 && e.keyCode <= 90){\r\n\t\t\t\tscrollTovalue(e.keyCode);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tif(blurable){\r\n\t\t\tif(multiselect){\r\n\t\t\t\tchooseItems();\r\n\t\t\t}else{\r\n\t\t\t\tcancelItem();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tinput.addEventListener(\"focus\", function(e){\r\n\t\tif(!blockListShow){\r\n\t\t\tshowList();\r\n\t\t}\r\n\t});\r\n\r\n\t//style list element\r\n\tlistEl = document.createElement(\"div\");\r\n\tlistEl.classList.add(\"tabulator-edit-select-list\");\r\n\r\n\tonRendered(function(){\r\n\t\tinput.style.height = \"100%\";\r\n\t\tinput.focus({preventScroll: true});\r\n\t});\r\n\r\n\tsetTimeout(() => {\r\n\t\tthis.table.rowManager.element.addEventListener(\"scroll\", cancelItem);\r\n\t}, 10);\r\n\r\n\treturn input;\r\n};","import Helpers from '../../../../core/tools/Helpers.js';\r\nimport maskInput from '../../inputMask.js';\r\n\r\n//autocomplete\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar self = this,\r\n\tcellEl = cell.getElement(),\r\n\tinitialValue = cell.getValue(),\r\n\tvertNav = editorParams.verticalNavigation || \"editor\",\r\n\tinitialDisplayValue = typeof initialValue !== \"undefined\" || initialValue === null ? initialValue : (typeof editorParams.defaultValue !== \"undefined\" ? editorParams.defaultValue : \"\"),\r\n\tinput = document.createElement(\"input\"),\r\n\tlistEl = document.createElement(\"div\"),\r\n\tallItems = [],\r\n\tdisplayItems = [],\r\n\tvalues = [],\r\n\tcurrentItem = false,\r\n\tblurable = true,\r\n\tuniqueColumnValues = false;\r\n\r\n\t//style input\r\n\tinput.setAttribute(\"type\", \"search\");\r\n\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//style list element\r\n\tlistEl.classList.add(\"tabulator-edit-select-list\");\r\n\r\n\tlistEl.addEventListener(\"mousedown\", function(e){\r\n\t\tblurable = false;\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tblurable = true;\r\n\t\t}, 10);\r\n\t});\r\n\r\n\r\n\tfunction genUniqueColumnValues(){\r\n\t\tif(editorParams.values === true){\r\n\t\t\tuniqueColumnValues = getUniqueColumnValues();\r\n\t\t}else if(typeof editorParams.values === \"string\"){\r\n\t\t\tuniqueColumnValues = getUniqueColumnValues(editorParams.values);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getUniqueColumnValues(field){\r\n\t\tvar output = {},\r\n\t\tdata = self.table.getData(),\r\n\t\tcolumn;\r\n\r\n\t\tif(field){\r\n\t\t\tcolumn = self.table.columnManager.getColumnByField(field);\r\n\t\t}else{\r\n\t\t\tcolumn = cell.getColumn()._getSelf();\r\n\t\t}\r\n\r\n\t\tif(column){\r\n\t\t\tdata.forEach(function(row){\r\n\t\t\t\tvar val = column.getFieldValue(row);\r\n\r\n\t\t\t\tif(val !== null && typeof val !== \"undefined\" && val !== \"\"){\r\n\t\t\t\t\toutput[val] = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(editorParams.sortValuesList){\r\n\t\t\t\tif(editorParams.sortValuesList == \"asc\"){\r\n\t\t\t\t\toutput = Object.keys(output).sort();\r\n\t\t\t\t}else{\r\n\t\t\t\t\toutput = Object.keys(output).sort().reverse();\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\toutput = Object.keys(output);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"unable to find matching column to create autocomplete lookup list:\", field);\r\n\t\t}\r\n\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tfunction filterList(term, intialLoad){\r\n\t\tvar matches = [],\r\n\t\tvalues, items, searchEl;\r\n\r\n\t\t//lookup base values list\r\n\t\tif(uniqueColumnValues){\r\n\t\t\tvalues = uniqueColumnValues;\r\n\t\t}else{\r\n\t\t\tvalues = editorParams.values || [];\r\n\t\t}\r\n\r\n\t\tif(editorParams.searchFunc){\r\n\t\t\tmatches = editorParams.searchFunc(term, values);\r\n\r\n\t\t\tif(matches instanceof Promise){\r\n\r\n\t\t\t\taddNotice(typeof editorParams.searchingPlaceholder !== \"undefined\" ? editorParams.searchingPlaceholder : \"Searching...\");\r\n\r\n\t\t\t\tmatches.then((result) => {\r\n\t\t\t\t\tfillListIfNotEmpty(parseItems(result), intialLoad);\r\n\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\tconsole.err(\"error in autocomplete search promise:\", err);\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tfillListIfNotEmpty(parseItems(matches), intialLoad);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\titems = parseItems(values);\r\n\r\n\t\t\tif(term === \"\"){\r\n\t\t\t\tif(editorParams.showListOnEmpty){\r\n\t\t\t\t\tmatches = items;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\titems.forEach(function(item){\r\n\t\t\t\t\tif(item.value !== null || typeof item.value !== \"undefined\"){\r\n\t\t\t\t\t\tif(String(item.value).toLowerCase().indexOf(String(term).toLowerCase()) > -1 || String(item.title).toLowerCase().indexOf(String(term).toLowerCase()) > -1){\r\n\t\t\t\t\t\t\tmatches.push(item);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfillListIfNotEmpty(matches, intialLoad);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addNotice(notice){\r\n\t\tvar searchEl = document.createElement(\"div\");\r\n\r\n\t\tclearList();\r\n\r\n\t\tif(notice !== false){\r\n\t\t\tsearchEl.classList.add(\"tabulator-edit-select-list-notice\");\r\n\t\t\tsearchEl.tabIndex = 0;\r\n\r\n\t\t\tif(notice instanceof Node){\r\n\t\t\t\tsearchEl.appendChild(notice);\r\n\t\t\t}else{\r\n\t\t\t\tsearchEl.innerHTML = notice;\r\n\t\t\t}\r\n\r\n\t\t\tlistEl.appendChild(searchEl);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction parseItems(inputValues){\r\n\t\tvar itemList = [];\r\n\r\n\t\tif(Array.isArray(inputValues)){\r\n\t\t\tinputValues.forEach(function(value){\r\n\r\n\t\t\t\tvar item = {};\r\n\r\n\t\t\t\tif(typeof value === \"object\"){\r\n\t\t\t\t\titem.title = editorParams.listItemFormatter ? editorParams.listItemFormatter(value.value, value.label) : value.label;\r\n\t\t\t\t\titem.value = value.value;\r\n\t\t\t\t}else{\r\n\t\t\t\t\titem.title = editorParams.listItemFormatter ? editorParams.listItemFormatter(value, value) : value;\r\n\t\t\t\t\titem.value = value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\titemList.push(item);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tfor(var key in inputValues){\r\n\t\t\t\tvar item = {\r\n\t\t\t\t\ttitle:editorParams.listItemFormatter ? editorParams.listItemFormatter(key, inputValues[key]) : inputValues[key],\r\n\t\t\t\t\tvalue:key,\r\n\t\t\t\t};\r\n\r\n\t\t\t\titemList.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn itemList;\r\n\t}\r\n\r\n\tfunction clearList(){\r\n\t\twhile(listEl.firstChild) listEl.removeChild(listEl.firstChild);\r\n\t}\r\n\r\n\tfunction fillListIfNotEmpty(items, intialLoad){\r\n\t\tif(items.length){\r\n\t\t\tfillList(items, intialLoad);\r\n\t\t}else{\r\n\t\t\tif(editorParams.emptyPlaceholder){\r\n\t\t\t\taddNotice(editorParams.emptyPlaceholder);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction fillList(items, intialLoad){\r\n\t\tvar current = false;\r\n\r\n\t\tclearList();\r\n\r\n\t\tdisplayItems = items;\r\n\r\n\t\tdisplayItems.forEach(function(item){\r\n\t\t\tvar el = item.element;\r\n\r\n\t\t\tif(!el){\r\n\t\t\t\tel = document.createElement(\"div\");\r\n\t\t\t\tel.classList.add(\"tabulator-edit-select-list-item\");\r\n\t\t\t\tel.tabIndex = 0;\r\n\t\t\t\tel.innerHTML = item.title;\r\n\r\n\t\t\t\tel.addEventListener(\"click\", function(e){\r\n\t\t\t\t\tsetCurrentItem(item);\r\n\t\t\t\t\tchooseItem();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tel.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\t\tblurable = false;\r\n\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tblurable = true;\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t});\r\n\r\n\t\t\t\titem.element = el;\r\n\r\n\t\t\t\tif(intialLoad && item.value == initialValue){\r\n\t\t\t\t\tinput.value = item.title;\r\n\t\t\t\t\titem.element.classList.add(\"active\");\r\n\t\t\t\t\tcurrent = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(item === currentItem){\r\n\t\t\t\t\titem.element.classList.add(\"active\");\r\n\t\t\t\t\tcurrent = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlistEl.appendChild(el);\r\n\t\t});\r\n\r\n\t\tif(!current){\r\n\t\t\tsetCurrentItem(false);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction chooseItem(){\r\n\t\thideList();\r\n\r\n\t\tif(currentItem){\r\n\t\t\tif(initialValue !== currentItem.value){\r\n\t\t\t\tinitialValue = currentItem.value;\r\n\t\t\t\tinput.value = currentItem.title;\r\n\t\t\t\tsuccess(currentItem.value);\r\n\t\t\t}else{\r\n\t\t\t\tcancel();\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(editorParams.freetext){\r\n\t\t\t\tinitialValue = input.value;\r\n\t\t\t\tsuccess(input.value);\r\n\t\t\t}else{\r\n\t\t\t\tif(editorParams.allowEmpty && input.value === \"\"){\r\n\t\t\t\t\tinitialValue = input.value;\r\n\t\t\t\t\tsuccess(input.value);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcancel();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction showList(){\r\n\t\tif(!listEl.parentNode){\r\n\t\t\twhile(listEl.firstChild) listEl.removeChild(listEl.firstChild);\r\n\r\n\t\t\tvar offset = Helpers.elOffset(cellEl);\r\n\r\n\t\t\tlistEl.style.minWidth = cellEl.offsetWidth + \"px\";\r\n\r\n\t\t\tlistEl.style.top = (offset.top + cellEl.offsetHeight) + \"px\";\r\n\t\t\tlistEl.style.left = offset.left + \"px\";\r\n\t\t\tdocument.body.appendChild(listEl);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setCurrentItem(item, showInputValue){\r\n\t\tif(currentItem && currentItem.element){\r\n\t\t\tcurrentItem.element.classList.remove(\"active\");\r\n\t\t}\r\n\r\n\t\tcurrentItem = item;\r\n\r\n\t\tif(item && item.element){\r\n\t\t\titem.element.classList.add(\"active\");\r\n\t\t}\r\n\r\n\t\tif(item && item.element && item.element.scrollIntoView){\r\n\t\t\titem.element.scrollIntoView({behavior: 'smooth', block: 'nearest', inline: 'start'});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hideList(){\r\n\t\tif(listEl.parentNode){\r\n\t\t\tlistEl.parentNode.removeChild(listEl);\r\n\t\t}\r\n\r\n\t\tremoveScrollListener();\r\n\t}\r\n\r\n\r\n\tfunction cancelItem(){\r\n\t\thideList();\r\n\t\tcancel();\r\n\t}\r\n\r\n\tfunction removeScrollListener() {\r\n\t\tself.table.rowManager.element.removeEventListener(\"scroll\", cancelItem);\r\n\t}\r\n\r\n\t//allow key based navigation\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tvar index;\r\n\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tindex = displayItems.indexOf(currentItem);\r\n\r\n\t\t\tif(vertNav == \"editor\" || (vertNav == \"hybrid\" && index)){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(index > 0){\r\n\t\t\t\t\tsetCurrentItem(displayItems[index - 1]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetCurrentItem(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 40: //down arrow\r\n\r\n\t\t\tindex = displayItems.indexOf(currentItem);\r\n\r\n\t\t\tif(vertNav == \"editor\" || (vertNav == \"hybrid\" && index < displayItems.length - 1)){\r\n\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(index < displayItems.length - 1){\r\n\t\t\t\t\tif(index == -1){\r\n\t\t\t\t\t\tsetCurrentItem(displayItems[0]);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsetCurrentItem(displayItems[index + 1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tcase 39: //right arrow\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\te.stopPropagation();\r\n\t\t\t// e.preventDefault();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 13: //enter\r\n\t\t\tchooseItem();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancelItem();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 36: //home\r\n\t\t\tcase 35: //end\r\n\t\t\t//prevent table navigation while using input element\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tinput.addEventListener(\"keyup\", function(e){\r\n\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tcase 39: //up arrow\r\n\t\t\tcase 40: //right arrow\r\n\t\t\tcase 13: //enter\r\n\t\t\tcase 27: //escape\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tfilterList(input.value);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tinput.addEventListener(\"search\", function(e){\r\n\t\tfilterList(input.value);\r\n\t});\r\n\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tif(blurable){\r\n\t\t\tchooseItem();\r\n\t\t}\r\n\t});\r\n\r\n\tinput.addEventListener(\"focus\", function(e){\r\n\t\tvar value = initialDisplayValue;\r\n\t\tgenUniqueColumnValues();\r\n\t\tshowList();\r\n\t\tinput.value = value;\r\n\t\tfilterList(value, true);\r\n\t});\r\n\r\n\r\n\tonRendered(function(){\r\n\t\tinput.style.height = \"100%\";\r\n\t\tinput.focus({preventScroll: true});\r\n\t});\r\n\r\n\tif(editorParams.mask){\r\n\t\tmaskInput(input, editorParams);\r\n\t}\r\n\r\n\tsetTimeout(() => {\r\n\t\tthis.table.rowManager.element.addEventListener(\"scroll\", cancelItem);\r\n\t}, 10);\r\n\r\n\tgenUniqueColumnValues();\r\n\tinput.value = initialDisplayValue;\r\n\tfilterList(initialDisplayValue, true);\r\n\r\n\treturn input;\r\n};","//star rating\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar self = this,\r\n\telement = cell.getElement(),\r\n\tvalue = cell.getValue(),\r\n\tmaxStars = element.getElementsByTagName(\"svg\").length || 5,\r\n\tsize = element.getElementsByTagName(\"svg\")[0] ? element.getElementsByTagName(\"svg\")[0].getAttribute(\"width\") : 14,\r\n\tstars = [],\r\n\tstarsHolder = document.createElement(\"div\"),\r\n\tstar = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\r\n\r\n\r\n\t//change star type\r\n\tfunction starChange(val){\r\n\t\tstars.forEach(function(star, i){\r\n\t\t\tif(i < val){\r\n\t\t\t\tif(self.table.browser == \"ie\"){\r\n\t\t\t\t\tstar.setAttribute(\"class\", \"tabulator-star-active\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstar.classList.replace(\"tabulator-star-inactive\", \"tabulator-star-active\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstar.innerHTML = '<polygon fill=\"#488CE9\" stroke=\"#014AAE\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\r\n\t\t\t}else{\r\n\t\t\t\tif(self.table.browser == \"ie\"){\r\n\t\t\t\t\tstar.setAttribute(\"class\", \"tabulator-star-inactive\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstar.classList.replace(\"tabulator-star-active\", \"tabulator-star-inactive\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstar.innerHTML = '<polygon fill=\"#010155\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//build stars\r\n\tfunction buildStar(i){\r\n\r\n\t\tvar starHolder =  document.createElement(\"span\");\r\n\t\tvar nextStar = star.cloneNode(true);\r\n\r\n\t\tstars.push(nextStar);\r\n\r\n\t\tstarHolder.addEventListener(\"mouseenter\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tstarChange(i);\r\n\t\t});\r\n\r\n\t\tstarHolder.addEventListener(\"mousemove\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t});\r\n\r\n\t\tstarHolder.addEventListener(\"click\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tsuccess(i);\r\n\t\t\telement.blur();\r\n\t\t});\r\n\r\n\t\tstarHolder.appendChild(nextStar);\r\n\t\tstarsHolder.appendChild(starHolder);\r\n\r\n\t}\r\n\r\n\t//handle keyboard navigation value change\r\n\tfunction changeValue(val){\r\n\t\tvalue = val;\r\n\t\tstarChange(val);\r\n\t}\r\n\r\n\t//style cell\r\n\telement.style.whiteSpace = \"nowrap\";\r\n\telement.style.overflow = \"hidden\";\r\n\telement.style.textOverflow = \"ellipsis\";\r\n\r\n\t//style holding element\r\n\tstarsHolder.style.verticalAlign = \"middle\";\r\n\tstarsHolder.style.display = \"inline-block\";\r\n\tstarsHolder.style.padding = \"4px\";\r\n\r\n\t//style star\r\n\tstar.setAttribute(\"width\", size);\r\n\tstar.setAttribute(\"height\", size);\r\n\tstar.setAttribute(\"viewBox\", \"0 0 512 512\");\r\n\tstar.setAttribute(\"xml:space\", \"preserve\");\r\n\tstar.style.padding = \"0 1px\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tstarsHolder.setAttribute(key, starsHolder.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tstarsHolder.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//create correct number of stars\r\n\tfor(var i=1;i<= maxStars;i++){\r\n\t\tbuildStar(i);\r\n\t}\r\n\r\n\t//ensure value does not exceed number of stars\r\n\tvalue = Math.min(parseInt(value), maxStars);\r\n\r\n\t// set initial styling of stars\r\n\tstarChange(value);\r\n\r\n\tstarsHolder.addEventListener(\"mousemove\", function(e){\r\n\t\tstarChange(0);\r\n\t});\r\n\r\n\tstarsHolder.addEventListener(\"click\", function(e){\r\n\t\tsuccess(0);\r\n\t});\r\n\r\n\telement.addEventListener(\"blur\", function(e){\r\n\t\tcancel();\r\n\t});\r\n\r\n\t//allow key based navigation\r\n\telement.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 39: //right arrow\r\n\t\t\tchangeValue(value + 1);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tchangeValue(value - 1);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 13: //enter\r\n\t\t\tsuccess(value);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\treturn starsHolder;\r\n};","//draggable progress bar\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar element = cell.getElement(),\r\n\tmax = typeof editorParams.max === \"undefined\" ? ((element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"max\")) || 100) : editorParams.max,\r\n\tmin = typeof editorParams.min === \"undefined\" ? ((element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"min\")) || 0) : editorParams.min,\r\n\tpercent = (max - min) / 100,\r\n\tvalue = cell.getValue() || 0,\r\n\thandle = document.createElement(\"div\"),\r\n\tbar = document.createElement(\"div\"),\r\n\tmouseDrag, mouseDragWidth;\r\n\r\n\t//set new value\r\n\tfunction updateValue(){\r\n\t\tvar style = window.getComputedStyle(element, null);\r\n\r\n\t\tvar calcVal = (percent * Math.round(bar.offsetWidth / ((element.clientWidth - parseInt(style.getPropertyValue(\"padding-left\")) - parseInt(style.getPropertyValue(\"padding-right\")))/100))) + min;\r\n\t\tsuccess(calcVal);\r\n\t\telement.setAttribute(\"aria-valuenow\", calcVal);\r\n\t\telement.setAttribute(\"aria-label\", value);\r\n\t}\r\n\r\n\t//style handle\r\n\thandle.style.position = \"absolute\";\r\n\thandle.style.right = \"0\";\r\n\thandle.style.top = \"0\";\r\n\thandle.style.bottom = \"0\";\r\n\thandle.style.width = \"5px\";\r\n\thandle.classList.add(\"tabulator-progress-handle\");\r\n\r\n\t//style bar\r\n\tbar.style.display = \"inline-block\";\r\n\tbar.style.position = \"relative\";\r\n\t// bar.style.top = \"8px\";\r\n\t// bar.style.bottom = \"8px\";\r\n\t// bar.style.left = \"4px\";\r\n\t// bar.style.marginRight = \"4px\";\r\n\tbar.style.height = \"100%\";\r\n\tbar.style.backgroundColor = \"#488CE9\";\r\n\tbar.style.maxWidth = \"100%\";\r\n\tbar.style.minWidth = \"0%\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tbar.setAttribute(key, bar.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tbar.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//style cell\r\n\telement.style.padding = \"4px 4px\";\r\n\r\n\t//make sure value is in range\r\n\tvalue = Math.min(parseFloat(value), max);\r\n\tvalue = Math.max(parseFloat(value), min);\r\n\r\n\t//workout percentage\r\n\tvalue = Math.round((value - min) / percent);\r\n\t// bar.style.right = value + \"%\";\r\n\tbar.style.width = value + \"%\";\r\n\r\n\telement.setAttribute(\"aria-valuemin\", min);\r\n\telement.setAttribute(\"aria-valuemax\", max);\r\n\r\n\tbar.appendChild(handle);\r\n\r\n\thandle.addEventListener(\"mousedown\", function(e){\r\n\t\tmouseDrag = e.screenX;\r\n\t\tmouseDragWidth = bar.offsetWidth;\r\n\t});\r\n\r\n\thandle.addEventListener(\"mouseover\", function(){\r\n\t\thandle.style.cursor = \"ew-resize\";\r\n\t});\r\n\r\n\telement.addEventListener(\"mousemove\", function(e){\r\n\t\tif(mouseDrag){\r\n\t\t\tbar.style.width = (mouseDragWidth + e.screenX - mouseDrag) + \"px\";\r\n\t\t}\r\n\t});\r\n\r\n\telement.addEventListener(\"mouseup\", function(e){\r\n\t\tif(mouseDrag){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\tmouseDrag = false;\r\n\t\t\tmouseDragWidth = false;\r\n\r\n\t\t\tupdateValue();\r\n\t\t}\r\n\t});\r\n\r\n\t//allow key based navigation\r\n\telement.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 39: //right arrow\r\n\t\t\te.preventDefault();\r\n\t\t\tbar.style.width = (bar.clientWidth + element.clientWidth/100) + \"px\";\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\te.preventDefault();\r\n\t\t\tbar.style.width = (bar.clientWidth - element.clientWidth/100) + \"px\";\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 9: //tab\r\n\t\t\tcase 13: //enter\r\n\t\t\tupdateValue();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\t});\r\n\r\n\telement.addEventListener(\"blur\", function(){\r\n\t\tcancel();\r\n\t});\r\n\r\n\treturn bar;\r\n};","//checkbox\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar value = cell.getValue(),\r\n\tinput = document.createElement(\"input\"),\r\n\ttristate = editorParams.tristate,\r\n\tindetermValue = typeof editorParams.indeterminateValue === \"undefined\" ? null : editorParams.indeterminateValue,\r\n\tindetermState = false;\r\n\r\n\tinput.setAttribute(\"type\", \"checkbox\");\r\n\tinput.style.marginTop = \"5px\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = value;\r\n\r\n\tif(tristate && (typeof value === \"undefined\" || value === indetermValue || value === \"\")){\r\n\t\tindetermState = true;\r\n\t\tinput.indeterminate = true;\r\n\t}\r\n\r\n\tif(this.table.browser != \"firefox\"){ //prevent blur issue on mac firefox\r\n\t\tonRendered(function(){\r\n\t\t\tinput.focus({preventScroll: true});\r\n\t\t});\r\n\t}\r\n\r\n\tinput.checked = value === true || value === \"true\" || value === \"True\" || value === 1;\r\n\r\n\tonRendered(function(){\r\n\t\tinput.focus();\r\n\t});\r\n\r\n\tfunction setValue(blur){\r\n\t\tif(tristate){\r\n\t\t\tif(!blur){\r\n\t\t\t\tif(input.checked && !indetermState){\r\n\t\t\t\t\tinput.checked = false;\r\n\t\t\t\t\tinput.indeterminate = true;\r\n\t\t\t\t\tindetermState = true;\r\n\t\t\t\t\treturn indetermValue;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tindetermState = false;\r\n\t\t\t\t\treturn input.checked;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(indetermState){\r\n\t\t\t\t\treturn indetermValue;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn input.checked;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\treturn input.checked;\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on blur\r\n\tinput.addEventListener(\"change\", function(e){\r\n\t\tsuccess(setValue());\r\n\t});\r\n\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tsuccess(setValue(true));\r\n\t});\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tif(e.keyCode == 13){\r\n\t\t\tsuccess(setValue());\r\n\t\t}\r\n\t\tif(e.keyCode == 27){\r\n\t\t\tcancel();\r\n\t\t}\r\n\t});\r\n\r\n\treturn input;\r\n};","import input from './editors/input.js';\r\nimport textarea from './editors/textarea.js';\r\nimport number from './editors/number.js';\r\nimport range from './editors/range.js';\r\nimport select from './editors/select.js';\r\nimport autocomplete from './editors/autocomplete.js';\r\nimport star from './editors/star.js';\r\nimport progress from './editors/progress.js';\r\nimport tickCross from './editors/tickCross.js';\r\n\r\nexport default {\r\n\tinput:input,\r\n\ttextarea:textarea,\r\n    number:number,\r\n    range:range,\r\n\tselect:select,\r\n\tautocomplete:autocomplete,\r\n\tstar:star,\r\n\tprogress:progress,\r\n\ttickCross:tickCross,\r\n};","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport defaultEditors from './defaults/editors.js';\r\n\r\nclass Edit extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.currentCell = false; //hold currently editing cell\r\n\t\tthis.mouseClick = false; //hold mousedown state to prevent click binding being overriden by editor opening\r\n\t\tthis.recursionBlock = false; //prevent focus recursion\r\n\t\tthis.invalidEdit = false;\r\n\t\tthis.editedCells = [];\r\n\r\n\t\tthis.editors = Edit.editors;\r\n\r\n\t\tthis.registerColumnOption(\"editable\");\r\n\t\tthis.registerColumnOption(\"editor\");\r\n\t\tthis.registerColumnOption(\"editorParams\");\r\n\r\n\t\tthis.registerColumnOption(\"cellEditing\");\r\n\t\tthis.registerColumnOption(\"cellEdited\");\r\n\t\tthis.registerColumnOption(\"cellEditCancelled\");\r\n\r\n\t\tthis.registerTableFunction(\"getEditedCells\", this.getEditedCells.bind(this));\r\n\t\tthis.registerTableFunction(\"clearCellEdited\", this.clearCellEdited.bind(this));\r\n\t\tthis.registerTableFunction(\"navigatePrev\", this.navigatePrev.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateNext\", this.navigateNext.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateLeft\", this.navigateLeft.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateRight\", this.navigateRight.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateUp\", this.navigateUp.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateDown\", this.navigateDown.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"cell\", \"isEdited\", this.cellisEdited.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"clearEdited\", this.clearEdited.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"edit\", this.editCell.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"cancelEdit\", this.cellCancelEdit.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigatePrev\", this.navigatePrev.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateNext\", this.navigateNext.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateLeft\", this.navigateLeft.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateRight\", this.navigateRight.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateUp\", this.navigateUp.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateDown\", this.navigateDown.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-init\", this.bindEditor.bind(this));\r\n\t\tthis.subscribe(\"cell-delete\", this.clearEdited.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\r\n\t\tthis.subscribe(\"column-delete\", this.columnDeleteCheck.bind(this));\r\n\t\tthis.subscribe(\"row-deleting\", this.rowDeleteCheck.bind(this));\r\n\t\tthis.subscribe(\"data-refeshing\", this.cancelEdit.bind(this));\r\n\r\n\t\tthis.subscribe(\"keybinding-nav-prev\", this.navigatePrev.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-next\", this.keybindingNavigateNext.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-left\", this.navigateLeft.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-right\", this.navigateRight.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-up\", this.navigateUp.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-down\", this.navigateDown.bind(this));\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t////// Keybinding Functions ///////\r\n\t///////////////////////////////////\r\n\r\n\tkeybindingNavigateNext(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tnewRow = this.options(\"tabEndNewRow\");\r\n\r\n\t\tif(cell){\r\n\t\t\tif(!this.navigateNext(e)){\r\n\t\t\t\tif(newRow){\r\n\t\t\t\t\tcell.getElement().firstChild.blur();\r\n\r\n\t\t\t\t\tif(newRow === true){\r\n\t\t\t\t\t\tnewRow = this.table.addRow({})\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(typeof newRow == \"function\"){\r\n\t\t\t\t\t\t\tnewRow = this.table.addRow(newRow(cell.row.getComponent()))\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tnewRow = this.table.addRow(Object.assign({}, newRow));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnewRow.then(() => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tnav.next();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Cell Functions //////////\r\n\t///////////////////////////////////\r\n\r\n\tcellisEdited(cell){\r\n\t\treturn !! cell.modules.edit && cell.modules.edit.edited;\r\n\t}\r\n\r\n\tcellCancelEdit(cell){\r\n\t\tif(cell === this.currentCell){\r\n\t\t\tthis.table.modules.edit.cancelEdit();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Cancel Editor Error - This cell is not currently being edited \");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\tclearCellEdited(cells){\r\n\t\tif(!cells){\r\n\t\t\tcells = this.modules.edit.getEditedCells();\r\n\t\t}\r\n\r\n\t\tif(!Array.isArray(cells)){\r\n\t\t\tcells = [cells];\r\n\t\t}\r\n\r\n\t\tcells.forEach((cell) => {\r\n\t\t\tthis.modules.edit.clearEdited(cell._getSelf());\r\n\t\t});\r\n\t}\r\n\r\n\tnavigatePrev(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tnextCell, prevRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tnextCell = this.navigateLeft();\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tprevRow = this.table.rowManager.prevDisplayRow(cell.row, true);\r\n\r\n\t\t\t\tif(prevRow){\r\n\t\t\t\t\tnextCell = this.findNextEditableCell(prevRow, prevRow.cells.length);\r\n\r\n\t\t\t\t\tif(nextCell){\r\n\t\t\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateNext(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tnextCell, nextRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tnextCell = this.navigateRight();\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tnextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\r\n\r\n\t\t\t\tif(nextRow){\r\n\t\t\t\t\tnextCell = this.findNextEditableCell(nextRow, -1);\r\n\r\n\t\t\t\t\tif(nextCell){\r\n\t\t\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateLeft(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tindex, nextCell;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextCell = this.findPrevEditableCell(cell.row, index);\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateRight(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tindex, nextCell;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextCell = this.findNextEditableCell(cell.row, index);\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateUp(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tindex, nextRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextRow = this.table.rowManager.prevDisplayRow(cell.row, true);\r\n\r\n\t\t\tif(nextRow){\r\n\t\t\t\tnextRow.cells[index].getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateDown(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tindex, nextRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\r\n\r\n\t\t\tif(nextRow){\r\n\t\t\t\tnextRow.cells[index].getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfindNextEditableCell(row, index){\r\n\t\tvar nextCell = false;\r\n\r\n\t\tif(index < row.cells.length-1){\r\n\t\t\tfor(var i = index+1; i < row.cells.length; i++){\r\n\t\t\t\tlet cell = row.cells[i];\r\n\r\n\t\t\t\tif(cell.column.modules.edit && Helpers.elVisible(cell.getElement())){\r\n\t\t\t\t\tlet allowEdit = true;\r\n\r\n\t\t\t\t\tif(typeof cell.column.modules.edit.check == \"function\"){\r\n\t\t\t\t\t\tallowEdit = cell.column.modules.edit.check(cell.getComponent());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(allowEdit){\r\n\t\t\t\t\t\tnextCell = cell;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn nextCell;\r\n\t}\r\n\r\n\tfindPrevEditableCell(row, index){\r\n\t\tvar prevCell = false;\r\n\r\n\t\tif(index > 0){\r\n\t\t\tfor(var i = index-1; i >= 0; i--){\r\n\t\t\t\tlet cell = row.cells[i],\r\n\t\t\t\tallowEdit = true;\r\n\r\n\t\t\t\tif(cell.column.modules.edit && Helpers.elVisible(cell.getElement())){\r\n\t\t\t\t\tif(typeof cell.column.modules.edit.check == \"function\"){\r\n\t\t\t\t\t\tallowEdit = cell.column.modules.edit.check(cell.getComponent());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(allowEdit){\r\n\t\t\t\t\t\tprevCell = cell;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn prevCell;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumnCheck(column){\r\n\t\tif(typeof column.definition.editor !== \"undefined\"){\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\tcolumnDeleteCheck(column){\r\n\t\tif(this.currentCell && this.currentCell.column === column){\r\n\t\t\tthis.cancelEdit();\r\n\t\t}\r\n\t}\r\n\r\n\trowDeleteCheck(row){\r\n\t\tif(this.currentCell && this.currentCell.row === row){\r\n\t\t\tthis.cancelEdit();\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize column editor\r\n\tinitializeColumn(column){\r\n\t\tvar self = this,\r\n\t\tconfig = {\r\n\t\t\teditor:false,\r\n\t\t\tblocked:false,\r\n\t\t\tcheck:column.definition.editable,\r\n\t\t\tparams:column.definition.editorParams || {}\r\n\t\t};\r\n\r\n\t\t//set column editor\r\n\t\tswitch(typeof column.definition.editor){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(this.editors[column.definition.editor]){\r\n\t\t\t\tconfig.editor = this.editors[column.definition.editor];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Editor Error - No such editor found: \", column.definition.editor);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tconfig.editor = column.definition.editor;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"boolean\":\r\n\t\t\tif(column.definition.editor === true){\r\n\t\t\t\tif(typeof column.definition.formatter !== \"function\"){\r\n\t\t\t\t\tif(this.editors[column.definition.formatter]){\r\n\t\t\t\t\t\tconfig.editor = this.editors[column.definition.formatter];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconfig.editor = this.editors[\"input\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Editor Error - Cannot auto lookup editor for a custom formatter: \", column.definition.formatter);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(config.editor){\r\n\t\t\tcolumn.modules.edit = config;\r\n\t\t}\r\n\t}\r\n\r\n\tgetCurrentCell(){\r\n\t\treturn this.currentCell ? this.currentCell.getComponent() : false;\r\n\t}\r\n\r\n\tclearEditor(cancel){\r\n\t\tvar cell = this.currentCell,\r\n\t\tcellEl;\r\n\r\n\t\tthis.invalidEdit = false;\r\n\r\n\t\tconsole.log(\"clear\", cancel, cell, cell.validate)\r\n\r\n\t\tif(cell){\r\n\t\t\tthis.currentCell = false;\r\n\r\n\t\t\tcellEl = cell.getElement();\r\n\r\n\t\t\tif(cancel){\r\n\t\t\t\tif(cell.column.modules.validate && this.table.modExists(\"validate\")){\r\n\t\t\t\t\tthis.table.modules.validate.cellValidate(cell);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tcellEl.classList.remove(\"tabulator-validation-fail\");\r\n\t\t\t}\r\n\r\n\t\t\tcellEl.classList.remove(\"tabulator-editing\");\r\n\r\n\t\t\twhile(cellEl.firstChild) cellEl.removeChild(cellEl.firstChild);\r\n\r\n\t\t\tcell.row.getElement().classList.remove(\"tabulator-row-editing\");\r\n\t\t}\r\n\t}\r\n\r\n\tcancelEdit(){\r\n\t\tif(this.currentCell){\r\n\t\t\tvar cell = this.currentCell;\r\n\t\t\tvar component = this.currentCell.getComponent();\r\n\r\n\t\t\tthis.clearEditor(true);\r\n\t\t\tcell.setValueActual(cell.getValue());\r\n\t\t\tcell.cellRendered();\r\n\r\n\t\t\tif(cell.column.definition.editor == \"textarea\" || cell.column.definition.variableHeight){\r\n\t\t\t\tcell.row.normalizeHeight(true);\r\n\t\t\t}\r\n\r\n\t\t\tif(cell.column.definition.cellEditCancelled){\r\n\t\t\t\tcell.column.definition.cellEditCancelled.call(this.table, component);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"edit-cancelled\", cell);\r\n\t\t\tthis.dispatchExternal(\"cellEditCancelled\", component);\r\n\t\t}\r\n\t}\r\n\r\n\t//return a formatted value for a cell\r\n\tbindEditor(cell){\r\n\t\tif(cell.column.modules.edit){\r\n\t\t\tvar self = this,\r\n\t\t\telement = cell.getElement(true);\r\n\r\n\t\t\telement.setAttribute(\"tabindex\", 0);\r\n\r\n\t\t\telement.addEventListener(\"click\", function(e){\r\n\t\t\t\tif(!element.classList.contains(\"tabulator-editing\")){\r\n\t\t\t\t\telement.focus({preventScroll: true});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\telement.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tif (e.button === 2) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tself.mouseClick = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\telement.addEventListener(\"focus\", function(e){\r\n\t\t\t\tif(!self.recursionBlock){\r\n\t\t\t\t\tself.edit(cell, e, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfocusCellNoEvent(cell, block){\r\n\t\tthis.recursionBlock = true;\r\n\r\n\t\tif(!(block && this.table.browser === \"ie\")){\r\n\t\t\tcell.getElement().focus({preventScroll: true});\r\n\t\t}\r\n\r\n\t\tthis.recursionBlock = false;\r\n\t}\r\n\r\n\teditCell(cell, forceEdit){\r\n\t\tthis.focusCellNoEvent(cell);\r\n\t\tthis.edit(cell, false, forceEdit);\r\n\t}\r\n\r\n\tfocusScrollAdjust(cell){\r\n\t\tif(this.table.rowManager.getRenderMode() == \"virtual\"){\r\n\t\t\tvar topEdge = this.table.rowManager.element.scrollTop,\r\n\t\t\tbottomEdge = this.table.rowManager.element.clientHeight + this.table.rowManager.element.scrollTop,\r\n\t\t\trowEl = cell.row.getElement(),\r\n\t\t\toffset = rowEl.offsetTop;\r\n\r\n\t\t\tif(rowEl.offsetTop < topEdge){\r\n\t\t\t\tthis.table.rowManager.element.scrollTop -= (topEdge - rowEl.offsetTop);\r\n\t\t\t}else{\r\n\t\t\t\tif(rowEl.offsetTop + rowEl.offsetHeight  > bottomEdge){\r\n\t\t\t\t\tthis.table.rowManager.element.scrollTop += (rowEl.offsetTop + rowEl.offsetHeight - bottomEdge);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar leftEdge = this.table.rowManager.element.scrollLeft,\r\n\t\t\trightEdge = this.table.rowManager.element.clientWidth + this.table.rowManager.element.scrollLeft,\r\n\t\t\tcellEl = cell.getElement(),\r\n\t\t\toffset = cellEl.offsetLeft;\r\n\r\n\t\t\tif(this.table.modExists(\"frozenColumns\")){\r\n\t\t\t\tleftEdge += parseInt(this.table.modules.frozenColumns.leftMargin);\r\n\t\t\t\trightEdge -= parseInt(this.table.modules.frozenColumns.rightMargin);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.renderHorizontal === \"virtual\"){\r\n\t\t\t\tleftEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\r\n\t\t\t\trightEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\r\n\t\t\t}\r\n\r\n\t\t\tif(cellEl.offsetLeft < leftEdge){\r\n\r\n\t\t\t\tthis.table.rowManager.element.scrollLeft -= (leftEdge - cellEl.offsetLeft);\r\n\t\t\t}else{\r\n\t\t\t\tif(cellEl.offsetLeft + cellEl.offsetWidth  > rightEdge){\r\n\t\t\t\t\tthis.table.rowManager.element.scrollLeft += (cellEl.offsetLeft + cellEl.offsetWidth - rightEdge);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tedit(cell, e, forceEdit){\r\n\t\tvar self = this,\r\n\t\tallowEdit = true,\r\n\t\trendered = function(){},\r\n\t\telement = cell.getElement(),\r\n\t\tcellEditor, component, params;\r\n\r\n\t\t//prevent editing if another cell is refusing to leave focus (eg. validation fail)\r\n\t\tif(this.currentCell){\r\n\t\t\tif(!this.invalidEdit){\r\n\t\t\t\tthis.cancelEdit();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//handle successfull value change\r\n\t\tfunction success(value){\r\n\t\t\tif(self.currentCell === cell){\r\n\t\t\t\tvar valid = true;\r\n\r\n\t\t\t\tif(cell.column.modules.validate && self.table.modExists(\"validate\") && self.table.options.validationMode != \"manual\"){\r\n\t\t\t\t\tvalid = self.table.modules.validate.validate(cell.column.modules.validate, cell, value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(valid === true || self.table.options.validationMode === \"highlight\"){\r\n\t\t\t\t\tself.clearEditor();\r\n\r\n\r\n\t\t\t\t\tif(!cell.modules.edit){\r\n\t\t\t\t\t\tcell.modules.edit = {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcell.modules.edit.edited = true;\r\n\r\n\t\t\t\t\tif(self.editedCells.indexOf(cell) == -1){\r\n\t\t\t\t\t\tself.editedCells.push(cell);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcell.setValue(value, true);\r\n\r\n\t\t\t\t\tif(valid !== true){\r\n\t\t\t\t\t\telement.classList.add(\"tabulator-validation-fail\");\r\n\t\t\t\t\t\tself.table.externalEvents.dispatch(\"validationFailed\", cell.getComponent(), value, valid);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tself.invalidEdit = true;\r\n\t\t\t\t\telement.classList.add(\"tabulator-validation-fail\");\r\n\t\t\t\t\tself.focusCellNoEvent(cell, true);\r\n\t\t\t\t\trendered();\r\n\t\t\t\t\tself.table.externalEvents.dispatch(\"validationFailed\", cell.getComponent(), value, valid);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// console.warn(\"Edit Success Error - cannot call success on a cell that is no longer being edited\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//handle aborted edit\r\n\t\tfunction cancel(){\r\n\t\t\tif(self.currentCell === cell){\r\n\t\t\t\tself.cancelEdit();\r\n\t\t\t}else{\r\n\t\t\t\t// console.warn(\"Edit Success Error - cannot call cancel on a cell that is no longer being edited\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction onRendered(callback){\r\n\t\t\trendered = callback;\r\n\t\t}\r\n\r\n\t\tif(!cell.column.modules.edit.blocked){\r\n\t\t\tif(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t}\r\n\r\n\t\t\tswitch(typeof cell.column.modules.edit.check){\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tallowEdit = cell.column.modules.edit.check(cell.getComponent());\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\tallowEdit = cell.column.modules.edit.check;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(allowEdit || forceEdit){\r\n\r\n\t\t\t\tself.cancelEdit();\r\n\r\n\t\t\t\tself.currentCell = cell;\r\n\r\n\t\t\t\tthis.focusScrollAdjust(cell);\r\n\r\n\t\t\t\tcomponent = cell.getComponent();\r\n\r\n\t\t\t\tif(this.mouseClick){\r\n\t\t\t\t\tthis.mouseClick = false;\r\n\r\n\t\t\t\t\tif(cell.column.definition.cellClick){\r\n\t\t\t\t\t\tcell.column.definition.cellClick.call(this.table, e, component);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(cell.column.definition.cellEditing){\r\n\t\t\t\t\tcell.column.definition.cellEditing.call(this.table, component);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchExternal(\"cellEditing\", component);\r\n\r\n\t\t\t\tparams = typeof cell.column.modules.edit.params === \"function\" ? cell.column.modules.edit.params(component) : cell.column.modules.edit.params;\r\n\r\n\t\t\t\tcellEditor = cell.column.modules.edit.editor.call(self, component, onRendered, success, cancel, params);\r\n\r\n\t\t\t\t//if editor returned, add to DOM, if false, abort edit\r\n\t\t\t\tif(cellEditor !== false){\r\n\r\n\t\t\t\t\tif(cellEditor instanceof Node){\r\n\t\t\t\t\t\telement.classList.add(\"tabulator-editing\");\r\n\t\t\t\t\t\tcell.row.getElement().classList.add(\"tabulator-row-editing\");\r\n\t\t\t\t\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\t\t\t\t\t\telement.appendChild(cellEditor);\r\n\r\n\t\t\t\t\t\t//trigger onRendered Callback\r\n\t\t\t\t\t\trendered();\r\n\r\n\t\t\t\t\t\t//prevent editing from triggering rowClick event\r\n\t\t\t\t\t\tvar children = element.children;\r\n\r\n\t\t\t\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t\t\t\tchildren[i].addEventListener(\"click\", function(e){\r\n\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Edit Error - Editor should return an instance of Node, the editor returned:\", cellEditor);\r\n\t\t\t\t\t\telement.blur();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.blur();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tthis.mouseClick = false;\r\n\t\t\t\telement.blur();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.mouseClick = false;\r\n\t\t\telement.blur();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tgetEditedCells(){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.editedCells.forEach((cell) => {\r\n\t\t\toutput.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tclearEdited(cell){\r\n\t\tvar editIndex;\r\n\r\n\t\tif(cell.modules.edit && cell.modules.edit.edited){\r\n\t\t\tcell.modules.edit.edited = false;\r\n\r\n\t\t\tif(cell.modules.validate){\r\n\t\t\t\tcell.modules.validate.invalid = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\teditIndex = this.editedCells.indexOf(cell);\r\n\r\n\t\tif(editIndex > -1){\r\n\t\t\tthis.editedCells.splice(editIndex, 1);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nEdit.moduleName = \"edit\";\r\n\r\n//load defaults\r\nEdit.editors = defaultEditors;\r\n\r\n\r\nexport default Edit;","class ExportRow{\r\n\tconstructor(type, columns, component, indent){\r\n\t\tthis.type = type;\r\n\t\tthis.columns = columns;\r\n\t\tthis.component = component || false;\r\n\t\tthis.indent = indent || 0;\r\n\t}\r\n}\r\n\r\nexport default ExportRow;","class ExportColumn{\r\n\tconstructor(value, component, width, height, depth){\r\n\t\tthis.value = value;\r\n\t\tthis.component = component || false;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.depth = depth;\r\n\t}\r\n}\r\n\r\nexport default ExportColumn;","import Module from '../../core/Module.js';\r\n\r\nimport ExportRow from './ExportRow.js';\r\nimport ExportColumn from './ExportColumn.js';\r\n\r\nclass Export extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.config = {};\r\n\t\tthis.cloneTableStyle = true;\r\n\t\tthis.colVisProp = \"\";\r\n\r\n\t\tthis.registerTableOption(\"htmlOutputConfig\", false); //html outypu config\r\n\r\n\t\tthis.registerColumnOption(\"htmlOutput\");\r\n\t\tthis.registerColumnOption(\"titleHtmlOutput\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.registerTableFunction(\"getHtml\", this.getHtml.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tgenerateExportList(config, style, range, colVisProp){\r\n\t\tthis.cloneTableStyle = style;\r\n\t\tthis.config = config || {};\r\n\t\tthis.colVisProp = colVisProp;\r\n\r\n\t\tvar headers = this.config.columnHeaders !== false ? this.headersToExportRows(this.generateColumnGroupHeaders()) : [];\r\n\t\tvar body = this.bodyToExportRows(this.rowLookup(range));\r\n\r\n\t\treturn headers.concat(body);\r\n\t}\r\n\r\n\tgenereateTable(config, style, range, colVisProp){\r\n\t\tvar list = this.generateExportList(config, style, range, colVisProp);\r\n\r\n\t\treturn this.genereateTableElement(list);\r\n\t}\r\n\r\n\trowLookup(range){\r\n\t\tvar rows = [];\r\n\r\n\t\tif(typeof range == \"function\"){\r\n\t\t\trange.call(this.table).forEach((row) =>{\r\n\t\t\t\trow = this.table.rowManager.findRow(row);\r\n\r\n\t\t\t\tif(row){\r\n\t\t\t\t\trows.push(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tswitch(range){\r\n\t\t\t\tcase true:\r\n\t\t\t\tcase \"visible\":\r\n\t\t\t\trows = this.table.rowManager.getVisibleRows(false, true);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"all\":\r\n\t\t\t\trows = this.table.rowManager.rows;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"selected\":\r\n\t\t\t\trows = this.table.modules.selectRow.selectedRows;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"active\":\r\n\t\t\t\tdefault:\r\n\t\t\t\tif(this.table.options.pagination){\r\n\t\t\t\t\trows = this.table.rowManager.getDisplayRows(this.table.rowManager.displayRows.length - 2);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trows = this.table.rowManager.getDisplayRows();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Object.assign([], rows);\r\n\t}\r\n\r\n\tgenerateColumnGroupHeaders(){\r\n\t\tvar output = [];\r\n\r\n\t\tvar columns = this.config.columnGroups !== false ? this.table.columnManager.columns : this.table.columnManager.columnsByIndex;\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\tvar colData = this.processColumnGroup(column);\r\n\r\n\t\t\tif(colData){\r\n\t\t\t\toutput.push(colData);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tprocessColumnGroup(column){\r\n\t\tvar subGroups = column.columns,\r\n\t\tmaxDepth = 0,\r\n\t\ttitle = column.definition[\"title\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))] || column.definition.title;\r\n\r\n\t\tvar groupData = {\r\n\t\t\ttitle:title,\r\n\t\t\tcolumn:column,\r\n\t\t\tdepth:1,\r\n\t\t};\r\n\r\n\t\tif(subGroups.length){\r\n\t\t\tgroupData.subGroups = [];\r\n\t\t\tgroupData.width = 0;\r\n\r\n\t\t\tsubGroups.forEach((subGroup) => {\r\n\t\t\t\tvar subGroupData = this.processColumnGroup(subGroup);\r\n\r\n\t\t\t\tif(subGroupData){\r\n\t\t\t\t\tgroupData.width += subGroupData.width;\r\n\t\t\t\t\tgroupData.subGroups.push(subGroupData);\r\n\r\n\t\t\t\t\tif(subGroupData.depth > maxDepth){\r\n\t\t\t\t\t\tmaxDepth = subGroupData.depth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tgroupData.depth += maxDepth;\r\n\r\n\t\t\tif(!groupData.width){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this.columnVisCheck(column)){\r\n\t\t\t\tgroupData.width = 1;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn groupData;\r\n\t}\r\n\r\n\tcolumnVisCheck(column){\r\n\t\treturn column.definition[this.colVisProp] !== false && (column.visible || (!column.visible && column.definition[this.colVisProp]));\r\n\t}\r\n\r\n\theadersToExportRows(columns){\r\n\t\tvar headers = [],\r\n\t\theaderDepth = 0,\r\n\t\texportRows = [];\r\n\r\n\t\tfunction parseColumnGroup(column, level){\r\n\r\n\t\t\tvar depth = headerDepth - level;\r\n\r\n\t\t\tif(typeof headers[level] === \"undefined\"){\r\n\t\t\t\theaders[level] = [];\r\n\t\t\t}\r\n\r\n\t\t\tcolumn.height = column.subGroups ? 1 : (depth - column.depth) + 1;\r\n\r\n\t\t\theaders[level].push(column);\r\n\r\n\t\t\tif(column.height > 1){\r\n\t\t\t\tfor(let i = 1; i < column.height; i ++){\r\n\r\n\t\t\t\t\tif(typeof headers[level + i] === \"undefined\"){\r\n\t\t\t\t\t\theaders[level + i] = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\theaders[level + i].push(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(column.width > 1){\r\n\t\t\t\tfor(let i = 1; i < column.width; i ++){\r\n\t\t\t\t\theaders[level].push(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(column.subGroups){\r\n\t\t\t\tcolumn.subGroups.forEach(function(subGroup){\r\n\t\t\t\t\tparseColumnGroup(subGroup, level+1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//calculate maximum header debth\r\n\t\tcolumns.forEach(function(column){\r\n\t\t\tif(column.depth > headerDepth){\r\n\t\t\t\theaderDepth = column.depth;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tcolumns.forEach(function(column){\r\n\t\t\tparseColumnGroup(column,0);\r\n\t\t});\r\n\r\n\t\theaders.forEach((header) => {\r\n\t\t\tvar columns = [];\r\n\r\n\t\t\theader.forEach((col) => {\r\n\t\t\t\tif(col){\r\n\t\t\t\t\tcolumns.push(new ExportColumn(col.title, col.column.getComponent(), col.width, col.height, col.depth));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolumns.push(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\texportRows.push(new ExportRow(\"header\", columns));\r\n\t\t});\r\n\r\n\t\treturn exportRows;\r\n\t}\r\n\r\n\tbodyToExportRows(rows){\r\n\r\n\t\tvar columns = [];\r\n\t\tvar exportRows = [];\r\n\r\n\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\tif (this.columnVisCheck(column)) {\r\n\t\t\t\tcolumns.push(column.getComponent());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(this.config.columnCalcs !== false && this.table.modExists(\"columnCalcs\")){\r\n\t\t\tif(this.table.modules.columnCalcs.topInitialized){\r\n\t\t\t\trows.unshift(this.table.modules.columnCalcs.topRow);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modules.columnCalcs.botInitialized){\r\n\t\t\t\trows.push(this.table.modules.columnCalcs.botRow);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trows = rows.filter((row) => {\r\n\t\t\tswitch(row.type){\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\treturn this.config.rowGroups !== false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"calc\":\r\n\t\t\t\treturn this.config.columnCalcs !== false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"row\":\r\n\t\t\t\treturn !(this.table.options.dataTree && this.config.dataTree === false && row.modules.dataTree.parent);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\trows.forEach((row, i) => {\r\n\t\t\tvar rowData = row.getData(this.colVisProp);\r\n\t\t\tvar exportCols = [];\r\n\t\t\tvar indent = 0;\r\n\r\n\t\t\tswitch(row.type){\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\tindent = row.level;\r\n\t\t\t\texportCols.push(new ExportColumn(row.key, row.getComponent(), columns.length, 1));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"calc\" :\r\n\t\t\t\tcase \"row\" :\r\n\t\t\t\tcolumns.forEach((col) => {\r\n\t\t\t\t\texportCols.push(new ExportColumn(col._column.getFieldValue(rowData), col, 1, 1));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this.table.options.dataTree && this.config.dataTree !== false){\r\n\t\t\t\t\tindent = row.modules.dataTree.index;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\texportRows.push(new ExportRow(row.type, exportCols, row.getComponent(), indent));\r\n\t\t});\r\n\r\n\t\treturn exportRows;\r\n\t}\r\n\r\n\tgenereateTableElement(list){\r\n\t\tvar table = document.createElement(\"table\"),\r\n\t\theaderEl = document.createElement(\"thead\"),\r\n\t\tbodyEl = document.createElement(\"tbody\"),\r\n\t\tstyles = this.lookupTableStyles(),\r\n\t\trowFormatter = this.table.options[\"rowFormatter\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))],\r\n\t\tsetup = {};\r\n\r\n\t\tsetup.rowFormatter = rowFormatter !== null ? rowFormatter : this.table.options.rowFormatter;\r\n\r\n\t\tif(this.table.options.dataTree &&this.config.dataTree !== false && this.table.modExists(\"columnCalcs\")){\r\n\t\t\tsetup.treeElementField = this.table.modules.dataTree.elementField;\r\n\t\t}\r\n\r\n\t\t//assign group header formatter\r\n\t\tsetup.groupHeader = this.table.options[\"groupHeader\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))];\r\n\r\n\t\tif(setup.groupHeader && !Array.isArray(setup.groupHeader)){\r\n\t\t\tsetup.groupHeader = [setup.groupHeader];\r\n\t\t}\r\n\r\n\t\ttable.classList.add(\"tabulator-print-table\");\r\n\r\n\t\tthis.mapElementStyles(this.table.columnManager.getHeadersElement(), headerEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\r\n\r\n\r\n\t\tif(list.length > 1000){\r\n\t\t\tconsole.warn(\"It may take a long time to render an HTML table with more than 1000 rows\");\r\n\t\t}\r\n\r\n\t\tlist.forEach((row, i) => {\r\n\t\t\tswitch(row.type){\r\n\t\t\t\tcase \"header\":\r\n\t\t\t\theaderEl.appendChild(this.genereateHeaderElement(row, setup, styles));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\tbodyEl.appendChild(this.genereateGroupElement(row, setup, styles));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"calc\":\r\n\t\t\t\tbodyEl.appendChild(this.genereateCalcElement(row, setup, styles));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"row\":\r\n\t\t\t\tlet rowEl = this.genereateRowElement(row, setup, styles);\r\n\t\t\t\tthis.mapElementStyles(((i % 2) && styles.evenRow) ? styles.evenRow : styles.oddRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\r\n\t\t\t\tbodyEl.appendChild(rowEl);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(headerEl.innerHTML){\r\n\t\t\ttable.appendChild(headerEl);\r\n\t\t}\r\n\r\n\t\ttable.appendChild(bodyEl);\r\n\r\n\r\n\t\tthis.mapElementStyles(this.table.element, table, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\"]);\r\n\t\treturn table;\r\n\t}\r\n\r\n\tlookupTableStyles(){\r\n\t\tvar styles = {};\r\n\r\n\t\t//lookup row styles\r\n\t\tif(this.cloneTableStyle && window.getComputedStyle){\r\n\t\t\tstyles.oddRow = this.table.element.querySelector(\".tabulator-row-odd:not(.tabulator-group):not(.tabulator-calcs)\");\r\n\t\t\tstyles.evenRow = this.table.element.querySelector(\".tabulator-row-even:not(.tabulator-group):not(.tabulator-calcs)\");\r\n\t\t\tstyles.calcRow = this.table.element.querySelector(\".tabulator-row.tabulator-calcs\");\r\n\t\t\tstyles.firstRow = this.table.element.querySelector(\".tabulator-row:not(.tabulator-group):not(.tabulator-calcs)\");\r\n\t\t\tstyles.firstGroup = this.table.element.getElementsByClassName(\"tabulator-group\")[0];\r\n\r\n\t\t\tif(styles.firstRow){\r\n\t\t\t\tstyles.styleCells = styles.firstRow.getElementsByClassName(\"tabulator-cell\");\r\n\t\t\t\tstyles.firstCell = styles.styleCells[0];\r\n\t\t\t\tstyles.lastCell = styles.styleCells[styles.styleCells.length - 1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn styles;\r\n\t}\r\n\r\n\tgenereateHeaderElement(row, setup, styles){\r\n\t\tvar rowEl = document.createElement(\"tr\");\r\n\r\n\t\trow.columns.forEach((column) => {\r\n\t\t\tif(column){\r\n\t\t\t\tvar cellEl = document.createElement(\"th\");\r\n\t\t\t\tvar classNames = column.component._column.definition.cssClass ? column.component._column.definition.cssClass.split(\" \") : [];\r\n\r\n\t\t\t\tcellEl.colSpan = column.width;\r\n\t\t\t\tcellEl.rowSpan = column.height;\r\n\r\n\t\t\t\tcellEl.innerHTML = column.value;\r\n\r\n\t\t\t\tif(this.cloneTableStyle){\r\n\t\t\t\t\tcellEl.style.boxSizing = \"border-box\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclassNames.forEach(function(className) {\r\n\t\t\t\t\tcellEl.classList.add(className);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.mapElementStyles(column.component.getElement(), cellEl, [\"text-align\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\r\n\t\t\t\tthis.mapElementStyles(column.component._column.contentElement, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\r\n\r\n\t\t\t\tif(column.component._column.visible){\r\n\t\t\t\t\tthis.mapElementStyles(column.component.getElement(), cellEl, [\"width\"]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(column.component._column.definition.width){\r\n\t\t\t\t\t\tcellEl.style.width = column.component._column.definition.width + \"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(column.component._column.parent){\r\n\t\t\t\t\tthis.mapElementStyles(column.component._column.parent.groupElement, cellEl, [\"border-top\"]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowEl.appendChild(cellEl);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateGroupElement(row, setup, styles){\r\n\r\n\t\tvar rowEl = document.createElement(\"tr\"),\r\n\t\tcellEl = document.createElement(\"td\"),\r\n\t\tgroup = row.columns[0];\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-row\");\r\n\r\n\t\tif(setup.groupHeader && setup.groupHeader[row.indent]){\r\n\t\t\tgroup.value = setup.groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\r\n\t\t}else{\r\n\t\t\tif(setup.groupHeader === false){\r\n\t\t\t\tgroup.value = group.value;\r\n\t\t\t}else{\r\n\t\t\t\tgroup.value = row.component._group.generator(group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcellEl.colSpan = group.width;\r\n\t\tcellEl.innerHTML = group.value;\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-group\");\r\n\t\trowEl.classList.add(\"tabulator-group-level-\" + row.indent);\r\n\r\n\t\tif(group.component.isVisible()){\r\n\t\t\trowEl.classList.add(\"tabulator-group-visible\");\r\n\t\t}\r\n\r\n\t\tthis.mapElementStyles(styles.firstGroup, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\r\n\t\tthis.mapElementStyles(styles.firstGroup, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\r\n\r\n\t\trowEl.appendChild(cellEl);\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateCalcElement(row, setup, styles){\r\n\t\tvar rowEl = this.genereateRowElement(row, setup, styles);\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-calcs\");\r\n\t\tthis.mapElementStyles(styles.calcRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateRowElement(row, setup, styles){\r\n\t\tvar rowEl = document.createElement(\"tr\");\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-row\");\r\n\r\n\t\trow.columns.forEach((col) => {\r\n\r\n\t\t\tif(col){\r\n\t\t\t\tvar cellEl = document.createElement(\"td\"),\r\n\t\t\t\tcolumn = col.component._column,\r\n\t\t\t\tvalue = col.value;\r\n\r\n\t\t\t\tvar cellWrapper = {\r\n\t\t\t\t\tmodules:{},\r\n\t\t\t\t\tgetValue:function(){\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetField:function(){\r\n\t\t\t\t\t\treturn column.definition.field;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetElement:function(){\r\n\t\t\t\t\t\treturn cellEl;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetColumn:function(){\r\n\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetData:function(){\r\n\t\t\t\t\t\treturn row.component.getData();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetRow:function(){\r\n\t\t\t\t\t\treturn row.component;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetComponent:function(){\r\n\t\t\t\t\t\treturn cellWrapper;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcolumn:column,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar classNames = column.definition.cssClass ? column.definition.cssClass.split(\" \") : [];\r\n\r\n\t\t\t\tclassNames.forEach(function(className) {\r\n\t\t\t\t\tcellEl.classList.add(className);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this.table.modExists(\"format\") && this.config.formatCells !== false){\r\n\t\t\t\t\tvalue = this.table.modules.format.formatExportValue(cellWrapper, this.colVisProp);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tswitch(typeof value){\r\n\t\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\t\tvalue = JSON.stringify(value);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\t\tcase \"null\":\r\n\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tvalue = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(value instanceof Node){\r\n\t\t\t\t\tcellEl.appendChild(value);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcellEl.innerHTML = value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(styles.firstCell){\r\n\t\t\t\t\tthis.mapElementStyles(styles.firstCell, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\r\n\r\n\t\t\t\t\tif(column.definition.align){\r\n\t\t\t\t\t\tcellEl.style.textAlign = column.definition.align;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.table.options.dataTree && this.config.dataTree !== false){\r\n\t\t\t\t\tif((setup.treeElementField && setup.treeElementField == column.field) || (!setup.treeElementField && i == 0)){\r\n\t\t\t\t\t\tif(row.component._row.modules.dataTree.controlEl){\r\n\t\t\t\t\t\t\tcellEl.insertBefore(row.component._row.modules.dataTree.controlEl.cloneNode(true), cellEl.firstChild);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(row.component._row.modules.dataTree.branchEl){\r\n\t\t\t\t\t\t\tcellEl.insertBefore(row.component._row.modules.dataTree.branchEl.cloneNode(true), cellEl.firstChild);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowEl.appendChild(cellEl);\r\n\r\n\t\t\t\tif(cellWrapper.modules.format && cellWrapper.modules.format.renderedCallback){\r\n\t\t\t\t\tcellWrapper.modules.format.renderedCallback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(setup.rowFormatter && this.config.formatCells !== false){\r\n\t\t\t\t\tsetup.rowFormatter(row.component);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateHTMLTable(list){\r\n\t\tvar holder = document.createElement(\"div\");\r\n\r\n\t\tholder.appendChild(this.genereateTableElement(list));\r\n\r\n\t\treturn holder.innerHTML;\r\n\t}\r\n\r\n\tgetHtml(visible, style, config, colVisProp){\r\n\t\tvar list = this.generateExportList(config || this.table.options.htmlOutputConfig, style, visible, colVisProp || \"htmlOutput\");\r\n\r\n\t\treturn this.genereateHTMLTable(list);\r\n\t}\r\n\r\n\tmapElementStyles(from, to, props){\r\n\t\tif(this.cloneTableStyle && from && to){\r\n\r\n\t\t\tvar lookup = {\r\n\t\t\t\t\"background-color\" : \"backgroundColor\",\r\n\t\t\t\t\"color\" : \"fontColor\",\r\n\t\t\t\t\"width\" : \"width\",\r\n\t\t\t\t\"font-weight\" : \"fontWeight\",\r\n\t\t\t\t\"font-family\" : \"fontFamily\",\r\n\t\t\t\t\"font-size\" : \"fontSize\",\r\n\t\t\t\t\"text-align\" : \"textAlign\",\r\n\t\t\t\t\"border-top\" : \"borderTop\",\r\n\t\t\t\t\"border-left\" : \"borderLeft\",\r\n\t\t\t\t\"border-right\" : \"borderRight\",\r\n\t\t\t\t\"border-bottom\" : \"borderBottom\",\r\n\t\t\t\t\"padding-top\" : \"paddingTop\",\r\n\t\t\t\t\"padding-left\" : \"paddingLeft\",\r\n\t\t\t\t\"padding-right\" : \"paddingRight\",\r\n\t\t\t\t\"padding-bottom\" : \"paddingBottom\",\r\n\t\t\t};\r\n\r\n\t\t\tif(window.getComputedStyle){\r\n\t\t\t\tvar fromStyle = window.getComputedStyle(from);\r\n\r\n\t\t\t\tprops.forEach(function(prop){\r\n\t\t\t\t\tto.style[lookup[prop]] = fromStyle.getPropertyValue(prop);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nExport.moduleName = \"export\";\r\n\r\nexport default Export;\r\n","export default {\r\n\r\n\t//equal to\r\n\t\"=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal == filterVal ? true : false;\r\n\t},\r\n\r\n\t//less than\r\n\t\"<\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal < filterVal ? true : false;\r\n\t},\r\n\r\n\t//less than or equal to\r\n\t\"<=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal <= filterVal ? true : false;\r\n\t},\r\n\r\n\t//greater than\r\n\t\">\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal > filterVal ? true : false;\r\n\t},\r\n\r\n\t//greater than or equal to\r\n\t\">=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal >= filterVal ? true : false;\r\n\t},\r\n\r\n\t//not equal to\r\n\t\"!=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal != filterVal ? true : false;\r\n\t},\r\n\r\n\t\"regex\":function(filterVal, rowVal, rowData, filterParams){\r\n\r\n\t\tif(typeof filterVal == \"string\"){\r\n\t\t\tfilterVal = new RegExp(filterVal);\r\n\t\t}\r\n\r\n\t\treturn filterVal.test(rowVal);\r\n\t},\r\n\r\n\t//contains the string\r\n\t\"like\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(filterVal === null || typeof filterVal === \"undefined\"){\r\n\t\t\treturn rowVal === filterVal ? true : false;\r\n\t\t}else{\r\n\t\t\tif(typeof rowVal !== 'undefined' && rowVal !== null){\r\n\t\t\t\treturn String(rowVal).toLowerCase().indexOf(filterVal.toLowerCase()) > -1;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//contains the keywords\r\n\t\"keywords\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tvar keywords = filterVal.toLowerCase().split(typeof filterParams.separator === \"undefined\" ? \" \" : filterParams.separator),\r\n\t\tvalue = String(rowVal === null || typeof rowVal === \"undefined\" ? \"\" : rowVal).toLowerCase(),\r\n\t\tmatches = [];\r\n\r\n\t\tkeywords.forEach((keyword) =>{\r\n\t\t\tif(value.includes(keyword)){\r\n\t\t\t\tmatches.push(true);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn filterParams.matchAll ? matches.length === keywords.length : !!matches.length;\r\n\t},\r\n\r\n\t//starts with the string\r\n\t\"starts\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(filterVal === null || typeof filterVal === \"undefined\"){\r\n\t\t\treturn rowVal === filterVal ? true : false;\r\n\t\t}else{\r\n\t\t\tif(typeof rowVal !== 'undefined' && rowVal !== null){\r\n\t\t\t\treturn String(rowVal).toLowerCase().startsWith(filterVal.toLowerCase());\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//ends with the string\r\n\t\"ends\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(filterVal === null || typeof filterVal === \"undefined\"){\r\n\t\t\treturn rowVal === filterVal ? true : false;\r\n\t\t}else{\r\n\t\t\tif(typeof rowVal !== 'undefined' && rowVal !== null){\r\n\t\t\t\treturn String(rowVal).toLowerCase().endsWith(filterVal.toLowerCase());\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//in array\r\n\t\"in\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(Array.isArray(filterVal)){\r\n\t\t\treturn filterVal.length ? filterVal.indexOf(rowVal) > -1 : true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Filter Error - filter value is not an array:\", filterVal);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultFilters from './defaults/filters.js';\r\n\r\nclass Filter extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.filterList = []; //hold filter list\r\n\t\tthis.headerFilters = {}; //hold column filters\r\n\t\tthis.headerFilterColumns = []; //hold columns that use header filters\r\n\r\n\t\tthis.prevHeaderFilterChangeCheck = \"\";\r\n\t\tthis.prevHeaderFilterChangeCheck = \"{}\";\r\n\r\n\t\tthis.changed = false; //has filtering changed since last render\r\n\t\tthis.tableInitialized = false;\r\n\r\n\t\tthis.registerTableOption(\"filterMode\", \"local\"); //local or remote filtering\r\n\r\n\t\tthis.registerTableOption(\"initialFilter\", false); //initial filtering criteria\r\n\t\tthis.registerTableOption(\"initialHeaderFilter\", false); //initial header filtering criteria\r\n\t\tthis.registerTableOption(\"headerFilterLiveFilterDelay\", 300); //delay before updating column after user types in header filter\r\n\r\n\t\tthis.registerColumnOption(\"headerFilter\");\r\n\t\tthis.registerColumnOption(\"headerFilterPlaceholder\");\r\n\t\tthis.registerColumnOption(\"headerFilterParams\");\r\n\t\tthis.registerColumnOption(\"headerFilterEmptyCheck\");\r\n\t\tthis.registerColumnOption(\"headerFilterFunc\");\r\n\t\tthis.registerColumnOption(\"headerFilterFuncParams\");\r\n\t\tthis.registerColumnOption(\"headerFilterLiveFilter\");\r\n\r\n\t\tthis.registerTableFunction(\"searchRows\", this.searchRows.bind(this));\r\n\t\tthis.registerTableFunction(\"searchData\", this.searchData.bind(this));\r\n\r\n\t\tthis.registerTableFunction(\"setFilter\", this.userSetFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"refreshFilter\", this.userRefreshFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"addFilter\", this.userAddFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"getFilters\", this.getFilters.bind(this));\r\n\t\tthis.registerTableFunction(\"setHeaderFilterFocus\", this.userSetHeaderFilterFocus.bind(this));\r\n\t\tthis.registerTableFunction(\"getHeaderFilterValue\", this.userGetHeaderFilterValue.bind(this));\r\n\t\tthis.registerTableFunction(\"setHeaderFilterValue\", this.userSetHeaderFilterValue.bind(this));\r\n\t\tthis.registerTableFunction(\"getHeaderFilters\", this.getHeaderFilters.bind(this));\r\n\t\tthis.registerTableFunction(\"removeFilter\", this.userRemoveFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"clearFilter\", this.userClearFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"clearHeaderFilter\", this.userClearHeaderFilter.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"column\", \"headerFilterFocus\", this.setHeaderFilterFocus.bind(this));\r\n\t\tthis.registerComponentFunction(\"column\", \"reloadHeaderFilter\", this.reloadHeaderFilter.bind(this));\r\n\t\tthis.registerComponentFunction(\"column\", \"getHeaderFilterValue\", this.getHeaderFilterValue.bind(this));\r\n\t\tthis.registerComponentFunction(\"column\", \"setHeaderFilterValue\", this.setHeaderFilterValue.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumnHeaderFilter.bind(this));\r\n\t\tthis.subscribe(\"column-width-fit-before\", this.hideHeaderFilterElements.bind(this));\r\n\t\tthis.subscribe(\"column-width-fit-after\", this.showHeaderFilterElements.bind(this));\r\n\t\tthis.subscribe(\"table-built\", this.tableBuilt.bind(this));\r\n\r\n\t\tif(this.table.options.filterMode === \"remote\"){\r\n\t\t\tthis.subscribe(\"data-params\", this.remoteFilterParams.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.registerDataHandler(this.filter.bind(this), 10);\r\n\t}\r\n\r\n\ttableBuilt(){\r\n\t\tif(this.table.options.initialFilter){\r\n\t\t\tthis.setFilter(this.table.options.initialFilter);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.initialHeaderFilter){\r\n\t\t\tthis.table.options.initialHeaderFilter.forEach((item) => {\r\n\r\n\t\t\t\tvar column = this.table.columnManager.findColumn(item.field);\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tthis.setHeaderFilterValue(column, item.value);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Column Filter Error - No matching column found:\", item.field);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.tableInitialized = true;\r\n\t}\r\n\r\n\tremoteFilterParams(data, config, silent, params){\r\n\t\tparams.filter = this.getFilters(true, true);\r\n\t\treturn params;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\t//set standard filters\r\n\tuserSetFilter(field, type, value, params){\r\n\t\tthis.setFilter(field, type, value, params);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//set standard filters\r\n\tuserRefreshFilter(){\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//add filter to array\r\n\tuserAddFilter(field, type, value, params){\r\n\t\tthis.addFilter(field, type, value, params);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\tuserSetHeaderFilterFocus(field){\r\n\t\tvar column = this.table.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tthis.setHeaderFilterFocus(column);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Focus Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tuserGetHeaderFilterValue(field) {\r\n\t\tvar column = this.table.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\treturn this.getHeaderFilterValue(column);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Error - No matching column found:\", field);\r\n\t\t}\r\n\t}\r\n\r\n\tuserSetHeaderFilterValue(field, value){\r\n\t\tvar column = this.table.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tthis.setHeaderFilterValue(column, value);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//remove filter from array\r\n\tuserRemoveFilter(field, type, value){\r\n\t\tthis.removeFilter(field, type, value);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//clear filters\r\n\tuserClearFilter(all){\r\n\t\tthis.clearFilter(all);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//clear header filters\r\n\tuserClearHeaderFilter(){\r\n\t\tthis.clearHeaderFilter();\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\r\n\t//search for specific row components\r\n\tsearchRows(field, type, value){\r\n\t\treturn this.search(\"rows\", field, type, value);\r\n\t}\r\n\r\n\t//search for specific data\r\n\tsearchData(field, type, value){\r\n\t\treturn this.search(\"data\", field, type, value);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumnHeaderFilter(column){\r\n\t\tvar def = column.definition;\r\n\r\n\t\tif(def.headerFilter){\r\n\r\n\t\t\tif(typeof def.headerFilterPlaceholder !== \"undefined\" && def.field){\r\n\t\t\t\tthis.module(\"localize\").setHeaderFilterColumnPlaceholder(def.field, def.headerFilterPlaceholder);\r\n\t\t\t}\r\n\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize column header filter\r\n\tinitializeColumn(column, value){\r\n\t\tvar self = this,\r\n\t\tfield = column.getField(),\r\n\t\tparams;\r\n\r\n\t\t//handle successfull value change\r\n\t\tfunction success(value){\r\n\t\t\tvar filterType = (column.modules.filter.tagType == \"input\" && column.modules.filter.attrType == \"text\") || column.modules.filter.tagType == \"textarea\" ? \"partial\" : \"match\",\r\n\t\t\ttype = \"\",\r\n\t\t\tfilterChangeCheck = \"\",\r\n\t\t\tfilterFunc;\r\n\r\n\t\t\tif(typeof column.modules.filter.prevSuccess === \"undefined\" || column.modules.filter.prevSuccess !== value){\r\n\r\n\t\t\t\tcolumn.modules.filter.prevSuccess = value;\r\n\r\n\t\t\t\tif(!column.modules.filter.emptyFunc(value)){\r\n\t\t\t\t\tcolumn.modules.filter.value = value;\r\n\r\n\t\t\t\t\tswitch(typeof column.definition.headerFilterFunc){\r\n\t\t\t\t\t\tcase \"string\":\r\n\t\t\t\t\t\tif(Filter.filters[column.definition.headerFilterFunc]){\r\n\t\t\t\t\t\t\ttype = column.definition.headerFilterFunc;\r\n\t\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\t\tvar params = column.definition.headerFilterFuncParams || {};\r\n\t\t\t\t\t\t\t\tvar fieldVal = column.getFieldValue(data);\r\n\r\n\t\t\t\t\t\t\t\tparams = typeof params === \"function\" ? params(value, fieldVal, data) : params;\r\n\r\n\t\t\t\t\t\t\t\treturn Filter.filters[column.definition.headerFilterFunc](value, fieldVal, data, params);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tconsole.warn(\"Header Filter Error - Matching filter function not found: \", column.definition.headerFilterFunc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"function\":\r\n\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\tvar params = column.definition.headerFilterFuncParams || {};\r\n\t\t\t\t\t\t\tvar fieldVal = column.getFieldValue(data);\r\n\r\n\t\t\t\t\t\t\tparams = typeof params === \"function\" ? params(value, fieldVal, data) : params;\r\n\r\n\t\t\t\t\t\t\treturn column.definition.headerFilterFunc(value, fieldVal, data, params);\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\ttype = filterFunc;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(!filterFunc){\r\n\t\t\t\t\t\tswitch(filterType){\r\n\t\t\t\t\t\t\tcase \"partial\":\r\n\t\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\t\tvar colVal = column.getFieldValue(data);\r\n\r\n\t\t\t\t\t\t\t\tif(typeof colVal !== 'undefined' && colVal !== null){\r\n\t\t\t\t\t\t\t\t\treturn String(colVal).toLowerCase().indexOf(String(value).toLowerCase()) > -1;\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\ttype = \"like\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\t\treturn column.getFieldValue(data) == value;\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\ttype = \"=\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tself.headerFilters[field] = {value:value, func:filterFunc, type:type, params:params || {}};\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdelete self.headerFilters[field];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilterChangeCheck = JSON.stringify(self.headerFilters);\r\n\r\n\t\t\t\tif(self.prevHeaderFilterChangeCheck !== filterChangeCheck){\r\n\t\t\t\t\tself.prevHeaderFilterChangeCheck = filterChangeCheck;\r\n\r\n\t\t\t\t\tself.trackChanges();\r\n\t\t\t\t\tself.refreshFilter();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tcolumn.modules.filter = {\r\n\t\t\tsuccess:success,\r\n\t\t\tattrType:false,\r\n\t\t\ttagType:false,\r\n\t\t\temptyFunc:false,\r\n\t\t};\r\n\r\n\t\tthis.generateHeaderFilterElement(column);\r\n\t}\r\n\r\n\tgenerateHeaderFilterElement(column, initialValue, reinitialize){\r\n\t\tvar self = this,\r\n\t\tsuccess = column.modules.filter.success,\r\n\t\tfield = column.getField(),\r\n\t\tfilterElement, editor, editorElement, cellWrapper, typingTimer, searchTrigger, params;\r\n\r\n\t\t//handle aborted edit\r\n\t\tfunction cancel(){}\r\n\r\n\t\tif(column.modules.filter.headerElement && column.modules.filter.headerElement.parentNode){\r\n\t\t\tcolumn.contentElement.removeChild(column.modules.filter.headerElement.parentNode);\r\n\t\t}\r\n\r\n\t\tif(field){\r\n\r\n\t\t\t//set empty value function\r\n\t\t\tcolumn.modules.filter.emptyFunc = column.definition.headerFilterEmptyCheck || function(value){\r\n\t\t\t\treturn !value && value !== \"0\" && value !== 0;\r\n\t\t\t};\r\n\r\n\t\t\tfilterElement = document.createElement(\"div\");\r\n\t\t\tfilterElement.classList.add(\"tabulator-header-filter\");\r\n\r\n\t\t\t//set column editor\r\n\t\t\tswitch(typeof column.definition.headerFilter){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(self.table.modules.edit.editors[column.definition.headerFilter]){\r\n\t\t\t\t\teditor = self.table.modules.edit.editors[column.definition.headerFilter];\r\n\r\n\t\t\t\t\tif((column.definition.headerFilter === \"tick\" || column.definition.headerFilter === \"tickCross\") && !column.definition.headerFilterEmptyCheck){\r\n\t\t\t\t\t\tcolumn.modules.filter.emptyFunc = function(value){\r\n\t\t\t\t\t\t\treturn value !== true && value !== false;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Filter Error - Cannot build header filter, No such editor found: \", column.definition.editor);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\teditor = column.definition.headerFilter;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\tif(column.modules.edit && column.modules.edit.editor){\r\n\t\t\t\t\teditor = column.modules.edit.editor;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(column.definition.formatter && self.table.modules.edit.editors[column.definition.formatter]){\r\n\t\t\t\t\t\teditor = self.table.modules.edit.editors[column.definition.formatter];\r\n\r\n\t\t\t\t\t\tif((column.definition.formatter === \"tick\" || column.definition.formatter === \"tickCross\") && !column.definition.headerFilterEmptyCheck){\r\n\t\t\t\t\t\t\tcolumn.modules.filter.emptyFunc = function(value){\r\n\t\t\t\t\t\t\t\treturn value !== true && value !== false;\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\teditor = self.table.modules.edit.editors[\"input\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(editor){\r\n\r\n\t\t\t\tcellWrapper = {\r\n\t\t\t\t\tgetValue:function(){\r\n\t\t\t\t\t\treturn typeof initialValue !== \"undefined\" ? initialValue : \"\";\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetField:function(){\r\n\t\t\t\t\t\treturn column.definition.field;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetElement:function(){\r\n\t\t\t\t\t\treturn filterElement;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetColumn:function(){\r\n\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetRow:function(){\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tnormalizeHeight:function(){\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tparams = column.definition.headerFilterParams || {};\r\n\r\n\t\t\t\tparams = typeof params === \"function\" ? params.call(self.table) : params;\r\n\r\n\t\t\t\teditorElement = editor.call(this.table.modules.edit, cellWrapper, function(){}, success, cancel, params);\r\n\r\n\t\t\t\tif(!editorElement){\r\n\t\t\t\t\tconsole.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor returned a value of false\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!(editorElement instanceof Node)){\r\n\t\t\t\t\tconsole.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor should return an instance of Node, the editor returned:\", editorElement);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set Placeholder Text\r\n\t\t\t\tif(field){\r\n\t\t\t\t\tself.langBind(\"headerFilters|columns|\" + column.definition.field, function(value){\r\n\t\t\t\t\t\teditorElement.setAttribute(\"placeholder\", typeof value !== \"undefined\" && value ? value : self.langText(\"headerFilters|default\"));\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tself.langBind(\"headerFilters|default\", function(value){\r\n\t\t\t\t\t\teditorElement.setAttribute(\"placeholder\", value);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//focus on element on click\r\n\t\t\t\teditorElement.addEventListener(\"click\", function(e){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\teditorElement.focus();\r\n\t\t\t\t});\r\n\r\n\t\t\t\teditorElement.addEventListener(\"focus\", (e) => {\r\n\t\t\t\t\tvar left = this.table.columnManager.element.scrollLeft;\r\n\r\n\t\t\t\t\tif(left !== this.table.rowManager.element.scrollLeft){\r\n\t\t\t\t\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\t\t\tthis.table.columnManager.scrollHorizontal(left);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//live update filters as user types\r\n\t\t\t\ttypingTimer = false;\r\n\r\n\t\t\t\tsearchTrigger = function(e){\r\n\t\t\t\t\tif(typingTimer){\r\n\t\t\t\t\t\tclearTimeout(typingTimer);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttypingTimer = setTimeout(function(){\r\n\t\t\t\t\t\tsuccess(editorElement.value);\r\n\t\t\t\t\t},self.table.options.headerFilterLiveFilterDelay);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcolumn.modules.filter.headerElement = editorElement;\r\n\t\t\t\tcolumn.modules.filter.attrType = editorElement.hasAttribute(\"type\") ? editorElement.getAttribute(\"type\").toLowerCase() : \"\" ;\r\n\t\t\t\tcolumn.modules.filter.tagType = editorElement.tagName.toLowerCase();\r\n\r\n\t\t\t\tif(column.definition.headerFilterLiveFilter !== false){\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!(\r\n\t\t\t\t\t\t\tcolumn.definition.headerFilter === 'autocomplete' ||\r\n\t\t\t\t\t\t\tcolumn.definition.headerFilter === 'tickCross' ||\r\n\t\t\t\t\t\t\t((column.definition.editor === 'autocomplete' ||\r\n\t\t\t\t\t\t\t\tcolumn.definition.editor === 'tickCross') &&\r\n\t\t\t\t\t\t\tcolumn.definition.headerFilter === true)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\teditorElement.addEventListener(\"keyup\", searchTrigger);\r\n\t\t\t\t\teditorElement.addEventListener(\"search\", searchTrigger);\r\n\r\n\r\n\t\t\t\t\t//update number filtered columns on change\r\n\t\t\t\t\tif(column.modules.filter.attrType == \"number\"){\r\n\t\t\t\t\t\teditorElement.addEventListener(\"change\", function(e){\r\n\t\t\t\t\t\t\tsuccess(editorElement.value);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//change text inputs to search inputs to allow for clearing of field\r\n\t\t\t\t\tif(column.modules.filter.attrType == \"text\" && this.table.browser !== \"ie\"){\r\n\t\t\t\t\t\teditorElement.setAttribute(\"type\", \"search\");\r\n\t\t\t\t\t\t// editorElement.off(\"change blur\"); //prevent blur from triggering filter and preventing selection click\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\t//prevent input and select elements from propegating click to column sorters etc\r\n\t\t\t\t\tif(column.modules.filter.tagType == \"input\" || column.modules.filter.tagType == \"select\" || column.modules.filter.tagType == \"textarea\"){\r\n\t\t\t\t\t\teditorElement.addEventListener(\"mousedown\",function(e){\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilterElement.appendChild(editorElement);\r\n\r\n\t\t\t\tcolumn.contentElement.appendChild(filterElement);\r\n\r\n\t\t\t\tif(!reinitialize){\r\n\t\t\t\t\tself.headerFilterColumns.push(column);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Filter Error - Cannot add header filter, column has no field set:\", column.definition.title);\r\n\t\t}\r\n\t}\r\n\r\n\t//hide all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\r\n\thideHeaderFilterElements(){\r\n\t\tthis.headerFilterColumns.forEach(function(column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tcolumn.modules.filter.headerElement.style.display = 'none';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//show all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\r\n\tshowHeaderFilterElements(){\r\n\t\tthis.headerFilterColumns.forEach(function(column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tcolumn.modules.filter.headerElement.style.display = '';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//programatically set focus of header filter\r\n\tsetHeaderFilterFocus(column){\r\n\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\tcolumn.modules.filter.headerElement.focus();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Focus Error - No header filter set on column:\", column.getField());\r\n\t\t}\r\n\t}\r\n\r\n\t//programmatically get value of header filter\r\n\tgetHeaderFilterValue(column){\r\n\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\treturn column.modules.filter.headerElement.value;\r\n\t\t} else {\r\n\t\t\tconsole.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\r\n\t\t}\r\n\t}\r\n\r\n\t//programatically set value of header filter\r\n\tsetHeaderFilterValue(column, value){\r\n\t\tif (column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tthis.generateHeaderFilterElement(column, value, true);\r\n\t\t\t\tcolumn.modules.filter.success(value);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treloadHeaderFilter(column){\r\n\t\tif (column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tthis.generateHeaderFilterElement(column, column.modules.filter.value, true);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trefreshFilter(){\r\n\t\tif(this.tableInitialized){\r\n\t\t\tif(this.table.options.filterMode === \"remote\"){\r\n\t\t\t\tthis.reloadData();\r\n\t\t\t}else{\r\n\t\t\t\tthis.refreshData(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//TODO - Persist left position of row manager\r\n\t\t// left = this.scrollLeft;\r\n\t\t// this.scrollHorizontal(left);\r\n\t}\r\n\r\n\t//check if the filters has changed since last use\r\n\ttrackChanges(){\r\n\t\tthis.changed = true;\r\n\t\tthis.dispatch(\"filter-changed\");\r\n\t}\r\n\r\n\t//check if the filters has changed since last use\r\n\thasChanged(){\r\n\t\tvar changed = this.changed;\r\n\t\tthis.changed = false;\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t//set standard filters\r\n\tsetFilter(field, type, value, params){\r\n\t\tthis.filterList = [];\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value, params:params}];\r\n\t\t}\r\n\r\n\t\tthis.addFilter(field);\r\n\t}\r\n\r\n\t//add filter to array\r\n\taddFilter(field, type, value, params){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value, params:params}];\r\n\t\t}\r\n\r\n\t\tfield.forEach((filter) => {\r\n\r\n\t\t\tfilter = this.findFilter(filter);\r\n\r\n\t\t\tif(filter){\r\n\t\t\t\tthis.filterList.push(filter);\r\n\t\t\t\tthis.changed = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.trackChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tfindFilter(filter){\r\n\t\tvar column;\r\n\r\n\t\tif(Array.isArray(filter)){\r\n\t\t\treturn this.findSubFilters(filter);\r\n\t\t}\r\n\r\n\t\tvar filterFunc = false;\r\n\r\n\t\tif(typeof filter.field == \"function\"){\r\n\t\t\tfilterFunc = function(data){\r\n\t\t\t\treturn filter.field(data, filter.type || {})// pass params to custom filter function\r\n\t\t\t};\r\n\t\t}else{\r\n\r\n\t\t\tif(Filter.filters[filter.type]){\r\n\r\n\t\t\t\tcolumn = this.table.columnManager.getColumnByField(filter.field);\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\treturn Filter.filters[filter.type](filter.value, column.getFieldValue(data), data, filter.params || {});\r\n\t\t\t\t\t};\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\treturn Filter.filters[filter.type](filter.value, data[filter.field], data, filter.params || {});\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Filter Error - No such filter type found, ignoring: \", filter.type);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfilter.func = filterFunc;\r\n\r\n\t\treturn filter.func ? filter : false;\r\n\t}\r\n\r\n\tfindSubFilters(filters){\r\n\t\tvar output = [];\r\n\r\n\t\tfilters.forEach((filter) => {\r\n\t\t\tfilter = this.findFilter(filter);\r\n\r\n\t\t\tif(filter){\r\n\t\t\t\toutput.push(filter);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output.length ? output : false;\r\n\t}\r\n\r\n\t//get all filters\r\n\tgetFilters(all, ajax){\r\n\t\tvar output = [];\r\n\r\n\t\tif(all){\r\n\t\t\toutput = this.getHeaderFilters();\r\n\t\t}\r\n\r\n\t\tif(ajax){\r\n\t\t\toutput.forEach(function(item){\r\n\t\t\t\tif(typeof item.type == \"function\"){\r\n\t\t\t\t\titem.type = \"function\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\toutput = output.concat(this.filtersToArray(this.filterList, ajax));\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//filter to Object\r\n\tfiltersToArray(filterList, ajax){\r\n\t\tvar output = [];\r\n\r\n\t\tfilterList.forEach((filter) => {\r\n\t\t\tvar item;\r\n\r\n\t\t\tif(Array.isArray(filter)){\r\n\t\t\t\toutput.push(this.filtersToArray(filter, ajax));\r\n\t\t\t}else{\r\n\t\t\t\titem = {field:filter.field, type:filter.type, value:filter.value}\r\n\r\n\t\t\t\tif(ajax){\r\n\t\t\t\t\tif(typeof item.type == \"function\"){\r\n\t\t\t\t\t\titem.type = \"function\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//get all filters\r\n\tgetHeaderFilters(){\r\n\t\tvar output = [];\r\n\r\n\t\tfor(var key in this.headerFilters){\r\n\t\t\toutput.push({field:key, type:this.headerFilters[key].type, value:this.headerFilters[key].value});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//remove filter from array\r\n\tremoveFilter(field, type, value){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value}];\r\n\t\t}\r\n\r\n\t\tfield.forEach((filter) => {\r\n\t\t\tvar index = -1;\r\n\r\n\t\t\tif(typeof filter.field == \"object\"){\r\n\t\t\t\tindex = this.filterList.findIndex((element) => {\r\n\t\t\t\t\treturn filter === element;\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tindex = this.filterList.findIndex((element) => {\r\n\t\t\t\t\treturn filter.field === element.field && filter.type === element.type  && filter.value === element.value;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.filterList.splice(index, 1);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Filter Error - No matching filter type found, ignoring: \", filter.type);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//clear filters\r\n\tclearFilter(all){\r\n\t\tthis.filterList = [];\r\n\r\n\t\tif(all){\r\n\t\t\tthis.clearHeaderFilter();\r\n\t\t}\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//clear header filters\r\n\tclearHeaderFilter(){\r\n\t\tthis.headerFilters = {};\r\n\t\tthis.prevHeaderFilterChangeCheck = \"{}\";\r\n\r\n\t\tthis.headerFilterColumns.forEach((column) => {\r\n\t\t\tif(typeof column.modules.filter.value !== \"undefined\"){\r\n\t\t\t\tdelete column.modules.filter.value;\r\n\t\t\t}\r\n\t\t\tcolumn.modules.filter.prevSuccess = undefined;\r\n\t\t\tthis.reloadHeaderFilter(column);\r\n\t\t});\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//search data and return matching rows\r\n\tsearch (searchType, field, type, value){\r\n\t\tvar activeRows = [],\r\n\t\tfilterList = [];\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value}];\r\n\t\t}\r\n\r\n\t\tfield.forEach((filter) => {\r\n\t\t\tfilter = this.findFilter(filter);\r\n\r\n\t\t\tif(filter){\r\n\t\t\t\tfilterList.push(filter);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\tvar match = true;\r\n\r\n\t\t\tfilterList.forEach((filter) => {\r\n\t\t\t\tif(!this.filterRecurse(filter, row.getData())){\r\n\t\t\t\t\tmatch = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(match){\r\n\t\t\t\tactiveRows.push(searchType === \"data\" ? row.getData(\"data\") : row.getComponent());\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treturn activeRows;\r\n\t}\r\n\r\n\t//filter row array\r\n\tfilter(rowList, filters){\r\n\t\tvar activeRows = [],\r\n\t\tactiveRowComponents = [];\r\n\r\n\t\tif(this.subscribedExternal(\"dataFiltering\")){\r\n\t\t\tthis.dispatchExternal(\"dataFiltering\", this.getFilters());\r\n\t\t}\r\n\r\n\t\tif(this.table.options.filterMode !== \"remote\" && (this.filterList.length || Object.keys(this.headerFilters).length)){\r\n\r\n\t\t\trowList.forEach((row) => {\r\n\t\t\t\tif(this.filterRow(row)){\r\n\t\t\t\t\tactiveRows.push(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}else{\r\n\t\t\tactiveRows = rowList.slice(0);\r\n\t\t}\r\n\r\n\t\tif(this.subscribedExternal(\"dataFiltered\")){\r\n\r\n\t\t\tactiveRows.forEach((row) => {\r\n\t\t\t\tactiveRowComponents.push(row.getComponent());\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatchExternal(\"dataFiltered\", this.getFilters(), activeRowComponents);\r\n\t\t}\r\n\r\n\t\treturn activeRows;\r\n\t}\r\n\r\n\t//filter individual row\r\n\tfilterRow(row, filters){\r\n\t\tvar match = true,\r\n\t\tdata = row.getData();\r\n\r\n\t\tthis.filterList.forEach((filter) => {\r\n\t\t\tif(!this.filterRecurse(filter, data)){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tfor(var field in this.headerFilters){\r\n\t\t\tif(!this.headerFilters[field].func(data)){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tfilterRecurse(filter, data){\r\n\t\tvar match = false;\r\n\r\n\t\tif(Array.isArray(filter)){\r\n\t\t\tfilter.forEach((subFilter) => {\r\n\t\t\t\tif(this.filterRecurse(subFilter, data)){\r\n\t\t\t\t\tmatch = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tmatch = filter.func(data);\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n}\r\n\r\nFilter.moduleName = \"filter\";\r\n\r\n//load defaults\r\nFilter.filters = defaultFilters;\r\n\r\nexport default Filter;","export default function(cell, formatterParams, onRendered){\r\n\treturn this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn cell.getValue();\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tcell.getElement().style.whiteSpace = \"pre-wrap\";\r\n\treturn this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar floatVal = parseFloat(cell.getValue()),\r\n\tsign = \"\",\r\n\tnumber, integer, decimal, rgx;\r\n\r\n\tvar decimalSym = formatterParams.decimal || \".\";\r\n\tvar thousandSym = formatterParams.thousand || \",\";\r\n\tvar negativeSign = formatterParams.negativeSign || \"-\";\r\n\tvar symbol = formatterParams.symbol || \"\";\r\n\tvar after = !!formatterParams.symbolAfter;\r\n\tvar precision = typeof formatterParams.precision !== \"undefined\" ? formatterParams.precision : 2;\r\n\r\n\tif(isNaN(floatVal)){\r\n\t\treturn this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\r\n\t}\r\n\r\n\tif(floatVal < 0){\r\n\t\tfloatVal = Math.abs(floatVal);\r\n\t\tsign = negativeSign;\r\n\t}\r\n\r\n\tnumber = precision !== false ? floatVal.toFixed(precision) : floatVal;\r\n\tnumber = String(number).split(\".\");\r\n\r\n\tinteger = number[0];\r\n\tdecimal = number.length > 1 ? decimalSym + number[1] : \"\";\r\n\r\n\trgx = /(\\d+)(\\d{3})/;\r\n\r\n\twhile (rgx.test(integer)){\r\n\t\tinteger = integer.replace(rgx, \"$1\" + thousandSym + \"$2\");\r\n\t}\r\n\r\n\treturn after ? sign + integer + decimal + symbol : sign + symbol + integer + decimal;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = cell.getValue(),\r\n\turlPrefix = formatterParams.urlPrefix || \"\",\r\n\tdownload = formatterParams.download,\r\n\tlabel = value,\r\n\tel = document.createElement(\"a\"),\r\n\tdata;\r\n\r\n\tif(formatterParams.labelField){\r\n\t\tdata = cell.getData();\r\n\t\tlabel = data[formatterParams.labelField];\r\n\t}\r\n\r\n\tif(formatterParams.label){\r\n\t\tswitch(typeof formatterParams.label){\r\n\t\t\tcase \"string\":\r\n\t\t\tlabel = formatterParams.label;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tlabel = formatterParams.label(cell);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tif(label){\r\n\t\tif(formatterParams.urlField){\r\n\t\t\tdata = cell.getData();\r\n\t\t\tvalue = data[formatterParams.urlField];\r\n\t\t}\r\n\r\n\t\tif(formatterParams.url){\r\n\t\t\tswitch(typeof formatterParams.url){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tvalue = formatterParams.url;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tvalue = formatterParams.url(cell);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tel.setAttribute(\"href\", urlPrefix + value);\r\n\r\n\t\tif(formatterParams.target){\r\n\t\t\tel.setAttribute(\"target\", formatterParams.target);\r\n\t\t}\r\n\r\n\t\tif(formatterParams.download){\r\n\r\n\t\t\tif(typeof download == \"function\"){\r\n\t\t\t\tdownload = download(cell);\r\n\t\t\t}else{\r\n\t\t\t\tdownload = download === true ? \"\" : download;\r\n\t\t\t}\r\n\r\n\t\t\tel.setAttribute(\"download\", download);\r\n\t\t}\r\n\r\n\t\tel.innerHTML = this.emptyToSpace(this.sanitizeHTML(label));\r\n\r\n\t\treturn el;\r\n\t}else{\r\n\t\treturn \"&nbsp;\";\r\n\t}\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar el = document.createElement(\"img\"),\r\n\tsrc = cell.getValue();\r\n\r\n\tif(formatterParams.urlPrefix){\r\n\t\tsrc = formatterParams.urlPrefix + cell.getValue();\r\n\t}\r\n\r\n\tif(formatterParams.urlSuffix){\r\n\t\tsrc = src + formatterParams.urlSuffix;\r\n\t}\r\n\r\n\tel.setAttribute(\"src\", src);\r\n\r\n\tswitch(typeof formatterParams.height){\r\n\t\tcase \"number\":\r\n\t\tel.style.height = formatterParams.height + \"px\";\r\n\t\tbreak;\r\n\r\n\t\tcase \"string\":\r\n\t\tel.style.height = formatterParams.height;\r\n\t\tbreak;\r\n\t}\r\n\r\n\tswitch(typeof formatterParams.width){\r\n\t\tcase \"number\":\r\n\t\tel.style.width = formatterParams.width + \"px\";\r\n\t\tbreak;\r\n\r\n\t\tcase \"string\":\r\n\t\tel.style.width = formatterParams.width;\r\n\t\tbreak;\r\n\t}\r\n\r\n\tel.addEventListener(\"load\", function(){\r\n\t\tcell.getRow().normalizeHeight();\r\n\t});\r\n\r\n\treturn el;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = cell.getValue(),\r\n\telement = cell.getElement(),\r\n\tempty = formatterParams.allowEmpty,\r\n\ttruthy = formatterParams.allowTruthy,\r\n\ttick = typeof formatterParams.tickElement !== \"undefined\" ? formatterParams.tickElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>',\r\n\tcross = typeof formatterParams.crossElement !== \"undefined\" ? formatterParams.crossElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\"  viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\r\n\r\n\tif((truthy && value) || (value === true || value === \"true\" || value === \"True\" || value === 1 || value === \"1\")){\r\n\t\telement.setAttribute(\"aria-checked\", true);\r\n\t\treturn tick || \"\";\r\n\t}else{\r\n\t\tif(empty && (value === \"null\" || value === \"\" || value === null || typeof value === \"undefined\")){\r\n\t\t\telement.setAttribute(\"aria-checked\", \"mixed\");\r\n\t\t\treturn \"\";\r\n\t\t}else{\r\n\t\t\telement.setAttribute(\"aria-checked\", false);\r\n\t\t\treturn cross || \"\";\r\n\t\t}\r\n\t}\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar DT = window.DateTime || luxon.DateTime;\r\n\tvar inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\r\n\tvar\toutputFormat = formatterParams.outputFormat || \"dd/MM/yyyy HH:mm:ss\";\r\n\tvar\tinvalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\r\n\tvar value = cell.getValue();\r\n\r\n\tif(typeof DT != \"undefined\"){\r\n\t\tvar newDatetime = DT.fromFormat(String(value), inputFormat);\r\n\r\n\t\tif(newDatetime.isValid){\r\n\r\n\t\t\tif(formatterParams.timezone){\r\n\t\t\t\tnewDatetime = newDatetime.shiftTimezone(formatterParams.timezone);\r\n\t\t\t}\r\n\r\n\t\t\treturn newDatetime.toFormat(outputFormat);\r\n\t\t}else{\r\n\r\n\t\t\tif(invalid === true || !value){\r\n\t\t\t\treturn value;\r\n\t\t\t}else if(typeof invalid === \"function\"){\r\n\t\t\t\treturn invalid(value);\r\n\t\t\t}else{\r\n\t\t\t\treturn invalid;\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.error(\"Format Error - 'datetime' formatter is dependant on luxon.js\");\r\n\t}\r\n};","export default function (cell, formatterParams, onRendered) {\r\n\tvar DT = window.DateTime || luxon.DateTime;\r\n\tvar inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\r\n\tvar invalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\r\n\tvar suffix = typeof formatterParams.suffix !== \"undefined\" ? formatterParams.suffix : false;\r\n\tvar unit = typeof formatterParams.unit !== \"undefined\" ? formatterParams.unit : \"days\";\r\n\tvar humanize = typeof formatterParams.humanize !== \"undefined\" ? formatterParams.humanize : false;\r\n\tvar date = typeof formatterParams.date !== \"undefined\" ? formatterParams.date : DT.now();\r\n\tvar value = cell.getValue();\r\n\r\n\tif(typeof DT != \"undefined\"){\r\n\t\tvar newDatetime = DT.fromFormat(String(value), inputFormat);\r\n\r\n\t\tif (newDatetime.isValid){\r\n\t\t\tif(humanize){\r\n\t\t\t\t// return moment.duration(newDatetime.diff(date)).humanize(suffix);\r\n\t\t\t}else{\r\n\t\t\t\treturn parseInt(newDatetime.diff(date, unit)[unit]) + (suffix ? \" \" + suffix : \"\");\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tif (invalid === true) {\r\n\t\t\t\treturn value;\r\n\t\t\t} else if (typeof invalid === \"function\") {\r\n\t\t\t\treturn invalid(value);\r\n\t\t\t} else {\r\n\t\t\t\treturn invalid;\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.error(\"Format Error - 'datetimediff' formatter is dependant on luxon.js\");\r\n\t}\r\n};","export default function (cell, formatterParams, onRendered) {\r\n\tvar value = cell.getValue();\r\n\r\n\tif (typeof formatterParams[value] === \"undefined\") {\r\n\t\tconsole.warn('Missing display value for ' + value);\r\n\t\treturn value;\r\n\t}\r\n\r\n\treturn formatterParams[value];\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = cell.getValue(),\r\n\telement = cell.getElement(),\r\n\tmaxStars = formatterParams && formatterParams.stars ? formatterParams.stars : 5,\r\n\tstars = document.createElement(\"span\"),\r\n\tstar = document.createElementNS('http://www.w3.org/2000/svg', \"svg\"),\r\n\tstarActive = '<polygon fill=\"#FFEA00\" stroke=\"#C1AB60\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>',\r\n\tstarInactive = '<polygon fill=\"#D2D2D2\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\r\n\r\n\t//style stars holder\r\n\tstars.style.verticalAlign = \"middle\";\r\n\r\n\t//style star\r\n\tstar.setAttribute(\"width\", \"14\");\r\n\tstar.setAttribute(\"height\", \"14\");\r\n\tstar.setAttribute(\"viewBox\", \"0 0 512 512\");\r\n\tstar.setAttribute(\"xml:space\", \"preserve\");\r\n\tstar.style.padding = \"0 1px\";\r\n\r\n\tvalue = value && !isNaN(value) ? parseInt(value) : 0;\r\n\r\n\tvalue = Math.max(0, Math.min(value, maxStars));\r\n\r\n\tfor(var i=1;i<= maxStars;i++){\r\n\t\tvar nextStar = star.cloneNode(true);\r\n\t\tnextStar.innerHTML = i <= value ? starActive : starInactive;\r\n\r\n\t\tstars.appendChild(nextStar);\r\n\t}\r\n\r\n\telement.style.whiteSpace = \"nowrap\";\r\n\telement.style.overflow = \"hidden\";\r\n\telement.style.textOverflow = \"ellipsis\";\r\n\r\n\telement.setAttribute(\"aria-label\", value);\r\n\r\n\treturn stars;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = this.sanitizeHTML(cell.getValue()) || 0,\r\n\tel = document.createElement(\"span\"),\r\n\tmax = formatterParams && formatterParams.max ? formatterParams.max : 100,\r\n\tmin = formatterParams && formatterParams.min ? formatterParams.min : 0,\r\n\tcolors = formatterParams && typeof formatterParams.color !== \"undefined\" ? formatterParams.color : [\"red\", \"orange\", \"green\"],\r\n\tcolor = \"#666666\",\r\n\tpercent, percentValue;\r\n\r\n\tif(isNaN(value) || typeof cell.getValue() === \"undefined\"){\r\n\t\treturn;\r\n\t}\r\n\r\n\tel.classList.add(\"tabulator-traffic-light\");\r\n\r\n\t//make sure value is in range\r\n\tpercentValue = parseFloat(value) <= max ? parseFloat(value) : max;\r\n\tpercentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min;\r\n\r\n\t//workout percentage\r\n\tpercent = (max - min) / 100;\r\n\tpercentValue = Math.round((percentValue - min) / percent);\r\n\r\n\t//set color\r\n\tswitch(typeof colors){\r\n\t\tcase \"string\":\r\n\t\tcolor = colors;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tcolor = colors(value);\r\n\t\tbreak;\r\n\t\tcase \"object\":\r\n\t\tif(Array.isArray(colors)){\r\n\t\t\tvar unit = 100 / colors.length;\r\n\t\t\tvar index = Math.floor(percentValue / unit);\r\n\r\n\t\t\tindex = Math.min(index, colors.length - 1);\r\n\t\t\tindex = Math.max(index, 0);\r\n\t\t\tcolor = colors[index];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tel.style.backgroundColor = color;\r\n\r\n\treturn el;\r\n};","import CellComponent from '../../../../core/cell/CellComponent.js';\r\n\r\nexport default function(cell, formatterParams, onRendered){ //progress bar\r\n\tvar value = this.sanitizeHTML(cell.getValue()) || 0,\r\n\telement = cell.getElement(),\r\n\tmax = formatterParams && formatterParams.max ? formatterParams.max : 100,\r\n\tmin = formatterParams && formatterParams.min ? formatterParams.min : 0,\r\n\tlegendAlign = formatterParams && formatterParams.legendAlign ? formatterParams.legendAlign : \"center\",\r\n\tpercent, percentValue, color, legend, legendColor, top, left, right, bottom;\r\n\r\n\t//make sure value is in range\r\n\tpercentValue = parseFloat(value) <= max ? parseFloat(value) : max;\r\n\tpercentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min;\r\n\r\n\t//workout percentage\r\n\tpercent = (max - min) / 100;\r\n\tpercentValue = Math.round((percentValue - min) / percent);\r\n\r\n\t//set bar color\r\n\tswitch(typeof formatterParams.color){\r\n\t\tcase \"string\":\r\n\t\tcolor = formatterParams.color;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tcolor = formatterParams.color(value);\r\n\t\tbreak;\r\n\t\tcase \"object\":\r\n\t\tif(Array.isArray(formatterParams.color)){\r\n\t\t\tvar unit = 100 / formatterParams.color.length;\r\n\t\t\tvar index = Math.floor(percentValue / unit);\r\n\r\n\t\t\tindex = Math.min(index, formatterParams.color.length - 1);\r\n\t\t\tindex = Math.max(index, 0);\r\n\t\t\tcolor = formatterParams.color[index];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault:\r\n\t\tcolor = \"#2DC214\";\r\n\t}\r\n\r\n\t//generate legend\r\n\tswitch(typeof formatterParams.legend){\r\n\t\tcase \"string\":\r\n\t\tlegend = formatterParams.legend;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tlegend = formatterParams.legend(value);\r\n\t\tbreak;\r\n\t\tcase \"boolean\":\r\n\t\tlegend = value;\r\n\t\tbreak;\r\n\t\tdefault:\r\n\t\tlegend = false;\r\n\t}\r\n\r\n\t//set legend color\r\n\tswitch(typeof formatterParams.legendColor){\r\n\t\tcase \"string\":\r\n\t\tlegendColor = formatterParams.legendColor;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tlegendColor = formatterParams.legendColor(value);\r\n\t\tbreak;\r\n\t\tcase \"object\":\r\n\t\tif(Array.isArray(formatterParams.legendColor)){\r\n\t\t\tvar unit = 100 / formatterParams.legendColor.length;\r\n\t\t\tvar index = Math.floor(percentValue / unit);\r\n\r\n\t\t\tindex = Math.min(index, formatterParams.legendColor.length - 1);\r\n\t\t\tindex = Math.max(index, 0);\r\n\t\t\tlegendColor = formatterParams.legendColor[index];\r\n\t\t}\r\n\t\tbreak;\r\n\t\tdefault:\r\n\t\tlegendColor = \"#000\";\r\n\t}\r\n\r\n\telement.style.minWidth = \"30px\";\r\n\telement.style.position = \"relative\";\r\n\r\n\telement.setAttribute(\"aria-label\", percentValue);\r\n\r\n\tvar barEl = document.createElement(\"div\");\r\n\tbarEl.style.display = \"inline-block\";\r\n\tbarEl.style.position = \"absolute\";\r\n\tbarEl.style.width = percentValue + \"%\";\r\n\tbarEl.style.backgroundColor = color;\r\n\tbarEl.style.height = \"100%\";\r\n\r\n\tbarEl.setAttribute('data-max', max);\r\n\tbarEl.setAttribute('data-min', min);\r\n\r\n\tvar barContainer = document.createElement(\"div\");\r\n\tbarContainer.style.position = \"relative\";\r\n\tbarContainer.style.width = \"100%\";\r\n\tbarContainer.style.height = \"100%\";\r\n\r\n\tif(legend){\r\n\t\tvar legendEl = document.createElement(\"div\");\r\n\t\tlegendEl.style.position = \"absolute\";\r\n\t\tlegendEl.style.top = 0;\r\n\t\tlegendEl.style.left = 0;\r\n\t\tlegendEl.style.textAlign = legendAlign;\r\n\t\tlegendEl.style.width = \"100%\";\r\n\t\tlegendEl.style.color = legendColor;\r\n\t\tlegendEl.innerHTML = legend;\r\n\t}\r\n\r\n\tonRendered(function(){\r\n\r\n\t\t//handle custom element needed if formatter is to be included in printed/downloaded output\r\n\t\tif(!(cell instanceof CellComponent)){\r\n\t\t\tvar holderEl = document.createElement(\"div\");\r\n\t\t\tholderEl.style.position = \"absolute\";\r\n\t\t\tholderEl.style.top = \"4px\";\r\n\t\t\tholderEl.style.bottom = \"4px\";\r\n\t\t\tholderEl.style.left = \"4px\";\r\n\t\t\tholderEl.style.right = \"4px\";\r\n\r\n\t\t\telement.appendChild(holderEl);\r\n\r\n\t\t\telement = holderEl;\r\n\t\t}\r\n\r\n\t\telement.appendChild(barContainer);\r\n\t\tbarContainer.appendChild(barEl);\r\n\r\n\t\tif(legend){\r\n\t\t\tbarContainer.appendChild(legendEl);\r\n\t\t}\r\n\t});\r\n\r\n\treturn \"\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tcell.getElement().style.backgroundColor = this.sanitizeHTML(cell.getValue());\r\n\treturn \"\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>';\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn this.table.rowManager.activeRows.indexOf(cell.getRow()._getSelf()) + 1;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tcell.getElement().classList.add(\"tabulator-row-handle\");\r\n\treturn \"<div class='tabulator-row-handle-box'><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div></div>\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar open = false,\r\n\tel = document.createElement(\"div\"),\r\n\tconfig = cell.getRow()._row.modules.responsiveLayout;\r\n\r\n\tel.classList.add(\"tabulator-responsive-collapse-toggle\");\r\n\tel.innerHTML = \"<span class='tabulator-responsive-collapse-toggle-open'>+</span><span class='tabulator-responsive-collapse-toggle-close'>-</span>\";\r\n\r\n\tcell.getElement().classList.add(\"tabulator-row-handle\");\r\n\r\n\tfunction toggleList(isOpen){\r\n\t\tvar collapseEl = config.element;\r\n\r\n\t\tconfig.open = isOpen;\r\n\r\n\t\tif(collapseEl){\r\n\r\n\t\t\tif(config.open){\r\n\t\t\t\tel.classList.add(\"open\");\r\n\t\t\t\tcollapseEl.style.display = '';\r\n\t\t\t}else{\r\n\t\t\t\tel.classList.remove(\"open\");\r\n\t\t\t\tcollapseEl.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tel.addEventListener(\"click\", function(e){\r\n\t\te.stopImmediatePropagation();\r\n\t\ttoggleList(!config.open);\r\n\t});\r\n\r\n\ttoggleList(config.open);\r\n\r\n\treturn el;\r\n};","import RowComponent from '../../../../core/row/RowComponent.js';\r\n\r\nexport default function(cell, formatterParams, onRendered){\r\n\tvar checkbox = document.createElement(\"input\");\r\n\r\n\tcheckbox.type = 'checkbox';\r\n\r\n\tif(this.table.modExists(\"selectRow\", true)){\r\n\r\n\t\tcheckbox.addEventListener(\"click\", (e) => {\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tif(typeof cell.getRow == 'function'){\r\n\t\t\tvar row = cell.getRow();\r\n\r\n\t\t\tif(row instanceof RowComponent){\r\n\r\n\t\t\t\tcheckbox.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\trow.toggleSelect();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckbox.checked = row.isSelected && row.isSelected();\r\n\t\t\t\tthis.table.modules.selectRow.registerRowSelectCheckbox(row, checkbox);\r\n\t\t\t}else{\r\n\t\t\t\tcheckbox = \"\";\r\n\t\t\t}\r\n\t\t}else {\r\n\t\t\tcheckbox.addEventListener(\"change\", (e) => {\r\n\t\t\t\tif(this.table.modules.selectRow.selectedRows.length){\r\n\t\t\t\t\tthis.table.deselectRow();\r\n\t\t\t\t}else {\r\n\t\t\t\t\tthis.table.selectRow(formatterParams.rowRange);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.table.modules.selectRow.registerHeaderSelectCheckbox(checkbox);\r\n\t\t}\r\n\t}\r\n\r\n\treturn checkbox;\r\n};","import plaintext from './formatters/plaintext.js';\r\nimport html from './formatters/html.js';\r\nimport textarea from './formatters/textarea.js';\r\nimport money from './formatters/money.js';\r\nimport link from './formatters/link.js';\r\nimport image from './formatters/image.js';\r\nimport tickCross from './formatters/tickCross.js';\r\nimport datetime from './formatters/datetime.js';\r\nimport datetimediff from './formatters/datetimediff.js';\r\nimport lookup from './formatters/lookup.js';\r\nimport star from './formatters/star.js';\r\nimport traffic from './formatters/traffic.js';\r\nimport progress from './formatters/progress.js';\r\nimport color from './formatters/color.js';\r\nimport buttonTick from './formatters/buttonTick.js';\r\nimport buttonCross from './formatters/buttonCross.js';\r\nimport rownum from './formatters/rownum.js';\r\nimport handle from './formatters/handle.js';\r\nimport responsiveCollapse from './formatters/responsiveCollapse.js';\r\nimport rowSelection from './formatters/rowSelection.js';\r\n\r\nexport default {\r\n\tplaintext:plaintext,\r\n\thtml:html,\r\n\ttextarea:textarea,\r\n\tmoney:money,\r\n\tlink:link,\r\n\timage:image,\r\n\ttickCross:tickCross,\r\n\tdatetime:datetime,\r\n\tdatetimediff:datetimediff,\r\n\tlookup:lookup,\r\n\tstar:star,\r\n\ttraffic:traffic,\r\n\tprogress:progress,\r\n\tcolor:color,\r\n\tbuttonTick:buttonTick,\r\n\tbuttonCross:buttonCross,\r\n\trownum:rownum,\r\n\thandle:handle,\r\n\tresponsiveCollapse:responsiveCollapse,\r\n\trowSelection:rowSelection,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultFormatters from './defaults/formatters.js';\r\n\r\nclass Format extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.registerColumnOption(\"formatter\");\r\n\t\tthis.registerColumnOption(\"formatterParams\");\r\n\r\n\t\tthis.registerColumnOption(\"formatterPrint\");\r\n\t\tthis.registerColumnOption(\"formatterPrintParams\");\r\n\t\tthis.registerColumnOption(\"formatterClipboard\");\r\n\t\tthis.registerColumnOption(\"formatterClipboardParams\");\r\n\t\tthis.registerColumnOption(\"formatterHtmlOutput\");\r\n\t\tthis.registerColumnOption(\"formatterHtmlOutputParams\");\r\n\t\tthis.registerColumnOption(\"titleFormatter\");\r\n\t\tthis.registerColumnOption(\"titleFormatterParams\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-format\", this.formatValue.bind(this));\r\n\t\tthis.subscribe(\"cell-rendered\", this.cellRendered.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"column-format\", this.formatHeader.bind(this));\r\n\t}\r\n\r\n\t//initialize column formatter\r\n\tinitializeColumn(column){\r\n\t\tcolumn.modules.format = this.lookupFormatter(column, \"\");\r\n\r\n\t\tif(typeof column.definition.formatterPrint !== \"undefined\"){\r\n\t\t\tcolumn.modules.format.print = this.lookupFormatter(column, \"Print\");\r\n\t\t}\r\n\r\n\t\tif(typeof column.definition.formatterClipboard !== \"undefined\"){\r\n\t\t\tcolumn.modules.format.clipboard = this.lookupFormatter(column, \"Clipboard\");\r\n\t\t}\r\n\r\n\t\tif(typeof column.definition.formatterHtmlOutput !== \"undefined\"){\r\n\t\t\tcolumn.modules.format.htmlOutput = this.lookupFormatter(column, \"HtmlOutput\");\r\n\t\t}\r\n\t}\r\n\r\n\tlookupFormatter(column, type){\r\n\t\tvar config = {params:column.definition[\"formatter\" + type + \"Params\"] || {}},\r\n\t\tformatter = column.definition[\"formatter\" + type];\r\n\r\n\t\t//set column formatter\r\n\t\tswitch(typeof formatter){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Format.formatters[formatter]){\r\n\t\t\t\tconfig.formatter = Format.formatters[formatter];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Formatter Error - No such formatter found: \", formatter);\r\n\t\t\t\tconfig.formatter = Format.formatters.plaintext;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tconfig.formatter = formatter;\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tconfig.formatter = Format.formatters.plaintext;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn config;\r\n\t}\r\n\r\n\tcellRendered(cell){\r\n\t\tif(cell.modules.format && cell.modules.format.renderedCallback && !cell.modules.format.rendered){\r\n\t\t\tcell.modules.format.renderedCallback();\r\n\t\t\tcell.modules.format.rendered = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//return a formatted value for a column header\r\n\tformatHeader(column, title, el){\r\n\t\tvar formatter, params, onRendered, mockCell;\r\n\r\n\t\tif(column.definition.titleFormatter){\r\n\t\t\tformatter = this.getFormatter(column.definition.titleFormatter);\r\n\r\n\t\t\tonRendered = (callback) => {\r\n\t\t\t\tcolumn.titleFormatterRendered = callback;\r\n\t\t\t};\r\n\r\n\t\t\tmockCell = {\r\n\t\t\t\tgetValue:function(){\r\n\t\t\t\t\treturn title;\r\n\t\t\t\t},\r\n\t\t\t\tgetElement:function(){\r\n\t\t\t\t\treturn el;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tparams = column.definition.titleFormatterParams || {};\r\n\r\n\t\t\tparams = typeof params === \"function\" ? params() : params;\r\n\r\n\t\t\treturn formatter.call(this, mockCell, params, onRendered);\r\n\t\t}else{\r\n\t\t\treturn title;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//return a formatted value for a cell\r\n\tformatValue(cell){\r\n\t\tvar component = cell.getComponent(),\r\n\t\tparams = typeof cell.column.modules.format.params === \"function\" ? cell.column.modules.format.params(component) : cell.column.modules.format.params;\r\n\r\n\t\tfunction onRendered(callback){\r\n\t\t\tif(!cell.modules.format){\r\n\t\t\t\tcell.modules.format = {};\r\n\t\t\t}\r\n\r\n\t\t\tcell.modules.format.renderedCallback = callback;\r\n\t\t\tcell.modules.format.rendered = false;\r\n\t\t}\r\n\r\n\t\treturn cell.column.modules.format.formatter.call(this, component, params, onRendered);\r\n\t}\r\n\r\n\tformatExportValue(cell, type){\r\n\t\tvar formatter = cell.column.modules.format[type],\r\n\t\tparams;\r\n\r\n\t\tif(formatter){\r\n\t\t\tparams = typeof formatter.params === \"function\" ? formatter.params(component) : formatter.params;\r\n\r\n\t\t\tfunction onRendered(callback){\r\n\t\t\t\tif(!cell.modules.format){\r\n\t\t\t\t\tcell.modules.format = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcell.modules.format.renderedCallback = callback;\r\n\t\t\t\tcell.modules.format.rendered = false;\r\n\t\t\t}\r\n\r\n\t\t\treturn formatter.formatter.call(this, cell.getComponent(), params, onRendered);\r\n\r\n\t\t}else{\r\n\t\t\treturn this.formatValue(cell);\r\n\t\t}\r\n\t}\r\n\r\n\tsanitizeHTML(value){\r\n\t\tif(value){\r\n\t\t\tvar entityMap = {\r\n\t\t\t\t'&': '&amp;',\r\n\t\t\t\t'<': '&lt;',\r\n\t\t\t\t'>': '&gt;',\r\n\t\t\t\t'\"': '&quot;',\r\n\t\t\t\t\"'\": '&#39;',\r\n\t\t\t\t'/': '&#x2F;',\r\n\t\t\t\t'`': '&#x60;',\r\n\t\t\t\t'=': '&#x3D;'\r\n\t\t\t};\r\n\r\n\t\t\treturn String(value).replace(/[&<>\"'`=\\/]/g, function (s) {\r\n\t\t\t\treturn entityMap[s];\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\r\n\temptyToSpace(value){\r\n\t\treturn value === null || typeof value === \"undefined\" || value === \"\" ? \"&nbsp;\" : value;\r\n\t}\r\n\r\n\t//get formatter for cell\r\n\tgetFormatter(formatter){\r\n\t\tvar formatter;\r\n\r\n\t\tswitch(typeof formatter){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Format.formatters[formatter]){\r\n\t\t\t\tformatter = Format.formatters[formatter]\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Formatter Error - No such formatter found: \", formatter);\r\n\t\t\t\tformatter = Format.formatters.plaintext;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tformatter = formatter;\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tformatter = Format.formatters.plaintext;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn formatter;\r\n\t}\r\n}\r\n\r\nFormat.moduleName = \"format\";\r\n\r\n//load defaults\r\nFormat.formatters = defaultFormatters;\r\n\r\nexport default Format;","import Module from '../../core/Module.js';\r\n\r\nclass FrozenColumns extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.leftColumns = [];\r\n\t\tthis.rightColumns = [];\r\n\t\tthis.leftMargin = 0;\r\n\t\tthis.rightMargin = 0;\r\n\t\tthis.rightPadding = 0;\r\n\t\tthis.initializationMode = \"left\";\r\n\t\tthis.active = false;\r\n\t\tthis.scrollEndTimer = false;\r\n\r\n\t\tthis.registerColumnOption(\"frozen\");\r\n\t}\r\n\r\n\t//reset initial state\r\n\treset(){\r\n\t\tthis.initializationMode = \"left\";\r\n\t\tthis.leftColumns = [];\r\n\t\tthis.rightColumns = [];\r\n\t\tthis.leftMargin = 0;\r\n\t\tthis.rightMargin = 0;\r\n\t\tthis.rightMargin = 0;\r\n\t\tthis.active = false;\r\n\r\n\t\tthis.table.columnManager.headersElement.style.marginLeft = 0;\r\n\t\tthis.table.columnManager.element.style.paddingRight = 0;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-layout\", this.layoutCell.bind(this));\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"column-width\", this.layout.bind(this));\r\n\t\tthis.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\r\n\t\tthis.subscribe(\"table-layout\", this.layout.bind(this));\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t\tthis.subscribe(\"columns-loading\", this.reset.bind(this));\r\n\t\tthis.subscribe(\"table-redraw\", this.layout.bind(this));\r\n\t}\r\n\r\n\tlayoutCell(cell){\r\n\t\tthis.layoutElement(cell.element, cell.column)\r\n\t}\r\n\r\n\t//initialize specific column\r\n\tinitializeColumn(column){\r\n\t\tvar config = {margin:0, edge:false};\r\n\r\n\t\tif(!column.isGroup){\r\n\r\n\t\t\tif(this.frozenCheck(column)){\r\n\r\n\t\t\t\tconfig.position = this.initializationMode;\r\n\r\n\t\t\t\tif(this.initializationMode == \"left\"){\r\n\t\t\t\t\tthis.leftColumns.push(column);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.rightColumns.unshift(column);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.active = true;\r\n\r\n\t\t\t\tcolumn.modules.frozen = config;\r\n\t\t\t}else{\r\n\t\t\t\tthis.initializationMode = \"right\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfrozenCheck(column){\r\n\t\tvar frozen = false;\r\n\r\n\t\tif(column.parent.isGroup && column.definition.frozen){\r\n\t\t\tconsole.warn(\"Frozen Column Error - Parent column group must be frozen, not individual columns or sub column groups\");\r\n\t\t}\r\n\r\n\t\tif(column.parent.isGroup){\r\n\t\t\treturn this.frozenCheck(column.parent);\r\n\t\t}else{\r\n\t\t\treturn column.definition.frozen;\r\n\t\t}\r\n\r\n\t\treturn frozen;\r\n\t}\r\n\r\n\t//quick layout to smooth horizontal scrolling\r\n\tscrollHorizontal(){\r\n\t\tvar rows;\r\n\r\n\t\tif(this.active){\r\n\t\t\tclearTimeout(this.scrollEndTimer);\r\n\r\n\t\t\t//layout all rows after scroll is complete\r\n\t\t\tthis.scrollEndTimer = setTimeout(() => {\r\n\t\t\t\tthis.layout();\r\n\t\t\t}, 100);\r\n\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\r\n\t\t\tthis.calcMargins();\r\n\r\n\t\t\tthis.layoutColumnPosition();\r\n\r\n\t\t\tthis.layoutCalcRows();\r\n\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type === \"row\"){\r\n\t\t\t\t\tthis.layoutRow(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.table.rowManager.tableElement.style.marginRight = this.rightMargin;\r\n\t\t}\r\n\t}\r\n\r\n\t//calculate margins for rows\r\n\tcalcMargins(){\r\n\t\tthis.leftMargin = this._calcSpace(this.leftColumns, this.leftColumns.length) + \"px\";\r\n\t\tthis.table.columnManager.headersElement.style.marginLeft = this.leftMargin;\r\n\r\n\t\tthis.rightMargin = this._calcSpace(this.rightColumns, this.rightColumns.length) + \"px\";\r\n\t\tthis.table.columnManager.element.style.paddingRight = this.rightMargin;\r\n\r\n\t\t//calculate right frozen columns\r\n\t\tthis.rightPadding = this.table.rowManager.element.clientWidth + this.table.columnManager.scrollLeft;\r\n\t}\r\n\r\n\t//layout calculation rows\r\n\tlayoutCalcRows(){\r\n\t\tif(this.table.modExists(\"columnCalcs\")){\r\n\t\t\tif(this.table.modules.columnCalcs.topInitialized && this.table.modules.columnCalcs.topRow){\r\n\t\t\t\tthis.layoutRow(this.table.modules.columnCalcs.topRow);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modules.columnCalcs.botInitialized && this.table.modules.columnCalcs.botRow){\r\n\t\t\t\tthis.layoutRow(this.table.modules.columnCalcs.botRow);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"groupRows\")){\r\n\t\t\t\tthis.layoutGroupCalcs(this.table.modules.groupRows.getGroups())\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutGroupCalcs(groups){\r\n\t\tgroups.forEach((group) => {\r\n\t\t\tif(group.calcs.top){\r\n\t\t\t\tthis.layoutRow(group.calcs.top);\r\n\t\t\t}\r\n\r\n\t\t\tif(group.calcs.bottom){\r\n\t\t\t\tthis.layoutRow(group.calcs.bottom);\r\n\t\t\t}\r\n\r\n\t\t\tif(group.groupList && group.groupList.length){\r\n\t\t\t\tthis.layoutGroupCalcs(group.groupList && group.groupList);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//calculate column positions and layout headers\r\n\tlayoutColumnPosition(allCells){\r\n\r\n\t\tvar leftParents = [];\r\n\r\n\t\tthis.leftColumns.forEach((column, i) => {\r\n\t\t\tcolumn.modules.frozen.margin = (this._calcSpace(this.leftColumns, i) + this.table.columnManager.scrollLeft) + \"px\";\r\n\r\n\t\t\tif(i == this.leftColumns.length - 1){\r\n\t\t\t\tcolumn.modules.frozen.edge = true;\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.modules.frozen.edge = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(column.parent.isGroup){\r\n\t\t\t\tvar parentEl = this.getColGroupParentElement(column);\r\n\t\t\t\tif(!leftParents.includes(parentEl)){\r\n\t\t\t\t\tthis.layoutElement(parentEl, column);\r\n\t\t\t\t\tleftParents.push(parentEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(column.modules.frozen.edge){\r\n\t\t\t\t\tparentEl.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.layoutElement(column.getElement(), column);\r\n\t\t\t}\r\n\r\n\t\t\tif(allCells){\r\n\t\t\t\tcolumn.cells.forEach((cell) => {\r\n\t\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.rightColumns.forEach((column, i) => {\r\n\t\t\tcolumn.modules.frozen.margin = (this.rightPadding - this._calcSpace(this.rightColumns, i + 1)) + \"px\";\r\n\r\n\t\t\tif(i == this.rightColumns.length - 1){\r\n\t\t\t\tcolumn.modules.frozen.edge = true;\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.modules.frozen.edge = false;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif(column.parent.isGroup){\r\n\t\t\t\tthis.layoutElement(this.getColGroupParentElement(column), column);\r\n\t\t\t}else{\r\n\t\t\t\tthis.layoutElement(column.getElement(), column);\r\n\t\t\t}\r\n\r\n\t\t\tif(allCells){\r\n\t\t\t\tcolumn.cells.forEach((cell) => {\r\n\t\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgetColGroupParentElement(column){\r\n\t\treturn column.parent.isGroup ? this.getColGroupParentElement(column.parent) : column.getElement();\r\n\t}\r\n\r\n\t//layout columns appropropriatly\r\n\tlayout(){\r\n\t\tvar rightMargin = 0;\r\n\r\n\t\tif(this.active){\r\n\r\n\t\t\t//calculate row padding\r\n\t\t\tthis.calcMargins();\r\n\r\n\t\t\tthis.table.rowManager.getDisplayRows().forEach((row) =>{\r\n\t\t\t\tif(row.type === \"row\"){\r\n\t\t\t\t\tthis.layoutRow(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.layoutCalcRows();\r\n\r\n\t\t\t//calculate left columns\r\n\t\t\tthis.layoutColumnPosition(true);\r\n\r\n\t\t\tthis.table.rowManager.tableElement.style.marginRight = this.rightMargin;\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutRow(row){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\trowEl.style.paddingLeft = this.leftMargin;\r\n\r\n\t\tthis.leftColumns.forEach((column) => {\r\n\t\t\tvar cell = row.getCell(column);\r\n\r\n\t\t\tif(cell){\r\n\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.rightColumns.forEach((column) => {\r\n\t\t\tvar cell = row.getCell(column);\r\n\r\n\t\t\tif(cell){\r\n\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tlayoutElement(element, column){\r\n\r\n\t\tif(column.modules.frozen){\r\n\t\t\telement.style.position = \"absolute\";\r\n\t\t\telement.style.left = column.modules.frozen.margin;\r\n\r\n\t\t\telement.classList.add(\"tabulator-frozen\");\r\n\r\n\t\t\tif(column.modules.frozen.edge){\r\n\t\t\t\telement.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_calcSpace(columns, index){\r\n\t\tvar width = 0;\r\n\r\n\t\tfor (let i = 0; i < index; i++){\r\n\t\t\tif(columns[i].visible){\r\n\t\t\t\twidth += columns[i].getWidth();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn width;\r\n\t}\r\n}\r\n\r\nFrozenColumns.moduleName = \"frozenColumns\";\r\n\r\nexport default FrozenColumns;","import Module from '../../core/Module.js';\r\n\r\nclass FrozenRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.topElement = document.createElement(\"div\");\r\n\t\tthis.rows = [];\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"freeze\", this.freezeRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"unfreeze\", this.unfreezeRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"isFrozen\", this.isRowFrozen.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.rows = [];\r\n\r\n\t\tthis.topElement.classList.add(\"tabulator-frozen-rows-holder\");\r\n\r\n\t\t// this.table.columnManager.element.append(this.topElement);\r\n\t\tthis.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\r\n\r\n\t\tthis.subscribe(\"row-deleting\", this.detachRow.bind(this));\r\n\r\n\t\tthis.registerDisplayHandler(this.getRows.bind(this), 10);\r\n\t}\r\n\r\n\tisRowFrozen(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\t\treturn index > -1;\r\n\t}\r\n\r\n\tisFrozen(){\r\n\t\treturn !!this.rows.length;\r\n\t}\r\n\r\n\t//filter frozen rows out of display data\r\n\tgetRows(rows){\r\n\t\tvar self = this,\r\n\t\tfrozen = [],\r\n\t\toutput = rows.slice(0);\r\n\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\tvar index = output.indexOf(row);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\toutput.splice(index, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tfreezeRow(row){\r\n\t\tif(!row.modules.frozen){\r\n\t\t\trow.modules.frozen = true;\r\n\t\t\tthis.topElement.appendChild(row.getElement());\r\n\t\t\trow.initialize();\r\n\t\t\trow.normalizeHeight();\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\r\n\t\t\tthis.rows.push(row);\r\n\r\n\t\t\tthis.refreshData(false, \"display\")\r\n\r\n\t\t\tthis.styleRows();\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Freeze Error - Row is already frozen\");\r\n\t\t}\r\n\t}\r\n\r\n\tunfreezeRow(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\r\n\t\tif(row.modules.frozen){\r\n\r\n\t\t\trow.modules.frozen = false;\r\n\r\n\t\t\tthis.detachRow(row);\r\n\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\r\n\t\t\tthis.refreshData(false, \"display\")\r\n\r\n\t\t\tif(this.rows.length){\r\n\t\t\t\tthis.styleRows();\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Freeze Error - Row is already unfrozen\");\r\n\t\t}\r\n\t}\r\n\r\n\tdetachRow(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tvar rowEl = row.getElement();\r\n\r\n\t\t\tif(rowEl.parentNode){\r\n\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t}\r\n\r\n\t\t\tthis.rows.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tstyleRows(row){\r\n\t\tthis.rows.forEach((row, i) => {\r\n\t\t\tthis.table.rowManager.styleRow(row, i);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nFrozenRows.moduleName = \"frozenRows\";\r\n\r\nexport default FrozenRows;","//public group object\r\nclass GroupComponent {\r\n\tconstructor (group){\r\n\t\tthis._group = group;\r\n\t\tthis.type = \"GroupComponent\";\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._group.table.componentFunctionBinder.handle(\"row\", target._group, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetKey(){\r\n\t\treturn this._group.key;\r\n\t}\r\n\r\n\tgetField(){\r\n\t\treturn this._group.field;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._group.element;\r\n\t}\r\n\r\n\tgetRows(){\r\n\t\treturn this._group.getRows(true);\r\n\t}\r\n\r\n\tgetSubGroups(){\r\n\t\treturn this._group.getSubGroups(true);\r\n\t}\r\n\r\n\tgetParentGroup(){\r\n\t\treturn this._group.parent ? this._group.parent.getComponent() : false;\r\n\t}\r\n\r\n\tisVisible(){\r\n\t\treturn this._group.visible;\r\n\t}\r\n\r\n\tshow(){\r\n\t\tthis._group.show();\r\n\t}\r\n\r\n\thide(){\r\n\t\tthis._group.hide();\r\n\t}\r\n\r\n\ttoggle(){\r\n\t\tthis._group.toggleVisibility();\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._group;\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._group.groupManager.table;\r\n\t}\r\n}\r\n\r\nexport default GroupComponent;","import Helpers from '../../core/tools/Helpers.js';\r\nimport GroupComponent from './GroupComponent.js';\r\n\r\n//Group functions\r\nclass Group{\r\n\r\n\tconstructor(groupManager, parent, level, key, field, generator, oldGroup){\r\n\t\tthis.groupManager = groupManager;\r\n\t\tthis.parent = parent;\r\n\t\tthis.key = key;\r\n\t\tthis.level = level;\r\n\t\tthis.field = field;\r\n\t\tthis.hasSubGroups = level < (groupManager.groupIDLookups.length - 1);\r\n\t\tthis.addRow = this.hasSubGroups ? this._addRowToGroup : this._addRow;\r\n\t\tthis.type = \"group\"; //type of element\r\n\t\tthis.old = oldGroup;\r\n\t\tthis.rows = [];\r\n\t\tthis.groups = [];\r\n\t\tthis.groupList = [];\r\n\t\tthis.generator = generator;\r\n\t\tthis.elementContents = false;\r\n\t\tthis.height = 0;\r\n\t\tthis.outerHeight = 0;\r\n\t\tthis.initialized = false;\r\n\t\tthis.calcs = {};\r\n\t\tthis.initialized = false;\r\n\t\tthis.modules = {};\r\n\t\tthis.arrowElement = false;\r\n\r\n\t\tthis.visible = oldGroup ? oldGroup.visible : (typeof groupManager.startOpen[level] !== \"undefined\" ? groupManager.startOpen[level] : groupManager.startOpen[0]);\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\tthis.createElements();\r\n\t\tthis.addBindings();\r\n\r\n\t\tthis.createValueGroups();\r\n\t}\r\n\r\n\twipe(){\r\n\t\tif(this.groupList.length){\r\n\t\t\tthis.groupList.forEach(function(group){\r\n\t\t\t\tgroup.wipe();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\tif(row.modules){\r\n\t\t\t\t\tdelete row.modules.group;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.arrowElement = false;\r\n\t\tthis.elementContents = false;\r\n\t}\r\n\r\n\tcreateElements(){\r\n\t\tvar arrow = document.createElement(\"div\");\r\n\t\tarrow.classList.add(\"tabulator-arrow\");\r\n\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.classList.add(\"tabulator-row\");\r\n\t\tthis.element.classList.add(\"tabulator-group\");\r\n\t\tthis.element.classList.add(\"tabulator-group-level-\" + this.level);\r\n\t\tthis.element.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\tthis.arrowElement = document.createElement(\"div\");\r\n\t\tthis.arrowElement.classList.add(\"tabulator-group-toggle\");\r\n\t\tthis.arrowElement.appendChild(arrow);\r\n\r\n\t\t//setup movable rows\r\n\t\tif(this.groupManager.table.options.movableRows !== false && this.groupManager.table.modExists(\"moveRow\")){\r\n\t\t\tthis.groupManager.table.modules.moveRow.initializeGroupHeader(this);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateValueGroups(){\r\n\t\tvar level = this.level + 1;\r\n\t\tif(this.groupManager.allowedValues && this.groupManager.allowedValues[level]){\r\n\t\t\tthis.groupManager.allowedValues[level].forEach((value) => {\r\n\t\t\t\tthis._createGroup(value, level);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\taddBindings(){\r\n\t\tvar dblTap,\ttapHold, tap, toggleElement;\r\n\r\n\t\tif ((this.groupManager.table.options.groupContextMenu || this.groupManager.table.options.groupClickMenu) && this.groupManager.table.modExists(\"menu\")){\r\n\t\t\tthis.groupManager.table.modules.menu.initializeGroup.call(this.groupManager.table.modules.menu, this);\r\n\t\t}\r\n\r\n\t\tif (this.groupManager.table.options.groupTap){\r\n\t\t\ttap = false;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\ttap = true;\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tif(tap){\r\n\t\t\t\t\tthis.groupManager.table.options.groupTap(e, this.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttap = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.groupManager.table.options.groupDblTap){\r\n\t\t\tdblTap = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tif(dblTap){\r\n\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\tdblTap = null;\r\n\r\n\t\t\t\t\tthis.groupManager.table.options.groupDblTap(e, this.getComponent());\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tdblTap = setTimeout(() => {\r\n\t\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\t\tdblTap = null;\r\n\t\t\t\t\t}, 300);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.groupManager.table.options.groupTapHold){\r\n\t\t\ttapHold = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\r\n\t\t\t\ttapHold = setTimeout(() => {\r\n\t\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\t\ttapHold = null;\r\n\t\t\t\t\ttap = false;\r\n\t\t\t\t\tthis.groupManager.table.options.groupTapHold(e, this.getComponent());\r\n\t\t\t\t}, 1000);\r\n\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\ttapHold = null;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.groupManager.table.options.groupToggleElement){\r\n\t\t\ttoggleElement = this.groupManager.table.options.groupToggleElement == \"arrow\" ? this.arrowElement : this.element;\r\n\r\n\t\t\ttoggleElement.addEventListener(\"click\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\tthis.toggleVisibility();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_createGroup(groupID, level){\r\n\t\tvar groupKey = level + \"_\" + groupID;\r\n\t\tvar group = new Group(this.groupManager, this, level, groupID,  this.groupManager.groupIDLookups[level].field, this.groupManager.headerGenerator[level] || this.groupManager.headerGenerator[0], this.old ? this.old.groups[groupKey] : false);\r\n\r\n\t\tthis.groups[groupKey] = group;\r\n\t\tthis.groupList.push(group);\r\n\t}\r\n\r\n\t_addRowToGroup(row){\r\n\r\n\t\tvar level = this.level + 1;\r\n\r\n\t\tif(this.hasSubGroups){\r\n\t\t\tvar groupID = this.groupManager.groupIDLookups[level].func(row.getData()),\r\n\t\t\tgroupKey = level + \"_\" + groupID;\r\n\r\n\t\t\tif(this.groupManager.allowedValues && this.groupManager.allowedValues[level]){\r\n\t\t\t\tif(this.groups[groupKey]){\r\n\t\t\t\t\tthis.groups[groupKey].addRow(row);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(!this.groups[groupKey]){\r\n\t\t\t\t\tthis._createGroup(groupID, level);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.groups[groupKey].addRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_addRow(row){\r\n\t\tthis.rows.push(row);\r\n\t\trow.modules.group = this;\r\n\t}\r\n\r\n\tinsertRow(row, to, after){\r\n\t\tvar data = this.conformRowData({});\r\n\r\n\t\trow.updateData(data);\r\n\r\n\t\tvar toIndex = this.rows.indexOf(to);\r\n\r\n\t\tif(toIndex > -1){\r\n\t\t\tif(after){\r\n\t\t\t\tthis.rows.splice(toIndex+1, 0, row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.splice(toIndex, 0, row);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(after){\r\n\t\t\t\tthis.rows.push(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.unshift(row);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trow.modules.group = this;\r\n\r\n\t\tthis.generateGroupHeaderContents();\r\n\r\n\t\tif(this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\"){\r\n\t\t\tthis.groupManager.table.modules.columnCalcs.recalcGroup(this);\r\n\t\t}\r\n\r\n\t\tthis.groupManager.updateGroupRows(true);\r\n\t}\r\n\r\n\tscrollHeader(left){\r\n\t\tthis.arrowElement.style.marginLeft = left;\r\n\r\n\t\tthis.groupList.forEach(function(child){\r\n\t\t\tchild.scrollHeader(left);\r\n\t\t});\r\n\t}\r\n\r\n\tgetRowIndex(row){}\r\n\r\n\t//update row data to match grouping contraints\r\n\tconformRowData(data){\r\n\t\tif(this.field){\r\n\t\t\tdata[this.field] = this.key;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Data Conforming Error - Cannot conform row data to match new group as groupBy is a function\");\r\n\t\t}\r\n\r\n\t\tif(this.parent){\r\n\t\t\tdata = this.parent.conformRowData(data);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tremoveRow(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\t\tvar el = row.getElement();\r\n\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.rows.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tif(!this.groupManager.table.options.groupValues && !this.rows.length){\r\n\t\t\tif(this.parent){\r\n\t\t\t\tthis.parent.removeGroup(this);\r\n\t\t\t}else{\r\n\t\t\t\tthis.groupManager.removeGroup(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.groupManager.updateGroupRows(true);\r\n\t\t}else{\r\n\r\n\t\t\tif(el.parentNode){\r\n\t\t\t\tel.parentNode.removeChild(el);\r\n\t\t\t}\r\n\r\n\t\t\tthis.generateGroupHeaderContents();\r\n\t\t\t\r\n\t\t\tif(this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\"){\r\n\t\t\t\tthis.groupManager.table.modules.columnCalcs.recalcGroup(this);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tremoveGroup(group){\r\n\t\tvar groupKey = group.level + \"_\" + group.key,\r\n\t\tindex;\r\n\r\n\t\tif(this.groups[groupKey]){\r\n\t\t\tdelete this.groups[groupKey];\r\n\r\n\t\t\tindex = this.groupList.indexOf(group);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.groupList.splice(index, 1);\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.groupList.length){\r\n\t\t\t\tif(this.parent){\r\n\t\t\t\t\tthis.parent.removeGroup(this);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.groupManager.removeGroup(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetHeadersAndRows(noCalc){\r\n\t\tvar output = [];\r\n\r\n\t\toutput.push(this);\r\n\r\n\t\tthis._visSet();\r\n\r\n\t\tif(this.visible){\r\n\t\t\tif(this.groupList.length){\r\n\t\t\t\tthis.groupList.forEach(function(group){\r\n\t\t\t\t\toutput = output.concat(group.getHeadersAndRows(noCalc));\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tif(!noCalc && this.groupManager.table.options.columnCalcs != \"table\" && this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasTopCalcs()){\r\n\t\t\t\t\tif(this.calcs.top){\r\n\t\t\t\t\t\tthis.calcs.top.detachElement();\r\n\t\t\t\t\t\tthis.calcs.top.deleteCells();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\r\n\t\t\t\t\toutput.push(this.calcs.top);\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput = output.concat(this.rows);\r\n\r\n\t\t\t\tif(!noCalc && this.groupManager.table.options.columnCalcs != \"table\" &&  this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()){\r\n\t\t\t\t\tif(this.calcs.bottom){\r\n\t\t\t\t\t\tthis.calcs.bottom.detachElement();\r\n\t\t\t\t\t\tthis.calcs.bottom.deleteCells();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\r\n\t\t\t\t\toutput.push(this.calcs.bottom);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!this.groupList.length && this.groupManager.table.options.columnCalcs != \"table\"){\r\n\r\n\t\t\t\tif(this.groupManager.table.modExists(\"columnCalcs\")){\r\n\r\n\t\t\t\t\tif(!noCalc && this.groupManager.table.modules.columnCalcs.hasTopCalcs()){\r\n\t\t\t\t\t\tif(this.calcs.top){\r\n\t\t\t\t\t\t\tthis.calcs.top.detachElement();\r\n\t\t\t\t\t\t\tthis.calcs.top.deleteCells();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(this.groupManager.table.options.groupClosedShowCalcs){\r\n\t\t\t\t\t\t\tthis.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\r\n\t\t\t\t\t\t\toutput.push(this.calcs.top);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(!noCalc && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()){\r\n\t\t\t\t\t\tif(this.calcs.bottom){\r\n\t\t\t\t\t\t\tthis.calcs.bottom.detachElement();\r\n\t\t\t\t\t\t\tthis.calcs.bottom.deleteCells();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(this.groupManager.table.options.groupClosedShowCalcs){\r\n\t\t\t\t\t\t\tthis.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\r\n\t\t\t\t\t\t\toutput.push(this.calcs.bottom);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetData(visible, transform){\r\n\t\tvar output = [];\r\n\r\n\t\tthis._visSet();\r\n\r\n\t\tif(!visible || (visible && this.visible)){\r\n\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\toutput.push(row.getData(transform || \"data\"));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetRowCount(){\r\n\t\tvar count = 0;\r\n\r\n\t\tif(this.groupList.length){\r\n\t\t\tthis.groupList.forEach((group) => {\r\n\t\t\t\tcount += group.getRowCount();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tcount = this.rows.length;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\r\n\ttoggleVisibility(){\r\n\t\tif(this.visible){\r\n\t\t\tthis.hide();\r\n\t\t}else{\r\n\t\t\tthis.show();\r\n\t\t}\r\n\t}\r\n\r\n\thide(){\r\n\t\tthis.visible = false;\r\n\r\n\t\tif(this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination){\r\n\r\n\t\t\tthis.element.classList.remove(\"tabulator-group-visible\");\r\n\r\n\t\t\tif(this.groupList.length){\r\n\t\t\t\tthis.groupList.forEach((group) => {\r\n\r\n\t\t\t\t\tvar rows = group.getHeadersAndRows();\r\n\r\n\t\t\t\t\trows.forEach((row) => {\r\n\t\t\t\t\t\trow.detachElement();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\r\n\r\n\t\t\tthis.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\r\n\r\n\t\t}else{\r\n\t\t\tthis.groupManager.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), false);\r\n\t}\r\n\r\n\tshow(){\r\n\t\tthis.visible = true;\r\n\r\n\t\tif(this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination){\r\n\r\n\t\t\tthis.element.classList.add(\"tabulator-group-visible\");\r\n\r\n\t\t\tvar prev = this.generateElement();\r\n\r\n\t\t\tif(this.groupList.length){\r\n\t\t\t\tthis.groupList.forEach((group) => {\r\n\t\t\t\t\tvar rows = group.getHeadersAndRows();\r\n\r\n\t\t\t\t\trows.forEach((row) => {\r\n\t\t\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\t\t\tprev.parentNode.insertBefore(rowEl, prev.nextSibling);\r\n\t\t\t\t\t\trow.initialize();\r\n\t\t\t\t\t\tprev = rowEl;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\t\tprev.parentNode.insertBefore(rowEl, prev.nextSibling);\r\n\t\t\t\t\trow.initialize();\r\n\t\t\t\t\tprev = rowEl;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\r\n\r\n\t\t\tthis.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\r\n\t\t}else{\r\n\t\t\tthis.groupManager.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), true);\r\n\t}\r\n\r\n\t_visSet(){\r\n\t\tvar data = [];\r\n\r\n\t\tif(typeof this.visible == \"function\"){\r\n\r\n\t\t\tthis.rows.forEach(function(row){\r\n\t\t\t\tdata.push(row.getData());\r\n\t\t\t});\r\n\r\n\t\t\tthis.visible = this.visible(this.key, this.getRowCount(), data, this.getComponent());\r\n\t\t}\r\n\t}\r\n\r\n\tgetRowGroup(row){\r\n\t\tvar match = false;\r\n\t\tif(this.groupList.length){\r\n\t\t\tthis.groupList.forEach(function(group){\r\n\t\t\t\tvar result = group.getRowGroup(row);\r\n\r\n\t\t\t\tif(result){\r\n\t\t\t\t\tmatch = result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tif(this.rows.find(function(item){\r\n\t\t\t\treturn item === row;\r\n\t\t\t})){\r\n\t\t\t\tmatch = this;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tgetSubGroups(component){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.groupList.forEach(function(child){\r\n\t\t\toutput.push(component ? child.getComponent() : child);\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetRows(compoment){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\toutput.push(compoment ? row.getComponent() : row);\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgenerateGroupHeaderContents(){\r\n\t\tvar data = [];\r\n\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\tdata.push(row.getData());\r\n\t\t});\r\n\r\n\t\tthis.elementContents = this.generator(this.key, this.getRowCount(), data, this.getComponent());\r\n\r\n\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\tif(typeof this.elementContents === \"string\"){\r\n\t\t\tthis.element.innerHTML = this.elementContents;\r\n\t\t}else{\r\n\t\t\tthis.element.appendChild(this.elementContents);\r\n\t\t}\r\n\r\n\t\tthis.element.insertBefore(this.arrowElement, this.element.firstChild);\r\n\t}\r\n\r\n\tgetPath(path = []) {\r\n\t\tpath.unshift(this.key);\r\n\t\tif(this.parent) {\r\n\t\t\tthis.parent.getPath(path);\r\n\t\t}\r\n\t\treturn path;\r\n\t}\r\n\r\n\t////////////// Standard Row Functions //////////////\r\n\r\n\tgetElement(){\r\n\t\treturn this.elementContents ? this.element : this.generateElement();\r\n\t}\r\n\r\n\tgenerateElement(){\r\n\t\tthis.addBindings = false;\r\n\r\n\t\tthis._visSet();\r\n\r\n\t\tif(this.visible){\r\n\t\t\tthis.element.classList.add(\"tabulator-group-visible\");\r\n\t\t}else{\r\n\t\t\tthis.element.classList.remove(\"tabulator-group-visible\");\r\n\t\t}\r\n\r\n\t\tfor(var i = 0; i < this.element.childNodes.length; ++i){\r\n\t\t\tthis.element.childNodes[i].parentNode.removeChild(this.element.childNodes[i]);\r\n\t\t}\r\n\r\n\t\tthis.generateGroupHeaderContents();\r\n\r\n\t\t// this.addBindings();\r\n\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tdetachElement(){\r\n\t\tif (this.element && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\t//normalize the height of elements in the row\r\n\tnormalizeHeight(){\r\n\t\tthis.setHeight(this.element.clientHeight);\r\n\t}\r\n\r\n\tinitialize(force){\r\n\t\tif(!this.initialized || force){\r\n\t\t\tthis.normalizeHeight();\r\n\t\t\tthis.initialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\treinitialize(){\r\n\t\tthis.initialized = false;\r\n\t\tthis.height = 0;\r\n\r\n\t\tif(Helpers.elVisible(this.element)){\r\n\t\t\tthis.initialize(true);\r\n\t\t}\r\n\t}\r\n\r\n\tsetHeight(height){\r\n\t\tif(this.height != height){\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.outerHeight = this.element.offsetHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t//return rows outer height\r\n\tgetHeight(){\r\n\t\treturn this.outerHeight;\r\n\t}\r\n\r\n\tgetGroup(){\r\n\t\treturn this;\r\n\t}\r\n\r\n\treinitializeHeight(){}\r\n\r\n\tcalcHeight(){}\r\n\r\n\tsetCellHeight(){}\r\n\r\n\tclearCellHeight(){}\r\n\r\n\tdeinitializeHeight(){}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new GroupComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}\r\n\r\nexport default Group;","import Module from '../../core/Module.js';\r\n\r\nimport GroupComponent from './GroupComponent.js';\r\nimport Group from './Group.js';\r\n\r\nclass GroupRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.groupIDLookups = false; //enable table grouping and set field to group by\r\n\t\tthis.startOpen = [function(){return false;}]; //starting state of group\r\n\t\tthis.headerGenerator = [function(){return \"\";}];\r\n\t\tthis.groupList = []; //ordered list of groups\r\n\t\tthis.allowedValues = false;\r\n\t\tthis.groups = {}; //hold row groups\r\n\t\tthis.displayIndex = 0; //index in display pipeline\r\n\r\n\t\tthis.displayHandler = this.getRows.bind(this);\r\n\r\n\t\t//register table options\r\n\t\tthis.registerTableOption(\"groupBy\", false); //enable table grouping and set field to group by\r\n\t\tthis.registerTableOption(\"groupStartOpen\", true); //starting state of group\r\n\t\tthis.registerTableOption(\"groupValues\", false);\r\n\t\tthis.registerTableOption(\"groupUpdateOnCellEdit\", false);\r\n\t\tthis.registerTableOption(\"groupHeader\", false); //header generation function\r\n\t\tthis.registerTableOption(\"groupHeaderPrint\", null);\r\n\t\tthis.registerTableOption(\"groupHeaderClipboard\", null);\r\n\t\tthis.registerTableOption(\"groupHeaderHtmlOutput\", null);\r\n\t\tthis.registerTableOption(\"groupHeaderDownload\", null);\r\n\t\tthis.registerTableOption(\"groupToggleElement\", \"arrow\");\r\n\t\tthis.registerTableOption(\"groupClosedShowCalcs\", false);\r\n\r\n\t\t//register table functions\r\n\t\tthis.registerTableFunction(\"setGroupBy\", this.setGroupBy.bind(this));\r\n\t\tthis.registerTableFunction(\"setGroupValues\", this.setGroupValues.bind(this));\r\n\t\tthis.registerTableFunction(\"setGroupStartOpen\", this.setGroupStartOpen.bind(this));\r\n\t\tthis.registerTableFunction(\"setGroupHeader\", this.setGroupHeader.bind(this));\r\n\t\tthis.registerTableFunction(\"getGroups\", this.userGetGroups.bind(this));\r\n\t\tthis.registerTableFunction(\"getGroupedData\", this.userGetGroupedData.bind(this));\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"getGroup\", this.rowGetGroup.bind(this));\r\n\t}\r\n\r\n\t//initialize group configuration\r\n\tinitialize(){\r\n\t\tif(this.table.options.groupBy){\r\n\r\n\t\t\tthis.configureGroupSetup();\r\n\r\n\t\t\tif(this.table.options.groupUpdateOnCellEdit){\r\n\t\t\t\tthis.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\r\n\t\t\t\tthis.subscribe(\"row-data-changed\", this.reassignRowToGroup.bind(this), 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"row-deleting\", this.rowDeleting.bind(this));\r\n\t\t\tthis.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHeaders.bind(this));\r\n\t\t\tthis.subscribe(\"rows-wipe\", this.wipe.bind(this));\r\n\t\t\tthis.subscribe(\"rows-added\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"row-moving\", this.rowMoving.bind(this));\r\n\t\t\tthis.subscribe(\"row-adding-index\", this.rowAddingIndex.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"rows-sample\", this.rowSample.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"render-virtual-fill\", this.virtualRenderFill.bind(this));\r\n\r\n\t\t\tthis.registerDisplayHandler(this.displayHandler, 20);\r\n\r\n\t\t\tthis.initialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tconfigureGroupSetup(){\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tvar groupBy = this.table.options.groupBy,\r\n\t\t\tstartOpen = this.table.options.groupStartOpen,\r\n\t\t\tgroupHeader = this.table.options.groupHeader;\r\n\r\n\t\t\tthis.allowedValues = this.table.options.groupValues;\r\n\r\n\t\t\tif(Array.isArray(groupBy) && Array.isArray(groupHeader) && groupBy.length > groupHeader.length){\r\n\t\t\t\tconsole.warn(\"Error creating group headers, groupHeader array is shorter than groupBy array\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.headerGenerator = [function(){return \"\";}];\r\n\t\t\tthis.startOpen = [function(){return false;}]; //starting state of group\r\n\r\n\t\t\tthis.langBind(\"groups|item\", (langValue, lang) => {\r\n\t\t\t\tthis.headerGenerator[0] = (value, count, data) => { //header layout function\r\n\t\t\t\t\treturn (typeof value === \"undefined\" ? \"\" : value) + \"<span>(\" + count + \" \" + ((count === 1) ? langValue : lang.groups.items) + \")</span>\";\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tthis.groupIDLookups = [];\r\n\r\n\t\t\tif(Array.isArray(groupBy) || groupBy){\r\n\t\t\t\tif(this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"table\" && this.table.options.columnCalcs != \"both\"){\r\n\t\t\t\t\tthis.table.modules.columnCalcs.removeCalcs();\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"group\"){\r\n\r\n\t\t\t\t\tvar cols = this.table.columnManager.getRealColumns();\r\n\r\n\t\t\t\t\tcols.forEach((col) => {\r\n\t\t\t\t\t\tif(col.definition.topCalc){\r\n\t\t\t\t\t\t\tthis.table.modules.columnCalcs.initializeTopRow();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(col.definition.bottomCalc){\r\n\t\t\t\t\t\t\tthis.table.modules.columnCalcs.initializeBottomRow();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!Array.isArray(groupBy)){\r\n\t\t\t\tgroupBy = [groupBy];\r\n\t\t\t}\r\n\r\n\t\t\tgroupBy.forEach((group, i) => {\r\n\t\t\t\tvar lookupFunc, column;\r\n\r\n\t\t\t\tif(typeof group == \"function\"){\r\n\t\t\t\t\tlookupFunc = group;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolumn = this.table.columnManager.getColumnByField(group);\r\n\r\n\t\t\t\t\tif(column){\r\n\t\t\t\t\t\tlookupFunc = function(data){\r\n\t\t\t\t\t\t\treturn column.getFieldValue(data);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlookupFunc = function(data){\r\n\t\t\t\t\t\t\treturn data[group];\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.groupIDLookups.push({\r\n\t\t\t\t\tfield: typeof group === \"function\" ? false : group,\r\n\t\t\t\t\tfunc:lookupFunc,\r\n\t\t\t\t\tvalues:this.allowedValues ? this.allowedValues[i] : false,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tif(startOpen){\r\n\t\t\t\tif(!Array.isArray(startOpen)){\r\n\t\t\t\t\tstartOpen = [startOpen];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstartOpen.forEach((level) => {\r\n\t\t\t\t\tlevel = typeof level == \"function\" ? level : function(){return true;};\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.startOpen = startOpen;\r\n\t\t\t}\r\n\r\n\t\t\tif(groupHeader){\r\n\t\t\t\tthis.headerGenerator = Array.isArray(groupHeader) ? groupHeader : [groupHeader];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trowSample(rows, prevValue){\r\n\t\tvar group = this.getGroups(false)[0];\r\n\r\n\t\tprevValue.push(group.getRows(false)[0]);\r\n\r\n\t\treturn prevValue;\r\n\t}\r\n\r\n\tvirtualRenderFill(){\r\n\t\tvar el = this.table.rowManager.tableElement;\r\n\t\tvar rows = this.table.rowManager.getVisibleRows();\r\n\r\n\t\trows = rows.filter((row) => {\r\n\t\t\treturn row.type !== \"group\";\r\n\t\t});\r\n\r\n\t\tel.style.minWidth = !rows.length ? this.table.columnManager.getWidth() + \"px\" : \"\";\r\n\r\n\t\t// if(this.table.options.groupBy){\r\n\t\t// \tif(this.layoutMode() != \"fitDataFill\" && rowsCount == this.table.modules.groupRows.countGroups()){\r\n\t\t// \t\tel.style.minWidth = this.table.columnManager.getWidth() + \"px\";\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\r\n\trowAddingIndex(row, index, top){\r\n\t\tthis.assignRowToGroup(row);\r\n\r\n\t\tvar groupRows = row.modules.group.rows;\r\n\r\n\t\tif(groupRows.length > 1){\r\n\t\t\tif(!index || (index && groupRows.indexOf(index) == -1)){\r\n\t\t\t\tif(top){\r\n\t\t\t\t\tif(groupRows[0] !== row){\r\n\t\t\t\t\t\tindex = groupRows[0];\r\n\t\t\t\t\t\tthis.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(groupRows[groupRows.length -1] !== row){\r\n\t\t\t\t\t\tindex = groupRows[groupRows.length -1];\r\n\t\t\t\t\t\tthis.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t}\r\n\r\n\ttrackChanges(){\r\n\t\tthis.dispatch(\"group-changed\");\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tsetGroupBy(groups){\r\n\t\tthis.table.options.groupBy = groups;\r\n\t\tif(!this.initialized){\r\n\t\t\tthis.initialize();\r\n\t\t}else{\r\n\t\t\tthis.configureGroupSetup();\r\n\t\t}\r\n\r\n\t\tthis.refreshData();\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\tsetGroupValues(groupValues){\r\n\t\tthis.table.options.groupValues = groupValues;\r\n\t\tthis.configureGroupSetup();\r\n\t\tthis.refreshData();\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\tsetGroupStartOpen(values){\r\n\t\tthis.table.options.groupStartOpen = values;\r\n\t\tthis.configureGroupSetup();\r\n\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tthis.refreshData();\r\n\r\n\t\t\tthis.trackChanges();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Grouping Update - cant refresh view, no groups have been set\");\r\n\t\t}\r\n\t}\r\n\r\n\tsetGroupHeader(values){\r\n\t\tthis.table.options.groupHeader = values;\r\n\t\tthis.configureGroupSetup();\r\n\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tthis.refreshData();\r\n\r\n\t\t\tthis.trackChanges();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Grouping Update - cant refresh view, no groups have been set\");\r\n\t\t}\r\n\t}\r\n\r\n\tuserGetGroups(values){\r\n\t\treturn this.getGroups(true);\r\n\t}\r\n\r\n\t// get grouped table data in the same format as getData()\r\n\tuserGetGroupedData(){\r\n\t\treturn this.table.options.groupBy ?\r\n\t\tthis.getGroupedData() : this.getData()\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////////\r\n\t///////// Component Functions /////////\r\n\t///////////////////////////////////////\r\n\r\n\trowGetGroup(row){\r\n\t\treturn row.modules.group ? row.modules.group.getComponent() : false;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\trowMoving(from, to, after){\r\n\t\tif(!after && to instanceof Group){\r\n\t\t\tto = this.table.rowManager.prevDisplayRow(from) || to;\r\n\t\t}\r\n\r\n\t\tvar toGroup = to instanceof Group ? to : to.modules.group;\r\n\t\tvar fromGroup = from instanceof Group ? from : from.modules.group;\r\n\r\n\t\tif(toGroup === fromGroup){\r\n\t\t\tthis.table.rowManager.moveRowInArray(toGroup.rows, from, to, after);\r\n\t\t}else{\r\n\t\t\tif(fromGroup){\r\n\t\t\t\tfromGroup.removeRow(from);\r\n\t\t\t}\r\n\r\n\t\t\ttoGroup.insertRow(from, to, after);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trowDeleting(row){\r\n\t\t//remove from group\r\n\t\tif(row.modules.group){\r\n\t\t\trow.modules.group.removeRow(row);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trowsUpdated(row){\r\n\t\tthis.updateGroupRows(true);\r\n\t}\r\n\r\n\tcellUpdated(cell){\r\n\t\tthis.reassignRowToGroup(cell.row);\r\n\t}\r\n\r\n\r\n\tsetDisplayIndex(index){\r\n\t\tthis.displayIndex = index;\r\n\t}\r\n\r\n\tgetDisplayIndex(){\r\n\t\treturn this.displayIndex;\r\n\t}\r\n\r\n\t//return appropriate rows with group headers\r\n\tgetRows(rows){\r\n\t\tif(this.table.options.groupBy && this.groupIDLookups.length){\r\n\r\n\t\t\tthis.dispatchExternal(\"dataGrouping\");\r\n\r\n\t\t\tthis.generateGroups(rows);\r\n\r\n\t\t\tif(this.subscribedExternal(\"dataGrouped\")){\r\n\t\t\t\tthis.dispatchExternal(\"dataGrouped\", this.getGroups(true));\r\n\t\t\t}\r\n\r\n\t\t\treturn this.updateGroupRows();\r\n\r\n\t\t}else{\r\n\t\t\treturn rows.slice(0);\r\n\t\t}\r\n\t}\r\n\r\n\tgetGroups(component){\r\n\t\tvar groupComponents = [];\r\n\r\n\t\tthis.groupList.forEach(function(group){\r\n\t\t\tgroupComponents.push(component ? group.getComponent() : group);\r\n\t\t});\r\n\r\n\t\treturn groupComponents;\r\n\t}\r\n\r\n\tgetChildGroups(group){\r\n\t\tvar groupComponents = [];\r\n\r\n\t\tif(!group){\r\n\t\t\tgroup = this;\r\n\t\t}\r\n\r\n\t\tgroup.groupList.forEach((child) => {\r\n\t\t\tif(child.groupList.length){\r\n\t\t\t\tgroupComponents = groupComponents.concat(this.getChildGroups(child));\r\n\t\t\t}else{\r\n\t\t\t\tgroupComponents.push(child);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn groupComponents;\r\n\t}\r\n\r\n\twipe(){\r\n\t\tthis.groupList.forEach(function(group){\r\n\t\t\tgroup.wipe();\r\n\t\t});\r\n\t}\r\n\r\n\tpullGroupListData(groupList) {\r\n\t\tvar groupListData = [];\r\n\r\n\t\tgroupList.forEach((group) => {\r\n\t\t\tvar groupHeader = {};\r\n\t\t\tgroupHeader.level = 0;\r\n\t\t\tgroupHeader.rowCount = 0;\r\n\t\t\tgroupHeader.headerContent = \"\";\r\n\t\t\tvar childData = [];\r\n\r\n\t\t\tif (group.hasSubGroups) {\r\n\t\t\t\tchildData = this.pullGroupListData(group.groupList);\r\n\r\n\t\t\t\tgroupHeader.level = group.level;\r\n\t\t\t\tgroupHeader.rowCount = childData.length - group.groupList.length; // data length minus number of sub-headers\r\n\t\t\t\tgroupHeader.headerContent = group.generator(group.key, groupHeader.rowCount, group.rows, group);\r\n\r\n\t\t\t\tgroupListData.push(groupHeader);\r\n\t\t\t\tgroupListData = groupListData.concat(childData);\r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\t\t\t\tgroupHeader.level = group.level;\r\n\t\t\t\tgroupHeader.headerContent = group.generator(group.key, group.rows.length, group.rows, group);\r\n\t\t\t\tgroupHeader.rowCount = group.getRows().length;\r\n\r\n\t\t\t\tgroupListData.push(groupHeader);\r\n\r\n\t\t\t\tgroup.getRows().forEach((row) => {\r\n\t\t\t\t\tgroupListData.push(row.getData(\"data\"));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn groupListData\r\n\t}\r\n\r\n\tgetGroupedData(){\r\n\r\n\t\treturn this.pullGroupListData(this.groupList);\r\n\t}\r\n\r\n\tgetRowGroup(row){\r\n\t\tvar match = false;\r\n\r\n\t\tthis.groupList.forEach((group) => {\r\n\t\t\tvar result = group.getRowGroup(row);\r\n\r\n\t\t\tif(result){\r\n\t\t\t\tmatch = result;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tcountGroups(){\r\n\t\treturn this.groupList.length;\r\n\t}\r\n\r\n\tgenerateGroups(rows){\r\n\t\tvar oldGroups = this.groups;\r\n\r\n\t\tthis.groups = {};\r\n\t\tthis.groupList = [];\r\n\r\n\t\tif(this.allowedValues && this.allowedValues[0]){\r\n\t\t\tthis.allowedValues[0].forEach((value) => {\r\n\t\t\t\tthis.createGroup(value, 0, oldGroups);\r\n\t\t\t});\r\n\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tthis.assignRowToExistingGroup(row, oldGroups);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tthis.assignRowToGroup(row, oldGroups);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcreateGroup(groupID, level, oldGroups){\r\n\t\tvar groupKey = level + \"_\" + groupID,\r\n\t\tgroup;\r\n\r\n\t\toldGroups = oldGroups || [];\r\n\r\n\t\tgroup = new Group(this, false, level, groupID, this.groupIDLookups[0].field, this.headerGenerator[0], oldGroups[groupKey]);\r\n\r\n\t\tthis.groups[groupKey] = group;\r\n\t\tthis.groupList.push(group);\r\n\t}\r\n\r\n\tassignRowToExistingGroup(row, oldGroups){\r\n\t\tvar groupID = this.groupIDLookups[0].func(row.getData()),\r\n\t\tgroupKey = \"0_\" + groupID;\r\n\r\n\t\tif(this.groups[groupKey]){\r\n\t\t\tthis.groups[groupKey].addRow(row);\r\n\t\t}\r\n\t}\r\n\r\n\tassignRowToGroup(row, oldGroups){\r\n\t\tvar groupID = this.groupIDLookups[0].func(row.getData()),\r\n\t\tnewGroupNeeded = !this.groups[\"0_\" + groupID];\r\n\r\n\t\tif(newGroupNeeded){\r\n\t\t\tthis.createGroup(groupID, 0, oldGroups);\r\n\t\t}\r\n\r\n\t\tthis.groups[\"0_\" + groupID].addRow(row);\r\n\r\n\t\treturn !newGroupNeeded;\r\n\t}\r\n\r\n\treassignRowToGroup(row){\r\n\t\tif(row.type === \"row\"){\r\n\t\t\tvar oldRowGroup = row.modules.group,\r\n\t\t\toldGroupPath = oldRowGroup.getPath(),\r\n\t\t\tnewGroupPath = this.getExpectedPath(row),\r\n\t\t\tsamePath = true;\r\n\r\n\t\t\t// figure out if new group path is the same as old group path\r\n\t\t\tvar samePath = (oldGroupPath.length == newGroupPath.length) && oldGroupPath.every((element, index) => {\r\n\t\t\t\treturn element === newGroupPath[index];\r\n\t\t\t});\r\n\r\n\t\t\t// refresh if they new path and old path aren't the same (aka the row's groupings have changed)\r\n\t\t\tif(!samePath) {\r\n\t\t\t\toldRowGroup.removeRow(row);\r\n\t\t\t\tthis.assignRowToGroup(row, this.groups);\r\n\t\t\t\tthis.refreshData(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetExpectedPath(row) {\r\n\t\tvar groupPath = [], rowData = row.getData();\r\n\r\n\t\tthis.groupIDLookups.forEach((groupId) => {\r\n\t\t\tgroupPath.push(groupId.func(rowData));\r\n\t\t});\r\n\r\n\t\treturn groupPath;\r\n\t}\r\n\r\n\tupdateGroupRows(force){\r\n\t\tvar output = [],\r\n\t\toldRowCount;\r\n\r\n\t\tthis.groupList.forEach((group) => {\r\n\t\t\toutput = output.concat(group.getHeadersAndRows());\r\n\t\t});\r\n\r\n\t\tif(force){\r\n\t\t\tthis.refreshData(true, this.displayHandler);\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tscrollHeaders(left){\r\n\t\tif(this.table.options.renderHorizontal === \"virtual\"){\r\n\t\t\tleft -= this.table.columnManager.renderer.vDomPadLeft;\r\n\t\t}\r\n\r\n\t\tleft = left + \"px\";\r\n\r\n\t\tthis.groupList.forEach((group) => {\r\n\t\t\tgroup.scrollHeader(left);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveGroup(group){\r\n\t\tvar groupKey = group.level + \"_\" + group.key,\r\n\t\tindex;\r\n\r\n\t\tif(this.groups[groupKey]){\r\n\t\t\tdelete this.groups[groupKey];\r\n\r\n\t\t\tindex = this.groupList.indexOf(group);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.groupList.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nGroupRows.moduleName = \"groupRows\";\r\n\r\nexport default GroupRows;","export default {\r\n\tcellEdit: function(action){\r\n\t\taction.component.setValueProcessData(action.data.oldValue);\r\n\t\taction.component.cellRendered();\r\n\t},\r\n\r\n\trowAdd: function(action){\r\n\t\taction.component.deleteActual();\r\n\t},\r\n\r\n\trowDelete: function(action){\r\n\t\tvar newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\r\n\r\n\t\tif(this.table.options.groupBy && this.table.modExists(\"groupRows\")){\r\n\t\t\tthis.table.modules.groupRows.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis._rebindRow(action.component, newRow);\r\n\t},\r\n\r\n\trowMove: function(action){\r\n\t\tthis.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posFrom], !action.data.after);\r\n\t\tthis.table.rowManager.redraw();\r\n\t},\r\n};","export default {\r\n\tcellEdit: function(action){\r\n\t\taction.component.setValueProcessData(action.data.newValue);\r\n\t\taction.component.cellRendered();\r\n\t},\r\n\r\n\trowAdd: function(action){\r\n\t\tvar newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\r\n\r\n\t\tif(this.table.options.groupBy && this.table.modExists(\"groupRows\")){\r\n\t\t\tthis.table.modules.groupRows.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis._rebindRow(action.component, newRow);\r\n\t},\r\n\r\n\trowDelete:function(action){\r\n\t\taction.component.deleteActual();\r\n\t},\r\n\r\n\trowMove: function(action){\r\n\t\tthis.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posTo], action.data.after);\r\n\t\tthis.table.rowManager.redraw();\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\nimport Row from '../../core/row/Row.js';\r\nimport Cell from '../../core/cell/Cell.js';\r\n\r\nimport defaultUndoers from './defaults/undoers.js';\r\nimport defaultRedoers from './defaults/redoers.js';\r\n\r\nclass History extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.history = [];\r\n\t\tthis.index = -1;\r\n\r\n\t\tthis.registerTableOption(\"history\", false); //enable edit history\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.history){\r\n\t\t\tthis.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"cell-delete\", this.clearComponentHistory.bind(this));\r\n\t\t\tthis.subscribe(\"row-delete\", this.rowDeleted.bind(this));\r\n\t\t\tthis.subscribe(\"rows-wipe\", this.clear.bind(this));\r\n\t\t\tthis.subscribe(\"row-added\", this.rowAdded.bind(this));\r\n\t\t\tthis.subscribe(\"row-move\", this.rowMoved.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"undo\", this.undo.bind(this));\r\n\t\tthis.registerTableFunction(\"redo\", this.redo.bind(this));\r\n\t\tthis.registerTableFunction(\"getHistoryUndoSize\", this.getHistoryUndoSize.bind(this));\r\n\t\tthis.registerTableFunction(\"getHistoryRedoSize\", this.getHistoryRedoSize.bind(this));\r\n\t\tthis.registerTableFunction(\"clearHistory\", this.clear.bind(this));\r\n\t}\r\n\r\n\trowMoved(from, to, after){\r\n\t\tthis.action(\"rowMove\", from, {posFrom:this.table.rowManager.getRowPosition(from), posTo:this.table.rowManager.getRowPosition(to), to:to, after:after});\r\n\t}\r\n\r\n\trowAdded(row, data, pos, index){\r\n\t\tthis.action(\"rowAdd\", row, {data:data, pos:pos, index:index});\r\n\t}\r\n\r\n\trowDeleted(row){\r\n\t\tvar index, rows;\r\n\r\n\t\tif(this.table.options.groupBy){\r\n\r\n\t\t\trows = row.getComponent().getGroup().rows\r\n\t\t\tindex = rows.indexOf(row);\r\n\r\n\t\t\tif(index){\r\n\t\t\t\tindex = rows[index-1];\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tindex = row.table.rowManager.getRowIndex(row);\r\n\r\n\t\t\tif(index){\r\n\t\t\t\tindex = row.table.rowManager.rows[index-1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.action(\"rowDelete\", row, {data:row.getData(), pos:!index, index:index});\r\n\t}\r\n\r\n\tcellUpdated(cell){\r\n\t\tthis.action(\"cellEdit\", cell, {oldValue:cell.oldValue, newValue:cell.value});\r\n\t}\r\n\r\n\tclear(){\r\n\t\tthis.history = [];\r\n\t\tthis.index = -1;\r\n\t}\r\n\r\n\taction(type, component, data){\r\n\t\tthis.history = this.history.slice(0, this.index + 1);\r\n\r\n\t\tthis.history.push({\r\n\t\t\ttype:type,\r\n\t\t\tcomponent:component,\r\n\t\t\tdata:data,\r\n\t\t});\r\n\r\n\t\tthis.index ++;\r\n\t}\r\n\r\n\tgetHistoryUndoSize(){\r\n\t\treturn this.index + 1;\r\n\t}\r\n\r\n\tgetHistoryRedoSize(){\r\n\t\treturn this.history.length - (this.index + 1);\r\n\t}\r\n\r\n\tclearComponentHistory(component){\r\n\t\tvar index = this.history.findIndex(function(item){\r\n\t\t\treturn item.component === component;\r\n\t\t});\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.history.splice(index, 1);\r\n\t\t\tif(index <= this.index){\r\n\t\t\t\tthis.index--;\r\n\t\t\t}\r\n\r\n\t\t\tthis.clearComponentHistory(component);\r\n\t\t}\r\n\t}\r\n\r\n\tundo(){\r\n\t\tif(this.index > -1){\r\n\t\t\tlet action = this.history[this.index];\r\n\r\n\t\t\tHistory.undoers[action.type].call(this, action);\r\n\r\n\t\t\tthis.index--;\r\n\r\n\t\t\tthis.dispatchExternal(\"historyUndo\", action.type, action.component.getComponent(), action.data);\r\n\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"History Undo Error - No more history to undo\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tredo(){\r\n\t\tif(this.history.length-1 > this.index){\r\n\r\n\t\t\tthis.index++;\r\n\r\n\t\t\tlet action = this.history[this.index];\r\n\r\n\t\t\tHistory.redoers[action.type].call(this, action);\r\n\r\n\t\t\tthis.dispatchExternal(\"historyRedo\", action.type, action.component.getComponent(), action.data);\r\n\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"History Redo Error - No more history to redo\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//rebind rows to new element after deletion\r\n\t_rebindRow(oldRow, newRow){\r\n\t\tthis.history.forEach(function(action){\r\n\t\t\tif(action.component instanceof Row){\r\n\t\t\t\tif(action.component === oldRow){\r\n\t\t\t\t\taction.component = newRow;\r\n\t\t\t\t}\r\n\t\t\t}else if(action.component instanceof Cell){\r\n\t\t\t\tif(action.component.row === oldRow){\r\n\t\t\t\t\tvar field = action.component.column.getField();\r\n\r\n\t\t\t\t\tif(field){\r\n\t\t\t\t\t\taction.component = newRow.getCell(field);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nHistory.moduleName = \"history\";\r\n\r\n//load defaults\r\nHistory.undoers = defaultUndoers;\r\nHistory.redoers = defaultRedoers;\r\n\r\nexport default History;","import Module from '../../core/Module.js';\r\nimport Column from '../../core/column/Column.js';\r\n\r\nclass HtmlTableImport extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.fieldIndex = [];\r\n\t\tthis.hasIndex = false;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.tableElementCheck();\r\n\t}\r\n\r\n\ttableElementCheck(){\r\n\t\tif(this.table.originalElement && this.table.originalElement.tagName === \"TABLE\"){\r\n\t\t\tthis.parseTable();\r\n\t\t}\r\n\t}\r\n\r\n\tparseTable(){\r\n\t\tvar element = this.table.originalElement,\r\n\t\toptions = this.table.options,\r\n\t\tcolumns = options.columns,\r\n\t\theaders = element.getElementsByTagName(\"th\"),\r\n\t\trows = element.getElementsByTagName(\"tbody\")[0],\r\n\t\tdata = [],\r\n\t\tnewTable;\r\n\r\n\t\tthis.hasIndex = false;\r\n\r\n\t\tthis.dispatchExternal(\"htmlImporting\");\r\n\r\n\t\trows = rows ? rows.getElementsByTagName(\"tr\") : [];\r\n\r\n\t\t//check for Tabulator inline options\r\n\t\tthis._extractOptions(element, options);\r\n\r\n\t\tif(headers.length){\r\n\t\t\tthis._extractHeaders(headers, rows);\r\n\t\t}else{\r\n\t\t\tthis._generateBlankHeaders(headers, rows);\r\n\t\t}\r\n\r\n\t\t//iterate through table rows and build data set\r\n\t\tfor(var index = 0; index < rows.length; index++){\r\n\t\t\tvar row = rows[index],\r\n\t\t\tcells = row.getElementsByTagName(\"td\"),\r\n\t\t\titem = {};\r\n\r\n\t\t\t//create index if the dont exist in table\r\n\t\t\tif(!this.hasIndex){\r\n\t\t\t\titem[options.index] = index;\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0; i < cells.length; i++){\r\n\t\t\t\tvar cell = cells[i];\r\n\t\t\t\tif(typeof this.fieldIndex[i] !== \"undefined\"){\r\n\t\t\t\t\titem[this.fieldIndex[i]] = cell.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//add row data to item\r\n\t\t\tdata.push(item);\r\n\t\t}\r\n\r\n\t\toptions.data = data;\r\n\r\n\t\tthis.dispatchExternal(\"htmlImported\");\r\n\t}\r\n\r\n\t//extract tabulator attribute options\r\n\t_extractOptions(element, options, defaultOptions){\r\n\t\tvar attributes = element.attributes;\r\n\t\tvar optionsArr = defaultOptions ? Object.keys(defaultOptions) : Object.keys(options);\r\n\t\tvar optionsList = {};\r\n\r\n\t\toptionsArr.forEach((item) => {\r\n\t\t\toptionsList[item.toLowerCase()] = item;\r\n\t\t});\r\n\r\n\t\tfor(var index in attributes){\r\n\t\t\tvar attrib = attributes[index];\r\n\t\t\tvar name;\r\n\r\n\t\t\tif(attrib && typeof attrib == \"object\" && attrib.name && attrib.name.indexOf(\"tabulator-\") === 0){\r\n\t\t\t\tname = attrib.name.replace(\"tabulator-\", \"\");\r\n\r\n\t\t\t\tif(typeof optionsList[name] !== \"undefined\"){\r\n\t\t\t\t\toptions[optionsList[name]] = this._attribValue(attrib.value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//get value of attribute\r\n\t_attribValue(value){\r\n\t\tif(value === \"true\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif(value === \"false\"){\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t//find column if it has already been defined\r\n\t_findCol(title){\r\n\t\tvar match = this.table.options.columns.find((column) => {\r\n\t\t\treturn column.title === title;\r\n\t\t});\r\n\r\n\t\treturn match || false;\r\n\t}\r\n\r\n\t//extract column from headers\r\n\t_extractHeaders(headers, rows){\r\n\t\tfor(var index = 0; index < headers.length; index++){\r\n\t\t\tvar header = headers[index],\r\n\t\t\texists = false,\r\n\t\t\tcol = this._findCol(header.textContent),\r\n\t\t\twidth, attributes;\r\n\r\n\t\t\tif(col){\r\n\t\t\t\texists = true;\r\n\t\t\t}else{\r\n\t\t\t\tcol = {title:header.textContent.trim()};\r\n\t\t\t}\r\n\r\n\t\t\tif(!col.field) {\r\n\t\t\t\tcol.field = header.textContent.trim().toLowerCase().replace(\" \", \"_\");\r\n\t\t\t}\r\n\r\n\t\t\twidth = header.getAttribute(\"width\");\r\n\r\n\t\t\tif(width && !col.width)\t{\r\n\t\t\t\tcol.width = width;\r\n\t\t\t}\r\n\r\n\t\t\t//check for Tabulator inline options\r\n\t\t\tthis._extractOptions(header, col, this.table.columnManager.optionsList.registeredDefaults);\r\n\r\n\t\t\tthis.fieldIndex[index] = col.field;\r\n\r\n\t\t\tif(col.field == this.table.options.index){\r\n\t\t\t\tthis.hasIndex = true;\r\n\t\t\t}\r\n\r\n\t\t\tif(!exists){\r\n\t\t\t\tthis.table.options.columns.push(col);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//generate blank headers\r\n\t_generateBlankHeaders(headers, rows){\r\n\t\tfor(var index = 0; index < headers.length; index++){\r\n\t\t\tvar header = headers[index],\r\n\t\t\tcol = {title:\"\", field:\"col\" + index};\r\n\r\n\t\t\tthis.fieldIndex[index] = col.field;\r\n\r\n\t\t\tvar width = header.getAttribute(\"width\");\r\n\r\n\t\t\tif(width){\r\n\t\t\t\tcol.width = width;\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.options.columns.push(col);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nHtmlTableImport.moduleName = \"htmlTableImport\";\r\n\r\nexport default HtmlTableImport;","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport Cell from '../../core/cell/Cell';\r\nimport Column from '../../core/column/Column';\r\n\r\nclass Interaction extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.eventMap = {\r\n\t\t\t//row events\r\n\t\t\trowClick:\"row-click\",\r\n\t\t\trowDblClick:\"row-dblclick\",\r\n\t\t\trowContext:\"row-contextmenu\",\r\n\t\t\trowMouseEnter:\"row-mouseenter\",\r\n\t\t\trowMouseLeave:\"row-mouseleave\",\r\n\t\t\trowMouseOver:\"row-mouseover\",\r\n\t\t\trowMouseOut:\"row-mouseout\",\r\n\t\t\trowMouseMove:\"row-mousemove\",\r\n\t\t\trowTap:\"row\",\r\n\t\t\trowDblTap:\"row\",\r\n\t\t\trowTapHold:\"row\",\r\n\r\n\t\t\t//cell events\r\n\t\t\tcellClick:\"cell-click\",\r\n\t\t\tcellDblClick:\"cell-dblclick\",\r\n\t\t\tcellContext:\"cell-contextmenu\",\r\n\t\t\tcellMouseEnter:\"cell-mouseenter\",\r\n\t\t\tcellMouseLeave:\"cell-mouseleave\",\r\n\t\t\tcellMouseOver:\"cell-mouseover\",\r\n\t\t\tcellMouseOut:\"cell-mouseout\",\r\n\t\t\tcellMouseMove:\"cell-mousemove\",\r\n\t\t\tcellTap:\"cell\",\r\n\t\t\tcellDblTap:\"cell\",\r\n\t\t\tcellTapHold:\"cell\",\r\n\r\n\t\t\t//column header events\r\n\t\t\theaderClick:\"column-click\",\r\n\t\t\theaderDblClick:\"column-dblclick\",\r\n\t\t\theaderContext:\"column-contextmenu\",\r\n\t\t\theaderMouseEnter:\"column-mouseenter\",\r\n\t\t\theaderMouseLeave:\"column-mouseleave\",\r\n\t\t\theaderMouseOver:\"column-mouseover\",\r\n\t\t\theaderMouseOut:\"column-mouseout\",\r\n\t\t\theaderMouseMove:\"column-mousemove\",\r\n\t\t\theaderTap:\"column\",\r\n\t\t\theaderDblTap:\"column\",\r\n\t\t\theaderTapHold:\"column\",\r\n\r\n\t\t\t//group header\r\n\t\t\tgroupClick:\"group-click\",\r\n\t\t\tgroupDblClick:\"group-dblclick\",\r\n\t\t\tgroupContext:\"group-contextmenu\",\r\n\t\t\tgroupMouseEnter:\"group-mouseenter\",\r\n\t\t\tgroupMouseLeave:\"group-mouseleave\",\r\n\t\t\tgroupMouseOver:\"group-mouseover\",\r\n\t\t\tgroupMouseOut:\"group-mouseout\",\r\n\t\t\tgroupMouseMove:\"group-mousemove\",\r\n\t\t\tgroupTap:\"group\",\r\n\t\t\tgroupDblTap:\"group\",\r\n\t\t\tgroupTapHold:\"group\",\r\n\t\t}\r\n\r\n\t\tthis.subscribers = {};\r\n\r\n\t\tthis.touchSubscribers = {};\r\n\r\n\t\tthis.columnSubscribers = {};\r\n\r\n\t\tthis.touchWatchers = {\r\n\t\t\trow:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t},\r\n\t\t\tcell:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t},\r\n\t\t\tcolumn:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.registerColumnOption(\"headerClick\");\r\n\t\tthis.registerColumnOption(\"headerDblClick\");\r\n\t\tthis.registerColumnOption(\"headerContext\");\r\n\t\tthis.registerColumnOption(\"headerMouseEnter\");\r\n\t\tthis.registerColumnOption(\"headerMouseLeave\");\r\n\t\tthis.registerColumnOption(\"headerMouseOver\");\r\n\t\tthis.registerColumnOption(\"headerMouseOut\");\r\n\t\tthis.registerColumnOption(\"headerMouseMove\");\r\n\t\tthis.registerColumnOption(\"headerTap\");\r\n\t\tthis.registerColumnOption(\"headerDblTap\");\r\n\t\tthis.registerColumnOption(\"headerTapHold\");\r\n\r\n\t\tthis.registerColumnOption(\"cellClick\");\r\n\t\tthis.registerColumnOption(\"cellDblClick\");\r\n\t\tthis.registerColumnOption(\"cellContext\");\r\n\t\tthis.registerColumnOption(\"cellMouseEnter\");\r\n\t\tthis.registerColumnOption(\"cellMouseLeave\");\r\n\t\tthis.registerColumnOption(\"cellMouseOver\");\r\n\t\tthis.registerColumnOption(\"cellMouseOut\");\r\n\t\tthis.registerColumnOption(\"cellMouseMove\");\r\n\t\tthis.registerColumnOption(\"cellTap\");\r\n\t\tthis.registerColumnOption(\"cellDblTap\");\r\n\t\tthis.registerColumnOption(\"cellTapHold\");\r\n\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeExternalEvents();\r\n\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this))\r\n\t\tthis.subscribe(\"cell-dblclick\", this.cellContentsSelectionFixer.bind(this))\r\n\t}\r\n\r\n\tcellContentsSelectionFixer(e, cell){\r\n\t\tif(this.table.modExists(\"edit\")){\r\n\t\t\tif (this.table.modules.edit.currentCell === this){\r\n\t\t\t\treturn; //prevent instant selection of editor content\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\ttry{\r\n\t\t\tif (document.selection) { // IE\r\n\t\t\t\tvar range = document.body.createTextRange();\r\n\t\t\t\trange.moveToElementText(this.element);\r\n\t\t\t\trange.select();\r\n\t\t\t} else if (window.getSelection) {\r\n\t\t\t\tvar range = document.createRange();\r\n\t\t\t\trange.selectNode(this.element);\r\n\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\twindow.getSelection().addRange(range);\r\n\t\t\t}\r\n\t\t}catch(e){}\r\n\t}\r\n\r\n\tinitializeExternalEvents(){\r\n\t\tfor(let key in this.eventMap){\r\n\t\t\tthis.subscriptionChangeExternal(key, this.subscriptionChanged.bind(this, key))\r\n\t\t}\r\n\t}\r\n\r\n\tsubscriptionChanged(key, added){\r\n\t\tvar index;\r\n\r\n\t\tif(added){\r\n\t\t\tif(!this.subscribers[key]){\r\n\t\t\t\tif(this.eventMap[key].includes(\"-\")){\r\n\t\t\t\t\tthis.subscribers[key] = this.handle.bind(this, key);\r\n\t\t\t\t\tthis.subscribe(this.eventMap[key], this.subscribers[key]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.subscribeTouchEvents(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this.eventMap[key].includes(\"-\")){\r\n\t\t\t\tif(this.subscribers[key] && !this.columnSubscribers[key]  && !this.subscribedExternal(key)){\r\n\t\t\t\t\tthis.unsubscribe(this.eventMap[key], this.subscribers[key]);\r\n\t\t\t\t\tdelete this.subscribers[key];\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.unsubscribeTouchEvents(key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsubscribeTouchEvents(key){\r\n\t\tvar type = this.eventMap[key];\r\n\r\n\t\tif(!this.touchSubscribers[type + \"-touchstart\"]){\r\n\t\t\tthis.touchSubscribers[type + \"-touchstart\"] = this.handleTouch.bind(this, type, \"start\");\r\n\t\t\tthis.touchSubscribers[type + \"-touchend\"] = this.handleTouch.bind(this, type, \"end\");\r\n\r\n\t\t\tthis.subscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\r\n\t\t\tthis.subscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\r\n\t\t}\r\n\r\n\t\tthis.subscribers[key] = true;\r\n\t}\r\n\r\n\tunsubscribeTouchEvents(key){\r\n\t\tvar notouch = true,\r\n\t\ttype = this.eventMap[key];\r\n\r\n\t\tif(this.subscribers[key] && !this.subscribedExternal(key)){\r\n\t\t\tdelete this.subscribers[key];\r\n\r\n\t\t\tfor(let i in this.eventMap){\r\n\t\t\t\tif(this.eventMap[i] === type){\r\n\t\t\t\t\tif(this.subscribers[i]){\r\n\t\t\t\t\t\tnotouch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(notouch){\r\n\t\t\t\tthis.unsubscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\r\n\t\t\t\tthis.unsubscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\r\n\r\n\t\t\t\tdelete this.touchSubscribers[type + \"-touchstart\"];\r\n\t\t\t\tdelete this.touchSubscribers[type + \"-touchend\"];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.definition;\r\n\r\n\t\tfor(let key in this.eventMap){\r\n\t\t\tif(def[key]){\r\n\t\t\t\tthis.subscriptionChanged(key, true);\r\n\r\n\t\t\t\tif(!this.columnSubscribers[key]){\r\n\t\t\t\t\tthis.columnSubscribers[key] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.columnSubscribers[key].push(column);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandle(action, e, component){\r\n\t\tthis.dispatchEvent(action, e, component);\r\n\t}\r\n\r\n\thandleTouch(type, action, e, component){\r\n\t\tvar watchers = this.touchWatchers[type];\r\n\r\n\t\tif(type === \"column\"){\r\n\t\t\ttype = \"header\";\r\n\t\t}\r\n\r\n\t\tswitch(action){\r\n\t\t\tcase \"start\":\r\n\t\t\twatchers.tap = true;\r\n\r\n\t\t\tclearTimeout(watchers.tapHold);\r\n\r\n\t\t\twatchers.tapHold = setTimeout(() => {\r\n\t\t\t\tclearTimeout(watchers.tapHold);\r\n\t\t\t\twatchers.tapHold = null;\r\n\r\n\t\t\t\twatchers.tap = null;\r\n\t\t\t\tclearTimeout(watchers.tapDbl);\r\n\t\t\t\twatchers.tapDbl = null;\r\n\r\n\t\t\t\tthis.dispatchEvent(type + \"TapHold\", e,  component);\r\n\t\t\t}, 1000);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"end\":\r\n\t\t\tif(watchers.tap){\r\n\r\n\t\t\t\twatchers.tap = null;\r\n\t\t\t\tthis.dispatchEvent(type + \"Tap\", e,  component);\r\n\t\t\t}\r\n\r\n\t\t\tif(watchers.tapDbl){\r\n\t\t\t\tclearTimeout(watchers.tapDbl);\r\n\t\t\t\twatchers.tapDbl = null;\r\n\r\n\t\t\t\tthis.dispatchEvent(type + \"DblTap\", e,  component);\r\n\t\t\t}else{\r\n\t\t\t\twatchers.tapDbl = setTimeout(() => {\r\n\t\t\t\t\tclearTimeout(watchers.tapDbl);\r\n\t\t\t\t\twatchers.tapDbl = null;\r\n\t\t\t\t}, 300);\r\n\t\t\t}\r\n\r\n\t\t\tclearTimeout(watchers.tapHold);\r\n\t\t\twatchers.tapHold = null;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tdispatchEvent(action, e, component){\r\n\t\tvar componentObj = component.getComponent(),\r\n\t\tcallback;\r\n\r\n\t\tif(this.columnSubscribers[action]){\r\n\r\n\t\t\tif(component instanceof Cell){\r\n\t\t\t\tcallback = component.column.definition[action];\r\n\t\t\t}else if(component instanceof Column){\r\n\t\t\t\tcallback = component.definition[action];\r\n\t\t\t}\r\n\r\n\t\t\tif(callback){\r\n\t\t\t\tcallback(e, componentObj);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.dispatchExternal(action, e, componentObj);\r\n\t}\r\n}\r\n\r\nInteraction.moduleName = \"interaction\";\r\n\r\nexport default Interaction;","export default {\r\n\tnavPrev:\"shift + 9\",\r\n\tnavNext:9,\r\n\tnavUp:38,\r\n\tnavDown:40,\r\n\tscrollPageUp:33,\r\n\tscrollPageDown:34,\r\n\tscrollToStart:36,\r\n\tscrollToEnd:35,\r\n\tundo:\"ctrl + 90\",\r\n\tredo:\"ctrl + 89\",\r\n\tcopyToClipboard:\"ctrl + 67\",\r\n};","export default {\r\n\tkeyBlock:function(e){\r\n\t\te.stopPropagation();\r\n\t\te.preventDefault();\r\n\t},\r\n\tscrollPageUp:function(e){\r\n\t\tvar rowManager = this.table.rowManager,\r\n\t\tnewPos = rowManager.scrollTop - rowManager.element.clientHeight,\r\n\t\tscrollMax = rowManager.element.scrollHeight;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\tif(newPos >= 0){\r\n\t\t\t\trowManager.element.scrollTop = newPos;\r\n\t\t\t}else{\r\n\t\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[0]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\t},\r\n\tscrollPageDown:function(e){\r\n\t\tvar rowManager = this.table.rowManager,\r\n\t\tnewPos = rowManager.scrollTop + rowManager.element.clientHeight,\r\n\t\tscrollMax = rowManager.element.scrollHeight;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\tif(newPos <= scrollMax){\r\n\t\t\t\trowManager.element.scrollTop = newPos;\r\n\t\t\t}else{\r\n\t\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\r\n\t},\r\n\tscrollToStart:function(e){\r\n\t\tvar rowManager = this.table.rowManager;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[0]);\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\t},\r\n\tscrollToEnd:function(e){\r\n\t\tvar rowManager = this.table.rowManager;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\t},\r\n\tnavPrev:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-prev\", e);\r\n\t},\r\n\r\n\tnavNext:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-next\", e);\r\n\t},\r\n\r\n\tnavLeft:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-left\", e);\r\n\t},\r\n\r\n\tnavRight:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-right\", e);\r\n\t},\r\n\r\n\tnavUp:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-up\", e);\r\n\t},\r\n\r\n\tnavDown:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-down\", e);\r\n\t},\r\n\r\n\tundo:function(e){\r\n\t\tvar cell = false;\r\n\t\tif(this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")){\r\n\r\n\t\t\tcell = this.table.modules.edit.currentCell;\r\n\r\n\t\t\tif(!cell){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.table.modules.history.undo();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tredo:function(e){\r\n\t\tvar cell = false;\r\n\t\tif(this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")){\r\n\r\n\t\t\tcell = this.table.modules.edit.currentCell;\r\n\r\n\t\t\tif(!cell){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.table.modules.history.redo();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tcopyToClipboard:function(e){\r\n\t\tif(!this.table.modules.edit.currentCell){\r\n\t\t\tif(this.table.modExists(\"clipboard\", true)){\r\n\t\t\t\tthis.table.modules.clipboard.copy(false, true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultBindings from './defaults/bindings.js';\r\nimport defaultActions from './defaults/actions.js';\r\n\r\nclass Keybindings extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.watchKeys = null;\r\n\t\tthis.pressedKeys = null;\r\n\t\tthis.keyupBinding = false;\r\n\t\tthis.keydownBinding = false;\r\n\r\n\t\tthis.registerTableOption(\"keybindings\", []); //array for keybindings\r\n\t\tthis.registerTableOption(\"tabEndNewRow\", false); //create new row when tab to end of table\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tvar bindings = this.table.options.keybindings,\r\n\t\tmergedBindings = {};\r\n\r\n\t\tthis.watchKeys = {};\r\n\t\tthis.pressedKeys = [];\r\n\r\n\t\tif(bindings !== false){\r\n\r\n\t\t\tfor(let key in Keybindings.bindings){\r\n\t\t\t\tmergedBindings[key] = Keybindings.bindings[key];\r\n\t\t\t}\r\n\r\n\t\t\tif(Object.keys(bindings).length){\r\n\r\n\t\t\t\tfor(let key in bindings){\r\n\t\t\t\t\tmergedBindings[key] = bindings[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.mapBindings(mergedBindings);\r\n\t\t\tthis.bindEvents();\r\n\t\t}\r\n\r\n\t\tthis.subscribe(\"table-destroy\", this.clearBindings.bind(this));\r\n\t}\r\n\r\n\tmapBindings(bindings){\r\n\t\tfor(let key in bindings){\r\n\t\t\tif(Keybindings.actions[key]){\r\n\t\t\t\tif(bindings[key]){\r\n\t\t\t\t\tif(typeof bindings[key] !== \"object\"){\r\n\t\t\t\t\t\tbindings[key] = [bindings[key]];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbindings[key].forEach((binding) => {\r\n\t\t\t\t\t\tthis.mapBinding(key, binding);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Key Binding Error - no such action:\", key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmapBinding(action, symbolsList){\r\n\t\tvar binding = {\r\n\t\t\taction: Keybindings.actions[action],\r\n\t\t\tkeys: [],\r\n\t\t\tctrl: false,\r\n\t\t\tshift: false,\r\n\t\t\tmeta: false,\r\n\t\t};\r\n\r\n\t\tvar symbols = symbolsList.toString().toLowerCase().split(\" \").join(\"\").split(\"+\");\r\n\r\n\t\tsymbols.forEach((symbol) => {\r\n\t\t\tswitch(symbol){\r\n\t\t\t\tcase \"ctrl\":\r\n\t\t\t\tbinding.ctrl = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"shift\":\r\n\t\t\t\tbinding.shift = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"meta\":\r\n\t\t\t\tbinding.meta = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tsymbol = parseInt(symbol);\r\n\t\t\t\tbinding.keys.push(symbol);\r\n\r\n\t\t\t\tif(!this.watchKeys[symbol]){\r\n\t\t\t\t\tthis.watchKeys[symbol] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.watchKeys[symbol].push(binding);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tbindEvents(){\r\n\t\tvar self = this;\r\n\r\n\t\tthis.keyupBinding = function(e){\r\n\t\t\tvar code = e.keyCode;\r\n\t\t\tvar bindings = self.watchKeys[code];\r\n\r\n\t\t\tif(bindings){\r\n\r\n\t\t\t\tself.pressedKeys.push(code);\r\n\r\n\t\t\t\tbindings.forEach(function(binding){\r\n\t\t\t\t\tself.checkBinding(e, binding);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.keydownBinding = function(e){\r\n\t\t\tvar code = e.keyCode;\r\n\t\t\tvar bindings = self.watchKeys[code];\r\n\r\n\t\t\tif(bindings){\r\n\r\n\t\t\t\tvar index = self.pressedKeys.indexOf(code);\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tself.pressedKeys.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.table.element.addEventListener(\"keydown\", this.keyupBinding);\r\n\r\n\t\tthis.table.element.addEventListener(\"keyup\", this.keydownBinding);\r\n\t}\r\n\r\n\tclearBindings(){\r\n\t\tif(this.keyupBinding){\r\n\t\t\tthis.table.element.removeEventListener(\"keydown\", this.keyupBinding);\r\n\t\t}\r\n\r\n\t\tif(this.keydownBinding){\r\n\t\t\tthis.table.element.removeEventListener(\"keyup\", this.keydownBinding);\r\n\t\t}\r\n\t}\r\n\r\n\tcheckBinding(e, binding){\r\n\t\tvar match = true;\r\n\r\n\t\tif(e.ctrlKey == binding.ctrl && e.shiftKey == binding.shift && e.metaKey == binding.meta){\r\n\t\t\tbinding.keys.forEach((key) => {\r\n\t\t\t\tvar index = this.pressedKeys.indexOf(key);\r\n\r\n\t\t\t\tif(index == -1){\r\n\t\t\t\t\tmatch = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(match){\r\n\t\t\t\tbinding.action.call(this, e);\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nKeybindings.moduleName = \"keybindings\";\r\n\r\n//load defaults\r\nKeybindings.bindings = defaultBindings;\r\nKeybindings.actions = defaultActions;\r\n\r\nexport default Keybindings;","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass Menu extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.menuElements = [];\r\n\t\tthis.blurEvent = this.hideMenu.bind(this);\r\n\t\tthis.escEvent = this.escMenu.bind(this);\r\n\t\tthis.nestedMenuBlock = false;\r\n\t\tthis.positionReversedX = false;\r\n\r\n\t\tthis.registerTableOption(\"rowContextMenu\", false);\r\n\t\tthis.registerTableOption(\"rowClickMenu\", false);\r\n\t\tthis.registerTableOption(\"groupContextMenu\", false);\r\n\t\tthis.registerTableOption(\"groupClickMenu\", false);\r\n\r\n\t\tthis.registerColumnOption(\"headerContextMenu\");\r\n\t\tthis.registerColumnOption(\"headerMenu\");\r\n\t\tthis.registerColumnOption(\"contextMenu\");\r\n\t\tthis.registerColumnOption(\"clickMenu\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-layout\", this.layoutCell.bind(this));\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t}\r\n\r\n\tlayoutCell(cell){\r\n\t\tif(cell.column.definition.contextMenu || cell.column.definition.clickMenu){\r\n\t\t\tthis.initializeCell(cell);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.definition;\r\n\r\n\t\tif(def.headerContextMenu || def.headerClickMenu || def.headerMenu){\r\n\t\t\tthis.initializeColumnHeader(column);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumnHeader(column){\r\n\t\tvar headerMenuEl;\r\n\r\n\t\tif(column.definition.headerContextMenu){\r\n\t\t\tcolumn.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, column, column.definition.headerContextMenu));\r\n\t\t\tthis.tapHold(column, column.definition.headerContextMenu);\r\n\t\t}\r\n\r\n\t\t// if(column.definition.headerClickMenu){\r\n\t\t// \tcolumn.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, column, column.definition.headerClickMenu));\r\n\t\t// }\r\n\r\n\t\tif(column.definition.headerMenu){\r\n\r\n\t\t\theaderMenuEl = document.createElement(\"span\");\r\n\t\t\theaderMenuEl.classList.add(\"tabulator-header-menu-button\");\r\n\t\t\theaderMenuEl.innerHTML = \"&vellip;\";\r\n\r\n\t\t\theaderMenuEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tthis.LoadMenuEvent(column, column.definition.headerMenu, e);\r\n\t\t\t});\r\n\r\n\t\t\tcolumn.titleElement.insertBefore(headerMenuEl, column.titleElement.firstChild);\r\n\t\t}\r\n\t}\r\n\r\n\tLoadMenuEvent(component, menu, e){\r\n\t\tmenu = typeof menu == \"function\" ? menu.call(this.table, component.getComponent(), e) : menu;\r\n\r\n\t\t// if(component instanceof Cell){\r\n\t\t// \te.stopImmediatePropagation();\r\n\t\t// }\r\n\r\n\t\tthis.loadMenu(e, component, menu);\r\n\t}\r\n\r\n\ttapHold(component, menu){\r\n\t\tvar element = component.getElement(),\r\n\t\ttapHold = null,\r\n\t\tloaded = false;\r\n\r\n\t\telement.addEventListener(\"touchstart\", (e) => {\r\n\t\t\tclearTimeout(tapHold);\r\n\t\t\tloaded = false;\r\n\r\n\t\t\ttapHold = setTimeout(() => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\ttapHold = null;\r\n\t\t\t\tloaded = true;\r\n\r\n\t\t\t\tthis.LoadMenuEvent(component, menu, e);\r\n\t\t\t}, 1000);\r\n\r\n\t\t}, {passive: true});\r\n\r\n\t\telement.addEventListener(\"touchend\", (e) => {\r\n\t\t\tclearTimeout(tapHold);\r\n\t\t\ttapHold = null;\r\n\r\n\t\t\tif(loaded){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tinitializeCell(cell){\r\n\t\tif(cell.column.definition.contextMenu){\r\n\t\t\tcell.getElement(true).addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, cell, cell.column.definition.contextMenu));\r\n\t\t\tthis.tapHold(cell, cell.column.definition.contextMenu);\r\n\t\t}\r\n\r\n\t\tif(cell.column.definition.clickMenu){\r\n\t\t\tcell.getElement(true).addEventListener(\"click\", this.LoadMenuEvent.bind(this, cell, cell.column.definition.clickMenu));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tif(this.table.options.rowContextMenu){\r\n\t\t\trow.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, row, this.table.options.rowContextMenu));\r\n\t\t\tthis.tapHold(row, this.table.options.rowContextMenu);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.rowClickMenu){\r\n\t\t\trow.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, row, this.table.options.rowClickMenu));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeGroup (group){\r\n\t\tif(this.table.options.groupContextMenu){\r\n\t\t\tgroup.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, group, this.table.options.groupContextMenu));\r\n\t\t\tthis.tapHold(group, this.table.options.groupContextMenu);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.groupClickMenu){\r\n\t\t\tgroup.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, group, this.table.options.groupClickMenu));\r\n\t\t}\r\n\t}\r\n\r\n\tloadMenu(e, component, menu, parentEl){\r\n\r\n\t\tvar touch = !(e instanceof MouseEvent);\r\n\r\n\t\tvar menuEl = document.createElement(\"div\");\r\n\t\tmenuEl.classList.add(\"tabulator-menu\");\r\n\r\n\t\tif(!touch){\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\r\n\t\t//abort if no menu set\r\n\t\tif(!menu || !menu.length){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!parentEl){\r\n\t\t\tif(this.nestedMenuBlock){\r\n\t\t\t\t//abort if child menu already open\r\n\t\t\t\tif(this.isOpen()){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.nestedMenuBlock = setTimeout(() => {\r\n\t\t\t\t\tthis.nestedMenuBlock = false;\r\n\t\t\t\t}, 100)\r\n\t\t\t}\r\n\r\n\t\t\tthis.hideMenu();\r\n\t\t\tthis.menuElements = [];\r\n\t\t}\r\n\r\n\t\tmenu.forEach((item) => {\r\n\t\t\tvar itemEl = document.createElement(\"div\"),\r\n\t\t\tlabel = item.label,\r\n\t\t\tdisabled = item.disabled;\r\n\r\n\t\t\tif(item.separator){\r\n\t\t\t\titemEl.classList.add(\"tabulator-menu-separator\");\r\n\t\t\t}else{\r\n\t\t\t\titemEl.classList.add(\"tabulator-menu-item\");\r\n\r\n\t\t\t\tif(typeof label == \"function\"){\r\n\t\t\t\t\tlabel = label.call(this.table, component.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(label instanceof Node){\r\n\t\t\t\t\titemEl.appendChild(label);\r\n\t\t\t\t}else{\r\n\t\t\t\t\titemEl.innerHTML = label;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof disabled == \"function\"){\r\n\t\t\t\t\tdisabled = disabled.call(this.table, component.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(disabled){\r\n\t\t\t\t\titemEl.classList.add(\"tabulator-menu-item-disabled\");\r\n\t\t\t\t\titemEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(item.menu && item.menu.length){\r\n\t\t\t\t\t\titemEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\tthis.hideOldSubMenus(menuEl);\r\n\t\t\t\t\t\t\tthis.loadMenu(e, component, item.menu, itemEl);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(item.action){\r\n\t\t\t\t\t\t\titemEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\t\t\titem.action(e, component.getComponent());\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(item.menu && item.menu.length){\r\n\t\t\t\t\titemEl.classList.add(\"tabulator-menu-item-submenu\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmenuEl.appendChild(itemEl);\r\n\t\t});\r\n\r\n\t\tmenuEl.addEventListener(\"click\", (e) => {\r\n\t\t\tthis.hideMenu();\r\n\t\t});\r\n\r\n\t\tthis.menuElements.push(menuEl);\r\n\t\tthis.positionMenu(menuEl, parentEl, touch, e);\r\n\t}\r\n\r\n\thideOldSubMenus(menuEl){\r\n\t\tvar index = this.menuElements.indexOf(menuEl);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tfor(let i = this.menuElements.length - 1; i > index; i--){\r\n\t\t\t\tvar el = this.menuElements[i];\r\n\r\n\t\t\t\tif(el.parentNode){\r\n\t\t\t\t\tel.parentNode.removeChild(el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.menuElements.pop();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpositionMenu(element, parentEl, touch, e){\r\n\t\tvar docHeight = Math.max(document.body.offsetHeight, window.innerHeight),\r\n\t\tx, y, parentOffset;\r\n\r\n\t\tif(!parentEl){\r\n\t\t\tx = touch ? e.touches[0].pageX : e.pageX;\r\n\t\t\ty = touch ? e.touches[0].pageY : e.pageY;\r\n\r\n\t\t\tthis.positionReversedX = false;\r\n\t\t}else{\r\n\t\t\tparentOffset = Helpers.elOffset(parentEl);\r\n\t\t\tx = parentOffset.left + parentEl.offsetWidth;\r\n\t\t\ty = parentOffset.top - 1;\r\n\t\t}\r\n\r\n\t\telement.style.top = y + \"px\";\r\n\t\telement.style.left = x + \"px\";\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.table.rowManager.element.addEventListener(\"scroll\", this.blurEvent);\r\n\t\t\tdocument.body.addEventListener(\"click\", this.blurEvent);\r\n\t\t\tdocument.body.addEventListener(\"contextmenu\", this.blurEvent);\r\n\t\t\twindow.addEventListener(\"resize\", this.blurEvent);\r\n\t\t\tdocument.body.addEventListener(\"keydown\", this.escEvent);\r\n\t\t}, 100);\r\n\r\n\t\tdocument.body.appendChild(element);\r\n\r\n\t\t//move menu to start on bottom edge if it is too close to the edge of the screen\r\n\t\tif((y + element.offsetHeight) >= docHeight){\r\n\t\t\telement.style.top = \"\";\r\n\r\n\t\t\tif(parentEl){\r\n\t\t\t\telement.style.bottom = (docHeight - parentOffset.top - parentEl.offsetHeight - 1) + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\telement.style.bottom = (docHeight - y) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//move menu to start on right edge if it is too close to the edge of the screen\r\n\t\tif((x + element.offsetWidth) >= document.body.offsetWidth || this.positionReversedX){\r\n\t\t\telement.style.left = \"\";\r\n\r\n\t\t\tif(parentEl){\r\n\t\t\t\telement.style.right = (document.documentElement.offsetWidth - parentOffset.left) + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\telement.style.right = (document.documentElement.offsetWidth - x) + \"px\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.positionReversedX = true;\r\n\t\t}\r\n\t}\r\n\r\n\tisOpen(){\r\n\t\treturn !!this.menuElements.length;\r\n\t}\r\n\r\n\tescMenu(e){\r\n\t\tif(e.keyCode == 27){\r\n\t\t\tthis.hideMenu();\r\n\t\t}\r\n\t}\r\n\r\n\thideMenu(){\r\n\t\tthis.menuElements.forEach((menuEl) => {\r\n\t\t\tif(menuEl.parentNode){\r\n\t\t\t\tmenuEl.parentNode.removeChild(menuEl);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdocument.body.removeEventListener(\"keydown\", this.escEvent);\r\n\t\tdocument.body.removeEventListener(\"click\", this.blurEvent);\r\n\t\tdocument.body.removeEventListener(\"contextmenu\", this.blurEvent);\r\n\t\twindow.removeEventListener(\"resize\", this.blurEvent);\r\n\t\tthis.table.rowManager.element.removeEventListener(\"scroll\", this.blurEvent);\r\n\t}\r\n}\r\n\r\nMenu.moduleName = \"menu\";\r\n\r\nexport default Menu;","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass MoveColumns extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.placeholderElement = this.createPlaceholderElement();\r\n\t\tthis.hoverElement = false; //floating column header element\r\n\t\tthis.checkTimeout = false; //click check timeout holder\r\n\t\tthis.checkPeriod = 250; //period to wait on mousedown to consider this a move and not a click\r\n\t\tthis.moving = false; //currently moving column\r\n\t\tthis.toCol = false; //destination column\r\n\t\tthis.toColAfter = false; //position of moving column relative to the desitnation column\r\n\t\tthis.startX = 0; //starting position within header element\r\n\t\tthis.autoScrollMargin = 40; //auto scroll on edge when within margin\r\n\t\tthis.autoScrollStep = 5; //auto scroll distance in pixels\r\n\t\tthis.autoScrollTimeout = false; //auto scroll timeout\r\n\t\tthis.touchMove = false;\r\n\t\t\r\n\t\tthis.moveHover = this.moveHover.bind(this);\r\n\t\tthis.endMove = this.endMove.bind(this);\r\n\t\t\r\n\t\tthis.registerTableOption(\"movableColumns\", false); //enable movable columns\r\n\t}\r\n\t\r\n\tcreatePlaceholderElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\t\r\n\t\tel.classList.add(\"tabulator-col\");\r\n\t\tel.classList.add(\"tabulator-col-placeholder\");\r\n\t\t\r\n\t\treturn el;\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tif(this.table.options.movableColumns){\r\n\t\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeColumn(column){\r\n\t\tvar self = this,\r\n\t\tconfig = {},\r\n\t\tcolEl;\r\n\t\t\r\n\t\tif(!column.modules.frozen){\r\n\t\t\tcolEl = column.getElement();\r\n\t\t\t\r\n\t\t\tconfig.mousemove = function(e){\r\n\t\t\t\tif(column.parent === self.moving.parent){\r\n\t\t\t\t\tif((((self.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(colEl).left) + self.table.columnManager.element.scrollLeft) > (column.getWidth() / 2)){\r\n\t\t\t\t\t\tif(self.toCol !== column || !self.toColAfter){\r\n\t\t\t\t\t\t\tcolEl.parentNode.insertBefore(self.placeholderElement, colEl.nextSibling);\r\n\t\t\t\t\t\t\tself.moveColumn(column, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(self.toCol !== column || self.toColAfter){\r\n\t\t\t\t\t\t\tcolEl.parentNode.insertBefore(self.placeholderElement, colEl);\r\n\t\t\t\t\t\t\tself.moveColumn(column, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}.bind(self);\r\n\t\t\t\r\n\t\t\tcolEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tself.touchMove = false;\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tself.checkTimeout = setTimeout(function(){\r\n\t\t\t\t\t\tself.startMove(e, column);\r\n\t\t\t\t\t}, self.checkPeriod);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tcolEl.addEventListener(\"mouseup\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tif(self.checkTimeout){\r\n\t\t\t\t\t\tclearTimeout(self.checkTimeout);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tself.bindTouchEvents(column);\r\n\t\t}\r\n\t\t\r\n\t\tcolumn.modules.moveColumn = config;\r\n\t}\r\n\t\r\n\tbindTouchEvents(column){\r\n\t\tvar colEl = column.getElement(),\r\n\t\tstartXMove = false, //shifting center position of the cell\r\n\t\tdir = false,\r\n\t\tcurrentCol, nextCol, prevCol, nextColWidth, prevColWidth, nextColWidthLast, prevColWidthLast;\r\n\t\t\r\n\t\tcolEl.addEventListener(\"touchstart\", (e) => {\r\n\t\t\tthis.checkTimeout = setTimeout(() => {\r\n\t\t\t\tthis.touchMove = true;\r\n\t\t\t\tcurrentCol = column;\r\n\t\t\t\tnextCol = column.nextColumn();\r\n\t\t\t\tnextColWidth = nextCol ? nextCol.getWidth()/2 : 0;\r\n\t\t\t\tprevCol = column.prevColumn();\r\n\t\t\t\tprevColWidth = prevCol ? prevCol.getWidth()/2 : 0;\r\n\t\t\t\tnextColWidthLast = 0;\r\n\t\t\t\tprevColWidthLast = 0;\r\n\t\t\t\tstartXMove = false;\r\n\t\t\t\t\r\n\t\t\t\tthis.startMove(e, column);\r\n\t\t\t}, this.checkPeriod);\r\n\t\t}, {passive: true});\r\n\t\t\r\n\t\tcolEl.addEventListener(\"touchmove\", (e) => {\r\n\t\t\tvar halfCol, diff, moveToCol;\r\n\t\t\t\r\n\t\t\tif(this.moving){\r\n\t\t\t\tthis.moveHover(e);\r\n\t\t\t\t\r\n\t\t\t\tif(!startXMove){\r\n\t\t\t\t\tstartXMove = e.touches[0].pageX;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdiff = e.touches[0].pageX - startXMove;\r\n\t\t\t\t\r\n\t\t\t\tif(diff > 0){\r\n\t\t\t\t\tif(nextCol && diff - nextColWidthLast > nextColWidth){\r\n\t\t\t\t\t\tmoveToCol = nextCol;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(moveToCol !== column){\r\n\t\t\t\t\t\t\tstartXMove = e.touches[0].pageX;\r\n\t\t\t\t\t\t\tmoveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement().nextSibling);\r\n\t\t\t\t\t\t\tthis.moveColumn(moveToCol, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(prevCol && -diff - prevColWidthLast >  prevColWidth){\r\n\t\t\t\t\t\tmoveToCol = prevCol;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(moveToCol !== column){\r\n\t\t\t\t\t\t\tstartXMove = e.touches[0].pageX;\r\n\t\t\t\t\t\t\tmoveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement());\r\n\t\t\t\t\t\t\tthis.moveColumn(moveToCol, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(moveToCol){\r\n\t\t\t\t\tcurrentCol = moveToCol;\r\n\t\t\t\t\tnextCol = moveToCol.nextColumn();\r\n\t\t\t\t\tnextColWidthLast = nextColWidth;\r\n\t\t\t\t\tnextColWidth = nextCol ? nextCol.getWidth() / 2 : 0;\r\n\t\t\t\t\tprevCol = moveToCol.prevColumn();\r\n\t\t\t\t\tprevColWidthLast = prevColWidth;\r\n\t\t\t\t\tprevColWidth = prevCol ? prevCol.getWidth() / 2 : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {passive: true});\r\n\t\t\r\n\t\tcolEl.addEventListener(\"touchend\", (e) => {\r\n\t\t\tif(this.checkTimeout){\r\n\t\t\t\tclearTimeout(this.checkTimeout);\r\n\t\t\t}\r\n\t\t\tif(this.moving){\r\n\t\t\t\tthis.endMove(e);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tstartMove(e, column){\r\n\t\tvar element = column.getElement(),\r\n\t\theaderElement = this.table.columnManager.getElement(),\r\n\t\theadersElement = this.table.columnManager.getHeadersElement();\r\n\t\t\r\n\t\tthis.moving = column;\r\n\t\tthis.startX = (this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(element).left;\r\n\t\t\r\n\t\tthis.table.element.classList.add(\"tabulator-block-select\");\r\n\t\t\r\n\t\t//create placeholder\r\n\t\tthis.placeholderElement.style.width = column.getWidth() + \"px\";\r\n\t\tthis.placeholderElement.style.height = column.getHeight() + \"px\";\r\n\t\t\r\n\t\telement.parentNode.insertBefore(this.placeholderElement, element);\r\n\t\telement.parentNode.removeChild(element);\r\n\t\t\r\n\t\t//create hover element\r\n\t\tthis.hoverElement = element.cloneNode(true);\r\n\t\tthis.hoverElement.classList.add(\"tabulator-moving\");\r\n\t\t\r\n\t\tthis.table.columnManager.getElement().appendChild(this.hoverElement);\r\n\t\t\r\n\t\tthis.hoverElement.style.left = \"0\";\r\n\t\tthis.hoverElement.style.bottom = (headerElement.clientHeight - headersElement.offsetHeight) + \"px\";\r\n\t\t\r\n\t\tif(!this.touchMove){\r\n\t\t\tthis._bindMouseMove();\r\n\t\t\t\r\n\t\t\tdocument.body.addEventListener(\"mousemove\", this.moveHover);\r\n\t\t\tdocument.body.addEventListener(\"mouseup\", this.endMove);\r\n\t\t}\r\n\t\t\r\n\t\tthis.moveHover(e);\r\n\t}\r\n\t\r\n\t_bindMouseMove(){\r\n\t\tthis.table.columnManager.columnsByIndex.forEach(function(column){\r\n\t\t\tif(column.modules.moveColumn.mousemove){\r\n\t\t\t\tcolumn.getElement().addEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t_unbindMouseMove(){\r\n\t\tthis.table.columnManager.columnsByIndex.forEach(function(column){\r\n\t\t\tif(column.modules.moveColumn.mousemove){\r\n\t\t\t\tcolumn.getElement().removeEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tmoveColumn(column, after){\r\n\t\tvar movingCells = this.moving.getCells();\r\n\t\t\r\n\t\tthis.toCol = column;\r\n\t\tthis.toColAfter = after;\r\n\t\t\r\n\t\tif(after){\r\n\t\t\tcolumn.getCells().forEach(function(cell, i){\r\n\t\t\t\tvar cellEl = cell.getElement(true);\r\n\t\t\t\t\r\n\t\t\t\tif(cellEl.parentNode && movingCells[i]){\r\n\t\t\t\t\tcellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl.nextSibling);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tcolumn.getCells().forEach(function(cell, i){\r\n\t\t\t\tvar cellEl = cell.getElement(true);\r\n\t\t\t\t\r\n\t\t\t\tif(cellEl.parentNode && movingCells[i]){\r\n\t\t\t\t\tcellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tendMove(e){\r\n\t\tif(e.which === 1 || this.touchMove){\r\n\t\t\tthis._unbindMouseMove();\r\n\t\t\t\r\n\t\t\tthis.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\r\n\t\t\tthis.placeholderElement.parentNode.removeChild(this.placeholderElement);\r\n\t\t\tthis.hoverElement.parentNode.removeChild(this.hoverElement);\r\n\t\t\t\r\n\t\t\tthis.table.element.classList.remove(\"tabulator-block-select\");\r\n\t\t\t\r\n\t\t\tif(this.toCol){\r\n\t\t\t\tthis.table.columnManager.moveColumnActual(this.moving, this.toCol, this.toColAfter);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.moving = false;\r\n\t\t\tthis.toCol = false;\r\n\t\t\tthis.toColAfter = false;\r\n\t\t\t\r\n\t\t\tif(!this.touchMove){\r\n\t\t\t\tdocument.body.removeEventListener(\"mousemove\", this.moveHover);\r\n\t\t\t\tdocument.body.removeEventListener(\"mouseup\", this.endMove);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tmoveHover(e){\r\n\t\tvar columnHolder = this.table.columnManager.getElement(),\r\n\t\tscrollLeft = columnHolder.scrollLeft,\r\n\t\txPos = ((this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(columnHolder).left) + scrollLeft,\r\n\t\tscrollPos;\r\n\t\t\r\n\t\tthis.hoverElement.style.left = (xPos - this.startX) + \"px\";\r\n\t\t\r\n\t\tif(xPos - scrollLeft < this.autoScrollMargin){\r\n\t\t\tif(!this.autoScrollTimeout){\r\n\t\t\t\tthis.autoScrollTimeout = setTimeout(() => {\r\n\t\t\t\t\tscrollPos = Math.max(0,scrollLeft-5);\r\n\t\t\t\t\tthis.table.rowManager.getElement().scrollLeft = scrollPos;\r\n\t\t\t\t\tthis.autoScrollTimeout = false;\r\n\t\t\t\t}, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(scrollLeft + columnHolder.clientWidth - xPos < this.autoScrollMargin){\r\n\t\t\tif(!this.autoScrollTimeout){\r\n\t\t\t\tthis.autoScrollTimeout = setTimeout(() => {\r\n\t\t\t\t\tscrollPos = Math.min(columnHolder.clientWidth, scrollLeft+5);\r\n\t\t\t\t\tthis.table.rowManager.getElement().scrollLeft = scrollPos;\r\n\t\t\t\t\tthis.autoScrollTimeout = false;\r\n\t\t\t\t}, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nMoveColumns.moduleName = \"moveColumn\";\r\n\r\nexport default MoveColumns;\r\n","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass MoveRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.placeholderElement = this.createPlaceholderElement();\r\n\t\tthis.hoverElement = false; //floating row header element\r\n\t\tthis.checkTimeout = false; //click check timeout holder\r\n\t\tthis.checkPeriod = 150; //period to wait on mousedown to consider this a move and not a click\r\n\t\tthis.moving = false; //currently moving row\r\n\t\tthis.toRow = false; //destination row\r\n\t\tthis.toRowAfter = false; //position of moving row relative to the desitnation row\r\n\t\tthis.hasHandle = false; //row has handle instead of fully movable row\r\n\t\tthis.startY = 0; //starting Y position within header element\r\n\t\tthis.startX = 0; //starting X position within header element\r\n\r\n\t\tthis.moveHover = this.moveHover.bind(this);\r\n\t\tthis.endMove = this.endMove.bind(this);\r\n\t\tthis.tableRowDropEvent = false;\r\n\r\n\t\tthis.touchMove = false;\r\n\r\n\t\tthis.connection = false;\r\n\t\tthis.connectionSelectorsTables = false;\r\n\t\tthis.connectionSelectorsElements = false;\r\n\t\tthis.connectionElements = [];\r\n\t\tthis.connections = [];\r\n\r\n\t\tthis.connectedTable = false;\r\n\t\tthis.connectedRow = false;\r\n\r\n\t\tthis.registerTableOption(\"movableRows\", false); //enable movable rows\r\n\t\tthis.registerTableOption(\"movableRowsConnectedTables\", false); //tables for movable rows to be connected to\r\n\t\tthis.registerTableOption(\"movableRowsConnectedElements\", false); //other elements for movable rows to be connected to\r\n\t\tthis.registerTableOption(\"movableRowsSender\", false);\r\n\t\tthis.registerTableOption(\"movableRowsReceiver\", \"insert\");\r\n\r\n\t\tthis.registerColumnOption(\"rowHandle\");\r\n\t}\r\n\r\n\tcreatePlaceholderElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-row\");\r\n\t\tel.classList.add(\"tabulator-row-placeholder\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.movableRows){\r\n\t\t\tthis.connectionSelectorsTables = this.table.options.movableRowsConnectedTables;\r\n\t\t\tthis.connectionSelectorsElements = this.table.options.movableRowsConnectedElements;\r\n\r\n\t\t\tthis.connection = this.connectionSelectorsTables || this.connectionSelectorsElements;\r\n\r\n\t\t\tthis.subscribe(\"cell-init\", this.initializeCell.bind(this));\r\n\t\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeGroupHeader(group){\r\n\t\tvar self = this,\r\n\t\tconfig = {},\r\n\t\trowEl;\r\n\r\n\t\t//inter table drag drop\r\n\t\tconfig.mouseup = function(e){\r\n\t\t\tself.tableRowDrop(e, row);\r\n\t\t}.bind(self);\r\n\r\n\t\t//same table drag drop\r\n\t\tconfig.mousemove = function(e){\r\n\t\t\tif(((e.pageY - Helpers.elOffset(group.element).top) + self.table.rowManager.element.scrollTop) > (group.getHeight() / 2)){\r\n\t\t\t\tif(self.toRow !== group || !self.toRowAfter){\r\n\t\t\t\t\tvar rowEl = group.getElement();\r\n\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\r\n\t\t\t\t\tself.moveRow(group, true);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(self.toRow !== group || self.toRowAfter){\r\n\t\t\t\t\tvar rowEl = group.getElement();\r\n\t\t\t\t\tif(rowEl.previousSibling){\r\n\t\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\r\n\t\t\t\t\t\tself.moveRow(group, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}.bind(self);\r\n\r\n\t\tgroup.modules.moveRow = config;\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar self = this,\r\n\t\tconfig = {},\r\n\t\trowEl;\r\n\r\n\t\t//inter table drag drop\r\n\t\tconfig.mouseup = function(e){\r\n\t\t\tself.tableRowDrop(e, row);\r\n\t\t}.bind(self);\r\n\r\n\t\t//same table drag drop\r\n\t\tconfig.mousemove = function(e){\r\n\t\t\tvar rowEl = row.getElement();\r\n\r\n\t\t\tif(((e.pageY - Helpers.elOffset(rowEl).top) + self.table.rowManager.element.scrollTop) > (row.getHeight() / 2)){\r\n\t\t\t\tif(self.toRow !== row || !self.toRowAfter){\r\n\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\r\n\t\t\t\t\tself.moveRow(row, true);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(self.toRow !== row || self.toRowAfter){\r\n\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\r\n\t\t\t\t\tself.moveRow(row, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}.bind(self);\r\n\r\n\r\n\t\tif(!this.hasHandle){\r\n\r\n\t\t\trowEl = row.getElement();\r\n\r\n\t\t\trowEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tself.checkTimeout = setTimeout(function(){\r\n\t\t\t\t\t\tself.startMove(e, row);\r\n\t\t\t\t\t}, self.checkPeriod);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\trowEl.addEventListener(\"mouseup\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tif(self.checkTimeout){\r\n\t\t\t\t\t\tclearTimeout(self.checkTimeout);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.bindTouchEvents(row, row.getElement());\r\n\t\t}\r\n\r\n\t\trow.modules.moveRow = config;\r\n\t}\r\n\r\n\tinitializeColumn(column){\r\n\t\tif(column.definition.rowHandle && this.table.options.movableRows !== false){\r\n\t\t\tthis.hasHandle = true;\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeCell(cell){\r\n\t\tif(cell.column.definition.rowHandle && this.table.options.movableRows !== false){\r\n\t\t\tvar self = this,\r\n\t\t\tcellEl = cell.getElement(true);\r\n\r\n\t\t\tcellEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tself.checkTimeout = setTimeout(function(){\r\n\t\t\t\t\t\tself.startMove(e, cell.row);\r\n\t\t\t\t\t}, self.checkPeriod);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcellEl.addEventListener(\"mouseup\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tif(self.checkTimeout){\r\n\t\t\t\t\t\tclearTimeout(self.checkTimeout);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.bindTouchEvents(cell.row, cellEl);\r\n\t\t}\r\n\t}\r\n\r\n\tbindTouchEvents(row, element){\r\n\t\tvar startYMove = false, //shifting center position of the cell\r\n\t\tdir = false,\r\n\t\tcurrentRow, nextRow, prevRow, nextRowHeight, prevRowHeight, nextRowHeightLast, prevRowHeightLast;\r\n\r\n\t\telement.addEventListener(\"touchstart\", (e) => {\r\n\t\t\tthis.checkTimeout = setTimeout(() => {\r\n\t\t\t\tthis.touchMove = true;\r\n\t\t\t\tcurrentRow = row;\r\n\t\t\t\tnextRow = row.nextRow();\r\n\t\t\t\tnextRowHeight = nextRow ? nextRow.getHeight()/2 : 0;\r\n\t\t\t\tprevRow = row.prevRow();\r\n\t\t\t\tprevRowHeight = prevRow ? prevRow.getHeight()/2 : 0;\r\n\t\t\t\tnextRowHeightLast = 0;\r\n\t\t\t\tprevRowHeightLast = 0;\r\n\t\t\t\tstartYMove = false;\r\n\r\n\t\t\t\tthis.startMove(e, row);\r\n\t\t\t}, this.checkPeriod);\r\n\t\t}, {passive: true});\r\n\t\tthis.moving, this.toRow, this.toRowAfter\r\n\t\telement.addEventListener(\"touchmove\", (e) => {\r\n\r\n\t\t\tvar halfCol, diff, moveToRow;\r\n\r\n\t\t\tif(this.moving){\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tthis.moveHover(e);\r\n\r\n\t\t\t\tif(!startYMove){\r\n\t\t\t\t\tstartYMove = e.touches[0].pageY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiff = e.touches[0].pageY - startYMove;\r\n\r\n\t\t\t\tif(diff > 0){\r\n\t\t\t\t\tif(nextRow && diff - nextRowHeightLast > nextRowHeight){\r\n\t\t\t\t\t\tmoveToRow = nextRow;\r\n\r\n\t\t\t\t\t\tif(moveToRow !== row){\r\n\t\t\t\t\t\t\tstartYMove = e.touches[0].pageY\r\n\t\t\t\t\t\t\tmoveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement().nextSibling);\r\n\t\t\t\t\t\t\tthis.moveRow(moveToRow, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(prevRow && -diff - prevRowHeightLast >  prevRowHeight){\r\n\t\t\t\t\t\tmoveToRow = prevRow;\r\n\r\n\t\t\t\t\t\tif(moveToRow !== row){\r\n\t\t\t\t\t\t\tstartYMove = e.touches[0].pageY;\r\n\t\t\t\t\t\t\tmoveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement());\r\n\t\t\t\t\t\t\tthis.moveRow(moveToRow, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(moveToRow){\r\n\t\t\t\t\tcurrentRow = moveToRow;\r\n\t\t\t\t\tnextRow = moveToRow.nextRow();\r\n\t\t\t\t\tnextRowHeightLast = nextRowHeight;\r\n\t\t\t\t\tnextRowHeight = nextRow ? nextRow.getHeight() / 2 : 0;\r\n\t\t\t\t\tprevRow = moveToRow.prevRow();\r\n\t\t\t\t\tprevRowHeightLast = prevRowHeight;\r\n\t\t\t\t\tprevRowHeight = prevRow ? prevRow.getHeight() / 2 : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\telement.addEventListener(\"touchend\", (e) => {\r\n\t\t\tif(this.checkTimeout){\r\n\t\t\t\tclearTimeout(this.checkTimeout);\r\n\t\t\t}\r\n\t\t\tif(this.moving){\r\n\t\t\t\tthis.endMove(e);\r\n\t\t\t\tthis.touchMove = false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_bindMouseMove(){\r\n\t\tthis.table.rowManager.getDisplayRows().forEach((row) => {\r\n\t\t\tif((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove){\r\n\t\t\t\trow.getElement().addEventListener(\"mousemove\", row.modules.moveRow.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_unbindMouseMove(){\r\n\t\tthis.table.rowManager.getDisplayRows().forEach((row) => {\r\n\t\t\tif((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove){\r\n\t\t\t\trow.getElement().removeEventListener(\"mousemove\", row.modules.moveRow.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstartMove(e, row){\r\n\t\tvar element = row.getElement();\r\n\r\n\t\tthis.setStartPosition(e, row);\r\n\r\n\t\tthis.moving = row;\r\n\r\n\t\tthis.table.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\t//create placeholder\r\n\t\tthis.placeholderElement.style.width = row.getWidth() + \"px\";\r\n\t\tthis.placeholderElement.style.height = row.getHeight() + \"px\";\r\n\r\n\t\tif(!this.connection){\r\n\t\t\telement.parentNode.insertBefore(this.placeholderElement, element);\r\n\t\t\telement.parentNode.removeChild(element);\r\n\t\t}else{\r\n\t\t\tthis.table.element.classList.add(\"tabulator-movingrow-sending\");\r\n\t\t\tthis.connectToTables(row);\r\n\t\t}\r\n\r\n\t\t//create hover element\r\n\t\tthis.hoverElement = element.cloneNode(true);\r\n\t\tthis.hoverElement.classList.add(\"tabulator-moving\");\r\n\r\n\t\tif(this.connection){\r\n\t\t\tdocument.body.appendChild(this.hoverElement);\r\n\t\t\tthis.hoverElement.style.left = \"0\";\r\n\t\t\tthis.hoverElement.style.top = \"0\";\r\n\t\t\tthis.hoverElement.style.width = this.table.element.clientWidth + \"px\";\r\n\t\t\tthis.hoverElement.style.whiteSpace = \"nowrap\";\r\n\t\t\tthis.hoverElement.style.overflow = \"hidden\";\r\n\t\t\tthis.hoverElement.style.pointerEvents = \"none\";\r\n\t\t}else{\r\n\t\t\tthis.table.rowManager.getTableElement().appendChild(this.hoverElement);\r\n\r\n\t\t\tthis.hoverElement.style.left = \"0\";\r\n\t\t\tthis.hoverElement.style.top = \"0\";\r\n\r\n\t\t\tthis._bindMouseMove();\r\n\t\t}\r\n\r\n\t\tdocument.body.addEventListener(\"mousemove\", this.moveHover);\r\n\t\tdocument.body.addEventListener(\"mouseup\", this.endMove);\r\n\r\n\t\tthis.moveHover(e);\r\n\t}\r\n\r\n\tsetStartPosition(e, row){\r\n\t\tvar pageX = this.touchMove ? e.touches[0].pageX : e.pageX,\r\n\t\tpageY = this.touchMove ? e.touches[0].pageY : e.pageY,\r\n\t\telement, position;\r\n\r\n\t\telement = row.getElement();\r\n\t\tif(this.connection){\r\n\t\t\tposition = element.getBoundingClientRect();\r\n\r\n\t\t\tthis.startX = position.left - pageX + window.pageXOffset;\r\n\t\t\tthis.startY = position.top - pageY + window.pageYOffset;\r\n\t\t}else{\r\n\t\t\tthis.startY = (pageY - element.getBoundingClientRect().top);\r\n\t\t}\r\n\t}\r\n\r\n\tendMove(e){\r\n\t\tif(!e || e.which === 1 || this.touchMove){\r\n\t\t\tthis._unbindMouseMove();\r\n\r\n\t\t\tif(!this.connection){\r\n\t\t\t\tthis.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\r\n\t\t\t\tthis.placeholderElement.parentNode.removeChild(this.placeholderElement);\r\n\t\t\t}\r\n\r\n\t\t\tthis.hoverElement.parentNode.removeChild(this.hoverElement);\r\n\r\n\t\t\tthis.table.element.classList.remove(\"tabulator-block-select\");\r\n\r\n\t\t\tif(this.toRow){\r\n\t\t\t\tthis.table.rowManager.moveRow(this.moving, this.toRow, this.toRowAfter);\r\n\t\t\t}\r\n\r\n\t\t\tthis.moving = false;\r\n\t\t\tthis.toRow = false;\r\n\t\t\tthis.toRowAfter = false;\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mousemove\", this.moveHover);\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", this.endMove);\r\n\r\n\t\t\tif(this.connection){\r\n\t\t\t\tthis.table.element.classList.remove(\"tabulator-movingrow-sending\");\r\n\t\t\t\tthis.disconnectFromTables();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmoveRow(row, after){\r\n\t\tthis.toRow = row;\r\n\t\tthis.toRowAfter = after;\r\n\t}\r\n\r\n\tmoveHover(e){\r\n\t\tif(this.connection){\r\n\t\t\tthis.moveHoverConnections.call(this, e);\r\n\t\t}else{\r\n\t\t\tthis.moveHoverTable.call(this, e);\r\n\t\t}\r\n\t}\r\n\r\n\tmoveHoverTable(e){\r\n\t\tvar rowHolder = this.table.rowManager.getElement(),\r\n\t\tscrollTop = rowHolder.scrollTop,\r\n\t\tyPos = ((this.touchMove ? e.touches[0].pageY : e.pageY) - rowHolder.getBoundingClientRect().top) + scrollTop,\r\n\t\tscrollPos;\r\n\r\n\t\tthis.hoverElement.style.top = (yPos - this.startY) + \"px\";\r\n\t}\r\n\r\n\tmoveHoverConnections(e){\r\n\t\tthis.hoverElement.style.left = (this.startX + (this.touchMove ? e.touches[0].pageX : e.pageX)) + \"px\";\r\n\t\tthis.hoverElement.style.top = (this.startY + (this.touchMove ? e.touches[0].pageY : e.pageY)) + \"px\";\r\n\t}\r\n\r\n\telementRowDrop(e, element, row){\r\n\t\tthis.dispatchExternal(\"movableRowsElementDrop\", e, element, row ? row.getComponent() : false);\r\n\t}\r\n\r\n\t//establish connection with other tables\r\n\tconnectToTables(row){\r\n\t\tvar connectionTables;\r\n\r\n\t\tif(this.connectionSelectorsTables){\r\n\t\t\tconnectionTables = this.commsConnections(this.connectionSelectorsTables);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsSendingStart\", connectionTables);\r\n\r\n\t\t\tthis.commsSend(this.connectionSelectorsTables, \"moveRow\", \"connect\", {\r\n\t\t\t\trow:row,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.connectionSelectorsElements){\r\n\r\n\t\t\tthis.connectionElements = [];\r\n\r\n\t\t\tif(!Array.isArray(this.connectionSelectorsElements)){\r\n\t\t\t\tthis.connectionSelectorsElements = [this.connectionSelectorsElements];\r\n\t\t\t}\r\n\r\n\t\t\tthis.connectionSelectorsElements.forEach((query) => {\r\n\t\t\t\tif(typeof query === \"string\"){\r\n\t\t\t\t\tthis.connectionElements = this.connectionElements.concat(Array.prototype.slice.call(document.querySelectorAll(query)));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.connectionElements.push(query);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.connectionElements.forEach((element) => {\r\n\t\t\t\tvar dropEvent = (e) => {\r\n\t\t\t\t\tthis.elementRowDrop(e, element, this.moving);\r\n\t\t\t\t};\r\n\r\n\t\t\t\telement.addEventListener(\"mouseup\", dropEvent);\r\n\t\t\t\telement.tabulatorElementDropEvent = dropEvent;\r\n\r\n\t\t\t\telement.classList.add(\"tabulator-movingrow-receiving\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//disconnect from other tables\r\n\tdisconnectFromTables(){\r\n\t\tvar connectionTables;\r\n\r\n\t\tif(this.connectionSelectorsTables){\r\n\t\t\tconnectionTables = this.commsConnections(this.connectionSelectorsTables);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsSendingStop\", connectionTables);\r\n\r\n\t\t\tthis.commsSend(this.connectionSelectorsTables, \"moveRow\", \"disconnect\");\r\n\t\t}\r\n\r\n\t\tthis.connectionElements.forEach((element) => {\r\n\t\t\telement.classList.remove(\"tabulator-movingrow-receiving\");\r\n\t\t\telement.removeEventListener(\"mouseup\", element.tabulatorElementDropEvent);\r\n\t\t\tdelete element.tabulatorElementDropEvent;\r\n\t\t});\r\n\t}\r\n\r\n\t//accept incomming connection\r\n\tconnect(table, row){\r\n\t\tif(!this.connectedTable){\r\n\t\t\tthis.connectedTable = table;\r\n\t\t\tthis.connectedRow = row;\r\n\r\n\t\t\tthis.table.element.classList.add(\"tabulator-movingrow-receiving\");\r\n\r\n\t\t\tthis.table.rowManager.getDisplayRows().forEach((row) => {\r\n\t\t\t\tif(row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup){\r\n\t\t\t\t\trow.getElement().addEventListener(\"mouseup\", row.modules.moveRow.mouseup);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.tableRowDropEvent = this.tableRowDrop.bind(this);\r\n\r\n\t\t\tthis.table.element.addEventListener(\"mouseup\", this.tableRowDropEvent);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceivingStart\", row, table);\r\n\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Row Error - Table cannot accept connection, already connected to table:\", this.connectedTable);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//close incomming connection\r\n\tdisconnect(table){\r\n\t\tif(table === this.connectedTable){\r\n\t\t\tthis.connectedTable = false;\r\n\t\t\tthis.connectedRow = false;\r\n\r\n\t\t\tthis.table.element.classList.remove(\"tabulator-movingrow-receiving\");\r\n\r\n\t\t\tthis.table.rowManager.getDisplayRows().forEach((row) =>{\r\n\t\t\t\tif(row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup){\r\n\t\t\t\t\trow.getElement().removeEventListener(\"mouseup\", row.modules.moveRow.mouseup);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.table.element.removeEventListener(\"mouseup\", this.tableRowDropEvent);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceivingStop\", table);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Row Error - trying to disconnect from non connected table\")\r\n\t\t}\r\n\t}\r\n\r\n\tdropComplete(table, row, success){\r\n\t\tvar sender = false;\r\n\r\n\t\tif(success){\r\n\r\n\t\t\tswitch(typeof this.table.options.movableRowsSender){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tsender = this.senders[this.table.options.movableRowsSender];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tsender = this.table.options.movableRowsSender;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(sender){\r\n\t\t\t\tsender.call(this, this.moving.getComponent(), row ? row.getComponent() : undefined, table)\r\n\t\t\t}else{\r\n\t\t\t\tif(this.table.options.movableRowsSender){\r\n\t\t\t\t\tconsole.warn(\"Mover Row Error - no matching sender found:\", this.table.options.movableRowsSender);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsSent\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\r\n\t\t}else{\r\n\t\t\tthis.dispatchExternal(\"movableRowsSentFailed\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\r\n\t\t}\r\n\r\n\t\tthis.endMove();\r\n\t}\r\n\r\n\ttableRowDrop(e, row){\r\n\t\tvar receiver = false,\r\n\t\tsuccess = false;\r\n\r\n\t\te.stopImmediatePropagation();\r\n\r\n\t\tswitch(typeof this.table.options.movableRowsReceiver){\r\n\t\t\tcase \"string\":\r\n\t\t\treceiver = this.receivers[this.table.options.movableRowsReceiver];\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\treceiver = this.table.options.movableRowsReceiver;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(receiver){\r\n\t\t\tsuccess = receiver.call(this, this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Mover Row Error - no matching receiver found:\", this.table.options.movableRowsReceiver)\r\n\t\t}\r\n\r\n\t\tif(success){\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceived\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\r\n\t\t}else{\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceivedFailed\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\r\n\t\t}\r\n\r\n\t\tthis.commsSend(this.connectedTable, \"moveRow\", \"dropcomplete\", {\r\n\t\t\trow:row,\r\n\t\t\tsuccess:success,\r\n\t\t});\r\n\t}\r\n\r\n\tcommsReceived(table, action, data){\r\n\t\tswitch(action){\r\n\t\t\tcase \"connect\":\r\n\t\t\treturn this.connect(table, data.row);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"disconnect\":\r\n\t\t\treturn this.disconnect(table);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"dropcomplete\":\r\n\t\t\treturn this.dropComplete(table, data.row, data.success);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nMoveRows.prototype.receivers = {\r\n\tinsert:function(fromRow, toRow, fromTable){\r\n\t\tthis.table.addRow(fromRow.getData(), undefined, toRow);\r\n\t\treturn true;\r\n\t},\r\n\r\n\tadd:function(fromRow, toRow, fromTable){\r\n\t\tthis.table.addRow(fromRow.getData());\r\n\t\treturn true;\r\n\t},\r\n\r\n\tupdate:function(fromRow, toRow, fromTable){\r\n\t\tif(toRow){\r\n\t\t\ttoRow.update(fromRow.getData());\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\treplace:function(fromRow, toRow, fromTable){\r\n\t\tif(toRow){\r\n\t\t\tthis.table.addRow(fromRow.getData(), undefined, toRow);\r\n\t\t\ttoRow.delete();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n};\r\n\r\nMoveRows.prototype.senders = {\r\n\tdelete:function(fromRow, toRow, toTable){\r\n\t\tfromRow.delete();\r\n\t}\r\n};\r\n\r\nMoveRows.moduleName = \"moveRow\";\r\n\r\nexport default MoveRows;","export default {};","import Module from '../../core/Module.js';\r\n\r\nimport defaultMutators from './defaults/mutators.js';\r\n\r\nclass Mutator extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.allowedTypes = [\"\", \"data\", \"edit\", \"clipboard\"]; //list of muatation types\r\n\t\tthis.enabled = true;\r\n\r\n\t\tthis.registerColumnOption(\"mutator\");\r\n\t\tthis.registerColumnOption(\"mutatorParams\");\r\n\t\tthis.registerColumnOption(\"mutatorData\");\r\n\t\tthis.registerColumnOption(\"mutatorDataParams\");\r\n\t\tthis.registerColumnOption(\"mutatorEdit\");\r\n\t\tthis.registerColumnOption(\"mutatorEditParams\");\r\n\t\tthis.registerColumnOption(\"mutatorClipboard\");\r\n\t\tthis.registerColumnOption(\"mutatorClipboardParams\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-value-changing\", this.transformCell.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"row-data-init-before\", this.rowDataChanged.bind(this));\r\n\t\tthis.subscribe(\"row-data-changing\", this.rowDataChanged.bind(this));\r\n\t}\r\n\r\n\trowDataChanged(row, tempData, updatedData){\r\n\t\treturn this.transformRow(tempData, \"data\", updatedData);\r\n\t}\r\n\r\n\t//initialize column mutator\r\n\tinitializeColumn(column){\r\n\t\tvar match = false,\r\n\t\tconfig = {};\r\n\r\n\t\tthis.allowedTypes.forEach((type) => {\r\n\t\t\tvar key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\t\tmutator;\r\n\r\n\t\t\tif(column.definition[key]){\r\n\t\t\t\tmutator = this.lookupMutator(column.definition[key]);\r\n\r\n\t\t\t\tif(mutator){\r\n\t\t\t\t\tmatch = true;\r\n\r\n\t\t\t\t\tconfig[key] = {\r\n\t\t\t\t\t\tmutator:mutator,\r\n\t\t\t\t\t\tparams: column.definition[key + \"Params\"] || {},\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(match){\r\n\t\t\tcolumn.modules.mutate = config;\r\n\t\t}\r\n\t}\r\n\r\n\tlookupMutator(value){\r\n\t\tvar mutator = false;\r\n\r\n\t\t//set column mutator\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Mutator.mutators[value]){\r\n\t\t\t\tmutator = Mutator.mutators[value];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Mutator Error - No such mutator found, ignoring: \", value);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tmutator = value;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn mutator;\r\n\t}\r\n\r\n\t//apply mutator to row\r\n\ttransformRow(data, type, updatedData){\r\n\t\tvar key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\tvalue;\r\n\r\n\t\tif(this.enabled){\r\n\r\n\t\t\tthis.table.columnManager.traverse((column) => {\r\n\t\t\t\tvar mutator, params, component;\r\n\r\n\t\t\t\tif(column.modules.mutate){\r\n\t\t\t\t\tmutator = column.modules.mutate[key] || column.modules.mutate.mutator || false;\r\n\r\n\t\t\t\t\tif(mutator){\r\n\t\t\t\t\t\tvalue = column.getFieldValue(typeof updatedData !== \"undefined\" ? updatedData : data);\r\n\r\n\t\t\t\t\t\tif(type == \"data\" || typeof value !== \"undefined\"){\r\n\t\t\t\t\t\t\tcomponent = column.getComponent();\r\n\t\t\t\t\t\t\tparams = typeof mutator.params === \"function\" ? mutator.params(value, data, type, component) : mutator.params;\r\n\t\t\t\t\t\t\tcolumn.setFieldValue(data, mutator.mutator(value, data, type, params, component));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//apply mutator to new cell value\r\n\ttransformCell(cell, value){\r\n\t\tif(cell.column.modules.mutate){\r\n\t\t\tvar mutator = cell.column.modules.mutate.mutatorEdit || cell.column.modules.mutate.mutator || false,\r\n\t\t\ttempData = {};\r\n\r\n\t\t\tif(mutator){\r\n\t\t\t\ttempData = Object.assign(tempData, cell.row.getData());\r\n\t\t\t\tcell.column.setFieldValue(tempData, value);\r\n\t\t\t\treturn mutator.mutator(value, tempData, \"edit\", mutator.params, cell.getComponent());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tenable(){\r\n\t\tthis.enabled = true;\r\n\t}\r\n\r\n\tdisable(){\r\n\t\tthis.enabled = false;\r\n\t}\r\n}\r\n\r\nMutator.moduleName = \"mutator\";\r\n\r\n//load defaults\r\nMutator.mutators = defaultMutators;\r\n\r\nexport default Mutator;","import Module from '../../core/Module.js';\r\n\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass Page extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.mode = \"local\";\r\n\t\tthis.progressiveLoad = false;\r\n\r\n\t\tthis.size = 0;\r\n\t\tthis.page = 1;\r\n\t\tthis.count = 5;\r\n\t\tthis.max = 1;\r\n\r\n\t\tthis.displayIndex = 0; //index in display pipeline\r\n\r\n\t\tthis.initialLoad = true;\r\n\t\tthis.dataChanging = false; //flag to check if data is being changed by this module\r\n\r\n\t\tthis.pageSizes = [];\r\n\r\n\t\tthis.registerTableOption(\"pagination\", false); //set pagination type\r\n\t\tthis.registerTableOption(\"paginationMode\", \"local\"); //local or remote pagination\r\n\t\tthis.registerTableOption(\"paginationSize\", false); //set number of rows to a page\r\n\t\tthis.registerTableOption(\"paginationInitialPage\", 1); //initial page to show on load\r\n\t\tthis.registerTableOption(\"paginationButtonCount\", 5);  // set count of page button\r\n\t\tthis.registerTableOption(\"paginationSizeSelector\", false); //add pagination size selector element\r\n\t\tthis.registerTableOption(\"paginationElement\", false); //element to hold pagination numbers\r\n\t\t// this.registerTableOption(\"paginationDataSent\", {}); //pagination data sent to the server\r\n\t\t// this.registerTableOption(\"paginationDataReceived\", {}); //pagination data received from the server\r\n\t\tthis.registerTableOption(\"paginationAddRow\", \"page\"); //add rows on table or page\r\n\r\n\t\tthis.registerTableOption(\"progressiveLoad\", false); //progressive loading\r\n\t\tthis.registerTableOption(\"progressiveLoadDelay\", 0); //delay between requests\r\n\t\tthis.registerTableOption(\"progressiveLoadScrollMargin\", 0); //margin before scroll begins\r\n\r\n\t\tthis.registerTableFunction(\"setMaxPage\", this.setMaxPage.bind(this));\r\n\t\tthis.registerTableFunction(\"setPage\", this.setPage.bind(this));\r\n\t\tthis.registerTableFunction(\"setPageToRow\", this.userSetPageToRow.bind(this));\r\n\t\tthis.registerTableFunction(\"setPageSize\", this.userSetPageSize.bind(this));\r\n\t\tthis.registerTableFunction(\"getPageSize\", this.getPageSize.bind(this));\r\n\t\tthis.registerTableFunction(\"previousPage\", this.previousPage.bind(this));\r\n\t\tthis.registerTableFunction(\"nextPage\", this.nextPage.bind(this));\r\n\t\tthis.registerTableFunction(\"getPage\", this.getPage.bind(this));\r\n\t\tthis.registerTableFunction(\"getPageMax\", this.getPageMax.bind(this));\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"pageTo\", this.setPageToRow.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.pagination){\r\n\t\t\tthis.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"row-adding-position\", this.rowAddingPosition.bind(this));\r\n\t\t\tthis.subscribe(\"row-added\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\r\n\t\t\tthis.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\r\n\r\n\t\t\tif(this.table.options.paginationMode === \"remote\"){\r\n\t\t\t\tthis.subscribe(\"data-params\", this.remotePageParams.bind(this));\r\n\t\t\t\tthis.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.progressiveLoad){\r\n\t\t\t\tconsole.error(\"Progressive Load Error - Pagination and progressive load cannot be used at the same time\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.registerDisplayHandler(this.restOnRenderBefore.bind(this), 40);\r\n\t\t\tthis.registerDisplayHandler(this.getRows.bind(this), 50);\r\n\r\n\t\t\tthis.createElements();\r\n\t\t\tthis.initializePaginator();\r\n\t\t}else if(this.table.options.progressiveLoad){\r\n\t\t\tthis.subscribe(\"data-params\", this.remotePageParams.bind(this));\r\n\t\t\tthis.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\r\n\t\t\tthis.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\r\n\t\t\tthis.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\r\n\r\n\t\t\tthis.initializeProgressive(this.table.options.progressiveLoad)\r\n\r\n\t\t\tif(this.table.options.progressiveLoad === \"scroll\"){\r\n\t\t\t\tthis.subscribe(\"scroll-vertical\", this.scrollVertical.bind(this));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trowAddingPosition(row, top){\r\n\t\tvar rowManager = this.table.rowManager,\r\n\t\tdispRows = rowManager.getDisplayRows(),\r\n\t\tindex;\r\n\r\n\t\tif(top){\r\n\t\t\tif(dispRows.length){\r\n\t\t\t\tindex = dispRows[0];\r\n\t\t\t}else{\r\n\t\t\t\tif(rowManager.activeRows.length){\r\n\t\t\t\t\tindex = rowManager.activeRows[rowManager.activeRows.length-1];\r\n\t\t\t\t\ttop = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(dispRows.length){\r\n\t\t\t\tindex = dispRows[dispRows.length - 1];\r\n\t\t\t\ttop = dispRows.length < this.size ? false : true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {index, top}\r\n\t}\r\n\r\n\tcalculatePageSizes(){\r\n\t\tvar testElRow, testElCell;\r\n\r\n\t\tif(this.table.options.paginationSize){\r\n\t\t\tthis.size = this.table.options.paginationSize;\r\n\t\t}else{\r\n\t\t\ttestElRow = document.createElement(\"div\");\r\n\t\t\ttestElRow.classList.add(\"tabulator-row\");\r\n\t\t\ttestElRow.style.visibility = \"hidden\";\r\n\r\n\t\t\ttestElCell = document.createElement(\"div\");\r\n\t\t\ttestElCell.classList.add(\"tabulator-cell\");\r\n\t\t\ttestElCell.innerHTML = \"Page Row Test\";\r\n\r\n\t\t\ttestElRow.appendChild(testElCell);\r\n\r\n\t\t\tthis.table.rowManager.getTableElement().appendChild(testElRow);\r\n\r\n\t\t\tthis.size = Math.floor(this.table.rowManager.getElement().clientHeight / testElRow.offsetHeight);\r\n\r\n\t\t\tthis.table.rowManager.getTableElement().removeChild(testElRow);\r\n\t\t}\r\n\r\n\t\tthis.generatePageSizeSelectList();\r\n\t}\r\n\r\n\tinitialLoadComplete(){\r\n\t\tthis.initialLoad = false;\r\n\t}\r\n\r\n\tremotePageParams(data, config, silent, params){\r\n\t\tif(!this.initialLoad){\r\n\t\t\tif((this.progressiveLoad && !silent) || (!this.progressiveLoad && !this.dataChanging)){\r\n\t\t\t\tthis.reset(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//configure request params\r\n\t\tparams.page = this.page;\r\n\r\n\t\t//set page size if defined\r\n\t\tif(this.size){\r\n\t\t\tparams.size = this.size;\r\n\t\t}\r\n\r\n\t\treturn params;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tuserSetPageToRow(row){\r\n\t\tif(this.table.options.pagination){\r\n\t\t\trow = this.rowManager.findRow(row);\r\n\r\n\t\t\tif(row){\r\n\t\t\t\treturn this.setPageToRow(row)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Promise.reject();\r\n\t}\r\n\r\n\tuserSetPageSize(size){\r\n\t\tif(this.table.options.pagination){\r\n\t\t\tthis.setPageSize(size);\r\n\t\t\treturn this.setPage(1);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tscrollVertical(top, dir){\r\n\t\tvar element, diff, margin;\r\n\t\tif(!dir && !this.table.dataLoader.loading){\r\n\t\t\telement = this.table.rowManager.getElement();\r\n\t\t\tdiff = element.scrollHeight - element.clientHeight - top;\r\n\t\t\tmargin = this.table.options.progressiveLoadScrollMargin || (element.clientHeight * 2);\r\n\r\n\t\t\tif(diff < margin){\r\n\t\t\t\tthis.nextPage()\r\n\t\t\t\t.catch(() => {}); //consume the exception thrown when on the last page\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trestOnRenderBefore(rows, renderInPosition){\r\n\t\tif(!renderInPosition){\r\n\t\t\tif(this.mode === \"local\"){\r\n\t\t\t\tthis.reset();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\trowsUpdated(){\r\n\t\tthis.refreshData(true, \"all\");\r\n\t}\r\n\r\n\tcreateElements(){\r\n\t\tvar button;\r\n\r\n\t\tthis.element = document.createElement(\"span\");\r\n\t\tthis.element.classList.add(\"tabulator-paginator\");\r\n\r\n\t\tthis.pagesElement = document.createElement(\"span\");\r\n\t\tthis.pagesElement.classList.add(\"tabulator-pages\");\r\n\r\n\t\tbutton = document.createElement(\"button\");\r\n\t\tbutton.classList.add(\"tabulator-page\");\r\n\t\tbutton.setAttribute(\"type\", \"button\");\r\n\t\tbutton.setAttribute(\"role\", \"button\");\r\n\t\tbutton.setAttribute(\"aria-label\", \"\");\r\n\t\tbutton.setAttribute(\"title\", \"\");\r\n\r\n\t\tthis.firstBut = button.cloneNode(true);\r\n\t\tthis.firstBut.setAttribute(\"data-page\", \"first\");\r\n\r\n\t\tthis.prevBut = button.cloneNode(true);\r\n\t\tthis.prevBut.setAttribute(\"data-page\", \"prev\");\r\n\r\n\t\tthis.nextBut = button.cloneNode(true);\r\n\t\tthis.nextBut.setAttribute(\"data-page\", \"next\");\r\n\r\n\t\tthis.lastBut = button.cloneNode(true);\r\n\t\tthis.lastBut.setAttribute(\"data-page\", \"last\");\r\n\r\n\t\tif(this.table.options.paginationSizeSelector){\r\n\t\t\tthis.pageSizeSelect = document.createElement(\"select\");\r\n\t\t\tthis.pageSizeSelect.classList.add(\"tabulator-page-size\");\r\n\t\t}\r\n\t}\r\n\r\n\tgeneratePageSizeSelectList(){\r\n\t\tvar pageSizes = [];\r\n\r\n\t\tif(this.pageSizeSelect){\r\n\r\n\t\t\tif(Array.isArray(this.table.options.paginationSizeSelector)){\r\n\t\t\t\tpageSizes = this.table.options.paginationSizeSelector;\r\n\t\t\t\tthis.pageSizes = pageSizes;\r\n\r\n\t\t\t\tif(this.pageSizes.indexOf(this.size) == -1){\r\n\t\t\t\t\tpageSizes.unshift(this.size);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\r\n\t\t\t\tif(this.pageSizes.indexOf(this.size) == -1){\r\n\t\t\t\t\tpageSizes = [];\r\n\r\n\t\t\t\t\tfor (let i = 1; i < 5; i++){\r\n\t\t\t\t\t\tpageSizes.push(this.size * i);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.pageSizes = pageSizes;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tpageSizes = this.pageSizes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile(this.pageSizeSelect.firstChild) this.pageSizeSelect.removeChild(this.pageSizeSelect.firstChild);\r\n\r\n\t\t\tpageSizes.forEach((item) => {\r\n\t\t\t\tvar itemEl = document.createElement(\"option\");\r\n\t\t\t\titemEl.value = item;\r\n\r\n\t\t\t\tif(item === true){\r\n\t\t\t\t\tthis.langBind(\"pagination|all\", function(value){\r\n\t\t\t\t\t\titemEl.innerHTML = value;\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\titemEl.innerHTML = item;\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\tthis.pageSizeSelect.appendChild(itemEl);\r\n\t\t\t});\r\n\r\n\t\t\tthis.pageSizeSelect.value = this.size;\r\n\t\t}\r\n\t}\r\n\r\n\t//setup pageination\r\n\tinitializePaginator(hidden){\r\n\t\tvar pageSelectLabel;\r\n\r\n\t\tif(!hidden){\r\n\t\t\t//build pagination element\r\n\r\n\t\t\t//bind localizations\r\n\t\t\tthis.langBind(\"pagination|first\", (value) => {\r\n\t\t\t\tthis.firstBut.innerHTML = value;\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|first_title\", (value) => {\r\n\t\t\t\tthis.firstBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.firstBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|prev\", (value) => {\r\n\t\t\t\tthis.prevBut.innerHTML = value;\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|prev_title\", (value) => {\r\n\t\t\t\tthis.prevBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.prevBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|next\", (value) => {\r\n\t\t\t\tthis.nextBut.innerHTML = value;\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|next_title\", (value) => {\r\n\t\t\t\tthis.nextBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.nextBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|last\", (value) => {\r\n\t\t\t\tthis.lastBut.innerHTML = value;\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|last_title\", (value) => {\r\n\t\t\t\tthis.lastBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.lastBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\r\n\t\t\t//click bindings\r\n\t\t\tthis.firstBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.setPage(1)\r\n\t\t\t});\r\n\r\n\t\t\tthis.prevBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.previousPage()\r\n\t\t\t});\r\n\r\n\t\t\tthis.nextBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.nextPage()\r\n\t\t\t});\r\n\r\n\t\t\tthis.lastBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.setPage(this.max)\r\n\t\t\t});\r\n\r\n\t\t\tif(this.table.options.paginationElement){\r\n\t\t\t\tthis.element = this.table.options.paginationElement;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.pageSizeSelect){\r\n\t\t\t\tpageSelectLabel = document.createElement(\"label\");\r\n\r\n\t\t\t\tthis.langBind(\"pagination|page_size\", (value) => {\r\n\t\t\t\t\tthis.pageSizeSelect.setAttribute(\"aria-label\", value);\r\n\t\t\t\t\tthis.pageSizeSelect.setAttribute(\"title\", value);\r\n\t\t\t\t\tpageSelectLabel.innerHTML = value;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.element.appendChild(pageSelectLabel);\r\n\t\t\t\tthis.element.appendChild(this.pageSizeSelect);\r\n\r\n\t\t\t\tthis.pageSizeSelect.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tthis.setPageSize(this.pageSizeSelect.value == \"true\" ? true : this.pageSizeSelect.value);\r\n\t\t\t\t\tthis.setPage(1)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t//append to DOM\r\n\t\t\tthis.element.appendChild(this.firstBut);\r\n\t\t\tthis.element.appendChild(this.prevBut);\r\n\t\t\tthis.element.appendChild(this.pagesElement);\r\n\t\t\tthis.element.appendChild(this.nextBut);\r\n\t\t\tthis.element.appendChild(this.lastBut);\r\n\r\n\t\t\tif(!this.table.options.paginationElement && !hidden){\r\n\t\t\t\tthis.table.footerManager.append(this.element, this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.page = this.table.options.paginationInitialPage;\r\n\t\t\tthis.count = this.table.options.paginationButtonCount;\r\n\t\t}\r\n\r\n\t\t//set default values\r\n\t\tthis.mode = this.table.options.paginationMode;\r\n\t}\r\n\r\n\tinitializeProgressive(mode){\r\n\t\tthis.initializePaginator(true);\r\n\t\tthis.mode = \"progressive_\" + mode;\r\n\t\tthis.progressiveLoad = true;\r\n\t}\r\n\r\n\ttrackChanges(){\r\n\t\tthis.dispatch(\"page-changed\");\r\n\t}\r\n\r\n\tsetDisplayIndex(index){\r\n\t\tthis.displayIndex = index;\r\n\t}\r\n\r\n\tgetDisplayIndex(){\r\n\t\treturn this.displayIndex;\r\n\t}\r\n\r\n\t//calculate maximum page from number of rows\r\n\tsetMaxRows(rowCount){\r\n\t\tif(!rowCount){\r\n\t\t\tthis.max = 1;\r\n\t\t}else{\r\n\t\t\tthis.max = this.size === true ?  1 : Math.ceil(rowCount/this.size);\r\n\t\t}\r\n\r\n\t\tif(this.page > this.max){\r\n\t\t\tthis.page = this.max;\r\n\t\t}\r\n\t}\r\n\r\n\t//reset to first page without triggering action\r\n\treset(force){\r\n\t\tif(!this.initialLoad){\r\n\t\t\tif(this.mode == \"local\" || force){\r\n\t\t\t\tthis.page = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//set the maximum page\r\n\tsetMaxPage(max){\r\n\r\n\t\tmax = parseInt(max);\r\n\r\n\t\tthis.max = max || 1;\r\n\r\n\t\tif(this.page > this.max){\r\n\t\t\tthis.page = this.max;\r\n\t\t\tthis.trigger();\r\n\t\t}\r\n\t}\r\n\r\n\t//set current page number\r\n\tsetPage(page){\r\n\t\tswitch(page){\r\n\t\t\tcase \"first\":\r\n\t\t\treturn this.setPage(1);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"prev\":\r\n\t\t\treturn this.previousPage();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"next\":\r\n\t\t\treturn this.nextPage();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"last\":\r\n\t\t\treturn this.setPage(this.max);\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\r\n\t\tpage = parseInt(page);\r\n\r\n\t\tif((page > 0 && page <= this.max) || this.mode !== \"local\"){\r\n\t\t\tthis.page = page;\r\n\r\n\t\t\tthis.trackChanges();\r\n\r\n\t\t\treturn this.trigger();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Pagination Error - Requested page is out of range of 1 - \" + this.max + \":\", page);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\tsetPageToRow(row){\r\n\t\tvar rows = this.table.rowManager.getDisplayRows(this.displayIndex - 1);\r\n\t\tvar index = rows.indexOf(row);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tvar page = this.size === true ? 1 : Math.ceil((index + 1) / this.size);\r\n\r\n\t\t\treturn this.setPage(page)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Pagination Error - Requested row is not visible\");\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\tsetPageSize(size){\r\n\t\tif(size !== true){\r\n\t\t\tsize = parseInt(size);\r\n\t\t}\r\n\r\n\t\tif(size > 0){\r\n\t\t\tthis.size = size;\r\n\t\t}\r\n\r\n\t\tif(this.pageSizeSelect){\r\n\t\t\t// this.pageSizeSelect.value = size;\r\n\t\t\tthis.generatePageSizeSelectList();\r\n\t\t}\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//setup the pagination buttons\r\n\t_setPageButtons(){\r\n\t\tlet leftSize = Math.floor((this.count-1) / 2);\r\n\t\tlet rightSize = Math.ceil((this.count-1) / 2);\r\n\t\tlet min = this.max - this.page + leftSize + 1 < this.count ? this.max-this.count+1: Math.max(this.page-leftSize,1);\r\n\t\tlet max = this.page <= rightSize? Math.min(this.count, this.max) :Math.min(this.page+rightSize, this.max);\r\n\r\n\t\twhile(this.pagesElement.firstChild) this.pagesElement.removeChild(this.pagesElement.firstChild);\r\n\r\n\t\tif(this.page == 1){\r\n\t\t\tthis.firstBut.disabled = true;\r\n\t\t\tthis.prevBut.disabled = true;\r\n\t\t}else{\r\n\t\t\tthis.firstBut.disabled = false;\r\n\t\t\tthis.prevBut.disabled = false;\r\n\t\t}\r\n\r\n\t\tif(this.page == this.max){\r\n\t\t\tthis.lastBut.disabled = true;\r\n\t\t\tthis.nextBut.disabled = true;\r\n\t\t}else{\r\n\t\t\tthis.lastBut.disabled = false;\r\n\t\t\tthis.nextBut.disabled = false;\r\n\t\t}\r\n\r\n\t\tfor(let i = min; i <= max; i++){\r\n\t\t\tif(i>0 && i <= this.max){\r\n\t\t\t\tthis.pagesElement.appendChild(this._generatePageButton(i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.footerRedraw();\r\n\t}\r\n\r\n\t_generatePageButton(page){\r\n\t\tvar button = document.createElement(\"button\");\r\n\r\n\t\tbutton.classList.add(\"tabulator-page\");\r\n\t\tif(page == this.page){\r\n\t\t\tbutton.classList.add(\"active\");\r\n\t\t}\r\n\r\n\t\tbutton.setAttribute(\"type\", \"button\");\r\n\t\tbutton.setAttribute(\"role\", \"button\");\r\n\r\n\t\tthis.langBind(\"pagination|page_title\", (value) => {\r\n\t\t\tbutton.setAttribute(\"aria-label\", value + \" \" + page);\r\n\t\t\tbutton.setAttribute(\"title\", value + \" \" + page);\r\n\t\t});\r\n\r\n\t\tbutton.setAttribute(\"data-page\", page);\r\n\t\tbutton.textContent = page;\r\n\r\n\t\tbutton.addEventListener(\"click\", (e) => {\r\n\t\t\tthis.setPage(page)\r\n\t\t});\r\n\r\n\t\treturn button;\r\n\t}\r\n\r\n\t//previous page\r\n\tpreviousPage(){\r\n\t\tif(this.page > 1){\r\n\t\t\tthis.page--;\r\n\r\n\t\t\tthis.trackChanges();\r\n\r\n\t\t\treturn this.trigger()\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Pagination Error - Previous page would be less than page 1:\", 0);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\t//next page\r\n\tnextPage(){\r\n\t\tif(this.page < this.max){\r\n\t\t\tthis.page++;\r\n\r\n\t\t\tthis.trackChanges();\r\n\r\n\t\t\treturn this.trigger();\r\n\r\n\t\t}else{\r\n\t\t\tif(!this.progressiveLoad){\r\n\t\t\t\tconsole.warn(\"Pagination Error - Next page would be greater than maximum page of \" + this.max + \":\", this.max + 1);\r\n\t\t\t}\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\t//return current page number\r\n\tgetPage(){\r\n\t\treturn this.page;\r\n\t}\r\n\r\n\t//return max page number\r\n\tgetPageMax(){\r\n\t\treturn this.max;\r\n\t}\r\n\r\n\tgetPageSize(size){\r\n\t\treturn this.size;\r\n\t}\r\n\r\n\tgetMode(){\r\n\t\treturn this.mode;\r\n\t}\r\n\r\n\t//return appropriate rows for current page\r\n\tgetRows(data){\r\n\t\tvar output, start, end;\r\n\r\n\t\tif(this.mode == \"local\"){\r\n\t\t\toutput = [];\r\n\r\n\t\t\tthis.setMaxRows(data.length);\r\n\r\n\t\t\tif(this.size === true){\r\n\t\t\t\tstart = 0;\r\n\t\t\t\tend = data.length;\r\n\t\t\t}else{\r\n\t\t\t\tstart = this.size * (this.page - 1);\r\n\t\t\t\tend = start + parseInt(this.size);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._setPageButtons();\r\n\r\n\t\t\tfor(let i = start; i < end; i++){\r\n\t\t\t\tif(data[i]){\r\n\t\t\t\t\toutput.push(data[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\t\t}else{\r\n\t\t\tthis._setPageButtons();\r\n\r\n\t\t\treturn data.slice(0);\r\n\t\t}\r\n\t}\r\n\r\n\ttrigger(){\r\n\t\tvar left;\r\n\r\n\t\tswitch(this.mode){\r\n\t\t\tcase \"local\":\r\n\t\t\tleft = this.table.rowManager.scrollLeft;\r\n\r\n\t\t\tthis.refreshData();\r\n\t\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\r\n\t\t\tthis.dispatchExternal(\"pageLoaded\", this.getPage());\r\n\r\n\t\t\treturn Promise.resolve();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"remote\":\r\n\t\t\tthis.dataChanging = true;\r\n\t\t\treturn this.reloadData(null)\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.dataChanging = false;\r\n\t\t\t})\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"progressive_load\":\r\n\t\t\tcase \"progressive_scroll\":\r\n\t\t\treturn this.reloadData(null, true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tconsole.warn(\"Pagination Error - no such pagination mode:\", this.mode);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\t_parseRemoteData(data){\r\n\t\tvar left, data, margin;\r\n\r\n\t\tif(typeof data.last_page === \"undefined\"){\r\n\t\t\tconsole.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").last_page || \"last_page\") + \"' property\");\r\n\t\t}\r\n\r\n\t\tif(data.data){\r\n\t\t\tthis.max = parseInt(data.last_page) || 1;\r\n\r\n\t\t\tif(this.progressiveLoad){\r\n\t\t\t\tswitch(this.mode){\r\n\t\t\t\t\tcase \"progressive_load\":\r\n\r\n\t\t\t\t\tif(this.page == 1){\r\n\t\t\t\t\t\tthis.table.rowManager.setData(data.data, false, this.page == 1)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.table.rowManager.addRows(data.data);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(this.page < this.max){\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.nextPage();\r\n\t\t\t\t\t\t}, this.table.options.progressiveLoadDelay);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"progressive_scroll\":\r\n\t\t\t\t\tdata = this.page === 1 ? data.data : this.table.rowManager.getData().concat(data.data);\r\n\r\n\t\t\t\t\tthis.table.rowManager.setData(data, this.page !== 1, this.page == 1);\r\n\r\n\t\t\t\t\tmargin = this.table.options.progressiveLoadScrollMargin || (this.table.rowManager.element.clientHeight * 2);\r\n\r\n\t\t\t\t\tif(this.table.rowManager.element.scrollHeight <= (this.table.rowManager.element.clientHeight + margin)){\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.nextPage();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}else{\r\n\t\t\t\t// left = this.table.rowManager.scrollLeft;\r\n\t\t\t\tthis.dispatchExternal(\"pageLoaded\",  this.getPage());\r\n\t\t\t\t// this.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\t// this.table.columnManager.scrollHorizontal(left);\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").data || \"data\") + \"' property\");\r\n\t\t}\r\n\r\n\t\treturn data.data;\r\n\t}\r\n\r\n\t//handle the footer element being redrawn\r\n\tfooterRedraw(){\r\n\t\tvar footer = this.table.footerManager.element;\r\n\r\n\t\tif((Math.ceil(footer.clientWidth) - footer.scrollWidth) < 0){\r\n\t\t\tthis.pagesElement.style.display = 'none';\r\n\t\t}else{\r\n\t\t\tthis.pagesElement.style.display = '';\r\n\r\n\t\t\tif((Math.ceil(footer.clientWidth) - footer.scrollWidth) < 0){\r\n\t\t\t\tthis.pagesElement.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nPage.moduleName = \"page\";\r\n\r\nexport default Page;","// read peristence information from storage\r\nexport default {\r\n\tlocal:function(id, type){\r\n\t\tvar data = localStorage.getItem(id + \"-\" + type);\r\n\r\n\t\treturn data ? JSON.parse(data) : false;\r\n\t},\r\n\tcookie:function(id, type){\r\n\t\tvar cookie = document.cookie,\r\n\t\tkey = id + \"-\" + type,\r\n\t\tcookiePos = cookie.indexOf(key + \"=\"),\r\n\t\tend, data;\r\n\r\n\t\t//if cookie exists, decode and load column data into tabulator\r\n\t\tif(cookiePos > -1){\r\n\t\t\tcookie = cookie.substr(cookiePos);\r\n\r\n\t\t\tend = cookie.indexOf(\";\");\r\n\r\n\t\t\tif(end > -1){\r\n\t\t\t\tcookie = cookie.substr(0, end);\r\n\t\t\t}\r\n\r\n\t\t\tdata = cookie.replace(key + \"=\", \"\");\r\n\t\t}\r\n\r\n\t\treturn data ? JSON.parse(data) : false;\r\n\t}\r\n};","//write persistence information to storage\r\nexport default {\r\n\tlocal:function(id, type, data){\r\n\t\tlocalStorage.setItem(id + \"-\" + type, JSON.stringify(data));\r\n\t},\r\n\tcookie:function(id, type, data){\r\n\t\tvar expireDate = new Date();\r\n\r\n\t\texpireDate.setDate(expireDate.getDate() + 10000);\r\n\r\n\t\tdocument.cookie = id + \"-\" + type + \"=\" + JSON.stringify(data) + \"; expires=\" + expireDate.toUTCString();\r\n\t}\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultReaders from './defaults/readers.js';\r\nimport defaultWriters from './defaults/writers.js';\r\n\r\nclass Persistence extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.mode = \"\";\r\n\t\tthis.id = \"\";\r\n\t\t// this.persistProps = [\"field\", \"width\", \"visible\"];\r\n\t\tthis.defWatcherBlock = false;\r\n\t\tthis.config = {};\r\n\t\tthis.readFunc = false;\r\n\t\tthis.writeFunc = false;\r\n\r\n\t\tthis.registerTableOption(\"persistence\", false);\r\n\t\tthis.registerTableOption(\"persistenceID\", \"\"); //key for persistent storage\r\n\t\tthis.registerTableOption(\"persistenceMode\", true); //mode for storing persistence information\r\n\t\tthis.registerTableOption(\"persistenceReaderFunc\", false); //function for handling persistence data reading\r\n\t\tthis.registerTableOption(\"persistenceWriterFunc\", false); //function for handling persistence data writing\r\n\t}\r\n\r\n\t// Test for whether localStorage is available for use.\r\n\tlocalStorageTest() {\r\n\t\tvar  testKey =  \"_tabulator_test\";\r\n\r\n\t\ttry {\r\n\t\t\twindow.localStorage.setItem( testKey, testKey);\r\n\t\t\twindow.localStorage.removeItem( testKey );\r\n\t\t\treturn true;\r\n\t\t} catch(e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//setup parameters\r\n\tinitialize(){\r\n\t\tif(this.table.options.persistence){\r\n\t\t\t//determine persistent layout storage type\r\n\t\t\tvar mode = this.table.options.persistenceMode,\r\n\t\t\tid = this.table.options.persistenceID,\r\n\t\t\tretreivedData;\r\n\r\n\t\t\tthis.mode = mode !== true ?  mode : (this.localStorageTest() ? \"local\" : \"cookie\");\r\n\r\n\t\t\tif(this.table.options.persistenceReaderFunc){\r\n\t\t\t\tif(typeof this.table.options.persistenceReaderFunc === \"function\"){\r\n\t\t\t\t\tthis.readFunc = this.table.options.persistenceReaderFunc;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(Persistence.readers[this.table.options.persistenceReaderFunc]){\r\n\t\t\t\t\t\tthis.readFunc = Persistence.readers[this.table.options.persistenceReaderFunc];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Persistence Read Error - invalid reader set\", this.table.options.persistenceReaderFunc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(Persistence.readers[this.mode]){\r\n\t\t\t\t\tthis.readFunc = Persistence.readers[this.mode];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Persistence Read Error - invalid reader set\", this.mode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.persistenceWriterFunc){\r\n\t\t\t\tif(typeof this.table.options.persistenceWriterFunc === \"function\"){\r\n\t\t\t\t\tthis.writeFunc = this.table.options.persistenceWriterFunc;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(Persistence.writers[this.table.options.persistenceWriterFunc]){\r\n\t\t\t\t\t\tthis.writeFunc = Persistence.writers[this.table.options.persistenceWriterFunc];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Persistence Write Error - invalid reader set\", this.table.options.persistenceWriterFunc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(Persistence.writers[this.mode]){\r\n\t\t\t\t\tthis.writeFunc = Persistence.writers[this.mode];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Persistence Write Error - invalid writer set\", this.mode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//set storage tag\r\n\t\t\tthis.id = \"tabulator-\" + (id || (this.table.element.getAttribute(\"id\") || \"\"));\r\n\r\n\t\t\tthis.config = {\r\n\t\t\t\tsort:this.table.options.persistence === true || this.table.options.persistence.sort,\r\n\t\t\t\tfilter:this.table.options.persistence === true || this.table.options.persistence.filter,\r\n\t\t\t\tgroup:this.table.options.persistence === true || this.table.options.persistence.group,\r\n\t\t\t\tpage:this.table.options.persistence === true || this.table.options.persistence.page,\r\n\t\t\t\tcolumns:this.table.options.persistence === true ? [\"title\", \"width\", \"visible\"] : this.table.options.persistence.columns,\r\n\t\t\t};\r\n\r\n\t\t\t//load pagination data if needed\r\n\t\t\tif(this.config.page){\r\n\t\t\t\tretreivedData = this.retreiveData(\"page\");\r\n\r\n\t\t\t\tif(retreivedData){\r\n\t\t\t\t\tif(typeof retreivedData.paginationSize !== \"undefined\" && (this.config.page === true || this.config.page.size)){\r\n\t\t\t\t\t\tthis.table.options.paginationSize = retreivedData.paginationSize;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(typeof retreivedData.paginationInitialPage !== \"undefined\" && (this.config.page === true || this.config.page.page)){\r\n\t\t\t\t\t\tthis.table.options.paginationInitialPage = retreivedData.paginationInitialPage;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//load group data if needed\r\n\t\t\tif(this.config.group){\r\n\t\t\t\tretreivedData = this.retreiveData(\"group\");\r\n\r\n\t\t\t\tif(retreivedData){\r\n\t\t\t\t\tif(typeof retreivedData.groupBy !== \"undefined\" && (this.config.group === true || this.config.group.groupBy)){\r\n\t\t\t\t\t\tthis.table.options.groupBy = retreivedData.groupBy;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof retreivedData.groupStartOpen !== \"undefined\" && (this.config.group === true || this.config.group.groupStartOpen)){\r\n\t\t\t\t\t\tthis.table.options.groupStartOpen = retreivedData.groupStartOpen;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof retreivedData.groupHeader !== \"undefined\" && (this.config.group === true || this.config.group.groupHeader)){\r\n\t\t\t\t\t\tthis.table.options.groupHeader = retreivedData.groupHeader;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.columns){\r\n\t\t\t\tthis.table.options.columns = this.load(\"columns\", this.table.options.columns);\r\n\t\t\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\t\t\tthis.subscribe(\"column-show\", this.save.bind(this, \"columns\"));\r\n\t\t\t\tthis.subscribe(\"column-hide\", this.save.bind(this, \"columns\"));\r\n\t\t\t\tthis.subscribe(\"column-moved\", this.save.bind(this, \"columns\"));\r\n\t\t\t\tthis.subscribe(\"table-built\", this.tableBuilt.bind(this), 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\r\n\r\n\r\n\t\t\tthis.subscribe(\"filter-changed\", this.eventSave.bind(this, \"filter\"));\r\n\t\t\tthis.subscribe(\"sort-changed\", this.eventSave.bind(this, \"sort\"));\r\n\t\t\tthis.subscribe(\"group-changed\", this.eventSave.bind(this, \"group\"));\r\n\t\t\tthis.subscribe(\"page-changed\", this.eventSave.bind(this, \"page\"));\r\n\t\t\tthis.subscribe(\"column-resized\", this.eventSave.bind(this, \"columns\"));\r\n\t\t\tthis.subscribe(\"layout-refreshed\", this.eventSave.bind(this, \"columns\"));\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"getColumnLayout\", this.getColumnLayout.bind(this));\r\n\t\tthis.registerTableFunction(\"setColumnLayout\", this.setColumnLayout.bind(this));\r\n\t}\r\n\r\n\teventSave(type){\r\n\t\tif(this.config[type]){\r\n\t\t\tthis.save(type);\r\n\t\t}\r\n\t}\r\n\r\n\ttableBuilt(){\r\n\t\tvar options = this.table.options,\r\n\t\tsorters, filters;\r\n\r\n\t\tif(this.config.sort){\r\n\t\t\tsorters = this.load(\"sort\");\r\n\r\n\t\t\tif(!sorters === false){\r\n\t\t\t\tthis.table.initialSort = sorters;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.config.filter){\r\n\t\t\tfilters = this.load(\"filter\");\r\n\r\n\t\t\tif(!filters === false){\r\n\t\t\t\tthis.table.initialFilter = filters;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttableRedraw(force){\r\n\t\tif(force && this.config.columns){\r\n\t\t\tthis.save(\"columns\");\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tgetColumnLayout(){\r\n\t\treturn this.parseColumns(this.table.columnManager.getColumns());\r\n\t}\r\n\r\n\tsetColumnLayout(layout){\r\n\t\tthis.table.columnManager.setColumns(this.mergeDefinition(this.table.options.columns, layout))\r\n\t\treturn true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumn(column){\r\n\t\tvar def, keys;\r\n\r\n\t\tif(this.config.columns){\r\n\t\t\tthis.defWatcherBlock = true;\r\n\r\n\t\t\tdef = column.getDefinition();\r\n\r\n\t\t\tkeys = this.config.columns === true ? Object.keys(def) : this.config.columns;\r\n\r\n\t\t\tkeys.forEach((key)=>{\r\n\t\t\t\tvar props = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\t\tvar value = def[key];\r\n\t\t\t\tif(props){\r\n\t\t\t\t\tObject.defineProperty(def, key, {\r\n\t\t\t\t\t\tset: function(newValue){\r\n\t\t\t\t\t\t\tvalue = newValue;\r\n\r\n\t\t\t\t\t\t\tif(!this.defWatcherBlock){\r\n\t\t\t\t\t\t\t\tthis.save(\"columns\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(props.set){\r\n\t\t\t\t\t\t\t\tprops.set(newValue);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tget:function(){\r\n\t\t\t\t\t\t\tif(props.get){\r\n\t\t\t\t\t\t\t\tprops.get();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.defWatcherBlock = false;\r\n\t\t}\r\n\t}\r\n\r\n\t//load saved definitions\r\n\tload(type, current){\r\n\t\tvar data = this.retreiveData(type);\r\n\r\n\t\tif(current){\r\n\t\t\tdata = data ? this.mergeDefinition(current, data) : current;\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//retreive data from memory\r\n\tretreiveData(type){\r\n\t\treturn this.readFunc ? this.readFunc(this.id, type) : false;\r\n\t}\r\n\r\n\t//merge old and new column definitions\r\n\tmergeDefinition(oldCols, newCols){\r\n\t\tvar output = [];\r\n\r\n\t\tnewCols = newCols || [];\r\n\r\n\t\tnewCols.forEach((column, to) => {\r\n\t\t\tvar from = this._findColumn(oldCols, column),\r\n\t\t\tkeys;\r\n\r\n\t\t\tif(from){\r\n\t\t\t\tif(this.config.columns === true || this.config.columns == undefined){\r\n\t\t\t\t\tkeys =  Object.keys(from);\r\n\t\t\t\t\tkeys.push(\"width\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tkeys = this.config.columns;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkeys.forEach((key)=>{\r\n\t\t\t\t\tif(key !== \"columns\" && typeof column[key] !== \"undefined\"){\r\n\t\t\t\t\t\tfrom[key] = column[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(from.columns){\r\n\t\t\t\t\tfrom.columns = this.mergeDefinition(from.columns, column.columns);\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.push(from);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\toldCols.forEach((column, i) => {\r\n\t\t\tvar from = this._findColumn(newCols, column);\r\n\r\n\t\t\tif (!from) {\r\n\t\t\t\tif(output.length>i){\r\n\t\t\t\t\toutput.splice(i, 0, column);\r\n\t\t\t\t}else{\r\n\t\t\t\t\toutput.push(column);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//find matching columns\r\n\t_findColumn(columns, subject){\r\n\t\tvar type = subject.columns ? \"group\" : (subject.field ? \"field\" : \"object\");\r\n\r\n\t\treturn columns.find(function(col){\r\n\t\t\tswitch(type){\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\treturn col.title === subject.title && col.columns.length === subject.columns.length;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"field\":\r\n\t\t\t\treturn col.field === subject.field;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\treturn col === subject;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//save data\r\n\tsave(type){\r\n\t\tvar data = {};\r\n\r\n\t\tswitch(type){\r\n\t\t\tcase \"columns\":\r\n\t\t\tdata = this.parseColumns(this.table.columnManager.getColumns())\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"filter\":\r\n\t\t\tdata = this.table.modules.filter.getFilters();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"sort\":\r\n\t\t\tdata = this.validateSorters(this.table.modules.sort.getSort());\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\tdata = this.getGroupConfig();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"page\":\r\n\t\t\tdata = this.getPageConfig();\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(this.writeFunc){\r\n\t\t\tthis.writeFunc(this.id, type, data);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//ensure sorters contain no function data\r\n\tvalidateSorters(data){\r\n\t\tdata.forEach(function(item){\r\n\t\t\titem.column = item.field;\r\n\t\t\tdelete item.field;\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tgetGroupConfig(){\r\n\t\tvar data = {};\r\n\r\n\t\tif(this.config.group){\r\n\t\t\tif(this.config.group === true || this.config.group.groupBy){\r\n\t\t\t\tdata.groupBy = this.table.options.groupBy;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.group === true || this.config.group.groupStartOpen){\r\n\t\t\t\tdata.groupStartOpen = this.table.options.groupStartOpen;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.group === true || this.config.group.groupHeader){\r\n\t\t\t\tdata.groupHeader = this.table.options.groupHeader;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tgetPageConfig(){\r\n\t\tvar data = {};\r\n\r\n\t\tif(this.config.page){\r\n\t\t\tif(this.config.page === true || this.config.page.size){\r\n\t\t\t\tdata.paginationSize = this.table.modules.page.getPageSize();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.page === true || this.config.page.page){\r\n\t\t\t\tdata.paginationInitialPage = this.table.modules.page.getPage();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\t//parse columns for data to store\r\n\tparseColumns(columns){\r\n\t\tvar definitions = [],\r\n\t\texcludedKeys = [\"headerContextMenu\", \"headerMenu\", \"contextMenu\", \"clickMenu\"];\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\tvar defStore = {},\r\n\t\t\tcolDef = column.getDefinition(),\r\n\t\t\tkeys;\r\n\r\n\t\t\tif(column.isGroup){\r\n\t\t\t\tdefStore.title = colDef.title;\r\n\t\t\t\tdefStore.columns = this.parseColumns(column.getColumns());\r\n\t\t\t}else{\r\n\t\t\t\tdefStore.field = column.getField();\r\n\r\n\t\t\t\tif(this.config.columns === true || this.config.columns == undefined){\r\n\t\t\t\t\tkeys =  Object.keys(colDef);\r\n\t\t\t\t\tkeys.push(\"width\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tkeys = this.config.columns;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkeys.forEach((key)=>{\r\n\t\t\t\t\tswitch(key){\r\n\t\t\t\t\t\tcase \"width\":\r\n\t\t\t\t\t\tdefStore.width = column.getWidth();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"visible\":\r\n\t\t\t\t\t\tdefStore.visible = column.visible;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif(typeof colDef[key] !== \"function\" && excludedKeys.indexOf(key) === -1){\r\n\t\t\t\t\t\t\tdefStore[key] = colDef[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdefinitions.push(defStore);\r\n\t\t});\r\n\r\n\t\treturn definitions;\r\n\t}\r\n}\r\n\r\nPersistence.moduleName = \"persistence\";\r\n\r\n//load defaults\r\nPersistence.readers = defaultReaders;\r\nPersistence.writers = defaultWriters;\r\n\r\nexport default Persistence;","import Module from '../../core/Module.js';\r\n\r\nclass Print extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.manualBlock = false;\r\n\r\n\t\tthis.registerTableOption(\"printAsHtml\", false); //enable print as html\r\n\t\tthis.registerTableOption(\"printFormatter\", false); //printing page formatter\r\n\t\tthis.registerTableOption(\"printHeader\", false); //page header contents\r\n\t\tthis.registerTableOption(\"printFooter\", false); //page footer contents\r\n\t\tthis.registerTableOption(\"printStyled\", true); //enable print as html styling\r\n\t\tthis.registerTableOption(\"printRowRange\", \"visible\"); //restrict print to visible rows only\r\n\t\tthis.registerTableOption(\"printConfig\", {}); //print config options\r\n\r\n\t\tthis.registerColumnOption(\"print\");\r\n\t\tthis.registerColumnOption(\"titlePrint\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.printAsHtml){\r\n\t\t\twindow.addEventListener(\"beforeprint\", this.replaceTable.bind(this));\r\n\t\t\twindow.addEventListener(\"afterprint\", this.cleanup.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"print\", this.printFullscreen.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\treplaceTable(){\r\n\t\tif(!this.manualBlock){\r\n\t\t\tthis.element = document.createElement(\"div\");\r\n\t\t\tthis.element.classList.add(\"tabulator-print-table\");\r\n\r\n\t\t\tthis.element.appendChild(this.table.modules.export.genereateTable(this.table.options.printConfig, this.table.options.printStyled, this.table.options.printRowRange, \"print\"));\r\n\r\n\t\t\tthis.table.element.style.display = \"none\";\r\n\r\n\t\t\tthis.table.element.parentNode.insertBefore(this.element, this.table.element);\r\n\t\t}\r\n\t}\r\n\r\n\tcleanup(){\r\n\t\tdocument.body.classList.remove(\"tabulator-print-fullscreen-hide\");\r\n\r\n\t\tif(this.element && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\tthis.table.element.style.display = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tprintFullscreen(visible, style, config){\r\n\t\tvar scrollX = window.scrollX,\r\n\t\tscrollY = window.scrollY,\r\n\t\theaderEl = document.createElement(\"div\"),\r\n\t\tfooterEl = document.createElement(\"div\"),\r\n\t\ttableEl = this.table.modules.export.genereateTable(typeof config != \"undefined\" ? config : this.table.options.printConfig, typeof style != \"undefined\" ? style : this.table.options.printStyled, visible || this.table.options.printRowRange, \"print\"),\r\n\t\theaderContent, footerContent;\r\n\r\n\t\tthis.manualBlock = true;\r\n\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.classList.add(\"tabulator-print-fullscreen\");\r\n\r\n\t\tif(this.table.options.printHeader){\r\n\t\t\theaderEl.classList.add(\"tabulator-print-header\");\r\n\r\n\t\t\theaderContent = typeof this.table.options.printHeader == \"function\" ? this.table.options.printHeader.call(this.table) : this.table.options.printHeader;\r\n\r\n\t\t\tif(typeof headerContent == \"string\"){\r\n\t\t\t\theaderEl.innerHTML = headerContent;\r\n\t\t\t}else{\r\n\t\t\t\theaderEl.appendChild(headerContent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.appendChild(headerEl);\r\n\t\t}\r\n\r\n\t\tthis.element.appendChild(tableEl);\r\n\r\n\t\tif(this.table.options.printFooter){\r\n\t\t\tfooterEl.classList.add(\"tabulator-print-footer\");\r\n\r\n\t\t\tfooterContent = typeof this.table.options.printFooter == \"function\" ? this.table.options.printFooter.call(this.table) : this.table.options.printFooter;\r\n\r\n\r\n\t\t\tif(typeof footerContent == \"string\"){\r\n\t\t\t\tfooterEl.innerHTML = footerContent;\r\n\t\t\t}else{\r\n\t\t\t\tfooterEl.appendChild(footerContent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.appendChild(footerEl);\r\n\t\t}\r\n\r\n\t\tdocument.body.classList.add(\"tabulator-print-fullscreen-hide\");\r\n\t\tdocument.body.appendChild(this.element);\r\n\r\n\t\tif(this.table.options.printFormatter){\r\n\t\t\tthis.table.options.printFormatter(this.element, tableEl);\r\n\t\t}\r\n\r\n\t\twindow.print();\r\n\r\n\t\tthis.cleanup();\r\n\r\n\t\twindow.scrollTo(scrollX, scrollY);\r\n\r\n\t\tthis.manualBlock = false;\r\n\t}\r\n}\r\n\r\nPrint.moduleName = \"print\";\r\n\r\nexport default Print;","import Module from '../../core/Module.js';\r\n\r\nclass ReactiveData extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.data = false;\r\n\t\tthis.blocked = false; //block reactivity while performing update\r\n\t\tthis.origFuncs = {}; // hold original data array functions to allow replacement after data is done with\r\n\t\tthis.currentVersion = 0;\r\n\r\n\t\tthis.registerTableOption(\"reactiveData\", false); //enable data reactivity\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.reactiveData){\r\n\t\t\tthis.subscribe(\"cell-value-save-before\", this.block.bind(this));\r\n\t\t\tthis.subscribe(\"cell-value-save-after\", this.unblock.bind(this));\r\n\t\t\tthis.subscribe(\"row-data-save-before\", this.block.bind(this));\r\n\t\t\tthis.subscribe(\"row-data-save-after\", this.unblock.bind(this));\r\n\t\t\tthis.subscribe(\"row-data-init-after\", this.watchRow.bind(this));\r\n\t\t\tthis.subscribe(\"data-processing\", this.watchData.bind(this));\r\n\t\t\tthis.subscribe(\"table-destroy\", this.unwatchData.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\twatchData(data){\r\n\t\tvar self = this,\r\n\t\tpushFunc, version;\r\n\r\n\t\tthis.currentVersion ++;\r\n\r\n\t\tversion = this.currentVersion;\r\n\r\n\t\tthis.unwatchData();\r\n\r\n\t\tthis.data = data;\r\n\r\n\t\t//override array push function\r\n\t\tthis.origFuncs.push = data.push;\r\n\r\n\t\tObject.defineProperty(this.data, \"push\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar args = Array.from(arguments);\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\targs.forEach((arg) => {\r\n\t\t\t\t\t\tself.table.rowManager.addRowActual(arg, false);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.push.apply(data, arguments);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//override array unshift function\r\n\t\tthis.origFuncs.unshift = data.unshift;\r\n\r\n\t\tObject.defineProperty(this.data, \"unshift\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar args = Array.from(arguments);\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\targs.forEach((arg) => {\r\n\t\t\t\t\t\tself.table.rowManager.addRowActual(arg, true);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.unshift.apply(data, arguments);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t//override array shift function\r\n\t\tthis.origFuncs.shift = data.shift;\r\n\r\n\t\tObject.defineProperty(this.data, \"shift\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar row;\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\tif(self.data.length){\r\n\t\t\t\t\t\trow = self.table.rowManager.getRowFromDataObject(self.data[0]);\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\trow.deleteActual();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.shift.call(data);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//override array pop function\r\n\t\tthis.origFuncs.pop = data.pop;\r\n\r\n\t\tObject.defineProperty(this.data, \"pop\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar row;\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\tif(self.data.length){\r\n\t\t\t\t\t\trow = self.table.rowManager.getRowFromDataObject(self.data[self.data.length - 1]);\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\trow.deleteActual();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn self.origFuncs.pop.call(data);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t//override array splice function\r\n\t\tthis.origFuncs.splice = data.splice;\r\n\r\n\t\tObject.defineProperty(this.data, \"splice\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar args = Array.from(arguments),\r\n\t\t\t\tstart = args[0] < 0 ? data.length + args[0] : args[0],\r\n\t\t\t\tend = args[1],\r\n\t\t\t\tnewRows = args[2] ? args.slice(2) : false,\r\n\t\t\t\tstartRow;\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\r\n\t\t\t\t\t//add new rows\r\n\t\t\t\t\tif(newRows){\r\n\t\t\t\t\t\tstartRow = data[start] ? self.table.rowManager.getRowFromDataObject(data[start]) : false;\r\n\r\n\t\t\t\t\t\tif(startRow){\r\n\t\t\t\t\t\t\tnewRows.forEach((rowData) => {\r\n\t\t\t\t\t\t\t\tself.table.rowManager.addRowActual(rowData, true, startRow, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tnewRows = newRows.slice().reverse();\r\n\r\n\t\t\t\t\t\t\tnewRows.forEach((rowData) => {\r\n\t\t\t\t\t\t\t\tself.table.rowManager.addRowActual(rowData, true, false, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//delete removed rows\r\n\t\t\t\t\tif(end !== 0){\r\n\t\t\t\t\t\tvar oldRows = data.slice(start, typeof args[1] === \"undefined\" ? args[1] : start + end);\r\n\r\n\t\t\t\t\t\toldRows.forEach((rowData, i) => {\r\n\t\t\t\t\t\t\tvar row = self.table.rowManager.getRowFromDataObject(rowData);\r\n\r\n\t\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\t\trow.deleteActual(i !== oldRows.length - 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(newRows || end !== 0){\r\n\t\t\t\t\t\tself.table.rowManager.reRenderInPosition();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.splice.apply(data, arguments);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tunwatchData(){\r\n\t\tif(this.data !== false){\r\n\t\t\tfor(var key in this.origFuncs){\r\n\t\t\t\tObject.defineProperty(this.data, key, {\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tconfigurable:true,\r\n\t\t\t\t\twritable:true,\r\n\t\t\t\t\tvalue: this.origFuncs.key,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twatchRow(row){\r\n\t\tvar data = row.getData();\r\n\r\n\t\tthis.blocked = true;\r\n\r\n\t\tfor(var key in data){\r\n\t\t\tthis.watchKey(row, data, key);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.dataTree){\r\n\t\t\tthis.watchTreeChildren(row);\r\n\t\t}\r\n\r\n\t\tthis.blocked = false;\r\n\t}\r\n\r\n\twatchTreeChildren (row){\r\n\t\tvar childField = row.getData()[this.table.options.dataTreeChildField],\r\n\t\torigFuncs = {};\r\n\r\n\t\tfunction rebuildTree(){\r\n\t\t\tthis.table.modules.dataTree.initializeRow(row);\r\n\t\t\tthis.table.modules.dataTree.layoutRow(row);\r\n\t\t\tthis.table.rowManager.refreshActiveData(\"tree\", false, true);\r\n\t\t}\r\n\r\n\t\tif(childField){\r\n\r\n\t\t\torigFuncs.push = childField.push;\r\n\r\n\t\t\tObject.defineProperty(childField, \"push\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result = origFuncs.push.apply(childField, arguments);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.unshift = childField.unshift;\r\n\r\n\t\t\tObject.defineProperty(childField, \"unshift\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.unshift.apply(childField, arguments);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.shift = childField.shift;\r\n\r\n\t\t\tObject.defineProperty(childField, \"shift\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.shift.call(childField);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.pop = childField.pop;\r\n\r\n\t\t\tObject.defineProperty(childField, \"pop\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.pop.call(childField);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.splice = childField.splice;\r\n\r\n\t\t\tObject.defineProperty(childField, \"splice\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.splice.apply(childField, arguments);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\twatchKey(row, data, key){\r\n\t\tvar props = Object.getOwnPropertyDescriptor(data, key),\r\n\t\tvalue = data[key],\r\n\t\tversion = this.currentVersion;\r\n\r\n\t\tObject.defineProperty(data, key, {\r\n\t\t\tset: (newValue) => {\r\n\t\t\t\tvalue = newValue;\r\n\t\t\t\tif(!this.blocked && version === this.currentVersion){\r\n\t\t\t\t\tvar update = {};\r\n\t\t\t\t\tupdate[key] = newValue;\r\n\t\t\t\t\trow.updateData(update);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(props.set){\r\n\t\t\t\t\tprops.set(newValue);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tget:() => {\r\n\r\n\t\t\t\tif(props.get){\r\n\t\t\t\t\tprops.get();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tunwatchRow(row){\r\n\t\tvar data = row.getData();\r\n\r\n\t\tfor(var key in data){\r\n\t\t\tObject.defineProperty(data, key, {\r\n\t\t\t\tvalue:data[key],\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tblock(){\r\n\t\tthis.blocked = true;\r\n\t}\r\n\r\n\tunblock(){\r\n\t\tthis.blocked = false;\r\n\t}\r\n}\r\n\r\nReactiveData.moduleName = \"reactiveData\";\r\n\r\nexport default ReactiveData;\r\n\r\n\r\n\r\n","import Module from '../../core/Module.js';\r\n\r\nclass ResizeColumns extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.startColumn = false;\r\n\t\tthis.startX = false;\r\n\t\tthis.startWidth = false;\r\n\t\tthis.handle = null;\r\n\t\tthis.prevHandle = null;\r\n\r\n\t\tthis.registerColumnOption(\"resizable\", true);\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\t// if(this.table.options.resizableColumns){\r\n\t\t\tthis.subscribe(\"cell-layout\", this.layoutCellHandles.bind(this));\r\n\t\t\tthis.subscribe(\"column-init\", this.layoutColumnHeader.bind(this));\r\n\t\t// }\r\n\t}\r\n\r\n\tlayoutCellHandles(cell){\r\n\t\tif(cell.row.type === \"row\"){\r\n\t\t\tthis.initializeColumn(\"cell\", cell.column, cell.element);\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutColumnHeader(column){\r\n\t\tthis.initializeColumn(\"header\", column, column.element);\r\n\t}\r\n\r\n\tinitializeColumn(type, column, element){\r\n\t\tvar self = this,\r\n\t\tvariableHeight = false,\r\n\t\tmode = column.definition.resizable;\r\n\r\n\t\t//set column resize mode\r\n\t\tif(type === \"header\"){\r\n\t\t\tvariableHeight = column.definition.formatter == \"textarea\" || column.definition.variableHeight;\r\n\t\t\tcolumn.modules.resize = {variableHeight:variableHeight};\r\n\t\t}\r\n\r\n\t\tif(mode === true || mode == type){\r\n\r\n\t\t\tvar handle = document.createElement('div');\r\n\t\t\thandle.className = \"tabulator-col-resize-handle\";\r\n\r\n\r\n\t\t\tvar prevHandle = document.createElement('div');\r\n\t\t\tprevHandle.className = \"tabulator-col-resize-handle prev\";\r\n\r\n\t\t\thandle.addEventListener(\"click\", function(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\tvar handleDown = function(e){\r\n\t\t\t\tvar nearestColumn = column.getLastColumn();\r\n\r\n\t\t\t\tif(nearestColumn && self._checkResizability(nearestColumn)){\r\n\t\t\t\t\tself.startColumn = column;\r\n\t\t\t\t\tself._mouseDown(e, nearestColumn, handle);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\thandle.addEventListener(\"mousedown\", handleDown);\r\n\t\t\thandle.addEventListener(\"touchstart\", handleDown, {passive: true});\r\n\r\n\t\t\t//reszie column on  double click\r\n\t\t\thandle.addEventListener(\"dblclick\", function(e){\r\n\t\t\t\tvar col = column.getLastColumn();\r\n\r\n\t\t\t\tif(col && self._checkResizability(col)){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tcol.reinitializeWidth(true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\tprevHandle.addEventListener(\"click\", function(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\tvar prevHandleDown = function(e){\r\n\t\t\t\tvar nearestColumn, colIndex, prevColumn;\r\n\r\n\t\t\t\tnearestColumn = column.getFirstColumn();\r\n\r\n\t\t\t\tif(nearestColumn){\r\n\t\t\t\t\tcolIndex = self.table.columnManager.findColumnIndex(nearestColumn);\r\n\t\t\t\t\tprevColumn = colIndex > 0 ? self.table.columnManager.getColumnByIndex(colIndex - 1) : false;\r\n\r\n\t\t\t\t\tif(prevColumn && self._checkResizability(prevColumn)){\r\n\t\t\t\t\t\tself.startColumn = column;\r\n\t\t\t\t\t\tself._mouseDown(e, prevColumn, prevHandle);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tprevHandle.addEventListener(\"mousedown\", prevHandleDown);\r\n\t\t\tprevHandle.addEventListener(\"touchstart\", prevHandleDown, {passive: true});\r\n\r\n\t\t\t//resize column on double click\r\n\t\t\tprevHandle.addEventListener(\"dblclick\", function(e){\r\n\t\t\t\tvar nearestColumn, colIndex, prevColumn;\r\n\r\n\t\t\t\tnearestColumn = column.getFirstColumn();\r\n\r\n\t\t\t\tif(nearestColumn){\r\n\t\t\t\t\tcolIndex = self.table.columnManager.findColumnIndex(nearestColumn);\r\n\t\t\t\t\tprevColumn = colIndex > 0 ? self.table.columnManager.getColumnByIndex(colIndex - 1) : false;\r\n\r\n\t\t\t\t\tif(prevColumn && self._checkResizability(prevColumn)){\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tprevColumn.reinitializeWidth(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\telement.appendChild(handle);\r\n\t\t\telement.appendChild(prevHandle);\r\n\t\t}\r\n\t}\r\n\r\n\t_checkResizability(column){\r\n\t\treturn column.definition.resizable;\r\n\t}\r\n\r\n\t_mouseDown(e, column, handle){\r\n\t\tvar self = this;\r\n\r\n\t\tself.table.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\tfunction mouseMove(e){\r\n\t\t\t// self.table.columnManager.tempScrollBlock();\r\n\r\n\t\t\tif(self.table.rtl){\r\n\t\t\t\tcolumn.setWidth(self.startWidth - ((typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX) - self.startX));\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.setWidth(self.startWidth + ((typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX) - self.startX));\r\n\t\t\t}\r\n\r\n\t\t\tself.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\tif(!self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight){\r\n\t\t\t\tcolumn.checkCellHeights();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction mouseUp(e){\r\n\r\n\t\t\t//block editor from taking action while resizing is taking place\r\n\t\t\tif(self.startColumn.modules.edit){\r\n\t\t\t\tself.startColumn.modules.edit.blocked = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight){\r\n\t\t\t\tcolumn.checkCellHeights();\r\n\t\t\t}\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", mouseUp);\r\n\t\t\tdocument.body.removeEventListener(\"mousemove\", mouseMove);\r\n\r\n\t\t\thandle.removeEventListener(\"touchmove\", mouseMove);\r\n\t\t\thandle.removeEventListener(\"touchend\", mouseUp);\r\n\r\n\t\t\tself.table.element.classList.remove(\"tabulator-block-select\");\r\n\r\n\t\t\tself.dispatch(\"column-resized\", column);\r\n\t\t\tself.table.externalEvents.dispatch(\"columnResized\", column.getComponent());\r\n\t\t}\r\n\r\n\t\te.stopPropagation(); //prevent resize from interfereing with movable columns\r\n\r\n\t\t//block editor from taking action while resizing is taking place\r\n\t\tif(self.startColumn.modules.edit){\r\n\t\t\tself.startColumn.modules.edit.blocked = true;\r\n\t\t}\r\n\r\n\t\tself.startX = typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX;\r\n\t\tself.startWidth = column.getWidth();\r\n\r\n\t\tdocument.body.addEventListener(\"mousemove\", mouseMove);\r\n\t\tdocument.body.addEventListener(\"mouseup\", mouseUp);\r\n\t\thandle.addEventListener(\"touchmove\", mouseMove, {passive: true});\r\n\t\thandle.addEventListener(\"touchend\", mouseUp);\r\n\t}\r\n}\r\n\r\nResizeColumns.moduleName = \"resizeColumns\";\r\n\r\nexport default ResizeColumns;","import Module from '../../core/Module.js';\r\n\r\nclass ResizeRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.startColumn = false;\r\n\t\tthis.startY = false;\r\n\t\tthis.startHeight = false;\r\n\t\tthis.handle = null;\r\n\t\tthis.prevHandle = null;\r\n\r\n\t\tthis.registerTableOption(\"resizableRows\", false); //resizable rows\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.resizableRows){\r\n\t\t\tthis.subscribe(\"row-layout-after\", this.initializeRow.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar self = this,\r\n\t\trowEl = row.getElement();\r\n\r\n\t\tvar handle = document.createElement('div');\r\n\t\thandle.className = \"tabulator-row-resize-handle\";\r\n\r\n\t\tvar prevHandle = document.createElement('div');\r\n\t\tprevHandle.className = \"tabulator-row-resize-handle prev\";\r\n\r\n\t\thandle.addEventListener(\"click\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tvar handleDown = function(e){\r\n\t\t\tself.startRow = row;\r\n\t\t\tself._mouseDown(e, row, handle);\r\n\t\t};\r\n\r\n\t\thandle.addEventListener(\"mousedown\", handleDown);\r\n\t\thandle.addEventListener(\"touchstart\", handleDown, {passive: true});\r\n\r\n\t\tprevHandle.addEventListener(\"click\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tvar prevHandleDown =  function(e){\r\n\t\t\tvar prevRow = self.table.rowManager.prevDisplayRow(row);\r\n\r\n\t\t\tif(prevRow){\r\n\t\t\t\tself.startRow = prevRow;\r\n\t\t\t\tself._mouseDown(e, prevRow, prevHandle);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tprevHandle.addEventListener(\"mousedown\",prevHandleDown);\r\n\t\tprevHandle.addEventListener(\"touchstart\",prevHandleDown, {passive: true});\r\n\r\n\t\trowEl.appendChild(handle);\r\n\t\trowEl.appendChild(prevHandle);\r\n\t}\r\n\r\n\t_mouseDown(e, row, handle){\r\n\t\tvar self = this;\r\n\r\n\t\tself.table.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\tfunction mouseMove(e){\r\n\t\t\trow.setHeight(self.startHeight + ((typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY) - self.startY));\r\n\t\t}\r\n\r\n\t\tfunction mouseUp(e){\r\n\r\n\t\t\t// //block editor from taking action while resizing is taking place\r\n\t\t\t// if(self.startColumn.modules.edit){\r\n\t\t\t// \tself.startColumn.modules.edit.blocked = false;\r\n\t\t\t// }\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", mouseMove);\r\n\t\t\tdocument.body.removeEventListener(\"mousemove\", mouseMove);\r\n\r\n\t\t\thandle.removeEventListener(\"touchmove\", mouseMove);\r\n\t\t\thandle.removeEventListener(\"touchend\", mouseUp);\r\n\r\n\t\t\tself.table.element.classList.remove(\"tabulator-block-select\");\r\n\r\n\t\t\tthis.dispatchExternal(\"rowResized\", row.getComponent());\r\n\t\t}\r\n\r\n\t\te.stopPropagation(); //prevent resize from interfereing with movable columns\r\n\r\n\t\t//block editor from taking action while resizing is taking place\r\n\t\t// if(self.startColumn.modules.edit){\r\n\t\t// \tself.startColumn.modules.edit.blocked = true;\r\n\t\t// }\r\n\r\n\t\tself.startY = typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY;\r\n\t\tself.startHeight = row.getHeight();\r\n\r\n\t\tdocument.body.addEventListener(\"mousemove\", mouseMove);\r\n\t\tdocument.body.addEventListener(\"mouseup\", mouseUp);\r\n\r\n\t\thandle.addEventListener(\"touchmove\", mouseMove, {passive: true});\r\n\t\thandle.addEventListener(\"touchend\", mouseUp);\r\n\t}\r\n}\r\n\r\nResizeRows.moduleName = \"resizeRows\";\r\n\r\nexport default ResizeRows;","import Module from '../../core/Module.js';\r\n\r\nclass ResizeTable extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.binding = false;\r\n\t\tthis.observer = false;\r\n\t\tthis.containerObserver = false;\r\n\r\n\t\tthis.tableHeight = 0;\r\n\t\tthis.tableWidth = 0;\r\n\t\tthis.containerHeight = 0;\r\n\t\tthis.containerWidth = 0;\r\n\r\n\t\tthis.autoResize = false;\r\n\r\n\t\tthis.registerTableOption(\"autoResize\", true); //auto resize table\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.autoResize){\r\n\t\t\tvar table = this.table,\r\n\t\t\ttableStyle;\r\n\r\n\t\t\tthis.tableHeight = table.element.clientHeight;\r\n\t\t\tthis.tableWidth = table.element.clientWidth;\r\n\r\n\t\t\tif(table.element.parentNode){\r\n\t\t\t\tthis.containerHeight = table.element.parentNode.clientHeight;\r\n\t\t\t\tthis.containerWidth = table.element.parentNode.clientWidth;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof ResizeObserver !== \"undefined\" && table.rowManager.getRenderMode() === \"virtual\"){\r\n\r\n\t\t\t\tthis.autoResize = true;\r\n\r\n\t\t\t\tthis.observer = new ResizeObserver((entry) => {\r\n\t\t\t\t\tif(!table.browserMobile || (table.browserMobile &&!table.modules.edit.currentCell)){\r\n\r\n\t\t\t\t\t\tvar nodeHeight = Math.floor(entry[0].contentRect.height);\r\n\t\t\t\t\t\tvar nodeWidth = Math.floor(entry[0].contentRect.width);\r\n\r\n\t\t\t\t\t\tif(this.tableHeight != nodeHeight || this.tableWidth != nodeWidth){\r\n\t\t\t\t\t\t\tthis.tableHeight = nodeHeight;\r\n\t\t\t\t\t\t\tthis.tableWidth = nodeWidth;\r\n\r\n\t\t\t\t\t\t\tif(table.element.parentNode){\r\n\t\t\t\t\t\t\t\tthis.containerHeight = table.element.parentNode.clientHeight;\r\n\t\t\t\t\t\t\t\tthis.containerWidth = table.element.parentNode.clientWidth;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\t\t\t\t\ttable.redraw();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.observer.observe(table.element);\r\n\r\n\t\t\t\ttableStyle = window.getComputedStyle(table.element);\r\n\r\n\t\t\t\tif(this.table.element.parentNode && !this.table.rowManager.fixedHeight && (tableStyle.getPropertyValue(\"max-height\") || tableStyle.getPropertyValue(\"min-height\"))){\r\n\r\n\t\t\t\t\tthis.containerObserver = new ResizeObserver((entry) => {\r\n\t\t\t\t\t\tif(!table.browserMobile || (table.browserMobile &&!table.modules.edit.currentCell)){\r\n\r\n\t\t\t\t\t\t\tvar nodeHeight = Math.floor(entry[0].contentRect.height);\r\n\t\t\t\t\t\t\tvar nodeWidth = Math.floor(entry[0].contentRect.width);\r\n\r\n\t\t\t\t\t\t\tif(this.containerHeight != nodeHeight || this.containerWidth != nodeWidth){\r\n\t\t\t\t\t\t\t\tthis.containerHeight = nodeHeight;\r\n\t\t\t\t\t\t\t\tthis.containerWidth = nodeWidth;\r\n\t\t\t\t\t\t\t\tthis.tableHeight = table.element.clientHeight;\r\n\t\t\t\t\t\t\t\tthis.tableWidth = table.element.clientWidth;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttable.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\t\t\t\t\ttable.redraw();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.containerObserver.observe(this.table.element.parentNode);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.subscribe(\"table-resize\", this.tableResized.bind(this));\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.binding = function(){\r\n\t\t\t\t\tif(!table.browserMobile || (table.browserMobile && !table.modules.edit.currentCell)){\r\n\r\n\t\t\t\t\t\ttable.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\t\t\t\ttable.redraw();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\twindow.addEventListener(\"resize\", this.binding);\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"table-destroy\", this.clearBindings.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\ttableResized(){\r\n\t\tthis.table.rowManager.redraw();\r\n\t}\r\n\r\n\tclearBindings(){\r\n\t\tif(this.binding){\r\n\t\t\twindow.removeEventListener(\"resize\", this.binding);\r\n\t\t}\r\n\r\n\t\tif(this.observer){\r\n\t\t\tthis.observer.unobserve(this.table.element);\r\n\t\t}\r\n\r\n\t\tif(this.containerObserver){\r\n\t\t\tthis.containerObserver.unobserve(this.table.element.parentNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nResizeTable.moduleName = \"resizeTable\";\r\n\r\nexport default ResizeTable;","import Module from '../../core/Module.js';\r\n\r\nclass ResponsiveLayout extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.columns = [];\r\n\t\tthis.hiddenColumns = [];\r\n\t\tthis.mode = \"\";\r\n\t\tthis.index = 0;\r\n\t\tthis.collapseFormatter = [];\r\n\t\tthis.collapseStartOpen = true;\r\n\t\tthis.collapseHandleColumn = false;\r\n\r\n\t\tthis.registerTableOption(\"responsiveLayout\", false); //responsive layout flags\r\n\t\tthis.registerTableOption(\"responsiveLayoutCollapseStartOpen\", true); //start showing collapsed data\r\n\t\tthis.registerTableOption(\"responsiveLayoutCollapseUseFormatters\", true); //responsive layout collapse formatter\r\n\t\tthis.registerTableOption(\"responsiveLayoutCollapseFormatter\", false); //responsive layout collapse formatter\r\n\r\n\t\tthis.registerColumnOption(\"responsive\");\r\n\t}\r\n\r\n\t//generate responsive columns list\r\n\tinitialize(){\r\n\t\tvar self = this,\r\n\t\tcolumns = [];\r\n\r\n\t\tif(this.table.options.responsiveLayout){\r\n\t\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\t\tthis.subscribe(\"column-show\", this.updateColumnVisibility.bind(this));\r\n\t\t\tthis.subscribe(\"column-hide\", this.updateColumnVisibility.bind(this));\r\n\t\t\tthis.subscribe(\"columns-loaded\", this.initializeResponsivity.bind(this));\r\n\t\t\tthis.subscribe(\"column-moved\", this.initializeResponsivity.bind(this));\r\n\t\t\tthis.subscribe(\"column-add\", this.initializeResponsivity.bind(this));\r\n\t\t\tthis.subscribe(\"column-delete\", this.initializeResponsivity.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"table-redrawing\", this.tableRedraw.bind(this));\r\n\r\n\t\t\tif(this.table.options.responsiveLayout === \"collapse\"){\r\n\t\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t\t\tthis.subscribe(\"row-layout\", this.layoutRow.bind(this));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttableRedraw(force){\r\n\t\tif([\"fitColumns\", \"fitDataStretch\"].indexOf(this.layoutMode()) === -1){\r\n\t\t\tif(!force){\r\n\t\t\t\tthis.update();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeResponsivity(){\r\n\t\tvar columns = [];\r\n\r\n\t\tthis.mode = this.table.options.responsiveLayout;\r\n\t\tthis.collapseFormatter = this.table.options.responsiveLayoutCollapseFormatter || this.formatCollapsedData;\r\n\t\tthis.collapseStartOpen = this.table.options.responsiveLayoutCollapseStartOpen;\r\n\t\tthis.hiddenColumns = [];\r\n\r\n\t\t//determine level of responsivity for each column\r\n\t\tthis.table.columnManager.columnsByIndex.forEach(function(column, i){\r\n\t\t\tif(column.modules.responsive){\r\n\t\t\t\tif(column.modules.responsive.order && column.modules.responsive.visible){\r\n\t\t\t\t\tcolumn.modules.responsive.index = i;\r\n\t\t\t\t\tcolumns.push(column);\r\n\r\n\t\t\t\t\tif(!column.visible && self.mode === \"collapse\"){\r\n\t\t\t\t\t\tself.hiddenColumns.push(column);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//sort list by responsivity\r\n\t\tcolumns = columns.reverse();\r\n\t\tcolumns = columns.sort(function(a, b){\r\n\t\t\tvar diff = b.modules.responsive.order - a.modules.responsive.order;\r\n\t\t\treturn diff || (b.modules.responsive.index - a.modules.responsive.index);\r\n\t\t});\r\n\r\n\t\tthis.columns = columns;\r\n\r\n\t\tif(this.mode === \"collapse\"){\r\n\t\t\tthis.generateCollapsedContent();\r\n\t\t}\r\n\r\n\t\t//assign collapse column\r\n\t\tfor (let col of this.table.columnManager.columnsByIndex){\r\n\t\t\tif(col.definition.formatter == \"responsiveCollapse\"){\r\n\t\t\t\tthis.collapseHandleColumn = col;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.collapseHandleColumn){\r\n\t\t\tif(this.hiddenColumns.length){\r\n\t\t\t\tthis.collapseHandleColumn.show();\r\n\t\t\t}else{\r\n\t\t\t\tthis.collapseHandleColumn.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//define layout information\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.getDefinition();\r\n\r\n\t\tcolumn.modules.responsive = {order: typeof def.responsive === \"undefined\" ? 1 : def.responsive, visible:def.visible === false ? false : true};\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar el;\r\n\r\n\t\tif(row.type !== \"calc\"){\r\n\t\t\tel = document.createElement(\"div\");\r\n\t\t\tel.classList.add(\"tabulator-responsive-collapse\");\r\n\r\n\t\t\trow.modules.responsiveLayout = {\r\n\t\t\t\telement:el,\r\n\t\t\t\topen:this.collapseStartOpen,\r\n\t\t\t};\r\n\r\n\t\t\tif(!this.collapseStartOpen){\r\n\t\t\t\tel.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutRow(row){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tif(row.modules.responsiveLayout){\r\n\t\t\trowEl.appendChild(row.modules.responsiveLayout.element);\r\n\t\t\tthis.generateCollapsedRowContent(row);\r\n\t\t}\r\n\t}\r\n\r\n\t//update column visibility\r\n\tupdateColumnVisibility(column, responsiveToggle){\r\n\t\tif(!responsiveToggle && column.modules.responsive){\r\n\t\t\tcolumn.modules.responsive.visible = column.visible;\r\n\t\t\tthis.initializeResponsivity();\r\n\t\t}\r\n\t}\r\n\r\n\thideColumn(column){\r\n\t\tvar colCount = this.hiddenColumns.length;\r\n\r\n\t\tcolumn.hide(false, true);\r\n\r\n\t\tif(this.mode === \"collapse\"){\r\n\t\t\tthis.hiddenColumns.unshift(column);\r\n\t\t\tthis.generateCollapsedContent();\r\n\r\n\t\t\tif(this.collapseHandleColumn && !colCount){\r\n\t\t\t\tthis.collapseHandleColumn.show();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tshowColumn(column){\r\n\t\tvar index;\r\n\r\n\t\tcolumn.show(false, true);\r\n\t\t//set column width to prevent calculation loops on uninitialized columns\r\n\t\tcolumn.setWidth(column.getWidth());\r\n\r\n\t\tif(this.mode === \"collapse\"){\r\n\t\t\tindex = this.hiddenColumns.indexOf(column);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.hiddenColumns.splice(index, 1);\r\n\t\t\t}\r\n\r\n\t\t\tthis.generateCollapsedContent();\r\n\r\n\t\t\tif(this.collapseHandleColumn && !this.hiddenColumns.length){\r\n\t\t\t\tthis.collapseHandleColumn.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//redraw columns to fit space\r\n\tupdate(){\r\n\t\tvar self = this,\r\n\t\tworking = true;\r\n\r\n\t\twhile(working){\r\n\r\n\t\t\tlet width = self.table.modules.layout.getMode() == \"fitColumns\" ? self.table.columnManager.getFlexBaseWidth() : self.table.columnManager.getWidth();\r\n\r\n\t\t\tlet diff = (self.table.options.headerVisible ? self.table.columnManager.element.clientWidth : self.table.element.clientWidth) - width;\r\n\r\n\t\t\tif(diff < 0){\r\n\t\t\t\t//table is too wide\r\n\t\t\t\tlet column = self.columns[self.index];\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tself.hideColumn(column);\r\n\t\t\t\t\tself.index ++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tworking = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\r\n\t\t\t\t//table has spare space\r\n\t\t\t\tlet column = self.columns[self.index -1];\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tif(diff > 0){\r\n\t\t\t\t\t\tif(diff >= column.getWidth()){\r\n\t\t\t\t\t\t\tself.showColumn(column);\r\n\t\t\t\t\t\t\tself.index --;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tworking = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tworking = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tworking = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!self.table.rowManager.activeRowsCount){\r\n\t\t\t\tself.table.rowManager.renderEmptyScroll();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateCollapsedContent(){\r\n\t\tvar self = this,\r\n\t\trows = this.table.rowManager.getDisplayRows();\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\tself.generateCollapsedRowContent(row);\r\n\t\t});\r\n\t}\r\n\r\n\tgenerateCollapsedRowContent(row){\r\n\t\tvar el, contents;\r\n\r\n\t\tif(row.modules.responsiveLayout){\r\n\t\t\tel = row.modules.responsiveLayout.element;\r\n\r\n\t\t\twhile(el.firstChild) el.removeChild(el.firstChild);\r\n\r\n\t\t\tcontents = this.collapseFormatter(this.generateCollapsedRowData(row));\r\n\t\t\tif(contents){\r\n\t\t\t\tel.appendChild(contents);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateCollapsedRowData(row){\r\n\t\tvar self = this,\r\n\t\tdata = row.getData(),\r\n\t\toutput = [],\r\n\t\tmockCellComponent;\r\n\r\n\t\tthis.hiddenColumns.forEach(function(column){\r\n\t\t\tvar value = column.getFieldValue(data);\r\n\r\n\t\t\tif(column.definition.title && column.field){\r\n\t\t\t\tif(column.modules.format && self.table.options.responsiveLayoutCollapseUseFormatters){\r\n\r\n\t\t\t\t\tmockCellComponent = {\r\n\t\t\t\t\t\tvalue:false,\r\n\t\t\t\t\t\tdata:{},\r\n\t\t\t\t\t\tgetValue:function(){\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetData:function(){\r\n\t\t\t\t\t\t\treturn data;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetElement:function(){\r\n\t\t\t\t\t\t\treturn document.createElement(\"div\");\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetRow:function(){\r\n\t\t\t\t\t\t\treturn row.getComponent();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetColumn:function(){\r\n\t\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tfunction onRendered(callback){\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toutput.push({\r\n\t\t\t\t\t\tfield: column.field,\r\n\t\t\t\t\t\ttitle: column.definition.title,\r\n\t\t\t\t\t\tvalue: column.modules.format.formatter.call(self.table.modules.format, mockCellComponent, column.modules.format.params, onRendered)\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\toutput.push({\r\n\t\t\t\t\t\tfield: column.field,\r\n\t\t\t\t\t\ttitle: column.definition.title,\r\n\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tformatCollapsedData(data){\r\n\t\tvar list = document.createElement(\"table\");\r\n\r\n\t\tdata.forEach(function(item){\r\n\t\t\tvar row = document.createElement(\"tr\");\r\n\t\t\tvar titleData = document.createElement(\"td\");\r\n\t\t\tvar valueData = document.createElement(\"td\");\r\n\t\t\tvar node_content;\r\n\r\n\t\t\tvar titleHighlight = document.createElement(\"strong\");\r\n\t\t\ttitleData.appendChild(titleHighlight);\r\n\t\t\tthis.langBind(\"columns|\" + item.field, function(text){\r\n\t\t\t\ttitleHighlight.innerText = text || item.title;\r\n\t\t\t});\r\n\r\n\t\t\tif(item.value instanceof Node){\r\n\t\t\t\tnode_content = document.createElement(\"div\");\r\n\t\t\t\tnode_content.appendChild(item.value);\r\n\t\t\t\tvalueData.appendChild(node_content);\r\n\t\t\t}else{\r\n\t\t\t\tvalueData.innerHTML = item.value;\r\n\t\t\t}\r\n\r\n\t\t\trow.appendChild(titleData);\r\n\t\t\trow.appendChild(valueData);\r\n\t\t\tlist.appendChild(row);\r\n\t\t}, this);\r\n\r\n\t\treturn Object.keys(data).length ? list : \"\";\r\n\t}\r\n}\r\n\r\nResponsiveLayout.moduleName = \"responsiveLayout\";\r\n\r\nexport default ResponsiveLayout;","import Module from '../../core/Module.js';\r\n\r\nclass SelectRow extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.selecting = false; //flag selecting in progress\r\n\t\tthis.lastClickedRow = false; //last clicked row\r\n\t\tthis.selectPrev = []; //hold previously selected element for drag drop selection\r\n\t\tthis.selectedRows = []; //hold selected rows\r\n\t\tthis.headerCheckboxElement = null; // hold header select element\r\n\r\n\t\tthis.registerTableOption(\"selectable\", \"highlight\"); //highlight rows on hover\r\n\t\tthis.registerTableOption(\"selectableRangeMode\", \"drag\");  //highlight rows on hover\r\n\t\tthis.registerTableOption(\"selectableRollingSelection\", true); //roll selection once maximum number of selectable rows is reached\r\n\t\tthis.registerTableOption(\"selectablePersistence\", true); // maintain selection when table view is updated\r\n\t\tthis.registerTableOption(\"selectableCheck\", function(data, row){return true;}); //check wheather row is selectable\r\n\r\n\t\tthis.registerTableFunction(\"selectRow\", this.selectRows.bind(this));\r\n\t\tthis.registerTableFunction(\"deselectRow\", this.deselectRows.bind(this));\r\n\t\tthis.registerTableFunction(\"toggleSelectRow\", this.toggleRow.bind(this));\r\n\t\tthis.registerTableFunction(\"getSelectedRows\", this.getSelectedRows.bind(this));\r\n\t\tthis.registerTableFunction(\"getSelectedData\", this.getSelectedData.bind(this));\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"select\", this.selectRows.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"deselect\", this.deselectRows.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"toggleSelect\", this.toggleRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"isSelected\", this.isRowSelected.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.selectable !== false){\r\n\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t\tthis.subscribe(\"row-deleting\", this.rowDeleted.bind(this));\r\n\t\t\tthis.subscribe(\"rows-wipe\", this.clearSelectionData.bind(this));\r\n\t\t\tthis.subscribe(\"rows-retrieve\", this.rowRetrieve.bind(this));\r\n\r\n\t\t\tif(this.table.options.selectable && !this.table.options.selectablePersistence){\r\n\t\t\t\tthis.subscribe(\"data-refeshing\", this.deselectRows.bind(this));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trowRetrieve(type, prevValue){\r\n\t\treturn type === \"selected\" ? this.selectedRows : prevValue;\r\n\t}\r\n\r\n\trowDeleted(row){\r\n\t\tthis._deselectRow(row, true);\r\n\t}\r\n\r\n\tclearSelectionData(silent){\r\n\t\tthis.selecting = false;\r\n\t\tthis.lastClickedRow = false;\r\n\t\tthis.selectPrev = [];\r\n\t\tthis.selectedRows = [];\r\n\r\n\t\tif(silent !== true){\r\n\t\t\tthis._rowSelectionChanged();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar self = this,\r\n\t\telement = row.getElement();\r\n\r\n\t\t// trigger end of row selection\r\n\t\tvar endSelect = function(){\r\n\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tself.selecting = false;\r\n\t\t\t}, 50);\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", endSelect);\r\n\t\t};\r\n\r\n\t\trow.modules.select = {selected:false};\r\n\r\n\t\t//set row selection class\r\n\t\tif(self.table.options.selectableCheck.call(this.table, row.getComponent())){\r\n\t\t\telement.classList.add(\"tabulator-selectable\");\r\n\t\t\telement.classList.remove(\"tabulator-unselectable\");\r\n\r\n\t\t\tif(self.table.options.selectable && self.table.options.selectable != \"highlight\"){\r\n\t\t\t\tif(self.table.options.selectableRangeMode === \"click\"){\r\n\t\t\t\t\telement.addEventListener(\"click\", function(e){\r\n\t\t\t\t\t\tif(e.shiftKey){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t\tself.lastClickedRow = self.lastClickedRow || row;\r\n\r\n\t\t\t\t\t\t\tvar lastClickedRowIdx = self.table.rowManager.getDisplayRowIndex(self.lastClickedRow);\r\n\t\t\t\t\t\t\tvar rowIdx = self.table.rowManager.getDisplayRowIndex(row);\r\n\r\n\t\t\t\t\t\t\tvar fromRowIdx = lastClickedRowIdx <= rowIdx ? lastClickedRowIdx : rowIdx;\r\n\t\t\t\t\t\t\tvar toRowIdx = lastClickedRowIdx >= rowIdx ? lastClickedRowIdx : rowIdx;\r\n\r\n\t\t\t\t\t\t\tvar rows = self.table.rowManager.getDisplayRows().slice(0);\r\n\t\t\t\t\t\t\tvar toggledRows = rows.splice(fromRowIdx, toRowIdx - fromRowIdx + 1);\r\n\r\n\t\t\t\t\t\t\tif(e.ctrlKey || e.metaKey){\r\n\t\t\t\t\t\t\t\ttoggledRows.forEach(function(toggledRow){\r\n\t\t\t\t\t\t\t\t\tif(toggledRow !== self.lastClickedRow){\r\n\r\n\t\t\t\t\t\t\t\t\t\tif(self.table.options.selectable !== true && !self.isRowSelected(row)){\r\n\t\t\t\t\t\t\t\t\t\t\tif(self.selectedRows.length < self.table.options.selectable){\r\n\t\t\t\t\t\t\t\t\t\t\t\tself.toggleRow(toggledRow);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\tself.toggleRow(toggledRow);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tself.lastClickedRow = row;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tself.deselectRows(undefined, true);\r\n\r\n\t\t\t\t\t\t\t\tif(self.table.options.selectable !== true){\r\n\t\t\t\t\t\t\t\t\tif(toggledRows.length > self.table.options.selectable){\r\n\t\t\t\t\t\t\t\t\t\ttoggledRows = toggledRows.slice(0, self.table.options.selectable)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tself.selectRows(toggledRows);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(e.ctrlKey || e.metaKey){\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\t\t\t\t\t\t\tself.lastClickedRow = row;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tself.deselectRows(undefined, true);\r\n\t\t\t\t\t\t\tself.selectRows(row);\r\n\t\t\t\t\t\t\tself.lastClickedRow = row;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.addEventListener(\"click\", function(e){\r\n\t\t\t\t\t\tif(!self.table.modExists(\"edit\") || !self.table.modules.edit.getCurrentCell()){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(!self.selecting){\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\telement.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\t\t\tif(e.shiftKey){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\r\n\t\t\t\t\t\t\tself.selecting = true;\r\n\r\n\t\t\t\t\t\t\tself.selectPrev = [];\r\n\r\n\t\t\t\t\t\t\tdocument.body.addEventListener(\"mouseup\", endSelect);\r\n\t\t\t\t\t\t\tdocument.body.addEventListener(\"keyup\", endSelect);\r\n\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\telement.addEventListener(\"mouseenter\", function(e){\r\n\t\t\t\t\t\tif(self.selecting){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\r\n\t\t\t\t\t\t\tif(self.selectPrev[1] == row){\r\n\t\t\t\t\t\t\t\tself.toggleRow(self.selectPrev[0]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\telement.addEventListener(\"mouseout\", function(e){\r\n\t\t\t\t\t\tif(self.selecting){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t\tself.selectPrev.unshift(row);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\telement.classList.add(\"tabulator-unselectable\");\r\n\t\t\telement.classList.remove(\"tabulator-selectable\");\r\n\t\t}\r\n\t}\r\n\r\n\t//toggle row selection\r\n\ttoggleRow(row){\r\n\t\tif(this.table.options.selectableCheck.call(this.table, row.getComponent())){\r\n\t\t\tif(row.modules.select && row.modules.select.selected){\r\n\t\t\t\tthis._deselectRow(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis._selectRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//select a number of rows\r\n\tselectRows(rows){\r\n\t\tvar rowMatch;\r\n\r\n\t\tswitch(typeof rows){\r\n\t\t\tcase \"undefined\":\r\n\t\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\t\tthis._selectRow(row, true, true);\r\n\t\t\t});\r\n\r\n\t\t\tthis._rowSelectionChanged();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"string\":\r\n\r\n\t\t\trowMatch = this.table.rowManager.findRow(rows);\r\n\r\n\t\t\tif(rowMatch){\r\n\t\t\t\tthis._selectRow(rowMatch, true, true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.table.rowManager.getRows(rows).forEach((row) => {\r\n\t\t\t\t\tthis._selectRow(row, true, true);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._rowSelectionChanged();\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tif(Array.isArray(rows)){\r\n\t\t\t\trows.forEach((row) => {\r\n\t\t\t\t\tthis._selectRow(row, true, true);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._rowSelectionChanged();\r\n\t\t\t}else{\r\n\t\t\t\tthis._selectRow(rows, false, true);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t//select an individual row\r\n\t_selectRow(rowInfo, silent, force){\r\n\t\tvar index;\r\n\r\n\t\t//handle max row count\r\n\t\tif(!isNaN(this.table.options.selectable) && this.table.options.selectable !== true && !force){\r\n\t\t\tif(this.selectedRows.length >= this.table.options.selectable){\r\n\t\t\t\tif(this.table.options.selectableRollingSelection){\r\n\t\t\t\t\tthis._deselectRow(this.selectedRows[0]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar row = this.table.rowManager.findRow(rowInfo);\r\n\r\n\t\tif(row){\r\n\t\t\tif(this.selectedRows.indexOf(row) == -1){\r\n\t\t\t\trow.getElement().classList.add(\"tabulator-selected\");\r\n\t\t\t\tif(!row.modules.select){\r\n\t\t\t\t\trow.modules.select = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow.modules.select.selected = true;\r\n\t\t\t\tif(row.modules.select.checkboxEl){\r\n\t\t\t\t\trow.modules.select.checkboxEl.checked = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.selectedRows.push(row);\r\n\r\n\t\t\t\tif(this.table.options.dataTreeSelectPropagate){\r\n\t\t\t\t\tthis.childRowSelection(row, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchExternal(\"rowSelected\", row.getComponent());\r\n\r\n\t\t\t\tthis._rowSelectionChanged(silent);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!silent){\r\n\t\t\t\tconsole.warn(\"Selection Error - No such row found, ignoring selection:\" + rowInfo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisRowSelected(row){\r\n\t\treturn this.selectedRows.indexOf(row) !== -1;\r\n\t}\r\n\r\n\t//deselect a number of rows\r\n\tdeselectRows(rows, silent){\r\n\t\tvar self = this,\r\n\t\trowCount;\r\n\t\t\r\n\t\tif(typeof rows == \"undefined\"){\r\n\r\n\t\t\trowCount = self.selectedRows.length;\r\n\r\n\t\t\tfor(let i = 0; i < rowCount; i++){\r\n\t\t\t\tself._deselectRow(self.selectedRows[0], true);\r\n\t\t\t}\r\n\r\n\t\t\tself._rowSelectionChanged(silent);\r\n\r\n\t\t}else{\r\n\t\t\tif(Array.isArray(rows)){\r\n\t\t\t\trows.forEach(function(row){\r\n\t\t\t\t\tself._deselectRow(row, true);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tself._rowSelectionChanged(silent);\r\n\t\t\t}else{\r\n\t\t\t\tself._deselectRow(rows, silent);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//deselect an individual row\r\n\t_deselectRow(rowInfo, silent){\r\n\t\tvar self = this,\r\n\t\trow = self.table.rowManager.findRow(rowInfo),\r\n\t\tindex;\r\n\r\n\t\tif(row){\r\n\t\t\tindex = self.selectedRows.findIndex(function(selectedRow){\r\n\t\t\t\treturn selectedRow == row;\r\n\t\t\t});\r\n\r\n\t\t\tif(index > -1){\r\n\r\n\t\t\t\trow.getElement().classList.remove(\"tabulator-selected\");\r\n\t\t\t\tif(!row.modules.select){\r\n\t\t\t\t\trow.modules.select = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow.modules.select.selected = false;\r\n\t\t\t\tif(row.modules.select.checkboxEl){\r\n\t\t\t\t\trow.modules.select.checkboxEl.checked = false;\r\n\t\t\t\t}\r\n\t\t\t\tself.selectedRows.splice(index, 1);\r\n\r\n\t\t\t\tif(this.table.options.dataTreeSelectPropagate){\r\n\t\t\t\t\tthis.childRowSelection(row, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchExternal(\"rowDeselected\", row.getComponent());\r\n\r\n\t\t\t\tself._rowSelectionChanged(silent);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!silent){\r\n\t\t\t\tconsole.warn(\"Deselection Error - No such row found, ignoring selection:\" + rowInfo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetSelectedData(){\r\n\t\tvar data = [];\r\n\r\n\t\tthis.selectedRows.forEach(function(row){\r\n\t\t\tdata.push(row.getData());\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tgetSelectedRows(){\r\n\r\n\t\tvar rows = [];\r\n\r\n\t\tthis.selectedRows.forEach(function(row){\r\n\t\t\trows.push(row.getComponent());\r\n\t\t});\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\t_rowSelectionChanged(silent){\r\n\t\tif(this.headerCheckboxElement){\r\n\t\t\tif(this.selectedRows.length === 0){\r\n\t\t\t\tthis.headerCheckboxElement.checked = false;\r\n\t\t\t\tthis.headerCheckboxElement.indeterminate = false;\r\n\t\t\t} else if(this.table.rowManager.rows.length === this.selectedRows.length){\r\n\t\t\t\tthis.headerCheckboxElement.checked = true;\r\n\t\t\t\tthis.headerCheckboxElement.indeterminate = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.headerCheckboxElement.indeterminate = true;\r\n\t\t\t\tthis.headerCheckboxElement.checked = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!silent){\r\n\t\t\tthis.dispatchExternal(\"rowSelectionChanged\", this.getSelectedData(), this.getSelectedRows());\r\n\t\t}\r\n\t}\r\n\r\n\tregisterRowSelectCheckbox (row, element) {\r\n\t\tif(!row._row.modules.select){\r\n\t\t\trow._row.modules.select = {};\r\n\t\t}\r\n\r\n\t\trow._row.modules.select.checkboxEl = element;\r\n\t}\r\n\r\n\tregisterHeaderSelectCheckbox (element) {\r\n\t\tthis.headerCheckboxElement = element;\r\n\t}\r\n\r\n\tchildRowSelection(row, select){\r\n\t\tvar children = this.table.modules.dataTree.getChildren(row, true);\r\n\r\n\t\tif(select){\r\n\t\t\tfor(let child of children){\r\n\t\t\t\tthis._selectRow(child, true);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tfor(let child of children){\r\n\t\t\t\tthis._deselectRow(child, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nSelectRow.moduleName = \"selectRow\";\r\n\r\nexport default SelectRow;","//sort numbers\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar decimal = params.decimalSeparator;\r\n\tvar thousand = params.thousandSeparator;\r\n\tvar emptyAlign = 0;\r\n\r\n\ta = String(a);\r\n\tb = String(b);\r\n\r\n\tif(thousand){\r\n\t\ta = a.split(thousand).join(\"\");\r\n\t\tb = b.split(thousand).join(\"\");\r\n\t}\r\n\r\n\tif(decimal){\r\n\t\ta = a.split(decimal).join(\".\");\r\n\t\tb = b.split(decimal).join(\".\");\r\n\t}\r\n\r\n\ta = parseFloat(a);\r\n\tb = parseFloat(b);\r\n\r\n\t//handle non numeric values\r\n\tif(isNaN(a)){\r\n\t\temptyAlign =  isNaN(b) ? 0 : -1;\r\n\t}else if(isNaN(b)){\r\n\t\temptyAlign =  1;\r\n\t}else{\r\n\t\t//compare valid values\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","//sort strings\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar emptyAlign = 0;\r\n\tvar locale;\r\n\r\n\t//handle empty values\r\n\tif(!a){\r\n\t\temptyAlign =  !b ? 0 : -1;\r\n\t}else if(!b){\r\n\t\temptyAlign =  1;\r\n\t}else{\r\n\t\t//compare valid values\r\n\t\tswitch(typeof params.locale){\r\n\t\t\tcase \"boolean\":\r\n\t\t\tif(params.locale){\r\n\t\t\t\tlocale = this.langLocale();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"string\":\r\n\t\t\tlocale = params.locale;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn String(a).toLowerCase().localeCompare(String(b).toLowerCase(), locale);\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","//sort datetime\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar DT = window.DateTime || luxon.DateTime;\r\n\tvar format = params.format || \"dd/MM/yyyy HH:mm:ss\",\r\n\talignEmptyValues = params.alignEmptyValues,\r\n\temptyAlign = 0;\r\n\r\n\tif(typeof DT != \"undefined\"){\r\n\t\ta = DT.fromFormat(String(a), format);\r\n\t\tb = DT.fromFormat(String(b), format);\r\n\r\n\t\tif(!a.isValid){\r\n\t\t\temptyAlign = !b.isValid ? 0 : -1;\r\n\t\t}else if(!b.isValid){\r\n\t\t\temptyAlign =  1;\r\n\t\t}else{\r\n\t\t\t//compare valid values\r\n\t\t\treturn a - b;\r\n\t\t}\r\n\r\n\t\t//fix empty values in position\r\n\t\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\t\temptyAlign *= -1;\r\n\t\t}\r\n\r\n\t\treturn emptyAlign;\r\n\r\n\t}else{\r\n\t\tconsole.error(\"Sort Error - 'datetime' sorter is dependant on luxon.js\");\r\n\t}\r\n};","import datetime from './datetime.js';\r\n\r\n//sort date\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tif(!params.format){\r\n\t\tparams.format = \"dd/MM/yyyy\";\r\n\t}\r\n\r\n\treturn datetime.call(this, a, b, aRow, bRow, column, dir, params);\r\n};","import datetime from './datetime.js';\r\n\r\n//sort times\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tif(!params.format){\r\n\t\tparams.format = \"HH:mm\";\r\n\t}\r\n\r\n\treturn datetime.call(this, a, b, aRow, bRow, column, dir, params);\r\n};","//sort booleans\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar el1 = a === true || a === \"true\" || a === \"True\" || a === 1 ? 1 : 0;\r\n\tvar el2 = b === true || b === \"true\" || b === \"True\" || b === 1 ? 1 : 0;\r\n\r\n\treturn el1 - el2;\r\n};","//sort if element contains any data\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar el1 = 0;\r\n\tvar el2 = 0;\r\n\tvar type = params.type || \"length\";\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar emptyAlign = 0;\r\n\r\n\tfunction calc(value){\r\n\r\n\t\tswitch(type){\r\n\t\t\tcase \"length\":\r\n\t\t\treturn value.length;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"sum\":\r\n\t\t\treturn value.reduce(function(c, d){\r\n\t\t\t\treturn c + d;\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"max\":\r\n\t\t\treturn Math.max.apply(null, value) ;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"min\":\r\n\t\t\treturn Math.min.apply(null, value) ;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"avg\":\r\n\t\t\treturn value.reduce(function(c, d){\r\n\t\t\t\treturn c + d;\r\n\t\t\t}) / value.length;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t//handle non array values\r\n\tif(!Array.isArray(a)){\r\n\t\talignEmptyValues = !Array.isArray(b) ? 0 : -1;\r\n\t}else if(!Array.isArray(b)){\r\n\t\talignEmptyValues = 1;\r\n\t}else{\r\n\r\n\t\t//compare valid values\r\n\t\tel1 = a ? calc(a) : 0;\r\n\t\tel2 = b ? calc(b) : 0;\r\n\r\n\t\treturn el1 - el2;\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","//sort if element contains any data\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar el1 = typeof a == \"undefined\" ? 0 : 1;\r\n\tvar el2 = typeof b == \"undefined\" ? 0 : 1;\r\n\r\n\treturn el1 - el2;\r\n};","//sort alpha numeric strings\r\nexport default function(as, bs, aRow, bRow, column, dir, params){\r\n\tvar a, b, a1, b1, i= 0, L, rx = /(\\d+)|(\\D+)/g, rd = /\\d/;\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar emptyAlign = 0;\r\n\r\n\t//handle empty values\r\n\tif(!as && as!== 0){\r\n\t\temptyAlign =  !bs && bs!== 0 ? 0 : -1;\r\n\t}else if(!bs && bs!== 0){\r\n\t\temptyAlign =  1;\r\n\t}else{\r\n\r\n\t\tif(isFinite(as) && isFinite(bs)) return as - bs;\r\n\t\ta = String(as).toLowerCase();\r\n\t\tb = String(bs).toLowerCase();\r\n\t\tif(a === b) return 0;\r\n\t\tif(!(rd.test(a) && rd.test(b))) return a > b ? 1 : -1;\r\n\t\ta = a.match(rx);\r\n\t\tb = b.match(rx);\r\n\t\tL = a.length > b.length ? b.length : a.length;\r\n\t\twhile(i < L){\r\n\t\t\ta1= a[i];\r\n\t\t\tb1= b[i++];\r\n\t\t\tif(a1 !== b1){\r\n\t\t\t\tif(isFinite(a1) && isFinite(b1)){\r\n\t\t\t\t\tif(a1.charAt(0) === \"0\") a1 = \".\" + a1;\r\n\t\t\t\t\tif(b1.charAt(0) === \"0\") b1 = \".\" + b1;\r\n\t\t\t\t\treturn a1 - b1;\r\n\t\t\t\t}\r\n\t\t\t\telse return a1 > b1 ? 1 : -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn a.length > b.length;\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","import number from './sorters/number.js';\r\nimport string from './sorters/string.js';\r\nimport date from './sorters/date.js';\r\nimport time from './sorters/time.js';\r\nimport datetime from './sorters/datetime.js';\r\nimport boolean from './sorters/boolean.js';\r\nimport array from './sorters/array.js';\r\nimport exists from './sorters/exists.js';\r\nimport alphanum from './sorters/alphanum.js';\r\n\r\nexport default {\r\n\tnumber:number,\r\n\tstring:string,\r\n\tdate:date,\r\n\ttime:time,\r\n\tdatetime:datetime,\r\n\tboolean:boolean,\r\n\tarray:array,\r\n\texists:exists,\r\n\talphanum:alphanum\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultSorters from './defaults/sorters.js';\r\n\r\nclass Sort extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t \tthis.sortList = []; //holder current sort\r\n\t \tthis.changed = false; //has the sort changed since last render\r\n\r\n\t \tthis.registerTableOption(\"sortMode\", \"local\"); //local or remote sorting\r\n\r\n\t \tthis.registerTableOption(\"initialSort\", false); //initial sorting criteria\r\n\t \tthis.registerTableOption(\"columnHeaderSortMulti\", true); //multiple or single column sorting\r\n\t \tthis.registerTableOption(\"sortOrderReverse\", false); //reverse internal sort ordering\r\n\t \tthis.registerTableOption(\"headerSortElement\", \"<div class='tabulator-arrow'></div>\"); //header sort element\r\n\r\n\t \tthis.registerColumnOption(\"sorter\");\r\n\t \tthis.registerColumnOption(\"sorterParams\");\r\n\r\n\t \tthis.registerColumnOption(\"headerSort\", true);\r\n\t \tthis.registerColumnOption(\"headerSortStartingDir\");\r\n\t \tthis.registerColumnOption(\"headerSortTristate\");\r\n\r\n\t }\r\n\r\n\t initialize(){\r\n\t \tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t \tthis.subscribe(\"table-built\", this.tableBuilt.bind(this));\r\n\t \tthis.registerDataHandler(this.sort.bind(this), 20);\r\n\r\n\t \tthis.registerTableFunction(\"setSort\", this.userSetSort.bind(this));\r\n\t \tthis.registerTableFunction(\"getSorters\", this.getSort.bind(this));\r\n\t \tthis.registerTableFunction(\"clearSort\", this.clearSort.bind(this));\r\n\r\n\t \tif(this.table.options.sortMode === \"remote\"){\r\n\t \t\tthis.subscribe(\"data-params\", this.remoteSortParams.bind(this));\r\n\t \t}\r\n\t }\r\n\r\n\t tableBuilt(){\r\n\t \tif(this.table.options.initialSort){\r\n\t \t\tthis.setSort(this.table.options.initialSort);\r\n\t \t}\r\n\t }\r\n\r\n\t remoteSortParams(data, config, silent, params){\r\n\t \tvar sorters = this.getSort();\r\n\r\n\t \tsorters.forEach((item) => {\r\n\t \t\tdelete item.column;\r\n\t \t});\r\n\r\n\t \tparams.sort = sorters;\r\n\r\n\t \treturn params;\r\n\t }\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tuserSetSort(sortList, dir){\r\n\t\tthis.setSort(sortList, dir);\r\n\t\t// this.table.rowManager.sorterRefresh();\r\n\t\tthis.refreshSort();\r\n\t}\r\n\r\n\tclearSort(){\r\n\t\tthis.clear();\r\n\t\t// this.table.rowManager.sorterRefresh();\r\n\t\tthis.refreshSort();\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\t//initialize column header for sorting\r\n\tinitializeColumn(column){\r\n\t\tvar sorter = false,\r\n\t\tcolEl,\r\n\t\tarrowEl;\r\n\r\n\t\tswitch(typeof column.definition.sorter){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Sort.sorters[column.definition.sorter]){\r\n\t\t\t\tsorter = Sort.sorters[column.definition.sorter];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Sort Error - No such sorter found: \", column.definition.sorter);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tsorter = column.definition.sorter;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tcolumn.modules.sort = {\r\n\t\t\tsorter:sorter, dir:\"none\",\r\n\t\t\tparams:column.definition.sorterParams || {},\r\n\t\t\tstartingDir:column.definition.headerSortStartingDir || \"asc\",\r\n\t\t\ttristate: column.definition.headerSortTristate,\r\n\t\t};\r\n\r\n\t\tif(column.definition.headerSort !== false){\r\n\r\n\t\t\tcolEl = column.getElement();\r\n\r\n\t\t\tcolEl.classList.add(\"tabulator-sortable\");\r\n\r\n\r\n\t\t\tarrowEl = document.createElement(\"div\");\r\n\t\t\tarrowEl.classList.add(\"tabulator-col-sorter\");\r\n\r\n\t\t\tif(typeof this.table.options.headerSortElement == \"object\"){\r\n\t\t\t\tarrowEl.appendChild(this.table.options.headerSortElement);\r\n\t\t\t}else{\r\n\t\t\t\tarrowEl.innerHTML = this.table.options.headerSortElement;\r\n\t\t\t}\r\n\r\n\t\t\t//create sorter arrow\r\n\t\t\tcolumn.titleHolderElement.appendChild(arrowEl);\r\n\r\n\t\t\tcolumn.modules.sort.element = arrowEl;\r\n\r\n\t\t\t//sort on click\r\n\t\t\tcolEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\tvar dir = \"\",\r\n\t\t\t\tsorters=[],\r\n\t\t\t\tmatch = false;\r\n\r\n\t\t\t\tif(column.modules.sort){\r\n\t\t\t\t\tif(column.modules.sort.tristate){\r\n\t\t\t\t\t\tif(column.modules.sort.dir == \"none\"){\r\n\t\t\t\t\t\t\tdir = column.modules.sort.startingDir;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif(column.modules.sort.dir == column.modules.sort.startingDir){\r\n\t\t\t\t\t\t\t\tdir = column.modules.sort.dir == \"asc\" ? \"desc\" : \"asc\";\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tdir = \"none\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tswitch(column.modules.sort.dir){\r\n\t\t\t\t\t\t\tcase \"asc\":\r\n\t\t\t\t\t\t\tdir = \"desc\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"desc\":\r\n\t\t\t\t\t\t\tdir = \"asc\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tdir = column.modules.sort.startingDir;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (this.table.options.columnHeaderSortMulti && (e.shiftKey || e.ctrlKey)) {\r\n\t\t\t\t\t\tsorters = this.getSort();\r\n\r\n\t\t\t\t\t\tmatch = sorters.findIndex((sorter) => {\r\n\t\t\t\t\t\t\treturn sorter.field === column.getField();\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(match > -1){\r\n\t\t\t\t\t\t\tsorters[match].dir = dir;\r\n\r\n\t\t\t\t\t\t\tif(match != sorters.length -1){\r\n\t\t\t\t\t\t\t\tmatch = sorters.splice(match, 1)[0];\r\n\t\t\t\t\t\t\t\tif(dir != \"none\"){\r\n\t\t\t\t\t\t\t\t\tsorters.push(match);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif(dir != \"none\"){\r\n\t\t\t\t\t\t\t\tsorters.push({column:column, dir:dir});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//add to existing sort\r\n\t\t\t\t\t\tthis.setSort(sorters);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(dir == \"none\"){\r\n\t\t\t\t\t\t\tthis.clear();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t//sort by column only\r\n\t\t\t\t\t\t\tthis.setSort(column, dir);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// this.table.rowManager.sorterRefresh(!this.sortList.length);\r\n\t\t\t\t\tthis.refreshSort();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trefreshSort(){\r\n\t\tif(this.table.options.sortMode === \"remote\"){\r\n\t\t\tthis.reloadData();\r\n\t\t}else{\r\n\t\t\tthis.refreshData(true);\r\n\t\t}\r\n\r\n\t\t//TODO - Persist left position of row manager\r\n\t\t// left = this.scrollLeft;\r\n\t\t// this.scrollHorizontal(left);\r\n\t}\r\n\r\n\t//check if the sorters have changed since last use\r\n\thasChanged(){\r\n\t\tvar changed = this.changed;\r\n\t\tthis.changed = false;\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t//return current sorters\r\n\tgetSort(){\r\n\t\tvar self = this,\r\n\t\tsorters = [];\r\n\r\n\t\tself.sortList.forEach(function(item){\r\n\t\t\tif(item.column){\r\n\t\t\t\tsorters.push({column:item.column.getComponent(), field:item.column.getField(), dir:item.dir});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn sorters;\r\n\t}\r\n\r\n\t//change sort list and trigger sort\r\n\tsetSort(sortList, dir){\r\n\t\tvar self = this,\r\n\t\tnewSortList = [];\r\n\r\n\t\tif(!Array.isArray(sortList)){\r\n\t\t\tsortList = [{column: sortList, dir:dir}];\r\n\t\t}\r\n\r\n\t\tsortList.forEach(function(item){\r\n\t\t\tvar column;\r\n\r\n\t\t\tcolumn = self.table.columnManager.findColumn(item.column);\r\n\r\n\t\t\tif(column){\r\n\t\t\t\titem.column = column;\r\n\t\t\t\tnewSortList.push(item);\r\n\t\t\t\tself.changed = true;\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Sort Warning - Sort field does not exist and is being ignored: \", item.column);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tself.sortList = newSortList;\r\n\r\n\t\tthis.dispatch(\"sort-changed\");\r\n\t}\r\n\r\n\t//clear sorters\r\n\tclear(){\r\n\t\tthis.setSort([]);\r\n\t}\r\n\r\n\t//find appropriate sorter for column\r\n\tfindSorter(column){\r\n\t\tvar row = this.table.rowManager.activeRows[0],\r\n\t\tsorter = \"string\",\r\n\t\tfield, value;\r\n\r\n\t\tif(row){\r\n\t\t\trow = row.getData();\r\n\t\t\tfield = column.getField();\r\n\r\n\t\t\tif(field){\r\n\r\n\t\t\t\tvalue = column.getFieldValue(row);\r\n\r\n\t\t\t\tswitch(typeof value){\r\n\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\tsorter = \"boolean\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tif(!isNaN(value) && value !== \"\"){\r\n\t\t\t\t\t\tsorter = \"number\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)){\r\n\t\t\t\t\t\t\tsorter = \"alphanum\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Sort.sorters[sorter];\r\n\t}\r\n\r\n\t//work through sort list sorting data\r\n\tsort(data){\r\n\t\tvar self = this,\r\n\t\tsortList = this.table.options.sortOrderReverse ? self.sortList.slice().reverse() : self.sortList,\r\n\t\tsortListActual = [],\r\n\t\trowComponents = [],\r\n\t\tlastSort;\r\n\r\n\t\tif(this.subscribedExternal(\"dataSorting\")){\r\n\t\t\tthis.dispatchExternal(\"dataSorting\", self.getSort());\r\n\t\t}\r\n\r\n\t\tself.clearColumnHeaders();\r\n\r\n\t\tif(this.table.options.sortMode !== \"remote\"){\r\n\r\n\t\t\t//build list of valid sorters and trigger column specific callbacks before sort begins\r\n\t\t\tsortList.forEach(function(item, i){\r\n\t\t\t\tvar sortObj = item.column.modules.sort;\r\n\r\n\t\t\t\tif(item.column && sortObj){\r\n\r\n\t\t\t\t\t//if no sorter has been defined, take a guess\r\n\t\t\t\t\tif(!sortObj.sorter){\r\n\t\t\t\t\t\tsortObj.sorter = self.findSorter(item.column);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titem.params = typeof sortObj.params === \"function\" ? sortObj.params(item.column.getComponent(), item.dir) : sortObj.params;\r\n\r\n\t\t\t\t\tsortListActual.push(item);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.setColumnHeader(item.column, item.dir);\r\n\t\t\t});\r\n\r\n\t\t\t//sort data\r\n\t\t\tif (sortListActual.length) {\r\n\t\t\t\tself._sortItems(data, sortListActual);\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tsortList.forEach(function(item, i){\r\n\t\t\t\tself.setColumnHeader(item.column, item.dir);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.subscribedExternal(\"dataSorted\")){\r\n\t\t\tdata.forEach((row) => {\r\n\t\t\t\trowComponents.push(row.getComponent());\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatchExternal(\"dataSorted\", self.getSort(), rowComponents);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//clear sort arrows on columns\r\n\tclearColumnHeaders(){\r\n\t\tthis.table.columnManager.getRealColumns().forEach(function(column){\r\n\t\t\tif(column.modules.sort){\r\n\t\t\t\tcolumn.modules.sort.dir = \"none\";\r\n\t\t\t\tcolumn.getElement().setAttribute(\"aria-sort\", \"none\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//set the column header sort direction\r\n\tsetColumnHeader(column, dir){\r\n\t\tcolumn.modules.sort.dir = dir;\r\n\t\tcolumn.getElement().setAttribute(\"aria-sort\", dir);\r\n\t}\r\n\r\n\t//sort each item in sort list\r\n\t_sortItems(data, sortList){\r\n\t\tvar sorterCount = sortList.length - 1;\r\n\r\n\t\tdata.sort((a, b) => {\r\n\t\t\tvar result;\r\n\r\n\t\t\tfor(var i = sorterCount; i>= 0; i--){\r\n\t\t\t\tlet sortItem = sortList[i];\r\n\r\n\t\t\t\tresult = this._sortRow(a, b, sortItem.column, sortItem.dir, sortItem.params);\r\n\r\n\t\t\t\tif(result !== 0){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t});\r\n\t}\r\n\r\n\t//process individual rows for a sort function on active data\r\n\t_sortRow(a, b, column, dir, params){\r\n\t\tvar el1Comp, el2Comp, colComp;\r\n\r\n\t\t//switch elements depending on search direction\r\n\t\tvar el1 = dir == \"asc\" ? a : b;\r\n\t\tvar el2 = dir == \"asc\" ? b : a;\r\n\r\n\t\ta = column.getFieldValue(el1.getData());\r\n\t\tb = column.getFieldValue(el2.getData());\r\n\r\n\t\ta = typeof a !== \"undefined\" ? a : \"\";\r\n\t\tb = typeof b !== \"undefined\" ? b : \"\";\r\n\r\n\t\tel1Comp = el1.getComponent();\r\n\t\tel2Comp = el2.getComponent();\r\n\r\n\t\treturn column.modules.sort.sorter.call(this, a, b, el1Comp, el2Comp, column.getComponent(), dir, params);\r\n\t}\r\n}\r\n\r\nSort.moduleName = \"sort\";\r\n\r\n//load defaults\r\nSort.sorters = defaultSorters;\r\n\r\nexport default Sort;","export default {\r\n\t//is integer\r\n\tinteger: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvalue = Number(value);\r\n\t\treturn typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n\t},\r\n\r\n\t//is float\r\n\tfloat: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvalue = Number(value);\r\n\t\treturn typeof value === 'number' && isFinite(value) && value % 1 !== 0;\r\n\t},\r\n\r\n\t//must be a number\r\n\tnumeric: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn !isNaN(value);\r\n\t},\r\n\r\n\t//must be a string\r\n\tstring: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn isNaN(value);\r\n\t},\r\n\r\n\t//maximum value\r\n\tmax: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn parseFloat(value) <= parameters;\r\n\t},\r\n\r\n\t//minimum value\r\n\tmin: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn parseFloat(value) >= parameters;\r\n\t},\r\n\r\n\t//starts with  value\r\n\tstarts: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).toLowerCase().startsWith(String(parameters).toLowerCase());\r\n\t},\r\n\r\n\t//ends with  value\r\n\tends: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).toLowerCase().endsWith(String(parameters).toLowerCase());\r\n\t},\r\n\r\n\r\n\t//minimum string length\r\n\tminLength: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).length >= parameters;\r\n\t},\r\n\r\n\t//maximum string length\r\n\tmaxLength: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).length <= parameters;\r\n\t},\r\n\r\n\t//in provided value list\r\n\tin: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif(typeof parameters == \"string\"){\r\n\t\t\tparameters = parameters.split(\"|\");\r\n\t\t}\r\n\r\n\t\treturn value === \"\" || parameters.indexOf(value) > -1;\r\n\t},\r\n\r\n\t//must match provided regex\r\n\tregex: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar reg = new RegExp(parameters);\r\n\r\n\t\treturn reg.test(value);\r\n\t},\r\n\r\n\t//value must be unique in this column\r\n\tunique: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar unique = true;\r\n\r\n\t\tvar cellData = cell.getData();\r\n\t\tvar column = cell.getColumn()._getSelf();\r\n\r\n\t\tthis.table.rowManager.rows.forEach(function(row){\r\n\t\t\tvar data = row.getData();\r\n\r\n\t\t\tif(data !== cellData){\r\n\t\t\t\tif(value == column.getFieldValue(data)){\r\n\t\t\t\t\tunique = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn unique;\r\n\t},\r\n\r\n\t//must have a value\r\n\trequired:function(cell, value, parameters){\r\n\t\treturn value !== \"\" && value !== null && typeof value !== \"undefined\";\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultValidators from './defaults/validators.js';\r\n\r\nclass Validate extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.invalidCells = [];\r\n\r\n\t\tthis.registerTableOption(\"validationMode\", \"blocking\");\r\n\r\n\t\tthis.registerColumnOption(\"validator\");\r\n\r\n\t\tthis.registerTableFunction(\"getInvalidCells\", this.getInvalidCells.bind(this));\r\n\t\tthis.registerTableFunction(\"clearCellValidation\", this.userClearCellValidation.bind(this));\r\n\t\tthis.registerTableFunction(\"validate\", this.userValidate.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"cell\", \"isValid\", this.cellIsValid.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"clearValidation\", this.clearValidation.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"validate\", this.cellValidate.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"column\", \"validate\", this.columnValidate.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"validate\", this.rowValidate.bind(this));\r\n\t}\r\n\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-delete\", this.clearValidation.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t////////// Cell Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tcellIsValid(cell){\r\n\t\treturn cell.modules.validate ? !cell.modules.validate.invalid : true;\r\n\t}\r\n\r\n\tcellValidate(cell){\r\n\t\treturn this.validate(cell.column.modules.validate, cell, cell.getValue());\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Column Functions ////////\r\n\t///////////////////////////////////\r\n\r\n\tcolumnValidate(column){\r\n\t\tvar invalid = [];\r\n\r\n\t\tcolumn.cells.forEach(function(cell){\r\n\t\t\tif(!this.cellValidate(cell)){\r\n\t\t\t\tinvalid.push(cell.getComponent());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn invalid.length ? invalid : true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t////////// Row Functions //////////\r\n\t///////////////////////////////////\r\n\r\n\trowValidate(row){\r\n\t\tvar invalid = [];\r\n\r\n\t\trow.cells.forEach(function(cell){\r\n\t\t\tif(!this.cellValidate(cell)){\r\n\t\t\t\tinvalid.push(cell.getComponent());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn invalid.length ? invalid : true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\r\n\tuserClearCellValidation(cells){\r\n\t\tif(!cells){\r\n\t\t\tcells = this.getInvalidCells();\r\n\t\t}\r\n\r\n\t\tif(!Array.isArray(cells)){\r\n\t\t\tcells = [cells];\r\n\t\t}\r\n\r\n\t\tcells.forEach((cell) => {\r\n\t\t\tthis.clearValidation(cell._getSelf());\r\n\t\t});\r\n\t}\r\n\r\n\tuserValidate(cells){\r\n\t\tvar output = [];\r\n\r\n\t\t//clear row data\r\n\t\tthis.table.rowManager.rows.forEach(function(row){\r\n\t\t\tvar valid = row.validate();\r\n\r\n\t\t\tif(valid !== true){\r\n\t\t\t\toutput = output.concat(valid);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output.length ? output : true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumnCheck(column){\r\n\t\tif(typeof column.definition.validator !== \"undefined\"){\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\t//validate\r\n\tinitializeColumn(column){\r\n\t\tvar self = this,\r\n\t\tconfig = [],\r\n\t\tvalidator;\r\n\r\n\t\tif(column.definition.validator){\r\n\r\n\t\t\tif(Array.isArray(column.definition.validator)){\r\n\t\t\t\tcolumn.definition.validator.forEach(function(item){\r\n\t\t\t\t\tvalidator = self._extractValidator(item);\r\n\r\n\t\t\t\t\tif(validator){\r\n\t\t\t\t\t\tconfig.push(validator);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tvalidator = this._extractValidator(column.definition.validator);\r\n\r\n\t\t\t\tif(validator){\r\n\t\t\t\t\tconfig.push(validator);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcolumn.modules.validate = config.length ? config : false;\r\n\t\t}\r\n\t}\r\n\r\n\t_extractValidator(value){\r\n\t\tvar type, params, pos;\r\n\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\tpos = value.indexOf(':');\r\n\r\n\t\t\tif(pos > -1){\r\n\t\t\t\ttype = value.substring(0,pos);\r\n\t\t\t\tparams = value.substring(pos+1);\r\n\t\t\t}else{\r\n\t\t\t\ttype = value;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._buildValidator(type, params);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\treturn this._buildValidator(value);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"object\":\r\n\t\t\treturn this._buildValidator(value.type, value.parameters);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t_buildValidator(type, params){\r\n\r\n\t\tvar func = typeof type == \"function\" ? type : Validate.validators[type];\r\n\r\n\t\tif(!func){\r\n\t\t\tconsole.warn(\"Validator Setup Error - No matching validator found:\", type);\r\n\t\t\treturn false;\r\n\t\t}else{\r\n\t\t\treturn {\r\n\t\t\t\ttype:typeof type == \"function\" ? \"function\" : type,\r\n\t\t\t\tfunc:func,\r\n\t\t\t\tparams:params,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tvalidate(validators, cell, value){\r\n\t\tvar self = this,\r\n\t\tvalid = [],\r\n\t\tinvalidIndex = this.invalidCells.indexOf(cell);\r\n\r\n\t\tif(validators){\r\n\t\t\tvalidators.forEach(function(item){\r\n\t\t\t\tif(!item.func.call(self, cell.getComponent(), value, item.params)){\r\n\t\t\t\t\tvalid.push({\r\n\t\t\t\t\t\ttype:item.type,\r\n\t\t\t\t\t\tparameters:item.params\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvalid = valid.length ? valid : true;\r\n\r\n\t\tif(!cell.modules.validate){\r\n\t\t\tcell.modules.validate = {};\r\n\t\t}\r\n\r\n\t\tif(valid === true){\r\n\t\t\tcell.modules.validate.invalid = false;\r\n\t\t\tcell.getElement().classList.remove(\"tabulator-validation-fail\");\r\n\r\n\t\t\tif(invalidIndex > -1){\r\n\t\t\t\tthis.invalidCells.splice(invalidIndex, 1);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcell.modules.validate.invalid = true;\r\n\r\n\t\t\tif(this.table.options.validationMode !== \"manual\"){\r\n\t\t\t\tcell.getElement().classList.add(\"tabulator-validation-fail\");\r\n\t\t\t}\r\n\r\n\t\t\tif(invalidIndex == -1){\r\n\t\t\t\tthis.invalidCells.push(cell);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\t}\r\n\r\n\tgetInvalidCells(){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.invalidCells.forEach((cell) => {\r\n\t\t\toutput.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tclearValidation(cell){\r\n\t\tvar invalidIndex;\r\n\r\n\t\tif(cell.modules.validate && cell.modules.validate.invalid){\r\n\r\n\t\t\tcell.getElement().classList.remove(\"tabulator-validation-fail\");\r\n\t\t\tcell.modules.validate.invalid = false;\r\n\r\n\t\t\tinvalidIndex = this.invalidCells.indexOf(cell);\r\n\r\n\t\t\tif(invalidIndex > -1){\r\n\t\t\t\tthis.invalidCells.splice(invalidIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nValidate.moduleName = \"validate\";\r\n\r\n//load defaults\r\nValidate.validators = defaultValidators;\r\n\r\nexport default Validate;","export default {\r\n\r\n\tdebugEventsExternal:false, //flag to console log events\r\n\tdebugEventsInternal:false, //flag to console log events\r\n\tdebugInvalidOptions:true, //allow toggling of invalid option warnings\r\n\r\n\theight:false, //height of tabulator\r\n\tminHeight:false, //minimum height of tabulator\r\n\tmaxHeight:false, //maximum height of tabulator\r\n\r\n\tcolumnMaxWidth:false, //minimum global width for a column\r\n\tcolumnHeaderVertAlign:\"top\", //vertical alignment of column headers\r\n\r\n\tcolumns:[],//store for colum header info\r\n\tcolumnDefaults:{}, //store column default props\r\n\r\n\tdata:false, //default starting data\r\n\r\n\tautoColumns:false, //build columns from data row structure\r\n\tautoColumnsDefinitions:false,\r\n\r\n\tnestedFieldSeparator:\".\", //separator for nested data\r\n\r\n\ttooltipGenerationMode:\"load\", //when to generate tooltips\r\n\r\n\tfooterElement:false, //hold footer element\r\n\r\n\tindex:\"id\", //filed for row index\r\n\r\n\ttextDirection:\"auto\",\r\n\r\n\taddRowPos:\"bottom\", //position to insert blank rows, top|bottom\r\n\r\n\theaderVisible:true, //hide header\r\n\r\n\trenderVertical:\"virtual\",\r\n\trenderHorizontal:\"basic\",\r\n\trenderVerticalBuffer:0, // set virtual DOM buffer size\r\n\r\n\tscrollToRowPosition:\"top\",\r\n\tscrollToRowIfVisible:true,\r\n\r\n\tscrollToColumnPosition:\"left\",\r\n\tscrollToColumnIfVisible:true,\r\n\r\n\trowFormatter:false,\r\n\trowFormatterPrint:null,\r\n\trowFormatterClipboard:null,\r\n\trowFormatterHtmlOutput:null,\r\n\r\n\tplaceholder:false,\r\n\r\n\tdataLoader:true,\r\n\tdataLoaderLoading:false,\r\n\tdataLoaderError:false,\r\n\r\n\tdataSendParams:{},\r\n\r\n\tdataReceiveParams:{},\r\n}","export default class OptionsList {\r\n\tconstructor(table, msgType, defaults = {}){\r\n\t\tthis.table = table;\r\n\t\tthis.msgType = msgType;\r\n\t\tthis.registeredDefaults = Object.assign({}, defaults)\r\n\t}\r\n\r\n\tregister(option, value){\r\n\t\tthis.registeredDefaults[option] = value;\r\n\t}\r\n\r\n\tgenerate(defaultOptions, userOptions = {}){\r\n\t\tvar output = Object.assign({}, this.registeredDefaults);\r\n\r\n\t\tObject.assign(output, defaultOptions);\r\n\r\n\t\tif(userOptions.debugInvalidOptions !== false || this.table.options.debugInvalidOptions){\r\n\t\t\tfor (var key in userOptions){\r\n\t\t\t\tif(!output.hasOwnProperty(key)){\r\n\t\t\t\t\tconsole.warn(\"Invalid \" + this.msgType + \" option:\", key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var key in output){\r\n\t\t\tif(key in userOptions){\r\n\t\t\t\toutput[key] = userOptions[key];\r\n\t\t\t}else{\r\n\t\t\t\tif(Array.isArray(output[key])){\r\n\t\t\t\t\toutput[key] = Object.assign([], output[key]);\r\n\t\t\t\t}else if(typeof output[key] === \"object\" && output[key] !== null){\r\n\t\t\t\t\toutput[key] = Object.assign({}, output[key]);\r\n\t\t\t\t}else if (typeof output[key] === \"undefined\"){\r\n\t\t\t\t\tdelete output[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport Helpers from '../tools/Helpers.js';\r\n\r\nexport default class Renderer extends CoreFeature{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.elementVertical = table.rowManager.element;\r\n\t\tthis.elementHorizontal = table.columnManager.element;\r\n\t\tthis.tableElement =  table.rowManager.tableElement;\r\n\r\n\t\tthis.verticalFillMode = \"fit\"; // used by row manager to determin how to size the render area (\"fit\" - fits container to the contents, \"fill\" - fills the contianer without resizing it)\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t/////// Internal Bindings /////////\r\n\t///////////////////////////////////\r\n\r\n\tinitialize(){\r\n\t\t//initialize core functionality\r\n\t}\r\n\r\n\tclearRows(){\r\n\t\t//clear down existing rows layout\r\n\t}\r\n\r\n\tclearColumns(){\r\n\t\t//clear down existing columns layout\r\n\t}\r\n\r\n\r\n\treinitializeColumnWidths(columns){\r\n\t\t//resize columns to fit data\r\n\t}\r\n\r\n\r\n\trenderRows(){\r\n\t\t//render rows from a clean slate\r\n\t}\r\n\r\n\trenderColumns(){\r\n\t\t//render columns from a clean slate\r\n\t}\r\n\r\n\trerenderRows(callback){\r\n\t\t// rerender rows and keep position\r\n\t\tif(callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\r\n\trerenderColumns(update, blockRedraw){\r\n\t\t//rerender columns\r\n\t}\r\n\r\n\trenderRowCells(row){\r\n\t\t//render the cells in a row\r\n\t}\r\n\r\n\trerenderRowCells(row, force){\r\n\t\t//rerender the cells in a row\r\n\t}\r\n\r\n\tscrollColumns(left, dir){\r\n\t\t//handle horizontal scrolling\r\n\t}\r\n\r\n\tscrollRows(top, dir){\r\n\t\t//handle vertical scolling\r\n\t}\r\n\r\n\tresize(){\r\n\t\t//container has rezied, carry out any needed recalculations (DO NOT RERENDER IN THIS FUNCTION)\r\n\t}\r\n\r\n\tscrollToRow(row){\r\n\t\t//scroll to a specific row\r\n\t}\r\n\r\n\tscrollToRowNearestTop(row){\r\n\t\t//determine weather the row is nearest the top or bottom of the table, retur true for top or false for bottom\r\n\t}\r\n\r\n\tvisibleRows(includingBuffer){\r\n\t\t//return the visible rows\r\n\t\treturn [];\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t//////// Helper Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\trows(){\r\n\t\treturn this.table.rowManager.getDisplayRows();\r\n\t}\r\n\r\n\tstyleRow(row, index){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tif(index % 2){\r\n\t\t\trowEl.classList.add(\"tabulator-row-even\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-odd\");\r\n\t\t}else{\r\n\t\t\trowEl.classList.add(\"tabulator-row-odd\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-even\");\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t/////// External Triggers /////////\r\n\t/////// (DO NOT OVERRIDE) /////////\r\n\t///////////////////////////////////\r\n\r\n\tclear(){\r\n\t\t//clear down existing layout\r\n\t\tthis.clearRows();\r\n\t\tthis.clearColumns();\r\n\t}\r\n\r\n\trender(){\r\n\t\t//render from a clean slate\r\n\t\tthis.renderRows();\r\n\t\tthis.renderColumns();\r\n\t}\r\n\r\n\trerender(callback){\r\n\t\t// rerender and keep position\r\n\t\tthis.rerenderRows();\r\n\t\tthis.rerenderColumns();\r\n\t}\r\n\r\n\tscrollToRowPosition(row, position, ifVisible){\r\n\t\tvar rowIndex = this.rows().indexOf(row),\r\n\t\trowEl = row.getElement(),\r\n\t\toffset = 0;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif(rowIndex > -1){\r\n\r\n\t\t\t\tif(typeof ifVisible === \"undefined\"){\r\n\t\t\t\t\tifVisible = this.table.options.scrollToRowIfVisible;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//check row visibility\r\n\t\t\t\tif(!ifVisible){\r\n\t\t\t\t\tif(Helpers.elVisible(rowEl)){\r\n\t\t\t\t\t\toffset = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(offset > 0 && offset < this.elementVertical.clientHeight - rowEl.offsetHeight){\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof position === \"undefined\"){\r\n\t\t\t\t\tposition = this.table.options.scrollToRowPosition;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(position === \"nearest\"){\r\n\t\t\t\t\tposition = this.scrollToRowNearestTop(row) ? \"top\" : \"bottom\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//scroll to row\r\n\t\t\t\tthis.scrollToRow(row);\r\n\r\n\t\t\t\t//align to correct position\r\n\t\t\t\tswitch(position){\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tcase \"center\":\r\n\r\n\t\t\t\t\tif(this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight){\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop + (rowEl.offsetTop - this.elementVertical.scrollTop) - ((this.elementVertical.scrollHeight - rowEl.offsetTop) / 2);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.clientHeight / 2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"bottom\":\r\n\r\n\t\t\t\t\tif(this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight){\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.scrollHeight - rowEl.offsetTop) + rowEl.offsetHeight;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight + rowEl.offsetHeight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresolve();\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Scroll Error - Row not visible\");\r\n\t\t\t\treject(\"Scroll Error - Row not visible\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class BaiscHorizontal extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t}\r\n\r\n\trenderRowCells(row){\r\n\t\trow.cells.forEach((cell) => {\r\n\t\t\trow.element.appendChild(cell.getElement());\r\n\t\t\tcell.cellRendered();\r\n\t\t});\r\n\t}\r\n\r\n\treinitializeColumnWidths(columns){\r\n\t\tcolumns.forEach(function(column){\r\n\t\t\tcolumn.reinitializeWidth();\r\n\t\t});\r\n\t}\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class VirtualDomHorizontal extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.leftCol = 0;\r\n\t\tthis.rightCol = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\t\t\r\n\t\tthis.vDomScrollPosLeft = 0;\r\n\t\tthis.vDomScrollPosRight = 0;\r\n\t\t\r\n\t\tthis.vDomPadLeft = 0;\r\n\t\tthis.vDomPadRight = 0;\r\n\t\t\r\n\t\tthis.fitDataColAvg = 0;\r\n\t\t\r\n\t\tthis.window = 200; //pixel margin to make column visible before it is shown on screen\r\n\t\t\r\n\t\tthis.initialized = false;\r\n\t\t\r\n\t\tthis.columns = [];\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.compatabilityCheck();\r\n\t}\r\n\t\r\n\tcompatabilityCheck(){\r\n\t\tvar columns = this.options(\"columns\"),\r\n\t\tfrozen = false,\r\n\t\tok = true;\r\n\t\t\r\n\t\tif(this.options(\"layout\") == \"fitDataTable\"){\r\n\t\t\tconsole.warn(\"Horizontal Virtual DOM is not compatible with fitDataTable layout mode\");\r\n\t\t\tok = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.options(\"responsiveLayout\")){\r\n\t\t\tconsole.warn(\"Horizontal Virtual DOM is not compatible with responsive columns\");\r\n\t\t\tok = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.options(\"rtl\")){\r\n\t\t\tconsole.warn(\"Horizontal Virtual DOM is not currently compatible with RTL text direction\");\r\n\t\t\tok = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(columns){\r\n\t\t\tfrozen = columns.find((col) => {\r\n\t\t\t\treturn col.frozen;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(frozen){\r\n\t\t\t\tconsole.warn(\"Horizontal Virtual DOM is not compatible with frozen columns\");\r\n\t\t\t\tok = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// if(!ok){\r\n\t\t// \toptions.virtualDomHoz = false;\r\n\t\t// }\r\n\t\t\r\n\t\treturn ok;\r\n\t}\r\n\t\r\n\t//////////////////////////////////////\r\n\t///////// Public Functions ///////////\r\n\t//////////////////////////////////////\r\n\t\r\n\trenderColumns(row, force){\r\n\t\tthis.dataChange();\r\n\t}\r\n\t\r\n\tscrollColumns(left, dir){\r\n\t\tif(this.scrollLeft != left){\r\n\t\t\tthis.scrollLeft = left;\r\n\t\t\t\r\n\t\t\tthis.scroll(left - (this.vDomScrollPosLeft + this.window));\r\n\t\t}\r\n\t}\r\n\t\r\n\trerenderColumns(update, blockRedraw){\t\t\r\n\t\tvar old = {\r\n\t\t\tcols:this.columns,\r\n\t\t\tleftCol:this.leftCol,\r\n\t\t\trightCol:this.rightCol,\r\n\t\t};\r\n\t\t\r\n\t\tif(update && !this.initialized){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.clear();\r\n\t\t\r\n\t\tthis.scrollLeft = this.elementVertical.scrollLeft;\r\n\t\t\r\n\t\tthis.vDomScrollPosLeft = this.scrollLeft - this.window;\r\n\t\tthis.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.window;\r\n\t\t\r\n\t\tvar colPos = 0;\r\n\t\t\r\n\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\tvar config = {};\r\n\t\t\t\r\n\t\t\tif(column.visible){\r\n\t\t\t\tvar width = column.getWidth();\r\n\t\t\t\t\r\n\t\t\t\tconfig.leftPos = colPos;\r\n\t\t\t\tconfig.rightPos = colPos + width;\r\n\t\t\t\t\r\n\t\t\t\tconfig.width = width;\r\n\t\t\t\t\r\n\t\t\t\tif (this.options(\"layout\") === \"fitData\") {\r\n\t\t\t\t\tconfig.fitDataCheck = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif((colPos + width > this.vDomScrollPosLeft) && (colPos < this.vDomScrollPosRight)){\r\n\t\t\t\t\t//column is visible\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.leftCol == -1){\r\n\t\t\t\t\t\tthis.leftCol = this.columns.length;\r\n\t\t\t\t\t\tthis.vDomPadLeft = colPos;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.rightCol = this.columns.length;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// column is hidden\r\n\t\t\t\t\tif(this.leftCol !== -1){\r\n\t\t\t\t\t\tthis.vDomPadRight += width;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.columns.push(column);\r\n\t\t\t\t\r\n\t\t\t\tcolumn.modules.vdomHoz = config;\r\n\t\t\t\t\r\n\t\t\t\tcolPos += width;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\r\n\t\tthis.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\r\n\t\t\r\n\t\tthis.initialized = true;\r\n\t\t\r\n\t\tif(!blockRedraw){\r\n\t\t\tif(!update || this.reinitChanged(old)){\r\n\t\t\t\tthis.reinitializeRows();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.elementVertical.scrollLeft = this.scrollLeft;\r\n\t}\r\n\t\r\n\trenderRowCells(row){\r\n\t\tif(this.initialized){\r\n\t\t\tthis.initializeRow(row);\r\n\t\t}else{\r\n\t\t\trow.cells.forEach((cell) => {\r\n\t\t\t\trow.element.appendChild(cell.getElement());\r\n\t\t\t\tcell.cellRendered();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\trerenderRowCells(row, force){\r\n\t\tthis.reinitializeRow(row, force);\r\n\t}\r\n\t\r\n\treinitializeColumnWidths(columns){\r\n\t\tfor(let i = this.leftCol; i <= this.rightCol; i++){\r\n\t\t\tthis.columns[i].reinitializeWidth();\r\n\t\t}\r\n\t}\r\n\t\r\n\t//////////////////////////////////////\r\n\t//////// Internal Rendering //////////\r\n\t//////////////////////////////////////\r\n\t\r\n\tdeinitialize(){\r\n\t\tthis.initialized = false;\r\n\t}\r\n\t\r\n\tclear(){\r\n\t\tthis.columns = [];\r\n\t\t\r\n\t\tthis.leftCol = -1;\r\n\t\tthis.rightCol = 0;\r\n\t\t\r\n\t\tthis.vDomScrollPosLeft = 0;\r\n\t\tthis.vDomScrollPosRight = 0;\r\n\t\tthis.vDomPadLeft = 0;\r\n\t\tthis.vDomPadRight = 0;\r\n\t}\r\n\t\r\n\tdataChange(){\r\n\t\tvar change = false,\r\n\t\tcollsWidth = 0,\r\n\t\tcolEnd = 0,\r\n\t\tgroup, row, rowEl;\r\n\t\t\r\n\t\tif(this.options(\"layout\") === \"fitData\"){\r\n\t\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\t\tif(!column.definition.width && column.visible){\r\n\t\t\t\t\tchange = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(change){\r\n\t\t\t\tif(change && this.table.rowManager.getDisplayRows().length){\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.window;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar row = this.chain(\"rows-sample\", [1], [], () => {\r\n\t\t\t\t\t\treturn this.table.rowManager.getDisplayRows()[0];\r\n\t\t\t\t\t})[0];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trowEl = row.getElement();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trow.generateCells();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.tableElement.appendChild(rowEl);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(var colEnd = 0; colEnd < row.cells.length; colEnd++){\r\n\t\t\t\t\t\t\tlet cell = row.cells[colEnd];\r\n\t\t\t\t\t\t\trowEl.appendChild(cell.getElement());\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcell.column.reinitializeWidth();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcollsWidth += cell.column.getWidth();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(collsWidth > this.vDomScrollPosRight){\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.fitDataColAvg = Math.floor(collsWidth / (colEnd + 1));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(colEnd; colEnd < this.table.columnManager.columnsByIndex.length; colEnd++){\r\n\t\t\t\t\t\t\tthis.table.columnManager.columnsByIndex[colEnd].setWidth(this.fitDataColAvg);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.rerenderColumns(false, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this.options(\"layout\") === \"fitColumns\"){\r\n\t\t\t\tthis.layoutRefresh();\r\n\t\t\t\tthis.rerenderColumns(false, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treinitChanged(old){\r\n\t\tvar match = true;\r\n\t\t\r\n\t\tif(old.cols.length !== this.columns.length || old.leftCol !== this.leftCol || old.rightCol !== this.rightCol){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\told.cols.forEach((col, i) => {\r\n\t\t\tif(col !== this.columns[i]){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn !match;\r\n\t}\r\n\t\r\n\treinitializeRows(){\r\n\t\tvar rows = this.table.rowManager.getVisibleRows();\r\n\t\trows.forEach((row) => {\r\n\t\t\tthis.reinitializeRow(row, true);\r\n\t\t});\r\n\t}\r\n\t\r\n\tscroll(diff){\r\n\t\tthis.vDomScrollPosLeft += diff;\r\n\t\tthis.vDomScrollPosRight += diff;\r\n\t\t\r\n\t\tif(diff > (this.elementVertical.clientWidth * .8)){\r\n\t\t\tthis.rerenderColumns();\r\n\t\t}else{\r\n\t\t\tif(diff > 0){\r\n\t\t\t\t//scroll right\r\n\t\t\t\tthis.addColRight();\r\n\t\t\t\tthis.removeColLeft();\r\n\t\t\t}else{\r\n\t\t\t\t//scroll left\r\n\t\t\t\tthis.addColLeft();\r\n\t\t\t\tthis.removeColRight();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tcolPositionAdjust (start, end, diff){\r\n\t\tfor(let i = start; i < end; i++){\r\n\t\t\tlet column = this.columns[i];\r\n\t\t\t\r\n\t\t\tcolumn.modules.vdomHoz.leftPos += diff;\r\n\t\t\tcolumn.modules.vdomHoz.rightPos += diff;\r\n\t\t}\r\n\t}\r\n\t\r\n\taddColRight(){\r\n\t\tvar column = this.columns[this.rightCol + 1],\r\n\t\trows, newWidth, widthDiff;\r\n\t\t\r\n\t\tif(column && column.modules.vdomHoz.leftPos <= this.vDomScrollPosRight){\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\trow.getElement().appendChild(cell.getElement());\r\n\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.fitDataColActualWidthCheck(column);\r\n\t\t\t\r\n\t\t\tthis.rightCol++;\r\n\t\t\t\r\n\t\t\tif(this.rightCol >= (this.columns.length - 1)){\r\n\t\t\t\tthis.vDomPadRight = 0;\r\n\t\t\t}else{\r\n\t\t\t\tthis.vDomPadRight -= column.getWidth();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\r\n\t\t\t\r\n\t\t\tthis.addColRight();\r\n\t\t}\r\n\t}\r\n\t\r\n\taddColLeft(){\r\n\t\tvar column = this.columns[this.leftCol - 1],\r\n\t\trows;\r\n\t\t\r\n\t\tif(column && column.modules.vdomHoz.rightPos >= this.vDomScrollPosLeft){\r\n\t\t\tvar rows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\trow.getElement().prepend(cell.getElement());\r\n\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.fitDataColActualWidthCheck(column);\r\n\t\t\t\r\n\t\t\tif(!this.leftCol){\r\n\t\t\t\tthis.vDomPadLeft = 0;\r\n\t\t\t}else{\r\n\t\t\t\tthis.vDomPadLeft -= column.getWidth();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\r\n\t\t\t\r\n\t\t\tthis.leftCol--;\r\n\t\t\t\r\n\t\t\tthis.addColLeft();\r\n\t\t}\r\n\t}\r\n\t\r\n\tremoveColRight(column){\r\n\t\tvar column = this.columns[this.rightCol],\r\n\t\trows;\r\n\t\t\r\n\t\tif(column && column.modules.vdomHoz.leftPos > this.vDomScrollPosRight){\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\tcolumn.modules.vdomHoz.visible = false;\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\trow.getElement().removeChild(cell.getElement());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.vDomPadRight += column.getWidth();\r\n\t\t\tthis.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\r\n\t\t\t\r\n\t\t\tthis.rightCol --;\r\n\t\t\t\r\n\t\t\tthis.removeColRight();\r\n\t\t}\r\n\t}\r\n\t\r\n\tremoveColLeft(){\r\n\t\tvar column = this.columns[this.leftCol],\r\n\t\trows;\r\n\t\t\r\n\t\tif(column && column.modules.vdomHoz.rightPos < this.vDomScrollPosLeft){\t\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tvar cell, el;\r\n\r\n\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\tcell = row.getCell(column);\r\n\r\n\t\t\t\t\tif(cell){\r\n\t\t\t\t\t\tel = cell.getElement();\r\n\r\n\t\t\t\t\t\tif(el.parentNode){\r\n\t\t\t\t\t\t\trow.getElement().removeChild(el);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.vDomPadLeft += column.getWidth();\r\n\t\t\tthis.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\r\n\t\t\t\r\n\t\t\tthis.leftCol ++;\r\n\t\t\t\r\n\t\t\tthis.removeColLeft();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfitDataColActualWidthCheck(column){\r\n\t\tvar newWidth, widthDiff;\r\n\t\t\r\n\t\tif(column.modules.vdomHoz.fitDataCheck){\r\n\t\t\tcolumn.reinitializeWidth();\r\n\t\t\t\r\n\t\t\tnewWidth = column.getWidth();\r\n\t\t\twidthDiff = newWidth - column.modules.vdomHoz.width;\r\n\t\t\t\r\n\t\t\tif(widthDiff){\r\n\t\t\t\tcolumn.modules.vdomHoz.rightPos += widthDiff;\r\n\t\t\t\tcolumn.modules.vdomHoz.width = newWidth;\r\n\t\t\t\tthis.colPositionAdjust(this.rightCol + 2, this.columns.length, widthDiff);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcolumn.modules.vdomHoz.fitDataCheck = false;\r\n\t\t}\r\n\t};\r\n\t\r\n\tinitializeRow(row){\r\n\t\tif(row.type !== \"group\"){\r\n\t\t\trow.modules.vdomHoz = {\r\n\t\t\t\tleftCol:this.leftCol,\r\n\t\t\t\trightCol:this.rightCol,\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tfor(let i = this.leftCol; i <= this.rightCol; i++){\r\n\t\t\t\tlet column = this.columns[i];\r\n\t\t\t\t\r\n\t\t\t\tif(column && column.visible){\r\n\t\t\t\t\tlet cell = row.getCell(column);\r\n\t\t\t\t\t\r\n\t\t\t\t\trow.getElement().appendChild(cell.getElement());\r\n\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treinitializeRow(row, force){\r\n\t\tif(row.type !== \"group\"){\r\n\t\t\tif(force || !row.modules.vdomHoz || row.modules.vdomHoz.leftCol !== this.leftCol || row.modules.vdomHoz.rightCol !== this.rightCol){\r\n\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\twhile(rowEl.firstChild) rowEl.removeChild(rowEl.firstChild);\r\n\t\t\t\t\r\n\t\t\t\tthis.initializeRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\nimport Column from './column/Column.js';\r\nimport ColumnComponent from './column/ColumnComponent.js';\r\nimport Helpers from './tools/Helpers.js';\r\nimport OptionsList from './tools/OptionsList.js';\r\n\r\nimport RendererBasicHorizontal from './rendering/renderers/BasicHorizontal.js';\r\nimport RendererVirtualDomHorizontal from './rendering/renderers/VirtualDomHorizontal.js';\r\n\r\nimport defaultColumnOptions from './column/defaults/options.js';\r\n\r\nexport default class ColumnManager extends CoreFeature {\r\n\r\n\tconstructor (table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.blockHozScrollEvent = false;\r\n\t\tthis.headersElement = null;\r\n\t\tthis.element = null ; //containing element\r\n\t\tthis.columns = []; // column definition object\r\n\t\tthis.columnsByIndex = []; //columns by index\r\n\t\tthis.columnsByField = {}; //columns by field\r\n\t\tthis.scrollLeft = 0;\r\n\t\tthis.optionsList = new OptionsList(this.table, \"column definition\", defaultColumnOptions);\r\n\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t////////////// Setup Functions /////////////////\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeRenderer();\r\n\r\n\t\tthis.headersElement = this.createHeadersElement();\r\n\t\tthis.element = this.createHeaderElement();\r\n\r\n\t\tthis.element.insertBefore(this.headersElement, this.element.firstChild);\r\n\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t}\r\n\r\n\tinitializeRenderer(){\r\n\t\tvar renderClass;\r\n\r\n\t\tvar renderers = {\r\n\t\t\t\"virtual\": RendererVirtualDomHorizontal,\r\n\t\t\t\"basic\": RendererBasicHorizontal,\r\n\t\t};\r\n\r\n\t\tif(typeof this.table.options.renderHorizontal === \"string\"){\r\n\t\t\trenderClass = renderers[this.table.options.renderHorizontal];\r\n\t\t}else{\r\n\t\t\trenderClass = this.table.options.renderHorizontal;\r\n\t\t}\r\n\r\n\t\tif(renderClass){\r\n\t\t\tthis.renderer = new renderClass(this.table, this.element, this.tableElement);\r\n\t\t\tthis.renderer.initialize();\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Unable to find matching renderer:\", table.options.renderHorizontal);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcreateHeadersElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-headers\");\r\n\t\tel.setAttribute(\"role\", \"row\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateHeaderElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-header\");\r\n\t\tel.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\tif(!this.table.options.headerVisible){\r\n\t\t\tel.classList.add(\"tabulator-header-hidden\");\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t//return containing element\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t//return header containing element\r\n\tgetHeadersElement(){\r\n\t\treturn this.headersElement;\r\n\t}\r\n\r\n\t//scroll horizontally to match table body\r\n\tscrollHorizontal(left){\r\n\t\tvar hozAdjust = 0,\r\n\t\tscrollWidth = this.element.scrollWidth - this.table.element.clientWidth;\r\n\r\n\t\t// this.tempScrollBlock();\r\n\t\tthis.element.scrollLeft = left;\r\n\r\n\t\t//adjust for vertical scrollbar moving table when present\r\n\t\tif(left > scrollWidth){\r\n\t\t\thozAdjust = left - scrollWidth;\r\n\t\t\tthis.element.style.marginLeft = (-(hozAdjust)) + \"px\";\r\n\t\t}else{\r\n\t\t\tthis.element.style.marginLeft = 0;\r\n\t\t}\r\n\r\n\t\tthis.scrollLeft = left;\r\n\r\n\t\tthis.renderer.scrollColumns(left);\r\n\t}\r\n\r\n\t///////////// Column Setup Functions /////////////\r\n\tgenerateColumnsFromRowData(data){\r\n\t\tvar cols = [],\r\n\t\tdefinitions = this.table.options.autoColumnsDefinitions,\r\n\t\trow, sorter;\r\n\r\n\t\tif(data && data.length){\r\n\r\n\t\t\trow = data[0];\r\n\r\n\t\t\tfor(var key in row){\r\n\t\t\t\tlet col = {\r\n\t\t\t\t\tfield:key,\r\n\t\t\t\t\ttitle:key,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet value = row[key];\r\n\r\n\t\t\t\tswitch(typeof value){\r\n\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\tsorter = \"boolean\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\tif(Array.isArray(value)){\r\n\t\t\t\t\t\tsorter = \"array\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tif(!isNaN(value) && value !== \"\"){\r\n\t\t\t\t\t\tsorter = \"number\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)){\r\n\t\t\t\t\t\t\tsorter = \"alphanum\";\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcol.sorter = sorter;\r\n\r\n\t\t\t\tcols.push(col);\r\n\t\t\t}\r\n\r\n\t\t\tif(definitions){\r\n\r\n\t\t\t\tswitch(typeof definitions){\r\n\t\t\t\t\tcase \"function\":\r\n\t\t\t\t\tthis.table.options.columns = definitions.call(this.table, cols);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\tif(Array.isArray(definitions)){\r\n\t\t\t\t\t\tcols.forEach((col) => {\r\n\t\t\t\t\t\t\tvar match = definitions.find((def) => {\r\n\t\t\t\t\t\t\t\treturn def.field === col.field;\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif(match){\r\n\t\t\t\t\t\t\t\tObject.assign(col, match);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcols.forEach((col) => {\r\n\t\t\t\t\t\t\tif(definitions[col.field]){\r\n\t\t\t\t\t\t\t\tObject.assign(col, definitions[col.field]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.table.options.columns = cols;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.table.options.columns = cols;\r\n\t\t\t}\r\n\r\n\t\t\tthis.setColumns(this.table.options.columns);\r\n\t\t}\r\n\t}\r\n\r\n\tsetColumns(cols, row){\r\n\t\twhile(this.headersElement.firstChild) this.headersElement.removeChild(this.headersElement.firstChild);\r\n\r\n\t\tthis.columns = [];\r\n\t\tthis.columnsByIndex = [];\r\n\t\tthis.columnsByField = {};\r\n\r\n\t\tthis.dispatch(\"columns-loading\");\r\n\r\n\t\tcols.forEach((def, i) => {\r\n\t\t\tthis._addColumn(def);\r\n\t\t});\r\n\r\n\t\tthis._reIndexColumns();\r\n\r\n\t\tthis.dispatch(\"columns-loaded\");\r\n\r\n\t\tthis.renderer.rerenderColumns(false, true);\r\n\r\n\t\tthis.redraw(true);\r\n\t}\r\n\r\n\t_addColumn(definition, before, nextToColumn){\r\n\t\tvar column = new Column(definition, this),\r\n\t\tcolEl = column.getElement(),\r\n\t\tindex = nextToColumn ? this.findColumnIndex(nextToColumn) : nextToColumn;\r\n\r\n\t\tif(nextToColumn && index > -1){\r\n\t\t\tvar topColumn = nextToColumn.getTopColumn()\r\n\t\t\tvar parentIndex = this.columns.indexOf(topColumn);\r\n\t\t\tvar nextEl = topColumn.getElement();\r\n\r\n\t\t\tif(before){\r\n\t\t\t\tthis.columns.splice(parentIndex, 0, column);\r\n\t\t\t\tnextEl.parentNode.insertBefore(colEl, nextEl);\r\n\t\t\t}else{\r\n\t\t\t\tthis.columns.splice(parentIndex + 1, 0, column);\r\n\t\t\t\tnextEl.parentNode.insertBefore(colEl, nextEl.nextSibling);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(before){\r\n\t\t\t\tthis.columns.unshift(column);\r\n\t\t\t\tthis.headersElement.insertBefore(column.getElement(), this.headersElement.firstChild);\r\n\t\t\t}else{\r\n\t\t\t\tthis.columns.push(column);\r\n\t\t\t\tthis.headersElement.appendChild(column.getElement());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcolumn.columnRendered();\r\n\r\n\t\treturn column;\r\n\t}\r\n\r\n\tregisterColumnField(col){\r\n\t\tif(col.definition.field){\r\n\t\t\tthis.columnsByField[col.definition.field] = col;\r\n\t\t}\r\n\t}\r\n\r\n\tregisterColumnPosition(col){\r\n\t\tthis.columnsByIndex.push(col);\r\n\t}\r\n\r\n\t_reIndexColumns(){\r\n\t\tthis.columnsByIndex = [];\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tcolumn.reRegisterPosition();\r\n\t\t});\r\n\t}\r\n\r\n\t//ensure column headers take up the correct amount of space in column groups\r\n\tverticalAlignHeaders(){\r\n\t\tvar minHeight = 0;\r\n\r\n\t\tthis.columns.forEach((column) => {\r\n\t\t\tvar height;\r\n\r\n\t\t\tcolumn.clearVerticalAlign();\r\n\r\n\t\t\theight = column.getHeight();\r\n\r\n\t\t\tif(height > minHeight){\r\n\t\t\t\tminHeight = height;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.columns.forEach((column) => {\r\n\t\t\tcolumn.verticalAlign(this.table.options.columnHeaderVertAlign, minHeight);\r\n\t\t});\r\n\r\n\t\tthis.table.rowManager.adjustTableSize();\r\n\t}\r\n\r\n\t//////////////// Column Details /////////////////\r\n\tfindColumn(subject){\r\n\t\tif(typeof subject == \"object\"){\r\n\r\n\t\t\tif(subject instanceof Column){\r\n\t\t\t\t//subject is column element\r\n\t\t\t\treturn subject;\r\n\t\t\t}else if(subject instanceof ColumnComponent){\r\n\t\t\t\t//subject is public column component\r\n\t\t\t\treturn subject._getSelf() || false;\r\n\t\t\t}else if(typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement){\r\n\t\t\t\t//subject is a HTML element of the column header\r\n\t\t\t\tlet match = this.columns.find((column) => {\r\n\t\t\t\t\treturn column.element === subject;\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn match || false;\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\t//subject should be treated as the field name of the column\r\n\t\t\treturn this.columnsByField[subject] || false;\r\n\t\t}\r\n\r\n\t\t//catch all for any other type of input\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetColumnByField(field){\r\n\t\treturn this.columnsByField[field];\r\n\t}\r\n\r\n\tgetColumnsByFieldRoot(root){\r\n\t\tvar matches = [];\r\n\r\n\t\tObject.keys(this.columnsByField).forEach((field) => {\r\n\t\t\tvar fieldRoot = field.split(\".\")[0];\r\n\t\t\tif(fieldRoot === root){\r\n\t\t\t\tmatches.push(this.columnsByField[field]);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn matches;\r\n\t}\r\n\r\n\tgetColumnByIndex(index){\r\n\t\treturn this.columnsByIndex[index];\r\n\t}\r\n\r\n\tgetFirstVisibleColumn(index){\r\n\t\tvar index = this.columnsByIndex.findIndex((col) => {\r\n\t\t\treturn col.visible;\r\n\t\t});\r\n\r\n\t\treturn index > -1 ? this.columnsByIndex[index] : false;\r\n\t}\r\n\r\n\tgetColumns(){\r\n\t\treturn this.columns;\r\n\t}\r\n\r\n\tfindColumnIndex(column){\r\n\t\treturn this.columnsByIndex.findIndex((col) => {\r\n\t\t\treturn column === col;\r\n\t\t});\r\n\t}\r\n\r\n\t//return all columns that are not groups\r\n\tgetRealColumns(){\r\n\t\treturn this.columnsByIndex;\r\n\t}\r\n\r\n\t//travers across columns and call action\r\n\ttraverse(callback){\r\n\t\tthis.columnsByIndex.forEach((column,i) =>{\r\n\t\t\tcallback(column, i);\r\n\t\t});\r\n\t}\r\n\r\n\t//get defintions of actual columns\r\n\tgetDefinitions(active){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.columnsByIndex.forEach((column) => {\r\n\t\t\tif(!active || (active && column.visible)){\r\n\t\t\t\toutput.push(column.getDefinition());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//get full nested definition tree\r\n\tgetDefinitionTree(){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.columns.forEach((column) => {\r\n\t\t\toutput.push(column.getDefinition(true));\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetComponents(structured){\r\n\t\tvar output = [],\r\n\t\tcolumns = structured ? this.columns : this.columnsByIndex;\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\toutput.push(column.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\tvar width = 0;\r\n\r\n\t\tthis.columnsByIndex.forEach((column) => {\r\n\t\t\tif(column.visible){\r\n\t\t\t\twidth += column.getWidth();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn width;\r\n\t}\r\n\r\n\tmoveColumn(from, to, after){\r\n\t\tthis.moveColumnActual(from, to, after);\r\n\r\n\t\tto.element.parentNode.insertBefore(from.element, to.element);\r\n\r\n\t\tif(after){\r\n\t\t\tto.element.parentNode.insertBefore(to.element, from.element);\r\n\t\t}\r\n\r\n\t\tthis.verticalAlignHeaders();\r\n\r\n\t\tthis.table.rowManager.reinitialize();\r\n\t}\r\n\r\n\tmoveColumnActual(from, to, after){\r\n\t\tif(from.parent.isGroup){\r\n\t\t\tthis._moveColumnInArray(from.parent.columns, from, to, after);\r\n\t\t}else{\r\n\t\t\tthis._moveColumnInArray(this.columns, from, to, after);\r\n\t\t}\r\n\r\n\t\tthis._moveColumnInArray(this.columnsByIndex, from, to, after, true);\r\n\r\n\t\tthis.renderer.rerenderColumns(true);\r\n\r\n\t\tthis.dispatch(\"column-moved\", from, to, after);\r\n\r\n\t\tif(this.subscribedExternal(\"columnMoved\")){\r\n\t\t\tthis.dispatchExternal(\"columnMoved\", from.getComponent(), this.table.columnManager.getComponents());\r\n\t\t}\r\n\t}\r\n\r\n\t_moveColumnInArray(columns, from, to, after, updateRows){\r\n\t\tvar\tfromIndex = columns.indexOf(from),\r\n\t\ttoIndex, rows = [];\r\n\r\n\t\tif (fromIndex > -1) {\r\n\r\n\t\t\tcolumns.splice(fromIndex, 1);\r\n\r\n\t\t\ttoIndex = columns.indexOf(to);\r\n\r\n\t\t\tif (toIndex > -1) {\r\n\r\n\t\t\t\tif(after){\r\n\t\t\t\t\ttoIndex = toIndex+1;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\ttoIndex = fromIndex;\r\n\t\t\t}\r\n\r\n\t\t\tcolumns.splice(toIndex, 0, from);\r\n\r\n\t\t\tif(updateRows){\r\n\r\n\t\t\t\trows = this.chain(\"column-moving-rows\", [from, to, after], null, []) || [];\r\n\r\n\t\t\t\trows = rows.concat(this.table.rowManager.rows);\r\n\r\n\t\t\t\trows.forEach(function(row){\r\n\t\t\t\t\tif(row.cells.length){\r\n\t\t\t\t\t\tvar cell = row.cells.splice(fromIndex, 1)[0];\r\n\t\t\t\t\t\trow.cells.splice(toIndex, 0, cell);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToColumn(column, position, ifVisible){\r\n\t\tvar left = 0,\r\n\t\toffset = 0,\r\n\t\tadjust = 0,\r\n\t\tcolEl = column.getElement();\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tif(typeof position === \"undefined\"){\r\n\t\t\t\tposition = this.table.options.scrollToColumnPosition;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof ifVisible === \"undefined\"){\r\n\t\t\t\tifVisible = this.table.options.scrollToColumnIfVisible;\r\n\t\t\t}\r\n\r\n\t\t\tif(column.visible){\r\n\r\n\t\t\t\t//align to correct position\r\n\t\t\t\tswitch(position){\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\tadjust = -this.element.clientWidth / 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\tadjust = colEl.clientWidth - this.headersElement.clientWidth;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//check column visibility\r\n\t\t\t\tif(!ifVisible){\r\n\r\n\t\t\t\t\toffset = colEl.offsetLeft;\r\n\r\n\t\t\t\t\tif(offset > 0 && offset + colEl.offsetWidth < this.element.clientWidth){\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//calculate scroll position\r\n\t\t\t\tleft = colEl.offsetLeft + adjust;\r\n\r\n\t\t\t\tleft = Math.max(Math.min(left, this.table.rowManager.element.scrollWidth - this.table.rowManager.element.clientWidth),0);\r\n\r\n\t\t\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\tthis.scrollHorizontal(left);\r\n\r\n\t\t\t\tresolve();\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Scroll Error - Column not visible\");\r\n\t\t\t\treject(\"Scroll Error - Column not visible\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n\r\n\t//////////////// Cell Management /////////////////\r\n\tgenerateCells(row){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis.columnsByIndex.forEach((column) => {\r\n\t\t\tcells.push(column.generateCell(row));\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\t//////////////// Column Management /////////////////\r\n\tgetFlexBaseWidth(){\r\n\t\tvar totalWidth = this.table.element.clientWidth, //table element width\r\n\t\tfixedWidth = 0;\r\n\r\n\t\t//adjust for vertical scrollbar if present\r\n\t\tif(this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight){\r\n\t\t\ttotalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\r\n\t\t}\r\n\r\n\t\tthis.columnsByIndex.forEach(function(column){\r\n\t\t\tvar width, minWidth, colWidth;\r\n\r\n\t\t\tif(column.visible){\r\n\r\n\t\t\t\twidth = column.definition.width || 0;\r\n\r\n\t\t\t\tminWidth = parseInt(column.minWidth);\r\n\r\n\t\t\t\tif(typeof(width) == \"string\"){\r\n\t\t\t\t\tif(width.indexOf(\"%\") > -1){\r\n\t\t\t\t\t\tcolWidth = (totalWidth / 100) * parseInt(width) ;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcolWidth = parseInt(width);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolWidth = width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfixedWidth += colWidth > minWidth ? colWidth : minWidth;\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn fixedWidth;\r\n\t}\r\n\r\n\taddColumn(definition, before, nextToColumn){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar column = this._addColumn(definition, before, nextToColumn);\r\n\r\n\t\t\tthis._reIndexColumns();\r\n\r\n\t\t\tthis.dispatch(\"column-add\", definition, before, nextToColumn);\r\n\r\n\t\t\tif(this.layoutMode() != \"fitColumns\"){\r\n\t\t\t\tcolumn.reinitializeWidth();\r\n\t\t\t}\r\n\r\n\t\t\tthis.redraw(true);\r\n\r\n\t\t\tthis.table.rowManager.reinitialize();\r\n\r\n\t\t\tthis.renderer.rerenderColumns();\r\n\r\n\t\t\tresolve(column);\r\n\t\t});\r\n\t}\r\n\r\n\t//remove column from system\r\n\tderegisterColumn(column){\r\n\t\tvar field = column.getField(),\r\n\t\tindex;\r\n\r\n\t\t//remove from field list\r\n\t\tif(field){\r\n\t\t\tdelete this.columnsByField[field];\r\n\t\t}\r\n\r\n\t\t//remove from index list\r\n\t\tindex = this.columnsByIndex.indexOf(column);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.columnsByIndex.splice(index, 1);\r\n\t\t}\r\n\r\n\t\t//remove from column list\r\n\t\tindex = this.columns.indexOf(column);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.columns.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tthis.verticalAlignHeaders();\r\n\r\n\t\tthis.redraw();\r\n\t}\r\n\r\n\t//redraw columns\r\n\tredraw(force){\r\n\t\tif(Helpers.elVisible(this.element)){\r\n\t\t\tthis.verticalAlignHeaders();\r\n\t\t}\r\n\r\n\t\tif(force){\r\n\t\t\tthis.table.rowManager.resetScroll();\r\n\t\t\tthis.table.rowManager.reinitialize();\r\n\t\t}\r\n\r\n\t\tif(!this.confirm(\"table-redrawing\", force)){\r\n\t\t\tthis.layoutRefresh();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"table-redraw\", force);\r\n\r\n\t\tthis.table.footerManager.redraw();\r\n\t}\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class BaiscVertical extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.verticalFillMode = \"fill\";\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\t}\r\n\r\n\tclearRows(){\r\n\t\tvar element = this.tableElement;\r\n\r\n\t\t// element.children.detach();\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\telement.scrollTop = 0;\r\n\t\telement.scrollLeft = 0;\r\n\r\n\t\telement.style.minWidth = \"\";\r\n\t\telement.style.minHeight = \"\";\r\n\t\telement.style.display = \"\";\r\n\t\telement.style.visibility = \"\";\r\n\t}\r\n\r\n\trenderRows(){\r\n\t\tvar element = this.tableElement,\r\n\t\tonlyGroupHeaders = true;\r\n\r\n\t\tthis.rows().forEach((row, index) => {\r\n\t\t\tthis.styleRow(row, index);\r\n\t\t\telement.appendChild(row.getElement());\r\n\t\t\trow.initialize(true);\r\n\r\n\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\tonlyGroupHeaders = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(onlyGroupHeaders){\r\n\t\t\telement.style.minWidth = this.table.columnManager.getWidth() + \"px\";\r\n\t\t}else{\r\n\t\t\telement.style.minWidth = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trerenderRows(callback){\r\n\t\tthis.render();\r\n\r\n\t\tif(callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToRowNearestTop(row){\r\n\t\tvar rowTop = Helpers.elOffset(row.getElement()).top;\r\n\r\n\t\treturn !(Math.abs(this.elementVertical.scrollTop - rowTop) > Math.abs(this.elementVertical.scrollTop + this.elementVertical.clientHeight - rowTop));\r\n\t}\r\n\r\n\tscrollToRow(row){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tthis.elementVertical.scrollTop = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top + this.elementVertical.scrollTop;\r\n\t}\r\n\r\n\tvisibleRows(includingBuffer){\r\n\t\treturn this.rows();\r\n\t}\r\n\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class VirtualDomVertical extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.verticalFillMode = \"fill\";\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.vDomRowHeight = 20; //approximation of row heights for padding\r\n\r\n\t\tthis.vDomTop = 0; //hold position for first rendered row in the virtual DOM\r\n\t\tthis.vDomBottom = 0; //hold possition for last rendered row in the virtual DOM\r\n\r\n\t\tthis.vDomScrollPosTop = 0; //last scroll position of the vDom top;\r\n\t\tthis.vDomScrollPosBottom = 0; //last scroll position of the vDom bottom;\r\n\r\n\t\tthis.vDomTopPad = 0; //hold value of padding for top of virtual DOM\r\n\t\tthis.vDomBottomPad = 0; //hold value of padding for bottom of virtual DOM\r\n\r\n\t\tthis.vDomMaxRenderChain = 90; //the maximum number of dom elements that can be rendered in 1 go\r\n\r\n\t\tthis.vDomWindowBuffer = 0; //window row buffer before removing elements, to smooth scrolling\r\n\r\n\t\tthis.vDomWindowMinTotalRows = 20; //minimum number of rows to be generated in virtual dom (prevent buffering issues on tables with tall rows)\r\n\t\tthis.vDomWindowMinMarginRows = 5; //minimum number of rows to be generated in virtual dom margin\r\n\r\n\t\tthis.vDomTopNewRows = []; //rows to normalize after appending to optimize render speed\r\n\t\tthis.vDomBottomNewRows = []; //rows to normalize after appending to optimize render speed\r\n\t}\r\n\r\n\t//////////////////////////////////////\r\n\t///////// Public Functions ///////////\r\n\t//////////////////////////////////////\r\n\r\n\tclearRows(){\r\n\t\tvar element = this.tableElement;\r\n\r\n\t\t// element.children.detach();\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\telement.style.paddingTop = \"\";\r\n\t\telement.style.paddingBottom = \"\";\r\n\t\t// element.style.minWidth = \"\";\r\n\t\telement.style.minHeight = \"\";\r\n\t\telement.style.display = \"\";\r\n\t\telement.style.visibility = \"\";\r\n\r\n\t\tthis.elementVertical.scrollTop = 0;\r\n\t\tthis.elementVertical.scrollLeft = 0;\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.vDomTop = 0;\r\n\t\tthis.vDomBottom = 0;\r\n\t\tthis.vDomTopPad = 0;\r\n\t\tthis.vDomBottomPad = 0;\r\n\t\tthis.vDomScrollPosTop = 0;\r\n\t\tthis.vDomScrollPosBottom = 0;\r\n\t}\r\n\r\n\trenderRows(){\r\n\t\tthis._virtualRenderFill();\r\n\t}\r\n\r\n\trerenderRows(callback){\r\n\t\tvar scrollTop = this.elementVertical.scrollTop;\r\n\t\tvar topRow = false;\r\n\t\tvar topOffset = false;\r\n\r\n\t\tvar left = this.table.rowManager.scrollLeft;\r\n\r\n\t\tvar rows = this.rows();\r\n\r\n\t\tfor(var i = this.vDomTop; i <= this.vDomBottom; i++){\r\n\r\n\t\t\tif(rows[i]){\r\n\t\t\t\tvar diff = scrollTop - rows[i].getElement().offsetTop;\r\n\r\n\t\t\t\tif(topOffset === false || Math.abs(diff) < topOffset){\r\n\t\t\t\t\ttopOffset = diff;\r\n\t\t\t\t\ttopRow = i;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trows.forEach((row) => {\r\n\t\t\trow.deinitializeHeight();\r\n\t\t});\r\n\r\n\t\tif(callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\r\n\t\tthis._virtualRenderFill((topRow === false ? this.rows.length - 1 : topRow), true, topOffset || 0);\r\n\r\n\t\tthis.scrollColumns(left);\r\n\t}\r\n\r\n\tscrollColumns(left){\r\n\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t}\r\n\r\n\tscrollRows(top, dir){\r\n\t\tvar topDiff = top - this.vDomScrollPosTop;\r\n\t\tvar bottomDiff = top - this.vDomScrollPosBottom;\r\n\t\tvar margin = this.vDomWindowBuffer * 2;\r\n\t\tvar rows = this.rows();\r\n\r\n\t\tthis.scrollTop = top;\r\n\r\n\t\tif(-topDiff > margin || bottomDiff > margin){\r\n\t\t\t//if big scroll redraw table;\r\n\t\t\tvar left = this.table.rowManager.scrollLeft;\r\n\t\t\tthis._virtualRenderFill(Math.floor((this.elementVertical.scrollTop / this.elementVertical.scrollHeight) * rows.length));\r\n\t\t\tthis.scrollColumns(left);\r\n\t\t}else{\r\n\r\n\t\t\tif(dir){\r\n\t\t\t\t//scrolling up\r\n\t\t\t\tif(topDiff < 0){\r\n\t\t\t\t\tthis._addTopRow(rows, -topDiff);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(bottomDiff < 0){\r\n\t\t\t\t\t//hide bottom row if needed\r\n\t\t\t\t\tif(this.vDomScrollHeight - this.scrollTop > this.vDomWindowBuffer){\r\n\t\t\t\t\t\tthis._removeBottomRow(rows, -bottomDiff);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.vDomScrollPosBottom = this.scrollTop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\r\n\t\t\t\tif(bottomDiff >= 0){\r\n\t\t\t\t\tthis._addBottomRow(rows, bottomDiff);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//scrolling down\r\n\t\t\t\tif(topDiff >= 0){\r\n\t\t\t\t\t//hide top row if needed\r\n\t\t\t\t\tif(this.scrollTop > this.vDomWindowBuffer){\r\n\t\t\t\t\t\tthis._removeTopRow(rows, topDiff);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.vDomScrollPosTop = this.scrollTop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tresize(){\r\n\t\tthis.vDomWindowBuffer = this.table.options.renderVerticalBuffer || this.elementVertical.clientHeight;\r\n\t}\r\n\r\n\tscrollToRowNearestTop(row){\r\n\t\tvar rowIndex = this.rows().indexOf(row);\r\n\r\n\t\treturn !(Math.abs(this.vDomTop - rowIndex) > Math.abs(this.vDomBottom - rowIndex));\r\n\t}\r\n\r\n\tscrollToRow(row){\r\n\t\tvar index = this.rows().indexOf(row);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis._virtualRenderFill(index, true);\r\n\t\t}\r\n\t}\r\n\r\n\tvisibleRows(includingBuffer){\r\n\t\tvar topEdge = this.elementVertical.scrollTop,\r\n\t\tbottomEdge = this.elementVertical.clientHeight + topEdge,\r\n\t\ttopFound = false,\r\n\t\ttopRow = 0,\r\n\t\tbottomRow = 0,\r\n\t\trows = this.rows();\r\n\r\n\t\tif(includingBuffer){\r\n\t\t\ttopRow = this.vDomTop;\r\n\t\t\tbottomRow = this.vDomBottom;\r\n\t\t}else{\r\n\t\t\tfor(var i = this.vDomTop; i <= this.vDomBottom; i++){\r\n\t\t\t\tif(rows[i]){\r\n\t\t\t\t\tif(!topFound){\r\n\t\t\t\t\t\tif((topEdge - rows[i].getElement().offsetTop) >= 0){\r\n\t\t\t\t\t\t\ttopRow = i;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ttopFound = true;\r\n\r\n\t\t\t\t\t\t\tif(bottomEdge - rows[i].getElement().offsetTop >= 0){\r\n\t\t\t\t\t\t\t\tbottomRow = i;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(bottomEdge - rows[i].getElement().offsetTop >= 0){\r\n\t\t\t\t\t\t\tbottomRow = i;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rows.slice(topRow, bottomRow + 1);\r\n\t}\r\n\r\n\t//////////////////////////////////////\r\n\t//////// Internal Rendering //////////\r\n\t//////////////////////////////////////\r\n\r\n\t//full virtual render\r\n\t_virtualRenderFill(position, forceMove, offset){\r\n\t\tvar\telement = this.tableElement,\r\n\t\tholder = this.elementVertical,\r\n\t\ttopPad = 0,\r\n\t\trowsHeight = 0,\r\n\t\theightOccupied = 0,\r\n\t\ttopPadHeight = 0,\r\n\t\ti = 0,\r\n\t\trows = this.rows(),\r\n\t\trowsCount = rows.length,\r\n\t\tcontainerHeight = this.elementVertical.clientHeight;\r\n\r\n\t\tposition = position || 0;\r\n\r\n\t\toffset = offset || 0;\r\n\r\n\t\tif(!position){\r\n\t\t\tthis.clear();\r\n\t\t}else{\r\n\t\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\t\t//check if position is too close to bottom of table\r\n\t\t\theightOccupied = (rowsCount - position + 1) * this.vDomRowHeight;\r\n\r\n\t\t\tif(heightOccupied < containerHeight){\r\n\t\t\t\tposition -= Math.ceil((containerHeight - heightOccupied) / this.vDomRowHeight);\r\n\t\t\t\tif(position < 0){\r\n\t\t\t\t\tposition = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//calculate initial pad\r\n\t\t\ttopPad = Math.min(Math.max(Math.floor(this.vDomWindowBuffer / this.vDomRowHeight),  this.vDomWindowMinMarginRows), position);\r\n\t\t\tposition -= topPad;\r\n\t\t}\r\n\r\n\t\tif(rowsCount && Helpers.elVisible(this.elementVertical)){\r\n\t\t\tthis.vDomTop = position;\r\n\r\n\t\t\tthis.vDomBottom = position -1;\r\n\r\n\t\t\twhile ((rowsHeight <= containerHeight + this.vDomWindowBuffer || i < this.vDomWindowMinTotalRows) && this.vDomBottom < rowsCount -1){\r\n\t\t\t\tvar index = this.vDomBottom + 1,\r\n\t\t\t\trow = rows[index],\r\n\t\t\t\trowHeight = 0;\r\n\r\n\t\t\t\tthis.styleRow(row, index);\r\n\r\n\t\t\t\telement.appendChild(row.getElement());\r\n\r\n\t\t\t\trow.initialize();\r\n\r\n\t\t\t\tif(!row.heightInitialized){\r\n\t\t\t\t\trow.normalizeHeight(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowHeight = row.getHeight();\r\n\r\n\t\t\t\tif(i < topPad){\r\n\t\t\t\t\ttopPadHeight += rowHeight;\r\n\t\t\t\t}else{\r\n\t\t\t\t\trowsHeight += rowHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(rowHeight > this.vDomWindowBuffer){\r\n\t\t\t\t\tthis.vDomWindowBuffer = rowHeight * 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.vDomBottom ++;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\r\n\t\t\tif(!position){\r\n\t\t\t\tthis.vDomTopPad = 0;\r\n\t\t\t\t//adjust rowheight to match average of rendered elements\r\n\t\t\t\tthis.vDomRowHeight = Math.floor((rowsHeight + topPadHeight) / i);\r\n\t\t\t\tthis.vDomBottomPad = this.vDomRowHeight * (rowsCount - this.vDomBottom -1);\r\n\r\n\t\t\t\tthis.vDomScrollHeight = topPadHeight + rowsHeight + this.vDomBottomPad - containerHeight;\r\n\t\t\t}else{\r\n\t\t\t\tthis.vDomTopPad = !forceMove ? this.scrollTop - topPadHeight : (this.vDomRowHeight * this.vDomTop) + offset;\r\n\t\t\t\tthis.vDomBottomPad = this.vDomBottom == rowsCount-1 ? 0 : Math.max(this.vDomScrollHeight - this.vDomTopPad - rowsHeight - topPadHeight, 0);\r\n\t\t\t}\r\n\r\n\t\t\telement.style.paddingTop = this.vDomTopPad + \"px\";\r\n\t\t\telement.style.paddingBottom = this.vDomBottomPad + \"px\";\r\n\r\n\t\t\tif(forceMove){\r\n\t\t\t\tthis.scrollTop = this.vDomTopPad + (topPadHeight) + offset - (this.elementVertical.scrollWidth > this.elementVertical.clientWidth ? this.elementVertical.offsetHeight - containerHeight : 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.scrollTop = Math.min(this.scrollTop, this.elementVertical.scrollHeight - containerHeight);\r\n\r\n\t\t\t//adjust for horizontal scrollbar if present (and not at top of table)\r\n\t\t\tif(this.elementVertical.scrollWidth > this.elementVertical.offsetWidth && forceMove){\r\n\t\t\t\tthis.scrollTop += this.elementVertical.offsetHeight - containerHeight;\r\n\t\t\t}\r\n\r\n\t\t\tthis.vDomScrollPosTop = this.scrollTop;\r\n\t\t\tthis.vDomScrollPosBottom = this.scrollTop;\r\n\r\n\t\t\tholder.scrollTop = this.scrollTop;\r\n\r\n\t\t\tthis.dispatch(\"render-virtual-fill\");\r\n\t\t}\r\n\t}\r\n\r\n\t_addTopRow(rows, fillableSpace){\r\n\t\tvar table = this.tableElement,\r\n\t\taddedRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\tindex = this.vDomTop -1,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tif(this.vDomTop){\r\n\t\t\t\tlet row = rows[index],\r\n\t\t\t\trowHeight, initialized;\r\n\r\n\t\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\t\t\t\t\tinitialized = row.initialized;\r\n\r\n\t\t\t\t\tif(fillableSpace >= rowHeight){\r\n\r\n\t\t\t\t\t\tthis.styleRow(row, index);\r\n\t\t\t\t\t\ttable.insertBefore(row.getElement(), table.firstChild);\r\n\r\n\t\t\t\t\t\tif(!row.initialized || !row.heightInitialized){\r\n\t\t\t\t\t\t\taddedRows.push(row);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trow.initialize();\r\n\r\n\t\t\t\t\t\tif(!initialized){\r\n\t\t\t\t\t\t\trowHeight = row.getElement().offsetHeight;\r\n\r\n\t\t\t\t\t\t\tif(rowHeight > this.vDomWindowBuffer){\r\n\t\t\t\t\t\t\t\tthis.vDomWindowBuffer = rowHeight * 2;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\t\tthis.vDomTop--;\r\n\t\t\t\t\t\tindex--;\r\n\t\t\t\t\t\ti++;\r\n\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of addedRows){\r\n\t\t\trow.clearCellHeight();\r\n\t\t}\r\n\r\n\t\tthis._quickNormalizeRowHeight(addedRows);\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomTopPad -= paddingAdjust;\r\n\r\n\t\t\tif(this.vDomTopPad < 0){\r\n\t\t\t\tthis.vDomTopPad = index * this.vDomRowHeight;\r\n\t\t\t}\r\n\r\n\t\t\tif(index < 1){\r\n\t\t\t\tthis.vDomTopPad = 0;\r\n\t\t\t}\r\n\r\n\t\t\ttable.style.paddingTop = this.vDomTopPad + \"px\";\r\n\t\t\tthis.vDomScrollPosTop -= paddingAdjust;\r\n\t\t}\r\n\t}\r\n\r\n\t_removeTopRow(rows, fillableSpace){\r\n\t\tvar removableRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tlet row = rows[this.vDomTop],\r\n\t\t\trowHeight, diff;\r\n\r\n\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\r\n\t\t\t\tif(fillableSpace >= rowHeight){\r\n\t\t\t\t\tthis.vDomTop++;\r\n\r\n\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\tremovableRows.push(row);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of removableRows){\r\n\t\t\tlet rowEl = row.getElement();\r\n\r\n\t\t\tif(rowEl.parentNode){\r\n\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomTopPad += paddingAdjust;\r\n\t\t\tthis.tableElement.style.paddingTop = this.vDomTopPad + \"px\";\r\n\t\t\tthis.vDomScrollPosTop += this.vDomTop ? paddingAdjust : paddingAdjust + this.vDomWindowBuffer;\r\n\t\t}\r\n\t}\r\n\r\n\t_addBottomRow(rows, fillableSpace){\r\n\t\tvar table = this.tableElement,\r\n\t\taddedRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\tindex = this.vDomBottom + 1,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tlet row = rows[index],\r\n\t\t\trowHeight, initialized;\r\n\r\n\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\t\t\t\tinitialized = row.initialized;\r\n\r\n\t\t\t\tif(fillableSpace >= rowHeight){\r\n\r\n\t\t\t\t\tthis.styleRow(row, index);\r\n\t\t\t\t\ttable.appendChild(row.getElement());\r\n\r\n\t\t\t\t\tif(!row.initialized || !row.heightInitialized){\r\n\t\t\t\t\t\taddedRows.push(row);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trow.initialize();\r\n\r\n\t\t\t\t\tif(!initialized){\r\n\t\t\t\t\t\trowHeight = row.getElement().offsetHeight;\r\n\r\n\t\t\t\t\t\tif(rowHeight > this.vDomWindowBuffer){\r\n\t\t\t\t\t\t\tthis.vDomWindowBuffer = rowHeight * 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\tthis.vDomBottom++;\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of addedRows){\r\n\t\t\trow.clearCellHeight();\r\n\t\t}\r\n\r\n\t\tthis._quickNormalizeRowHeight(addedRows);\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomBottomPad -= paddingAdjust;\r\n\r\n\t\t\tif(this.vDomBottomPad < 0 || index == rows.length -1){\r\n\t\t\t\tthis.vDomBottomPad = 0;\r\n\t\t\t}\r\n\r\n\t\t\ttable.style.paddingBottom = this.vDomBottomPad + \"px\";\r\n\t\t\tthis.vDomScrollPosBottom += paddingAdjust;\r\n\t\t}\r\n\t}\r\n\r\n\t_removeBottomRow(rows, fillableSpace){\r\n\t\tvar removableRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tlet row = rows[this.vDomBottom],\r\n\t\t\trowHeight, diff;\r\n\r\n\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\r\n\t\t\t\tif(fillableSpace >= rowHeight){\r\n\t\t\t\t\tthis.vDomBottom --;\r\n\r\n\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\tremovableRows.push(row);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of removableRows){\r\n\t\t\tlet rowEl = row.getElement();\r\n\r\n\t\t\tif(rowEl.parentNode){\r\n\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomBottomPad += paddingAdjust;\r\n\r\n\t\t\tif(this.vDomBottomPad < 0){\r\n\t\t\t\tthis.vDomBottomPad = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.tableElement.style.paddingBottom = this.vDomBottomPad + \"px\";\r\n\t\t\tthis.vDomScrollPosBottom -= paddingAdjust;\r\n\t\t}\r\n\t}\r\n\r\n\t_quickNormalizeRowHeight(rows){\r\n\t\tfor(let row of rows){\r\n\t\t\trow.calcHeight();\r\n\t\t}\r\n\r\n\t\tfor(let row of rows){\r\n\t\t\trow.setCellHeight();\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\nimport Row from './row/Row.js';\r\nimport RowComponent from './row/RowComponent.js';\r\nimport Helpers from './tools/Helpers.js';\r\n\r\nimport RendererBasicVertical from './rendering/renderers/BasicVertical.js';\r\nimport RendererVirtualDomVertical from './rendering/renderers/VirtualDomVertical.js';\r\n\r\nexport default class RowManager extends CoreFeature{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.element = this.createHolderElement(); //containing element\r\n\t\tthis.tableElement = this.createTableElement(); //table element\r\n\t\tthis.heightFixer = this.createTableElement(); //table element\r\n\r\n\t\tthis.firstRender = false; //handle first render\r\n\t\tthis.renderMode = \"virtual\"; //current rendering mode\r\n\t\tthis.fixedHeight = false; //current rendering mode\r\n\r\n\t\tthis.rows = []; //hold row data objects\r\n\t\tthis.activeRowsPipeline = []; //hold caluclation of active rows\r\n\t\tthis.activeRows = []; //rows currently available to on display in the table\r\n\t\tthis.activeRowsCount = 0; //count of active rows\r\n\r\n\t\tthis.displayRows = []; //rows currently on display in the table\r\n\t\tthis.displayRowsCount = 0; //count of display rows\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.rowNumColumn = false; //hold column component for row number column\r\n\r\n\t\tthis.redrawBlock = false; //prevent redraws to allow multiple data manipulations becore continuing\r\n\t\tthis.redrawBlockRestoreConfig = false; //store latest redraw function calls for when redraw is needed\r\n\t\tthis.redrawBlockRederInPosition = false; //store latest redraw function calls for when redraw is needed\r\n\r\n\t\tthis.dataPipeline = []; //hold data pipeline tasks\r\n\t\tthis.displayPipeline = []; //hold data display pipeline tasks\r\n\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t//////////////// Setup Functions /////////////////\r\n\r\n\tcreateHolderElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-tableholder\");\r\n\t\tel.setAttribute(\"tabindex\", 0);\r\n\t\tel.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateTableElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-table\");\r\n\t\tel.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t//return containing element\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t//return table element\r\n\tgetTableElement(){\r\n\t\treturn this.tableElement;\r\n\t}\r\n\r\n\t//return position of row in table\r\n\tgetRowPosition(row, active){\r\n\t\tif(active){\r\n\t\t\treturn this.activeRows.indexOf(row);\r\n\t\t}else{\r\n\t\t\treturn this.rows.indexOf(row);\r\n\t\t}\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeRenderer();\r\n\r\n\t\t//initialize manager\r\n\t\tthis.element.appendChild(this.tableElement);\r\n\r\n\t\tthis.firstRender = true;\r\n\r\n\t\t//scroll header along with table body\r\n\t\tthis.element.addEventListener(\"scroll\", () => {\r\n\t\t\tvar left = this.element.scrollLeft,\r\n\t\t\tleftDir = this.scrollLeft > left,\r\n\t\t\ttop = this.element.scrollTop,\r\n\t\t\ttopDir = this.scrollTop > top;\r\n\r\n\t\t\t//handle horizontal scrolling\r\n\t\t\tif(this.scrollLeft != left){\r\n\t\t\t\tthis.scrollLeft = left;\r\n\r\n\t\t\t\tthis.dispatch(\"scroll-horizontal\", left, leftDir);\r\n\t\t\t\tthis.dispatchExternal(\"scrollHorizontal\", left, leftDir);\r\n\t\t\t}\r\n\r\n\t\t\t//handle verical scrolling\r\n\t\t\tif(this.scrollTop != top){\r\n\t\t\t\tthis.scrollTop = top;\r\n\r\n\t\t\t\tthis.renderer.scrollRows(top, topDir);\r\n\r\n\t\t\t\tthis.dispatch(\"scroll-vertical\", top, topDir);\r\n\t\t\t\tthis.dispatchExternal(\"scrollVertical\", top, topDir);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t////////////////// Row Manipulation //////////////////\r\n\tfindRow(subject){\r\n\t\tif(typeof subject == \"object\"){\r\n\t\t\tif(subject instanceof Row){\r\n\t\t\t\t//subject is row element\r\n\t\t\t\treturn subject;\r\n\t\t\t}else if(subject instanceof RowComponent){\r\n\t\t\t\t//subject is public row component\r\n\t\t\t\treturn subject._getSelf() || false;\r\n\t\t\t}else if(typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement){\r\n\t\t\t\t//subject is a HTML element of the row\r\n\t\t\t\tlet match = this.rows.find((row) => {\r\n\t\t\t\t\treturn row.getElement() === subject;\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn match || false;\r\n\t\t\t}\r\n\t\t}else if(typeof subject == \"undefined\" || subject === null){\r\n\t\t\treturn false;\r\n\t\t}else{\r\n\t\t\t//subject should be treated as the index of the row\r\n\t\t\tlet match = this.rows.find((row) => {\r\n\t\t\t\treturn row.data[this.table.options.index] == subject;\r\n\t\t\t});\r\n\r\n\t\t\treturn match || false;\r\n\t\t}\r\n\r\n\t\t//catch all for any other type of input\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetRowFromDataObject(data){\r\n\t\tvar match = this.rows.find((row) => {\r\n\t\t\treturn row.data === data;\r\n\t\t});\r\n\r\n\t\treturn match || false;\r\n\t}\r\n\r\n\tgetRowFromPosition(position, active){\r\n\t\tif(active){\r\n\t\t\treturn this.activeRows[position];\r\n\t\t}else{\r\n\t\t\treturn this.rows[position];\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToRow(row, position, ifVisible){\r\n\t\treturn this.renderer.scrollToRowPosition(row, position, ifVisible);\r\n\t}\r\n\r\n\t////////////////// Data Handling //////////////////\r\n\tsetData(data, renderInPosition, columnsChanged){\r\n\t\treturn new Promise((resolve, reject)=>{\r\n\t\t\tif(renderInPosition && this.getDisplayRows().length){\r\n\t\t\t\tif(this.table.options.pagination){\r\n\t\t\t\t\tthis._setDataActual(data, true);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.reRenderInPosition(() => {\r\n\t\t\t\t\t\tthis._setDataActual(data);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(this.table.options.autoColumns && columnsChanged && this.table.initialized){\r\n\t\t\t\t\tthis.table.columnManager.generateColumnsFromRowData(data);\r\n\t\t\t\t}\r\n\t\t\t\tthis.resetScroll();\r\n\r\n\t\t\t\tthis._setDataActual(data);\r\n\t\t\t}\r\n\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\t_setDataActual(data, renderInPosition){\r\n\t\tthis.dispatchExternal(\"dataProcessing\", data);\r\n\r\n\t\tthis._wipeElements();\r\n\r\n\t\tif(Array.isArray(data)){\r\n\t\t\tthis.dispatch(\"data-processing\", data);\r\n\r\n\t\t\tdata.forEach((def, i) => {\r\n\t\t\t\tif(def && typeof def === \"object\"){\r\n\t\t\t\t\tvar row = new Row(def, this);\r\n\t\t\t\t\tthis.rows.push(row);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Data Loading Warning - Invalid row data detected and ignored, expecting object but received:\", def);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.refreshActiveData(false, false, renderInPosition);\r\n\r\n\t\t\tthis.dispatch(\"data-processed\", data);\r\n\t\t\tthis.dispatchExternal(\"dataProcessed\", data);\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Data Loading Error - Unable to process data due to invalid data type \\nExpecting: array \\nReceived: \", typeof data, \"\\nData:     \", data);\r\n\t\t}\r\n\t}\r\n\r\n\t_wipeElements(){\r\n\t\tthis.dispatch(\"rows-wipe\");\r\n\r\n\t\tthis.rows.forEach((row) => {\r\n\t\t\trow.wipe();\r\n\t\t});\r\n\r\n\t\tthis.rows = [];\r\n\t\tthis.activeRows = [];\r\n\t\tthis.activeRowsPipeline = [];\r\n\t\tthis.activeRowsCount = 0;\r\n\t\tthis.displayRows = [];\r\n\t\tthis.displayRowsCount = 0;\r\n\r\n\t\tthis.adjustTableSize();\r\n\t}\r\n\r\n\tdeleteRow(row, blockRedraw){\r\n\t\tvar allIndex = this.rows.indexOf(row),\r\n\t\tactiveIndex = this.activeRows.indexOf(row);\r\n\r\n\t\tif(activeIndex > -1){\r\n\t\t\tthis.activeRows.splice(activeIndex, 1);\r\n\t\t}\r\n\r\n\t\tif(allIndex > -1){\r\n\t\t\tthis.rows.splice(allIndex, 1);\r\n\t\t}\r\n\r\n\t\tthis.setActiveRows(this.activeRows);\r\n\r\n\t\tthis.displayRowIterator((rows) => {\r\n\t\t\tvar displayIndex = rows.indexOf(row);\r\n\r\n\t\t\tif(displayIndex > -1){\r\n\t\t\t\trows.splice(displayIndex, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!blockRedraw){\r\n\t\t\tthis.reRenderInPosition();\r\n\t\t}\r\n\r\n\t\tthis.regenerateRowNumbers();\r\n\r\n\t\tthis.dispatchExternal(\"rowDeleted\", row.getComponent());\r\n\r\n\t\tif(!this.displayRowsCount){\r\n\t\t\tthis._showPlaceholder();\r\n\t\t}\r\n\r\n\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\tthis.dispatchExternal(\"dataChanged\", this.getData());\r\n\t\t}\r\n\t}\r\n\r\n\taddRow(data, pos, index, blockRedraw){\r\n\t\tvar row = this.addRowActual(data, pos, index, blockRedraw);\r\n\r\n\t\tthis.dispatch(\"row-added\", row, data, pos, index);\r\n\r\n\t\treturn row;\r\n\t}\r\n\r\n\t//add multiple rows\r\n\taddRows(data, pos, index){\r\n\t\tvar length = 0,\r\n\t\trows = [];\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tpos = this.findAddRowPos(pos);\r\n\r\n\t\t\tif(!Array.isArray(data)){\r\n\t\t\t\tdata = [data];\r\n\t\t\t}\r\n\r\n\t\t\tlength = data.length - 1;\r\n\r\n\t\t\tif((typeof index == \"undefined\" && pos) || (typeof index !== \"undefined\" && !pos)){\r\n\t\t\t\tdata.reverse();\r\n\t\t\t}\r\n\r\n\t\t\tdata.forEach((item, i) => {\r\n\t\t\t\tvar row = this.addRow(item, pos, index, true);\r\n\t\t\t\trows.push(row);\r\n\t\t\t\tthis.dispatch(\"row-added\", row, data, pos, index);\r\n\t\t\t});\r\n\r\n\t\t\tthis.refreshActiveData(false, false, true);\r\n\r\n\t\t\tthis.regenerateRowNumbers();\r\n\r\n\t\t\tif(rows.length){\r\n\t\t\t\tthis._clearPlaceholder();\r\n\t\t\t}\r\n\r\n\t\t\tresolve(rows);\r\n\t\t});\r\n\t}\r\n\r\n\tfindAddRowPos(pos){\r\n\t\tif(typeof pos === \"undefined\"){\r\n\t\t\tpos = this.table.options.addRowPos;\r\n\t\t}\r\n\r\n\t\tif(pos === \"pos\"){\r\n\t\t\tpos = true;\r\n\t\t}\r\n\r\n\t\tif(pos === \"bottom\"){\r\n\t\t\tpos = false;\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t}\r\n\r\n\taddRowActual(data, pos, index, blockRedraw){\r\n\t\tvar row = data instanceof Row ? data : new Row(data || {}, this),\r\n\t\ttop = this.findAddRowPos(pos),\r\n\t\tallIndex = -1,\r\n\t\tactiveIndex, chainResult;\r\n\r\n\t\tif(!index){\r\n\t\t\tchainResult = this.chain(\"row-adding-position\", [row, top], null, {index, top});\r\n\r\n\t\t\tindex = chainResult.index;\r\n\t\t\ttop = chainResult.top;\r\n\t\t}\r\n\r\n\t\tif(typeof index !== \"undefined\"){\r\n\t\t\tindex = this.findRow(index);\r\n\t\t}\r\n\r\n\t\tindex = this.chain(\"row-adding-index\", [row, index, top], null, index);\r\n\r\n\t\tif(index){\r\n\t\t\tallIndex = this.rows.indexOf(index);\r\n\t\t}\r\n\r\n\t\tif(index && allIndex > -1){\r\n\t\t\tactiveIndex = this.activeRows.indexOf(index);\r\n\r\n\t\t\tthis.displayRowIterator(function(rows){\r\n\t\t\t\tvar displayIndex = rows.indexOf(index);\r\n\r\n\t\t\t\tif(displayIndex > -1){\r\n\t\t\t\t\trows.splice((top ? displayIndex : displayIndex + 1), 0, row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(activeIndex > -1){\r\n\t\t\t\tthis.activeRows.splice((top ? activeIndex : activeIndex + 1), 0, row);\r\n\t\t\t}\r\n\r\n\t\t\tthis.rows.splice((top ? allIndex : allIndex + 1), 0, row);\r\n\r\n\t\t}else{\r\n\r\n\t\t\tif(top){\r\n\r\n\t\t\t\tthis.displayRowIterator(function(rows){\r\n\t\t\t\t\trows.unshift(row);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.activeRows.unshift(row);\r\n\t\t\t\tthis.rows.unshift(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.displayRowIterator(function(rows){\r\n\t\t\t\t\trows.push(row);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.activeRows.push(row);\r\n\t\t\t\tthis.rows.push(row);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setActiveRows(this.activeRows);\r\n\r\n\t\tthis.dispatchExternal(\"rowAdded\", row.getComponent());\r\n\r\n\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\tthis.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\r\n\t\t}\r\n\r\n\t\tif(!blockRedraw){\r\n\t\t\tthis.reRenderInPosition();\r\n\t\t}\r\n\r\n\t\treturn row;\r\n\t}\r\n\r\n\tmoveRow(from, to, after){\r\n\t\tthis.dispatch(\"row-move\", from, to, after);\r\n\r\n\t\tthis.moveRowActual(from, to, after);\r\n\r\n\t\tthis.regenerateRowNumbers();\r\n\r\n\t\tthis.dispatch(\"row-moved\", from, to, after);\r\n\t\tthis.dispatchExternal(\"rowMoved\", from.getComponent());\r\n\t}\r\n\r\n\tmoveRowActual(from, to, after){\r\n\t\tthis.moveRowInArray(this.rows, from, to, after);\r\n\t\tthis.moveRowInArray(this.activeRows, from, to, after);\r\n\r\n\t\tthis.displayRowIterator((rows) => {\r\n\t\t\tthis.moveRowInArray(rows, from, to, after);\r\n\t\t});\r\n\r\n\t\tthis.dispatch(\"row-moving\", from, to, after);\r\n\t}\r\n\r\n\tmoveRowInArray(rows, from, to, after){\r\n\t\tvar\tfromIndex, toIndex, start, end;\r\n\r\n\t\tif(from !== to){\r\n\r\n\t\t\tfromIndex = rows.indexOf(from);\r\n\r\n\t\t\tif (fromIndex > -1) {\r\n\r\n\t\t\t\trows.splice(fromIndex, 1);\r\n\r\n\t\t\t\ttoIndex = rows.indexOf(to);\r\n\r\n\t\t\t\tif (toIndex > -1) {\r\n\r\n\t\t\t\t\tif(after){\r\n\t\t\t\t\t\trows.splice(toIndex+1, 0, from);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\trows.splice(toIndex, 0, from);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\trows.splice(fromIndex, 0, from);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//restyle rows\r\n\t\t\tif(rows === this.getDisplayRows()){\r\n\r\n\t\t\t\tstart = fromIndex < toIndex ? fromIndex : toIndex;\r\n\t\t\t\tend = toIndex > fromIndex ? toIndex : fromIndex +1;\r\n\r\n\t\t\t\tfor(let i = start; i <= end; i++){\r\n\t\t\t\t\tif(rows[i]){\r\n\t\t\t\t\t\tthis.styleRow(rows[i], i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclearData(){\r\n\t\tthis.setData([]);\r\n\t}\r\n\r\n\tgetRowIndex(row){\r\n\t\treturn this.findRowIndex(row, this.rows);\r\n\t}\r\n\r\n\tgetDisplayRowIndex(row){\r\n\t\tvar index = this.getDisplayRows().indexOf(row);\r\n\t\treturn index > -1 ? index : false;\r\n\t}\r\n\r\n\tnextDisplayRow(row, rowOnly){\r\n\t\tvar index = this.getDisplayRowIndex(row),\r\n\t\tnextRow = false;\r\n\r\n\r\n\t\tif(index !== false && index < this.displayRowsCount -1){\r\n\t\t\tnextRow = this.getDisplayRows()[index+1];\r\n\t\t}\r\n\r\n\t\tif(nextRow && (!(nextRow instanceof Row) || nextRow.type != \"row\")){\r\n\t\t\treturn this.nextDisplayRow(nextRow, rowOnly);\r\n\t\t}\r\n\r\n\t\treturn nextRow;\r\n\t}\r\n\r\n\tprevDisplayRow(row, rowOnly){\r\n\t\tvar index = this.getDisplayRowIndex(row),\r\n\t\tprevRow = false;\r\n\r\n\t\tif(index){\r\n\t\t\tprevRow = this.getDisplayRows()[index-1];\r\n\t\t}\r\n\r\n\t\tif(rowOnly && prevRow && (!(prevRow instanceof Row) || prevRow.type != \"row\")){\r\n\t\t\treturn this.prevDisplayRow(prevRow, rowOnly);\r\n\t\t}\r\n\r\n\t\treturn prevRow;\r\n\t}\r\n\r\n\tfindRowIndex(row, list){\r\n\t\tvar rowIndex;\r\n\r\n\t\trow = this.findRow(row);\r\n\r\n\t\tif(row){\r\n\t\t\trowIndex = list.indexOf(row);\r\n\r\n\t\t\tif(rowIndex > -1){\r\n\t\t\t\treturn rowIndex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetData(active, transform){\r\n\t\tvar output = [],\r\n\t\trows = this.getRows(active);\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\tif(row.type == \"row\"){\r\n\t\t\t\toutput.push(row.getData(transform || \"data\"));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetComponents(active){\r\n\t\tvar\toutput = [],\r\n\t\trows = this.getRows(active);\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\toutput.push(row.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetDataCount(active){\r\n\t\tvar rows = this.getRows(active);\r\n\r\n\t\treturn rows.length;\r\n\t}\r\n\r\n\tscrollHorizontal(left){\r\n\t\tthis.scrollLeft = left;\r\n\t\tthis.element.scrollLeft = left;\r\n\r\n\t\tthis.dispatch(\"scroll-horizontal\", left);\r\n\t}\r\n\r\n\tregisterDataPipelineHandler(handler, priority){\r\n\t\tif(typeof priority !== \"undefined\"){\r\n\t\t\tthis.dataPipeline.push({handler, priority})\r\n\t\t\tthis.dataPipeline.sort((a, b) => {\r\n\t\t\t\treturn a.priority - b.priority;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Data pipeline handlers must have a priority in order to be registered\")\r\n\t\t}\r\n\t}\r\n\r\n\tregisterDisplayPipelineHandler(handler, priority){\r\n\t\tif(typeof priority !== \"undefined\"){\r\n\t\t\tthis.displayPipeline.push({handler, priority})\r\n\t\t\tthis.displayPipeline.sort((a, b) => {\r\n\t\t\t\treturn a.priority - b.priority;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Display pipeline handlers must have a priority in order to be registered\")\r\n\t\t}\r\n\t}\r\n\r\n\t//set active data set\r\n\trefreshActiveData(handler, skipStage, renderInPosition){\r\n\t\tvar table = this.table,\r\n\t\tstage = \"\",\r\n\t\tindex = 0,\r\n\t\tcascadeOrder = [\"all\", \"dataPipeline\", \"display\", \"displayPipeline\", \"end\"],\r\n\t\tdisplayIndex;\r\n\r\n\r\n\t\tif(typeof handler === \"function\"){\r\n\t\t\tindex = this.dataPipeline.findIndex((item) => {\r\n\t\t\t\treturn item.handler === handler;\r\n\t\t\t});\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tstage = \"dataPipeline\";\r\n\r\n\t\t\t\tif(skipStage){\r\n\t\t\t\t\tif(index == this.dataPipeline.length - 1){\r\n\t\t\t\t\t\tstage = \"display\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindex = this.displayPipeline.findIndex((item) => {\r\n\t\t\t\t\treturn item.handler === handler;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tstage = \"displayPipeline\";\r\n\r\n\t\t\t\t\tif(skipStage){\r\n\t\t\t\t\t\tif(index == this.displayPipeline.length - 1){\r\n\t\t\t\t\t\t\tstage = \"end\";\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.error(\"Unable to refresh data, invalid handler provided\", handler)\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tstage = handler || \"all\";\r\n\t\t\tindex = 0;\r\n\t\t}\r\n\r\n\t\tif(this.redrawBlock){\r\n\t\t\tif(!this.redrawBlockRestoreConfig || (this.redrawBlockRestoreConfig && ((this.redrawBlockRestoreConfig.stage === stage && index < this.redrawBlockRestoreConfig.index) || (cascadeOrder.indexOf(stage) < cascadeOrder.indexOf(this.redrawBlockRestoreConfig.stage))))){\r\n\t\t\t\tthis.redrawBlockRestoreConfig = {\r\n\t\t\t\t\thandler: handler,\r\n\t\t\t\t\tskipStage: skipStage,\r\n\t\t\t\t\trenderInPosition: renderInPosition,\r\n\t\t\t\t\tstage:stage,\r\n\t\t\t\t\tindex:index,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\tthis.dispatch(\"data-refeshing\");\r\n\r\n\t\t\tif(!handler){\r\n\t\t\t\tthis.activeRowsPipeline[0] = this.rows.slice(0);\r\n\t\t\t}\r\n\r\n\t\t\t//cascade through data refresh stages\r\n\t\t\tswitch(stage){\r\n\t\t\t\tcase \"all\":\r\n\t\t\t\t//handle case where alldata needs refreshing\r\n\r\n\t\t\t\tcase \"dataPipeline\":\r\n\r\n\t\t\t\tfor(let i = index; i < this.dataPipeline.length; i++){\r\n\t\t\t\t\tlet result = this.dataPipeline[i].handler(this.activeRowsPipeline[i].slice(0));\r\n\r\n\t\t\t\t\tthis.activeRowsPipeline[i + 1] = result || this.activeRowsPipeline[i].slice(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setActiveRows(this.activeRowsPipeline[this.dataPipeline.length]);\r\n\r\n\t\t\t\tthis.regenerateRowNumbers();\r\n\r\n\t\t\t\tcase \"display\":\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tthis.resetDisplayRows();\r\n\r\n\t\t\t\tcase \"displayPipeline\":\r\n\t\t\t\tfor(let i = index; i < this.displayPipeline.length; i++){\r\n\t\t\t\t\tlet result = this.displayPipeline[i].handler((i ? this.getDisplayRows(i - 1) : this.activeRows).slice(0), renderInPosition);\r\n\r\n\t\t\t\t\tthis.setDisplayRows(result || this.getDisplayRows(i - 1).slice(0), i);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\t//case to handle scenario when trying to skip past end stage\r\n\t\t\t}\r\n\r\n\t\t\tif(Helpers.elVisible(this.element)){\r\n\t\t\t\tif(renderInPosition){\r\n\t\t\t\t\tthis.reRenderInPosition();\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tif(!handler){\r\n\t\t\t\t\t\tthis.table.columnManager.renderer.renderColumns();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.renderTable();\r\n\r\n\t\t\t\t\tif(table.options.layoutColumnsOnNewData){\r\n\t\t\t\t\t\tthis.table.columnManager.redraw(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"data-refeshed\");\r\n\t\t}\r\n\t}\r\n\r\n\t//regenerate row numbers for row number formatter if in use\r\n\tregenerateRowNumbers(){\r\n\t\tif(this.rowNumColumn){\r\n\t\t\tthis.activeRows.forEach((row) => {\r\n\t\t\t\tvar cell = row.getCell(this.rowNumColumn);\r\n\r\n\t\t\t\tif(cell){\r\n\t\t\t\t\tcell._generateContents();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tsetActiveRows(activeRows){\r\n\t\tthis.activeRows = activeRows;\r\n\t\tthis.activeRowsCount = this.activeRows.length;\r\n\t}\r\n\r\n\t//reset display rows array\r\n\tresetDisplayRows(){\r\n\t\tthis.displayRows = [];\r\n\r\n\t\tthis.displayRows.push(this.activeRows.slice(0));\r\n\r\n\t\tthis.displayRowsCount = this.displayRows[0].length;\r\n\t}\r\n\r\n\tgetNextDisplayIndex(){\r\n\t\treturn this.displayRows.length;\r\n\t}\r\n\r\n\t//set display row pipeline data\r\n\tsetDisplayRows(displayRows, index){\r\n\r\n\t\tvar output = true;\r\n\r\n\t\tif(index && typeof this.displayRows[index] != \"undefined\"){\r\n\t\t\tthis.displayRows[index] = displayRows;\r\n\t\t\toutput = true;\r\n\t\t}else{\r\n\t\t\tthis.displayRows.push(displayRows)\r\n\t\t\toutput = index = this.displayRows.length -1;\r\n\t\t}\r\n\r\n\t\tif(index == this.displayRows.length -1){\r\n\t\t\tthis.displayRowsCount = this.displayRows[this.displayRows.length -1].length;\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetDisplayRows(index){\r\n\t\tif(typeof index == \"undefined\"){\r\n\t\t\treturn this.displayRows.length ? this.displayRows[this.displayRows.length -1] : [];\r\n\t\t}else{\r\n\t\t\treturn this.displayRows[index] || [];\r\n\t\t}\r\n\t}\r\n\r\n\tgetVisibleRows(chain, viewable){\r\n\t\tvar rows =  Object.assign([], this.renderer.visibleRows(!viewable));\r\n\r\n\t\tif(chain){\r\n\t\t\trows = this.chain(\"rows-visible\", [viewable], rows, rows);\r\n\t\t}\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\t//repeat action accross display rows\r\n\tdisplayRowIterator(callback){\r\n\t\tthis.activeRowsPipeline.forEach(callback);\r\n\t\tthis.displayRows.forEach(callback);\r\n\r\n\t\tthis.displayRowsCount = this.displayRows[this.displayRows.length -1].length;\r\n\t}\r\n\r\n\t//return only actual rows (not group headers etc)\r\n\tgetRows(type){\r\n\t\tvar rows;\r\n\r\n\t\tswitch(type){\r\n\t\t\tcase \"active\":\r\n\t\t\trows = this.activeRows;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"display\":\r\n\t\t\trows = this.table.rowManager.getDisplayRows();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"visible\":\r\n\t\t\trows = this.getVisibleRows(true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\trows = this.chain(\"rows-retrieve\", type, null, this.rows) || this.rows;\r\n\t\t}\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\t///////////////// Table Rendering /////////////////\r\n\t//trigger rerender of table in current position\r\n\treRenderInPosition(callback){\r\n\t\tif(this.redrawBlock){\r\n\t\t\tif(callback){\r\n\t\t\t\tcallback();\r\n\t\t\t}else{\r\n\t\t\t\tthis.redrawBlockRederInPosition = true;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.renderer.rerenderRows(callback);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRenderer(){\r\n\t\tvar renderClass;\r\n\r\n\t\tvar renderers = {\r\n\t\t\t\"virtual\": RendererVirtualDomVertical,\r\n\t\t\t\"basic\": RendererBasicVertical,\r\n\t\t};\r\n\r\n\t\tif(typeof this.table.options.renderVertical === \"string\"){\r\n\t\t\trenderClass = renderers[this.table.options.renderVertical];\r\n\t\t}else{\r\n\t\t\trenderClass = this.table.options.renderVertical;\r\n\t\t}\r\n\r\n\t\tif(renderClass){\r\n\t\t\tthis.renderer = new renderClass(this.table, this.element, this.tableElement);\r\n\t\t\tthis.renderer.initialize();\r\n\r\n\t\t\tif((this.table.element.clientHeight || this.table.options.height)){\r\n\t\t\t\tthis.fixedHeight = true;\r\n\t\t\t}else{\r\n\t\t\t\tthis.fixedHeight = false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Unable to find matching renderer:\", table.options.renderVertical);\r\n\t\t}\r\n\t}\r\n\r\n\tgetRenderMode(){\r\n\t\treturn this.renderMode;\r\n\t}\r\n\r\n\trenderTable(){\r\n\t\tthis.dispatchExternal(\"renderStarted\");\r\n\r\n\t\tthis.element.scrollTop = 0;\r\n\r\n\t\tthis._clearTable();\r\n\r\n\t\tif(this.displayRowsCount){\r\n\t\t\tthis.renderer.renderRows();\r\n\r\n\t\t\tif(this.firstRender){\r\n\t\t\t\tthis.firstRender = false;\r\n\t\t\t\tthis.layoutRefresh();\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.renderEmptyScroll();\r\n\t\t}\r\n\r\n\t\tif(!this.fixedHeight){\r\n\t\t\tthis.adjustTableSize();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"table-layout\");\r\n\r\n\t\tif(!this.displayRowsCount){\r\n\t\t\tthis._showPlaceholder();\r\n\t\t}\r\n\r\n\t\tthis.dispatchExternal(\"renderComplete\");\r\n\t}\r\n\r\n\t//show scrollbars on empty table div\r\n\trenderEmptyScroll(){\r\n\t\tif(this.table.options.placeholder){\r\n\t\t\tthis.tableElement.style.display = \"none\";\r\n\t\t}else{\r\n\t\t\tthis.tableElement.style.minWidth = this.table.columnManager.getWidth() + \"px\";\r\n\t\t\t// this.tableElement.style.minHeight = \"1px\";\r\n\t\t\t// this.tableElement.style.visibility = \"hidden\";\r\n\t\t}\r\n\t}\r\n\r\n\t_clearTable(){\r\n\t\tvar element = this.tableElement;\r\n\r\n\t\tthis._clearPlaceholder();\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.renderer.clearRows();\r\n\t}\r\n\r\n\t_showPlaceholder(){\r\n\t\tif(this.table.options.placeholder){\r\n\r\n\t\t\tthis.table.options.placeholder.setAttribute(\"tabulator-render-mode\", this.renderMode);\r\n\r\n\t\t\tthis.getElement().appendChild(this.table.options.placeholder);\r\n\t\t\tthis.table.options.placeholder.style.width = this.table.columnManager.getWidth() + \"px\";\r\n\t\t}\r\n\t}\r\n\r\n\t_clearPlaceholder(){\r\n\t\tif(this.table.options.placeholder && this.table.options.placeholder.parentNode){\r\n\t\t\tthis.table.options.placeholder.parentNode.removeChild(this.table.options.placeholder);\r\n\t\t}\r\n\t}\r\n\r\n\tstyleRow(row, index){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tif(index % 2){\r\n\t\t\trowEl.classList.add(\"tabulator-row-even\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-odd\");\r\n\t\t}else{\r\n\t\t\trowEl.classList.add(\"tabulator-row-odd\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-even\");\r\n\t\t}\r\n\t}\r\n\r\n\t//normalize height of active rows\r\n\tnormalizeHeight(){\r\n\t\tthis.activeRows.forEach(function(row){\r\n\t\t\trow.normalizeHeight();\r\n\t\t});\r\n\t}\r\n\r\n\t//adjust the height of the table holder to fit in the Tabulator element\r\n\tadjustTableSize(){\r\n\t\tvar initialHeight = this.element.clientHeight,\r\n\t\tmodExists;\r\n\r\n\t\tif(this.renderer.verticalFillMode === \"fill\"){\r\n\t\t\tlet otherHeight =  Math.floor(this.table.columnManager.getElement().getBoundingClientRect().height + (this.table.footerManager && this.table.footerManager.active && !this.table.footerManager.external ? this.table.footerManager.getElement().getBoundingClientRect().height : 0));\r\n\r\n\t\t\tif(this.fixedHeight){\r\n\t\t\t\tthis.element.style.minHeight = \"calc(100% - \" + otherHeight + \"px)\";\r\n\t\t\t\tthis.element.style.height = \"calc(100% - \" + otherHeight + \"px)\";\r\n\t\t\t\tthis.element.style.maxHeight = \"calc(100% - \" + otherHeight + \"px)\";\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.style.height = \"\";\r\n\t\t\t\tthis.element.style.height = (this.table.element.clientHeight - otherHeight) + \"px\";\r\n\t\t\t\tthis.element.scrollTop = this.scrollTop;\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderer.resize();\r\n\r\n\t\t\t//check if the table has changed size when dealing with variable height tables\r\n\t\t\tif(!this.fixedHeight && initialHeight != this.element.clientHeight){\r\n\t\t\t\tif(this.subscribed(\"table-resize\")){\r\n\t\t\t\t\tthis.dispatch(\"table-resize\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//renitialize all rows\r\n\treinitialize(){\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\trow.reinitialize(true);\r\n\t\t});\r\n\t}\r\n\r\n\t//prevent table from being redrawn\r\n\tblockRedraw (){\r\n\t\tthis.redrawBlock = true;\r\n\t\tthis.redrawBlockRestoreConfig = false;\r\n\t}\r\n\r\n\t//restore table redrawing\r\n\trestoreRedraw (){\r\n\t\tthis.redrawBlock = false;\r\n\r\n\t\tif(this.redrawBlockRestoreConfig){\r\n\t\t\tthis.refreshActiveData(this.redrawBlockRestoreConfig.handler, this.redrawBlockRestoreConfig.skipStage, this.redrawBlockRestoreConfig.renderInPosition)\r\n\r\n\t\t\tthis.redrawBlockRestoreConfig = false;\r\n\t\t}else{\r\n\t\t\tif(this.redrawBlockRederInPosition){\r\n\t\t\t\tthis.reRenderInPosition();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.redrawBlockRederInPosition = false;\r\n\t}\r\n\r\n\t//redraw table\r\n\tredraw (force){\r\n\t\tvar pos = 0,\r\n\t\tleft = this.scrollLeft;\r\n\r\n\t\tthis.adjustTableSize();\r\n\r\n\t\tthis.table.tableWidth = this.table.element.clientWidth;\r\n\r\n\t\tif(!force){\r\n\t\t\tthis.reRenderInPosition();\r\n\t\t\tthis.scrollHorizontal(left);\r\n\r\n\t\t\tif(!this.displayRowsCount){\r\n\t\t\t\tif(this.table.options.placeholder){\r\n\t\t\t\t\tthis.getElement().appendChild(this.table.options.placeholder);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.renderTable();\r\n\t\t}\r\n\t}\r\n\r\n\tresetScroll(){\r\n\t\tthis.element.scrollLeft = 0;\r\n\t\tthis.element.scrollTop = 0;\r\n\r\n\t\tif(this.table.browser === \"ie\"){\r\n\t\t\tvar event = document.createEvent(\"Event\");\r\n\t\t\tevent.initEvent(\"scroll\", false, true);\r\n\t\t\tthis.element.dispatchEvent(event);\r\n\t\t}else{\r\n\t\t\tthis.element.dispatchEvent(new Event('scroll'));\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\n\r\nexport default class FooterManager extends CoreFeature{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.active = false;\r\n\t\tthis.element = this.createElement(); //containing element\r\n\t\tthis.external = false;\r\n\t\tthis.links = [];\r\n\r\n\t\tthis.initializeElement();\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeElement();\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-footer\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tinitializeElement(){\r\n\t\tif(this.table.options.footerElement){\r\n\r\n\t\t\tswitch(typeof this.table.options.footerElement){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(this.table.options.footerElement[0] === \"<\"){\r\n\t\t\t\t\tthis.element.innerHTML = this.table.options.footerElement;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.external = true;\r\n\t\t\t\t\tthis.element = document.querySelector(this.table.options.footerElement);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tthis.element = this.table.options.footerElement;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tappend(element, parent){\r\n\t\tthis.activate(parent);\r\n\r\n\t\tthis.element.appendChild(element);\r\n\t\tthis.table.rowManager.adjustTableSize();\r\n\t}\r\n\r\n\tprepend(element, parent){\r\n\t\tthis.activate(parent);\r\n\r\n\t\tthis.element.insertBefore(element, this.element.firstChild);\r\n\t\tthis.table.rowManager.adjustTableSize();\r\n\t}\r\n\r\n\tremove(element){\r\n\t\telement.parentNode.removeChild(element);\r\n\t\tthis.deactivate();\r\n\t}\r\n\r\n\tdeactivate(force){\r\n\t\tif(!this.element.firstChild || force){\r\n\t\t\tif(!this.external){\r\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\t}\r\n\t\t\tthis.active = false;\r\n\t\t}\r\n\t}\r\n\r\n\tactivate(parent){\r\n\t\tif(!this.active){\r\n\t\t\tthis.active = true;\r\n\t\t\tif(!this.external){\r\n\t\t\t\tthis.table.element.appendChild(this.getElement());\r\n\t\t\t\tthis.table.element.style.display = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(parent){\r\n\t\t\tthis.links.push(parent);\r\n\t\t}\r\n\t}\r\n\r\n\tredraw(){\r\n\t\tthis.links.forEach(function(link){\r\n\t\t\tlink.footerRedraw();\r\n\t\t});\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport Helpers from './Helpers.js';\r\n\r\nexport default class InteractionManager extends CoreFeature {\r\n\t\r\n\tconstructor (table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.el = null;\r\n\t\t\r\n\t\tthis.abortClasses = [\"tabulator-headers\", \"tabulator-table\"];\r\n\t\t\r\n\t\tthis.previousTargets = {};\r\n\t\t\r\n\t\tthis.listeners = [\r\n\t\t\t\"click\",\r\n\t\t\t\"dblclick\",\r\n\t\t\t\"contextmenu\",\r\n\t\t\t\"mouseenter\",\r\n\t\t\t\"mouseleave\",\r\n\t\t\t\"mouseover\",\r\n\t\t\t\"mouseout\",\r\n\t\t\t\"mousemove\",\r\n\t\t\t\"touchstart\",\r\n\t\t\t\"touchend\",\r\n\t\t];\r\n\t\t\r\n\t\tthis.componentMap = {\r\n\t\t\t\"tabulator-cell\":\"cell\",\r\n\t\t\t\"tabulator-row\":\"row\",\r\n\t\t\t\"tabulator-group\":\"group\",\r\n\t\t\t\"tabulator-col\":\"column\",\r\n\t\t};\r\n\r\n\t\tthis.pseudoTrackers = {\r\n\t\t\t\"row\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t\t\"cell\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t\t\"group\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t\t\"column\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tthis.pseudoTracking = false;\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.el = this.table.element;\r\n\t\tthis.buildListenerMap();\r\n\t\tthis.bindSubscriptionWatchers();\r\n\t}\r\n\t\r\n\tbuildListenerMap(){\r\n\t\tvar listenerMap = {};\r\n\t\t\r\n\t\tthis.listeners.forEach((listener) => {\r\n\t\t\tlistenerMap[listener] = {\r\n\t\t\t\thandler:null,\r\n\t\t\t\tcomponents:[],\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\tthis.listeners = listenerMap;\r\n\t}\r\n\r\n\tbindPseudoEvents(){\r\n\t\tObject.keys(this.pseudoTrackers).forEach((key) => {\r\n\t\t\tthis.pseudoTrackers[key].subscriber = this.pseudoMouseEnter.bind(this, key);\r\n\t\t\tthis.subscribe(key + \"-mouseover\", this.pseudoTrackers[key].subscriber);\r\n\t\t});\r\n\r\n\t\tthis.pseudoTracking = true;\r\n\t}\r\n\r\n\tpseudoMouseEnter(key, e, target){\r\n\t\tif(this.pseudoTrackers[key].target !== target){\r\n\t\t\t\r\n\t\t\tif(this.pseudoTrackers[key].target){\r\n\t\t\t\tthis.dispatch(key + \"-mouseleave\", e, target);\r\n\t\t\t}\r\n\r\n\t\t\tthis.pseudoMouseLeave(key, e);\r\n\r\n\t\t\tthis.pseudoTrackers[key].target = target;\r\n\r\n\t\t\tthis.dispatch(key + \"-mouseenter\", e, target);\r\n\t\t}\r\n\t}\r\n\r\n\tpseudoMouseLeave(key, e){\r\n\t\tvar leaveList = Object.keys(this.pseudoTrackers),\r\n\t\tlinkedKeys = {\r\n\t\t\t\"row\":[\"cell\"],\r\n\t\t\t\"cell\":[\"row\"],\r\n\t\t};\r\n\r\n\t\tleaveList = leaveList.filter((item) => {\r\n\t\t\tvar links = linkedKeys[key];\r\n\t\t\treturn item !== key && (!links || (links && !links.includes(item)));\r\n\t\t});\r\n\r\n\t\r\n\t\tleaveList.forEach((key) => {\r\n\t\t\tvar target = this.pseudoTrackers[key].target;\r\n\r\n\t\t\tif(this.pseudoTrackers[key].target){\r\n\t\t\t\tthis.dispatch(key + \"-mouseleave\", e, target);\r\n\r\n\t\t\t\tthis.pseudoTrackers[key].target = null;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\tbindSubscriptionWatchers(){\r\n\t\tvar listeners = Object.keys(this.listeners),\r\n\t\tcomponents = Object.values(this.componentMap);\r\n\t\t\r\n\t\tfor(let comp of components){\r\n\t\t\tfor(let listener of listeners){\r\n\t\t\t\tlet key = comp + \"-\" + listener;\r\n\t\t\t\t\r\n\t\t\t\tthis.subscriptionChange(key, this.subscriptionChanged.bind(this, comp, listener));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.subscribe(\"table-destroy\", this.clearWatchers.bind(this))\r\n\t}\r\n\t\r\n\tsubscriptionChanged(component, key, added){\r\n\t\tvar listener = this.listeners[key].components,\r\n\t\tindex = listener.indexOf(component),\r\n\t\tchanged = false;\r\n\r\n\t\tif(added){\r\n\t\t\tif(index === -1){\r\n\t\t\t\tlistener.push(component);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!this.subscribed(component + \"-\" + key)){\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tlistener.splice(index, 1);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif((key === \"mouseenter\" || key === \"mouseleave\") && !this.pseudoTracking){\r\n\t\t\tthis.bindPseudoEvents();\r\n\t\t}\r\n\t\t\r\n\t\tif(changed){\r\n\t\t\tthis.updateEventListeners();\r\n\t\t}\r\n\t}\r\n\t\r\n\tupdateEventListeners(){\r\n\t\tfor(let key in this.listeners){\r\n\t\t\tlet listener = this.listeners[key];\r\n\t\t\t\r\n\t\t\tif(listener.components.length){\r\n\t\t\t\tif(!listener.handler){\r\n\t\t\t\t\tlistener.handler = this.track.bind(this, key);\r\n\t\t\t\t\tthis.el.addEventListener(key, listener.handler)\r\n\t\t\t\t\t// this.el.addEventListener(key, listener.handler, {passive: true})\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(listener.handler){\r\n\t\t\t\t\tthis.el.removeEventListener(key, listener.handler)\r\n\t\t\t\t\tlistener.handler = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\ttrack(type, e){\r\n\t\tvar path = (e.composedPath && e.composedPath()) || e.path;\r\n\t\t\r\n\t\tvar targets = this.findTargets(path);\r\n\t\ttargets = this.bindComponents(type, targets);\r\n\r\n\t\tthis.triggerEvents(type, e, targets);\r\n\r\n\t\tif(this.pseudoTracking && (type == \"mouseover\" || type == \"mouseleave\") && !Object.keys(targets).length){\r\n\t\t\tthis.pseudoMouseLeave(\"none\", e);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfindTargets(path){\r\n\t\tvar targets = {};\r\n\t\t\r\n\t\tlet componentMap = Object.keys(this.componentMap);\r\n\t\t\r\n\t\tfor (let el of path) {\r\n\t\t\tlet classList = el.classList ? [...el.classList] : [];\r\n\t\t\t\r\n\t\t\tlet abort = classList.filter((item) => {\r\n\t\t\t\treturn this.abortClasses.includes(item);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tif(abort.length){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet elTargets = classList.filter((item) => {\r\n\t\t\t\treturn componentMap.includes(item);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tfor (let target of elTargets) {\r\n\t\t\t\ttargets[this.componentMap[target]] = el;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(targets.group && targets.group === targets.row){\r\n\t\t\tdelete targets.row;\r\n\t\t}\r\n\t\t\r\n\t\treturn targets;\r\n\t}\r\n\t\r\n\tbindComponents(type, targets){\r\n\t\t//ensure row component is looked up before cell\r\n\t\tvar keys = Object.keys(targets).reverse(),\r\n\t\tlistener = this.listeners[type],\r\n\t\ttargetMatches = {};\r\n\t\t\r\n\t\tfor(let key of keys){\r\n\t\t\tlet component;\r\n\t\t\tlet target = targets[key];\r\n\t\t\tlet previousTarget = this.previousTargets[key];\r\n\t\t\t\r\n\t\t\tif(previousTarget && previousTarget.target === target){\r\n\t\t\t\tcomponent = previousTarget.component;\r\n\t\t\t}else{\r\n\t\t\t\tswitch(key){\r\n\t\t\t\t\tcase \"row\":\r\n\t\t\t\t\tcase \"group\":\r\n\t\t\t\t\tif(listener.components.includes(\"row\") || listener.components.includes(\"cell\")){\r\n\t\t\t\t\t\tlet rows = this.table.rowManager.getVisibleRows(true);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcomponent = rows.find((row) => {\r\n\t\t\t\t\t\t\treturn row.getElement() === target;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase \"column\":\r\n\t\t\t\t\tif(listener.components.includes(\"column\")){\r\n\t\t\t\t\t\tcomponent = this.table.columnManager.findColumn(target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase \"cell\":\r\n\t\t\t\t\tif(listener.components.includes(\"cell\")){\r\n\t\t\t\t\t\tcomponent = targets[\"row\"].findCell(target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(component){\r\n\t\t\t\ttargets[key] = component;\r\n\t\t\t\ttargetMatches[key] = {\r\n\t\t\t\t\ttarget:target,\r\n\t\t\t\t\tcomponent:component,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.previousTargets = targetMatches;\r\n\t\t\r\n\t\treturn targets;\r\n\t}\r\n\t\r\n\ttriggerEvents(type, e, targets){\r\n\t\tvar listener = this.listeners[type];\r\n\t\t\r\n\t\tfor(let key in targets){\r\n\t\t\tif(targets[key] && listener.components.includes(key)){\r\n\t\t\t\tthis.dispatch(key + \"-\" + type, e, targets[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tclearWatchers(){\r\n\t\tfor(let key in this.listeners){\r\n\t\t\tlet listener = this.listeners[key];\r\n\t\t\r\n\t\t\tif(listener.handler){\r\n\t\t\t\tthis.el.removeEventListener(key, listener.handler)\r\n\t\t\t\tlistener.handler = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","export default class ComponentFunctionBinder{\r\n\r\n\tconstructor(table){\r\n\t\tthis.table = table;\r\n\r\n\t\tthis.bindings = {};\r\n\t}\r\n\r\n\tbind(type, funcName, handler){\r\n\t\tif(!this.bindings[type]){\r\n\t\t\tthis.bindings[type] = {};\r\n\t\t}\r\n\r\n\t\tif(this.bindings[type][funcName]){\r\n\t\t\tconsole.warn(\"Unable to bind component handler, a matching function name is already bound\", type, funcName, hanlder)\r\n\t\t}else{\r\n\t\t\tthis.bindings[type][funcName] = handler;\r\n\t\t}\r\n\t}\r\n\r\n\thandle(type, component, name){\r\n\t\tif(this.bindings[type] && this.bindings[type][name]){\r\n\t\t\treturn this.bindings[type][name].bind(null, component);\r\n\t\t}else{\r\n\t\t\tif(name !== \"then\" && typeof name === \"string\" && !name.startsWith(\"_\")){\r\n\t\t\t\t\tconsole.error(\"The \" + type + \" component does not have a \" + name + \" function, have you checked that you have the correct Tabulator module installed?\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\n\r\nexport default class DataLoader extends CoreFeature{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.loaderElement = this.createLoaderElement(); //loader message div\r\n\t\tthis.msgElement = this.createMsgElement(); //message element\r\n\t\tthis.loadingElement = null;\r\n\t\tthis.errorElement = null;\r\n\r\n\t\tthis.requestOrder = 0; //prevent requests comming out of sequence if overridden by another load request\r\n\t\tthis.loading = false;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tvar template;\r\n\r\n\t\tthis.loaderElement.appendChild(this.msgElement);\r\n\r\n\t\tif(this.table.options.dataLoaderLoading){\r\n\t\t\tif(typeof this.table.options.dataLoaderLoading == \"string\"){\r\n\t\t\t\ttemplate = document.createElement('template');\r\n\t\t\t\ttemplate.innerHTML = this.table.options.dataLoaderLoading.trim();\r\n\t\t\t\tthis.loadingElement = template.firstElementChild;\r\n\t\t\t}else{\r\n\t\t\t\tthis.loadingElement = this.table.options.dataLoaderLoading;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.table.options.dataLoaderError){\r\n\t\t\tif(typeof this.table.options.dataLoaderError == \"string\"){\r\n\t\t\t\ttemplate = document.createElement('template');\r\n\t\t\t\ttemplate.innerHTML = this.table.options.dataLoaderError.trim();\r\n\t\t\t\tthis.errorElement = template.firstElementChild;\r\n\t\t\t}else{\r\n\t\t\t\tthis.errorElement = this.table.options.dataLoaderError;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcreateLoaderElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\tel.classList.add(\"tabulator-loader\");\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateMsgElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-loader-msg\");\r\n\t\tel.setAttribute(\"role\", \"alert\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tload(data, params, config, replace, silent){\r\n\t\tvar requestNo = ++this.requestOrder;\r\n\r\n\t\tthis.dispatchExternal(\"dataLoading\", data);\r\n\r\n\t\t//parse json data to array\r\n\t\tif (data && (data.indexOf(\"{\") == 0 || data.indexOf(\"[\") == 0)){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(this.confirm(\"data-loading\", [data, params, config, silent])){\r\n\t\t\tthis.loading = true;\r\n\r\n\t\t\tif(!silent){\r\n\t\t\t\tthis.showLoader();\r\n\t\t\t}\r\n\r\n\t\t\t//get params for request\r\n\t\t\tparams = this.chain(\"data-params\", [data, config, silent], params || {}, params || {});\r\n\r\n\t\t\tparams = this.mapParams(params, this.table.options.dataSendParams);\r\n\r\n\t\t\tvar result = this.chain(\"data-load\", [data, params, config, silent], Promise.resolve([]));\r\n\r\n\t\t\treturn result.then((response) => {\r\n\t\t\t\tif(!Array.isArray(response) && typeof response == \"object\"){\r\n\t\t\t\t\tresponse = this.mapParams(response, this.objectInvert(this.table.options.dataReceiveParams));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar rowData = this.chain(\"data-loaded\", response, null, response);\r\n\r\n\t\t\t\tif(requestNo == this.requestOrder){\r\n\t\t\t\t\tthis.hideLoader();\r\n\r\n\t\t\t\t\tif(rowData !== false){\r\n\t\t\t\t\t\tthis.dispatchExternal(\"dataLoaded\", rowData);\r\n\t\t\t\t\t\tthis.table.rowManager.setData(rowData,  replace, !replace);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Data Load Response Blocked - An active data load request was blocked by an attempt to change table data while the request was being made\");\r\n\t\t\t\t}\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tconsole.error(\"Data Load Error: \", error);\r\n\t\t\t\tthis.dispatchExternal(\"dataLoadError\", error);\r\n\r\n\t\t\t\tif(!silent){\r\n\t\t\t\t\tthis.showError();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.hideLoader();\r\n\t\t\t\t}, 3000);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tthis.dispatchExternal(\"dataLoaded\", data);\r\n\r\n\t\t\tif(!data){\r\n\t\t\t\tdata = [];\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.rowManager.setData(data, replace, !replace);\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t}\r\n\r\n\tmapParams(params, map){\r\n\t\tvar output = {};\r\n\r\n\t\tfor(let key in params){\r\n\t\t\toutput[map.hasOwnProperty(key) ? map[key] : key] = params[key];\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tobjectInvert(obj){\r\n\t\tvar output = {};\r\n\r\n\t\tfor(let key in obj){\r\n\t\t\toutput[obj[key]] = key;\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tblockActiveLoad(){\r\n\t\tthis.requestOrder++;\r\n\t}\r\n\r\n\tshowLoader(){\r\n\t\tvar shouldLoad = typeof this.table.options.dataLoader === \"function\" ? this.table.options.dataLoader() : this.table.options.dataLoader;\r\n\r\n\t\tif(shouldLoad){\r\n\t\t\tthis.hideLoader();\r\n\r\n\t\t\twhile(this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\r\n\r\n\t\t\tthis.msgElement.classList.remove(\"tabulator-error\");\r\n\t\t\tthis.msgElement.classList.add(\"tabulator-loading\");\r\n\r\n\t\t\tif(this.loadingElement){\r\n\t\t\t\tthis.msgElement.appendChild(this.loadingElement);\r\n\t\t\t}else{\r\n\t\t\t\tthis.msgElement.innerHTML = this.langText(\"data|loading\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.element.appendChild(this.loaderElement);\r\n\t\t}\r\n\t}\r\n\r\n\tshowError(){\r\n\t\tthis.hideLoader();\r\n\r\n\t\twhile(this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\r\n\t\tthis.msgElement.classList.remove(\"tabulator-loading\");\r\n\t\tthis.msgElement.classList.add(\"tabulator-error\");\r\n\r\n\t\tif(this.errorElement){\r\n\t\t\tthis.msgElement.appendChild(this.errorElement);\r\n\t\t}else{\r\n\t\t\tthis.msgElement.innerHTML = this.langText(\"data|error\");\r\n\t\t}\r\n\r\n\t\tthis.table.element.appendChild(this.loaderElement);\r\n\t}\r\n\r\n\r\n\thideLoader(){\r\n\t\tif(this.loaderElement.parentNode){\r\n\t\t\tthis.loaderElement.parentNode.removeChild(this.loaderElement);\r\n\t\t}\r\n\t}\r\n}","export default class ExternalEventBus {\r\n\r\n\tconstructor(table, optionsList, debug){\r\n\t\tthis.table = table;\r\n\t\tthis.events = {};\r\n\t\tthis.optionsList = optionsList || {};\r\n\t\tthis.subscriptionNotifiers = {};\r\n\r\n\t\tthis.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\r\n\t\tthis.debug = debug;\r\n\t}\r\n\r\n\tsubscriptionChange(key, callback){\r\n\t\tif(!this.subscriptionNotifiers[key]){\r\n\t\t\tthis.subscriptionNotifiers[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.subscriptionNotifiers[key].push(callback);\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis._notifiySubscriptionChange(key, true);\r\n\t\t}\r\n\t}\r\n\r\n\tsubscribe(key, callback){\r\n\t\tif(!this.events[key]){\r\n\t\t\tthis.events[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.events[key].push(callback);\r\n\r\n\t\tthis._notifiySubscriptionChange(key, true);\r\n\t}\r\n\r\n\tunsubscribe(key, callback){\r\n\t\tvar index;\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tif(callback){\r\n\t\t\t\tindex = this.events[key].findIndex((item) => {\r\n\t\t\t\t\treturn item === callback;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tthis.events[key].splice(index, 1);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Cannot remove event, no matching event found:\", key, callback);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tdelete this.events[key];\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Cannot remove event, no events set on:\", key);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._notifiySubscriptionChange(key, false);\r\n\t}\r\n\r\n\tsubscribed(key){\r\n\t\treturn this.events[key] && this.events[key].length;\r\n\t}\r\n\r\n\t_notifiySubscriptionChange(key, subscribed){\r\n\t\tvar notifiers = this.subscriptionNotifiers[key];\r\n\r\n\t\tif(notifiers){\r\n\t\t\tnotifiers.forEach((callback)=>{\r\n\t\t\t\tcallback(subscribed);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_dispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args.shift(),\r\n\t\tresult;\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tthis.events[key].forEach((callback, i) => {\r\n\t\t\t\tlet callResult = callback.apply(this.table, args);\r\n\r\n\t\t\t\tif(!i){\r\n\t\t\t\t\tresult = callResult;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t_debugDispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"ExternalEvent:\" + args[0];\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._dispatch(...arguments)\r\n\t}\r\n}","export default class InternalEventBus {\r\n\r\n\tconstructor(debug){\r\n\t\tthis.events = {};\r\n\t\tthis.subscriptionNotifiers = {};\r\n\r\n\t\tthis.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\r\n\t\tthis.chain = debug ? this._debugChain.bind(this) : this._chain.bind(this);\r\n\t\tthis.confirm = debug ? this._debugConfirm.bind(this) : this._confirm.bind(this);\r\n\t\tthis.debug = debug;\r\n\t}\r\n\r\n\tsubscriptionChange(key, callback){\r\n\t\tif(!this.subscriptionNotifiers[key]){\r\n\t\t\tthis.subscriptionNotifiers[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.subscriptionNotifiers[key].push(callback);\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis._notifiySubscriptionChange(key, true);\r\n\t\t}\r\n\t}\r\n\r\n\tsubscribe(key, callback, priority = 10000){\r\n\t\tif(!this.events[key]){\r\n\t\t\tthis.events[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.events[key].push({callback, priority});\r\n\r\n\t\tthis.events[key].sort((a, b) => {\r\n\t\t\treturn a.priority - b.priority;\r\n\t\t});\r\n\r\n\t\tthis._notifiySubscriptionChange(key, true);\r\n\t}\r\n\r\n\tunsubscribe(key, callback){\r\n\t\tvar index;\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tif(callback){\r\n\t\t\t\tindex = this.events[key].findIndex((item) => {\r\n\t\t\t\t\treturn item.callback === callback;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tthis.events[key].splice(index, 1);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Cannot remove event, no matching event found:\", key, callback);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Cannot remove event, no events set on:\", key);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._notifiySubscriptionChange(key, false);\r\n\t}\r\n\r\n\tsubscribed(key){\r\n\t\treturn this.events[key] && this.events[key].length;\r\n\t}\r\n\r\n\t_chain(key, args, initialValue, fallback){\r\n\t\tvar value = initialValue;\r\n\r\n\t\tif(!Array.isArray(args)){\r\n\t\t\targs = [args];\r\n\t\t}\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis.events[key].forEach((subscriber, i) => {\r\n\t\t\t\tvalue = subscriber.callback.apply(this, args.concat([value]));\r\n\t\t\t});\r\n\r\n\t\t\treturn value;\r\n\t\t}else{\r\n\t\t\treturn typeof fallback === \"function\" ? fallback() : fallback;\r\n\t\t}\r\n\t}\r\n\r\n\t_confirm(key, args){\r\n\t\tvar confirmed = false;\r\n\r\n\t\tif(!Array.isArray(args)){\r\n\t\t\targs = [args];\r\n\t\t}\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis.events[key].forEach((subscriber, i) => {\r\n\t\t\t\tif(subscriber.callback.apply(this, args)){\r\n\t\t\t\t\tconfirmed = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn confirmed;\r\n\t}\r\n\r\n\t_notifiySubscriptionChange(key, subscribed){\r\n\t\tvar notifiers = this.subscriptionNotifiers[key];\r\n\r\n\t\tif(notifiers){\r\n\t\t\tnotifiers.forEach((callback)=>{\r\n\t\t\t\tcallback(subscribed);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_dispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args.shift();\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tthis.events[key].forEach((subscriber) => {\r\n\t\t\t\tlet callResult = subscriber.callback.apply(this, args);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_debugDispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"InternalEvent:\" + key;\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._dispatch(...arguments);\r\n\t}\r\n\r\n\t_debugChain(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"InternalEvent:\" + key;\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._chain(...arguments);\r\n\t}\r\n\r\n\t_debugConfirm(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"InternalEvent:\" + key;\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._confirm(...arguments);\r\n\t}\r\n}","import Tabulator from '../Tabulator.js';\r\n\r\nclass TableRegistry {\r\n\r\n\tstatic register(table){\r\n\t\tTableRegistry.tables.push(table);\r\n\t}\r\n\r\n\tstatic deregister(table){\r\n\t\tvar index = TableRegistry.tables.indexOf(table);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tTableRegistry.tables.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic lookupTable(query, silent){\r\n\t\tvar results = [],\r\n\t\tmatches, match;\r\n\r\n\t\tif(typeof query === \"string\"){\r\n\t\t\tmatches = document.querySelectorAll(query);\r\n\r\n\t\t\tif(matches.length){\r\n\t\t\t\tfor(var i = 0; i < matches.length; i++){\r\n\t\t\t\t\tmatch = TableRegistry.matchElement(matches[i]);\r\n\r\n\t\t\t\t\tif(match){\r\n\t\t\t\t\t\tresults.push(match);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}else if((typeof HTMLElement !== \"undefined\" && query instanceof HTMLElement) || query instanceof Tabulator){\r\n\t\t\tmatch = TableRegistry.matchElement(query);\r\n\r\n\t\t\tif(match){\r\n\t\t\t\tresults.push(match);\r\n\t\t\t}\r\n\t\t}else if(Array.isArray(query)){\r\n\t\t\tquery.forEach(function(item){\r\n\t\t\t\tresults = results.concat(TableRegistry.lookupTable(item));\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tif(!silent){\r\n\t\t\t\tconsole.warn(\"Table Connection Error - Invalid Selector\", query);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\tstatic matchElement(element){\r\n\t\treturn TableRegistry.tables.find(function(table){\r\n\t\t\treturn element instanceof Tabulator ? table === element : table.element === element;\r\n\t\t});\r\n\t}\r\n}\r\n\r\nTableRegistry.tables = [];\r\n\r\nexport default TableRegistry;","//resize columns to fit data they contain\r\nexport default function(columns){\r\n\tthis.table.columnManager.renderer.reinitializeColumnWidths(columns);\r\n\r\n\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\tthis.table.modules.responsiveLayout.update();\r\n\t}\r\n};","//resize columns to fit data they contain and stretch row to fill table, also used for fitDataTable\r\nexport default function(columns){\r\n\tcolumns.forEach(function(column){\r\n\t\tcolumn.reinitializeWidth();\r\n\t});\r\n\r\n\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\tthis.table.modules.responsiveLayout.update();\r\n\t}\r\n};","//resize columns to fit data the contain and stretch last column to fill table\r\nexport default function(columns){\r\n\tvar colsWidth = 0,\r\n\ttableWidth = this.table.rowManager.element.clientWidth,\r\n\tgap = 0,\r\n\tlastCol = false;\r\n\r\n\tcolumns.forEach((column, i) => {\r\n\t\tif(!column.widthFixed){\r\n\t\t\tcolumn.reinitializeWidth();\r\n\t\t}\r\n\r\n\t\tif(this.table.options.responsiveLayout ? column.modules.responsive.visible : column.visible){\r\n\t\t\tlastCol = column;\r\n\t\t}\r\n\r\n\t\tif(column.visible){\r\n\t\t\tcolsWidth += column.getWidth();\r\n\t\t}\r\n\t});\r\n\r\n\tif(lastCol){\r\n\t\tgap = tableWidth - colsWidth + lastCol.getWidth();\r\n\r\n\t\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\t\tlastCol.setWidth(0);\r\n\t\t\tthis.table.modules.responsiveLayout.update();\r\n\t\t}\r\n\r\n\t\tif(gap > 0){\r\n\t\t\tlastCol.setWidth(gap);\r\n\t\t}else{\r\n\t\t\tlastCol.reinitializeWidth();\r\n\t\t}\r\n\t}else{\r\n\t\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\t\tthis.table.modules.responsiveLayout.update();\r\n\t\t}\r\n\t}\r\n};","//resize columns to fit\r\nexport default function(columns){\r\n\tvar totalWidth = this.table.element.clientWidth; //table element width\r\n\tvar fixedWidth = 0; //total width of columns with a defined width\r\n\tvar flexWidth = 0; //total width available to flexible columns\r\n\tvar flexGrowUnits = 0; //total number of widthGrow blocks accross all columns\r\n\tvar flexColWidth = 0; //desired width of flexible columns\r\n\tvar flexColumns = []; //array of flexible width columns\r\n\tvar fixedShrinkColumns = []; //array of fixed width columns that can shrink\r\n\tvar flexShrinkUnits = 0; //total number of widthShrink blocks accross all columns\r\n\tvar overflowWidth = 0; //horizontal overflow width\r\n\tvar gapFill=0; //number of pixels to be added to final column to close and half pixel gaps\r\n\r\n\tfunction calcWidth(width){\r\n\t\tvar colWidth;\r\n\r\n\t\tif(typeof(width) == \"string\"){\r\n\t\t\tif(width.indexOf(\"%\") > -1){\r\n\t\t\t\tcolWidth = (totalWidth / 100) * parseInt(width);\r\n\t\t\t}else{\r\n\t\t\t\tcolWidth = parseInt(width);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcolWidth = width;\r\n\t\t}\r\n\r\n\t\treturn colWidth;\r\n\t}\r\n\r\n\t//ensure columns resize to take up the correct amount of space\r\n\tfunction scaleColumns(columns, freeSpace, colWidth, shrinkCols){\r\n\r\n\t\tvar oversizeCols = [],\r\n\t\toversizeSpace = 0,\r\n\t\tremainingSpace = 0,\r\n\t\tnextColWidth = 0,\r\n\t\tremainingFlexGrowUnits = flexGrowUnits,\r\n\t\tgap = 0,\r\n\t\tchangeUnits = 0,\r\n\t\tundersizeCols = [];\r\n\r\n\t\tfunction calcGrow(col){\r\n\t\t\treturn (colWidth * (col.column.definition.widthGrow || 1));\r\n\t\t}\r\n\r\n\t\tfunction calcShrink(col){\r\n\t\t\treturn  (calcWidth(col.width) - (colWidth * (col.column.definition.widthShrink || 0)))\r\n\t\t}\r\n\r\n\t\tcolumns.forEach(function(col, i){\r\n\t\t\tvar width = shrinkCols ? calcShrink(col) : calcGrow(col);\r\n\t\t\tif(col.column.minWidth >= width){\r\n\t\t\t\toversizeCols.push(col);\r\n\t\t\t}else{\r\n\t\t\t\tif(col.column.maxWidth && col.column.maxWidth < width){\r\n\t\t\t\t\tcol.width = col.column.maxWidth;\r\n\t\t\t\t\tfreeSpace -= col.column.maxWidth;\r\n\r\n\t\t\t\t\tremainingFlexGrowUnits -= shrinkCols ? (col.column.definition.widthShrink || 1) : (col.column.definition.widthGrow || 1);\r\n\r\n\t\t\t\t\tif(remainingFlexGrowUnits){\r\n\t\t\t\t\t\tcolWidth = Math.floor(freeSpace/remainingFlexGrowUnits);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tundersizeCols.push(col);\r\n\t\t\t\t\tchangeUnits += shrinkCols ? (col.column.definition.widthShrink || 1) : (col.column.definition.widthGrow || 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(oversizeCols.length){\r\n\t\t\toversizeCols.forEach(function(col){\r\n\t\t\t\toversizeSpace += shrinkCols ?  col.width - col.column.minWidth : col.column.minWidth;\r\n\t\t\t\tcol.width = col.column.minWidth;\r\n\t\t\t});\r\n\r\n\t\t\tremainingSpace = freeSpace - oversizeSpace;\r\n\r\n\t\t\tnextColWidth = changeUnits ? Math.floor(remainingSpace/changeUnits) : remainingSpace;\r\n\r\n\t\t\tgap = remainingSpace - (nextColWidth * changeUnits);\r\n\r\n\t\t\tgap += scaleColumns(undersizeCols, remainingSpace, nextColWidth, shrinkCols);\r\n\t\t}else{\r\n\t\t\tgap = changeUnits ? freeSpace - (Math.floor(freeSpace/changeUnits) * changeUnits) : freeSpace;\r\n\r\n\t\t\tundersizeCols.forEach(function(column){\r\n\t\t\t\tcolumn.width = shrinkCols ? calcShrink(column) : calcGrow(column);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn gap;\r\n\t}\r\n\r\n\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\tthis.table.modules.responsiveLayout.update();\r\n\t}\r\n\r\n\t//adjust for vertical scrollbar if present\r\n\tif(this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight){\r\n\t\ttotalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\r\n\t}\r\n\r\n\tcolumns.forEach(function(column){\r\n\t\tvar width, minWidth, colWidth;\r\n\r\n\t\tif(column.visible){\r\n\r\n\t\t\twidth = column.definition.width;\r\n\t\t\tminWidth =  parseInt(column.minWidth);\r\n\r\n\t\t\tif(width){\r\n\r\n\t\t\t\tcolWidth = calcWidth(width);\r\n\r\n\t\t\t\tfixedWidth += colWidth > minWidth ? colWidth : minWidth;\r\n\r\n\t\t\t\tif(column.definition.widthShrink){\r\n\t\t\t\t\tfixedShrinkColumns.push({\r\n\t\t\t\t\t\tcolumn:column,\r\n\t\t\t\t\t\twidth:colWidth > minWidth ? colWidth : minWidth\r\n\t\t\t\t\t});\r\n\t\t\t\t\tflexShrinkUnits += column.definition.widthShrink;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tflexColumns.push({\r\n\t\t\t\t\tcolumn:column,\r\n\t\t\t\t\twidth:0,\r\n\t\t\t\t});\r\n\t\t\t\tflexGrowUnits += column.definition.widthGrow || 1;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t//calculate available space\r\n\tflexWidth = totalWidth - fixedWidth;\r\n\r\n\t//calculate correct column size\r\n\tflexColWidth = Math.floor(flexWidth / flexGrowUnits)\r\n\r\n\t//generate column widths\r\n\tvar gapFill = scaleColumns(flexColumns, flexWidth, flexColWidth, false);\r\n\r\n\t//increase width of last column to account for rounding errors\r\n\tif(flexColumns.length && gapFill > 0){\r\n\t\tflexColumns[flexColumns.length-1].width += + gapFill;\r\n\t}\r\n\r\n\t//caculate space for columns to be shrunk into\r\n\tflexColumns.forEach(function(col){\r\n\t\tflexWidth -= col.width;\r\n\t});\r\n\r\n\toverflowWidth = Math.abs(gapFill) + flexWidth;\r\n\r\n\t//shrink oversize columns if there is no available space\r\n\tif(overflowWidth > 0 && flexShrinkUnits){\r\n\t\tgapFill = scaleColumns(fixedShrinkColumns, overflowWidth, Math.floor(overflowWidth / flexShrinkUnits), true);\r\n\t}\r\n\r\n\t//decrease width of last column to account for rounding errors\r\n\tif(fixedShrinkColumns.length){\r\n\t\tfixedShrinkColumns[fixedShrinkColumns.length-1].width -= gapFill;\r\n\t}\r\n\r\n\tflexColumns.forEach(function(col){\r\n\t\tcol.column.setWidth(col.width);\r\n\t});\r\n\r\n\tfixedShrinkColumns.forEach(function(col){\r\n\t\tcol.column.setWidth(col.width);\r\n\t});\r\n};","import fitData from './modes/fitData.js';\r\nimport fitDataGeneral from './modes/fitDataGeneral.js';\r\nimport fitDataStretch from './modes/fitDataStretch.js';\r\nimport fitColumns from './modes/fitColumns.js';\r\n\r\nexport default {\r\n\tfitData:fitData,\r\n\tfitDataFill:fitDataGeneral,\r\n\tfitDataTable:fitDataGeneral,\r\n\tfitDataStretch:fitDataStretch,\r\n\tfitColumns:fitColumns ,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultModes from './defaults/modes.js';\r\n\r\nclass Layout extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table, \"layout\");\r\n\r\n\t\tthis.mode = null;\r\n\r\n\t\tthis.registerTableOption(\"layout\", \"fitData\"); //layout type\r\n\t\tthis.registerTableOption(\"layoutColumnsOnNewData\", false); //update column widths on setData\r\n\r\n\t\tthis.registerColumnOption(\"widthGrow\");\r\n\t\tthis.registerColumnOption(\"widthShrink\");\r\n\t}\r\n\r\n\t//initialize layout system\r\n\tinitialize(){\r\n\t\tvar layout = this.table.options.layout;\r\n\r\n\t\tif(Layout.modes[layout]){\r\n\t\t\tthis.mode = layout;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Layout Error - invalid mode set, defaulting to 'fitData' : \" + layout);\r\n\t\t\tthis.mode = 'fitData';\r\n\t\t}\r\n\r\n\t\tthis.table.element.setAttribute(\"tabulator-layout\", this.mode);\r\n\t}\r\n\r\n\tgetMode(){\r\n\t\treturn this.mode;\r\n\t}\r\n\r\n\t//trigger table layout\r\n\tlayout(){\r\n\t\tLayout.modes[this.mode].call(this, this.table.columnManager.columnsByIndex);\r\n\r\n\t\tthis.dispatch(\"layout-refreshed\")\r\n\t}\r\n}\r\n\r\nLayout.moduleName = \"layout\";\r\n\r\n//load defaults\r\nLayout.modes = defaultModes;\r\n\r\nexport default Layout;","export default {\r\n\t\"default\":{ //hold default locale text\r\n\t\t\"groups\":{\r\n\t\t\t\"item\":\"item\",\r\n\t\t\t\"items\":\"items\",\r\n\t\t},\r\n\t\t\"columns\":{\r\n\t\t},\r\n\t\t\"data\":{\r\n\t\t\t\"loading\":\"Loading\",\r\n\t\t\t\"error\":\"Error\",\r\n\t\t},\r\n\t\t\"pagination\":{\r\n\t\t\t\"page_size\":\"Page Size\",\r\n\t\t\t\"page_title\":\"Show Page\",\r\n\t\t\t\"first\":\"First\",\r\n\t\t\t\"first_title\":\"First Page\",\r\n\t\t\t\"last\":\"Last\",\r\n\t\t\t\"last_title\":\"Last Page\",\r\n\t\t\t\"prev\":\"Prev\",\r\n\t\t\t\"prev_title\":\"Prev Page\",\r\n\t\t\t\"next\":\"Next\",\r\n\t\t\t\"next_title\":\"Next Page\",\r\n\t\t\t\"all\":\"All\",\r\n\t\t},\r\n\t\t\"headerFilters\":{\r\n\t\t\t\"default\":\"filter column...\",\r\n\t\t\t\"columns\":{}\r\n\t\t}\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport defaultLangs from './defaults/langs.js';\r\n\r\nclass Localize extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.locale = \"default\"; //current locale\r\n\t\tthis.lang = false; //current language\r\n\t\tthis.bindings = {}; //update events to call when locale is changed\r\n\t\tthis.langList = {};\r\n\r\n\t\tthis.registerTableOption(\"locale\", false); //current system language\r\n\t\tthis.registerTableOption(\"langs\", {});\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.langList = Helpers.deepClone(Localize.langs);\r\n\r\n\t\tif(this.table.options.columnDefaults.headerFilterPlaceholder !== false){\r\n\t\t\tthis.setHeaderFilterPlaceholder(this.table.options.columnDefaults.headerFilterPlaceholder);\r\n\t\t}\r\n\r\n\t\tfor(let locale in this.table.options.langs){\r\n\t\t\tthis.installLang(locale, this.table.options.langs[locale]);\r\n\t\t}\r\n\r\n\t\tthis.setLocale(this.table.options.locale);\r\n\r\n\t\tthis.registerTableFunction(\"setLocale\", this.setLocale.bind(this));\r\n\t\tthis.registerTableFunction(\"getLocale\", this.getLocale.bind(this));\r\n\t\tthis.registerTableFunction(\"getLang\", this.getLang.bind(this));\r\n\t}\r\n\r\n\t//set header placehoder\r\n\tsetHeaderFilterPlaceholder(placeholder){\r\n\t\tthis.langList.default.headerFilters.default = placeholder;\r\n\t}\r\n\r\n\t//set header filter placeholder by column\r\n\tsetHeaderFilterColumnPlaceholder(column, placeholder){\r\n\t\tthis.langList.default.headerFilters.columns[column] = placeholder;\r\n\r\n\t\tif(this.lang && !this.lang.headerFilters.columns[column]){\r\n\t\t\tthis.lang.headerFilters.columns[column] = placeholder;\r\n\t\t}\r\n\t}\r\n\r\n\t//setup a lang description object\r\n\tinstallLang(locale, lang){\r\n\t\tif(this.langList[locale]){\r\n\t\t\tthis._setLangProp(this.langList[locale], lang);\r\n\t\t}else{\r\n\t\t\tthis.langList[locale] = lang;\r\n\t\t}\r\n\t}\r\n\r\n\t_setLangProp(lang, values){\r\n\t\tfor(let key in values){\r\n\t\t\tif(lang[key] && typeof lang[key] == \"object\"){\r\n\t\t\t\tthis._setLangProp(lang[key], values[key])\r\n\t\t\t}else{\r\n\t\t\t\tlang[key] = values[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//set current locale\r\n\tsetLocale(desiredLocale){\r\n\t\tdesiredLocale = desiredLocale || \"default\";\r\n\r\n\t\t//fill in any matching languge values\r\n\t\tfunction traverseLang(trans, path){\r\n\t\t\tfor(var prop in trans){\r\n\t\t\t\tif(typeof trans[prop] == \"object\"){\r\n\t\t\t\t\tif(!path[prop]){\r\n\t\t\t\t\t\tpath[prop] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttraverseLang(trans[prop], path[prop]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tpath[prop] = trans[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//determing correct locale to load\r\n\t\tif(desiredLocale === true && navigator.language){\r\n\t\t\t//get local from system\r\n\t\t\tdesiredLocale = navigator.language.toLowerCase();\r\n\t\t}\r\n\r\n\t\tif(desiredLocale){\r\n\t\t\t//if locale is not set, check for matching top level locale else use default\r\n\t\t\tif(!this.langList[desiredLocale]){\r\n\t\t\t\tlet prefix = desiredLocale.split(\"-\")[0];\r\n\r\n\t\t\t\tif(this.langList[prefix]){\r\n\t\t\t\t\tconsole.warn(\"Localization Error - Exact matching locale not found, using closest match: \", desiredLocale, prefix);\r\n\t\t\t\t\tdesiredLocale = prefix;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Localization Error - Matching locale not found, using default: \", desiredLocale);\r\n\t\t\t\t\tdesiredLocale = \"default\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.locale = desiredLocale;\r\n\r\n\t\t//load default lang template\r\n\t\tthis.lang = Helpers.deepClone(this.langList.default || {});\r\n\r\n\t\tif(desiredLocale != \"default\"){\r\n\t\t\ttraverseLang(this.langList[desiredLocale], this.lang);\r\n\t\t}\r\n\r\n\t\tthis.dispatchExternal(\"localized\", this.locale, this.lang);\r\n\r\n\t\tthis._executeBindings();\r\n\t}\r\n\r\n\t//get current locale\r\n\tgetLocale(locale){\r\n\t\treturn this.locale;\r\n\t}\r\n\r\n\t//get lang object for given local or current if none provided\r\n\tgetLang(locale){\r\n\t\treturn locale ? this.langList[locale] : this.lang;\r\n\t}\r\n\r\n\t//get text for current locale\r\n\tgetText(path, value){\r\n\t\tvar path = value ? path + \"|\" + value : path,\r\n\t\tpathArray = path.split(\"|\"),\r\n\t\ttext = this._getLangElement(pathArray, this.locale);\r\n\r\n\t\t// if(text === false){\r\n\t\t// \tconsole.warn(\"Localization Error - Matching localized text not found for given path: \", path);\r\n\t\t// }\r\n\r\n\t\treturn text || \"\";\r\n\t}\r\n\r\n\t//traverse langs object and find localized copy\r\n\t_getLangElement(path, locale){\r\n\t\tvar root = this.lang;\r\n\r\n\t\tpath.forEach(function(level){\r\n\t\t\tvar rootPath;\r\n\r\n\t\t\tif(root){\r\n\t\t\t\trootPath = root[level];\r\n\r\n\t\t\t\tif(typeof rootPath != \"undefined\"){\r\n\t\t\t\t\troot = rootPath;\r\n\t\t\t\t}else{\r\n\t\t\t\t\troot = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn root;\r\n\t}\r\n\r\n\t//set update binding\r\n\tbind(path, callback){\r\n\t\tif(!this.bindings[path]){\r\n\t\t\tthis.bindings[path] = [];\r\n\t\t}\r\n\r\n\t\tthis.bindings[path].push(callback);\r\n\r\n\t\tcallback(this.getText(path), this.lang);\r\n\t}\r\n\r\n\t//itterate through bindings and trigger updates\r\n\t_executeBindings(){\r\n\t\tfor(let path in this.bindings){\r\n\t\t\tthis.bindings[path].forEach((binding) => {\r\n\t\t\t\tbinding(this.getText(path), this.lang);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nLocalize.moduleName = \"localize\";\r\n\r\n//load defaults\r\nLocalize.langs = defaultLangs;\r\n\r\nexport default Localize;","import Module from '../../core/Module.js';\r\nimport TableRegistry from '../../core/tools/TableRegistry.js';\r\n\r\nclass Comms extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.registerTableFunction(\"tableComms\", this.receive.bind(this));\r\n\t}\r\n\r\n\tgetConnections(selectors){\r\n\t\tvar connections = [],\r\n\t\tconnection;\r\n\r\n\t\tconnection = TableRegistry.lookupTable(selectors);\r\n\r\n\t\tconnection.forEach((con) =>{\r\n\t\t\tif(this.table !== con){\r\n\t\t\t\tconnections.push(con);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn connections;\r\n\t}\r\n\r\n\tsend(selectors, module, action, data){\r\n\t\tvar connections = this.getConnections(selectors);\r\n\r\n\t\tconnections.forEach((connection) => {\r\n\t\t\tconnection.tableComms(this.table.element, module, action, data);\r\n\t\t});\r\n\r\n\t\tif(!connections.length && selectors){\r\n\t\t\tconsole.warn(\"Table Connection Error - No tables matching selector found\", selectors);\r\n\t\t}\r\n\t}\r\n\r\n\treceive(table, module, action, data){\r\n\t\tif(this.table.modExists(module)){\r\n\t\t\treturn this.table.modules[module].commsReceived(table, action, data);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Inter-table Comms Error - no such module:\", module);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nComms.moduleName = \"comms\";\r\n\r\nexport default Comms;","import * as coreModules from '../modules/core.js';\r\nimport TableRegistry from './TableRegistry.js';\r\n\r\nexport default class ModuleBinder {\r\n\r\n\tconstructor(tabulator, modules){\r\n\t\tthis.bindStaticFuctionality(tabulator);\r\n\t\tthis.bindModules(tabulator, coreModules, true);\r\n\r\n\t\tif(modules){\r\n\t\t\tthis.bindModules(tabulator, modules);\r\n\t\t}\r\n\t}\r\n\r\n\tbindStaticFuctionality(tabulator){\r\n\t\ttabulator.moduleBindings = {};\r\n\r\n\t\ttabulator.extendModule = function(name, property, values){\r\n\t\t\tif(tabulator.moduleBindings[name]){\r\n\t\t\t\tvar source = tabulator.moduleBindings[name][property];\r\n\r\n\t\t\t\tif(source){\r\n\t\t\t\t\tif(typeof values == \"object\"){\r\n\t\t\t\t\t\tfor(let key in values){\r\n\t\t\t\t\t\t\tsource[key] = values[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Module Error - Invalid value type, it must be an object\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Module Error - property does not exist:\", property);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Module Error - module does not exist:\", name);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\ttabulator.registerModule = function(modules){\r\n\t\t\tif(!Array.isArray(modules)){\r\n\t\t\t\tmodules = [modules];\r\n\t\t\t}\r\n\r\n\t\t\tmodules.forEach((mod) => {\r\n\t\t\t\ttabulator.registerModuleBinding(mod)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\ttabulator.registerModuleBinding = function(mod){\r\n\t\t\ttabulator.moduleBindings[mod.moduleName] = mod;\r\n\t\t};\r\n\r\n\t\ttabulator.findTable = function(query){\r\n\t\t\tvar results = TableRegistry.lookupTable(query, true);\r\n\t\t\treturn Array.isArray(results) && !results.length ? false : results;\r\n\t\t}\r\n\r\n\t\t//ensure that module are bound to instantiated function\r\n\t\ttabulator.prototype.bindModules = function(){\r\n\t\t\tthis.modules = {};\r\n\r\n\t\t\tfor(var name in tabulator.moduleBindings){\r\n\t\t\t\tlet mod = tabulator.moduleBindings[name];\r\n\r\n\t\t\t\tthis.modules[name] = new mod(this);\r\n\r\n\t\t\t\tif(mod.prototype.moduleCore){\r\n\t\t\t\t\tthis.modulesCore[name] = this.modules[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.modulesRegular[name] = this.modules[name];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tbindModules(tabulator, modules, core){\r\n\t\tvar mods = Object.values(modules);\r\n\r\n\t\tif(core){\r\n\t\t\tmods.forEach((mod) => {\r\n\t\t\t\tmod.prototype.moduleCore = true;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\ttabulator.registerModule(mods);\r\n\t}\r\n}","'use strict';\r\n\r\nimport defaultOptions from './defaults/options.js';\r\n\r\nimport ColumnManager from './ColumnManager.js';\r\nimport RowManager from './RowManager.js';\r\nimport FooterManager from './FooterManager.js';\r\n\r\nimport InteractionMonitor from './tools/InteractionMonitor.js';\r\nimport ComponentFunctionBinder from './tools/ComponentFunctionBinder.js';\r\nimport DataLoader from './tools/DataLoader.js';\r\n\r\nimport ExternalEventBus from './tools/ExternalEventBus.js';\r\nimport InternalEventBus from './tools/InternalEventBus.js';\r\n\r\nimport TableRegistry from './tools/TableRegistry.js';\r\nimport ModuleBinder from './tools/ModuleBinder.js';\r\n\r\nimport OptionsList from './tools/OptionsList.js';\r\n\r\nclass Tabulator {\r\n\r\n\tconstructor(element, options){\r\n\r\n\t\tthis.options = {};\r\n\r\n\t\tthis.columnManager = null; // hold Column Manager\r\n\t\tthis.rowManager = null; //hold Row Manager\r\n\t\tthis.footerManager = null; //holder Footer Manager\r\n\t\tthis.vdomHoz  = null; //holder horizontal virtual dom\r\n\t\tthis.externalEvents = null; //handle external event messaging\r\n\t\tthis.eventBus = null; //handle internal event messaging\r\n\t\tthis.interactionMonitor = false; //track user interaction\r\n\t\tthis.browser = \"\"; //hold current browser type\r\n\t\tthis.browserSlow = false; //handle reduced functionality for slower browsers\r\n\t\tthis.browserMobile = false; //check if running on mobile, prevent resize cancelling edit on keyboard appearance\r\n\t\tthis.rtl = false; //check if the table is in RTL mode\r\n\t\tthis.originalElement = null; //hold original table element if it has been replaced\r\n\r\n\t\tthis.componentFunctionBinder = new ComponentFunctionBinder(this); //bind component functions\r\n\t\tthis.dataLoader = false; //bind component functions\r\n\r\n\t\tthis.modules = {}; //hold all modules bound to this table\r\n\t\tthis.modulesCore = {}; //hold core modules bound to this table (for initialization purposes)\r\n\t\tthis.modulesRegular = {}; //hold regular modules bound to this table (for initialization purposes)\r\n\r\n\t\tthis.optionsList = new OptionsList(this, \"table constructor\");\r\n\r\n\t\tthis.initialized = false;\r\n\r\n\t\tif(this.initializeElement(element)){\r\n\r\n\t\t\tthis.initialzeCoreSystems(options);\r\n\r\n\t\t\t//delay table creation to allow event bindings immediately after the constructor\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis._create();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tTableRegistry.register(this); //register table for inter-device communication\r\n\t}\r\n\r\n\tinitializeElement(element){\r\n\t\tif(typeof HTMLElement !== \"undefined\" && element instanceof HTMLElement){\r\n\t\t\tthis.element = element;\r\n\t\t\treturn true;\r\n\t\t}else if(typeof element === \"string\"){\r\n\t\t\tthis.element = document.querySelector(element);\r\n\r\n\t\t\tif(this.element){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Tabulator Creation Error - no element found matching selector: \", element);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Tabulator Creation Error - Invalid element provided:\", element);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tinitialzeCoreSystems(options){\r\n\t\tthis.columnManager = new ColumnManager(this);\r\n\t\tthis.rowManager = new RowManager(this);\r\n\t\tthis.footerManager = new FooterManager(this);\r\n\t\tthis.dataLoader = new DataLoader(this);\r\n\r\n\t\tthis.bindModules();\r\n\r\n\t\tthis.options = this.optionsList.generate(Tabulator.defaultOptions, options)\r\n\r\n\t\tthis._clearObjectPointers();\r\n\r\n\t\tthis._mapDeprecatedFunctionality();\r\n\r\n\t\tthis.externalEvents = new ExternalEventBus(this, this.options, this.options.debugEventsExternal);\r\n\t\tthis.eventBus = new InternalEventBus(this.options.debugEventsInternal);\r\n\r\n\t\tthis.interactionMonitor = new InteractionMonitor(this);\r\n\r\n\t\tthis.dataLoader.initialize();\r\n\t\tthis.columnManager.initialize();\r\n\t\tthis.rowManager.initialize();\r\n\t\tthis.footerManager.initialize();\r\n\t}\r\n\r\n\t//convert deprecated functionality to new functions\r\n\t_mapDeprecatedFunctionality(){\r\n\t\t//all previously deprecated functionality removed in the 5.0 release\r\n\t}\r\n\r\n\t_clearSelection(){\r\n\r\n\t\tthis.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\tif (window.getSelection) {\r\n\t\t  if (window.getSelection().empty) {  // Chrome\r\n\t\t  \twindow.getSelection().empty();\r\n\t\t  } else if (window.getSelection().removeAllRanges) {  // Firefox\r\n\t\t  \twindow.getSelection().removeAllRanges();\r\n\t\t  }\r\n\t\t} else if (document.selection) {  // IE?\r\n\t\t\tdocument.selection.empty();\r\n\t\t}\r\n\r\n\t\tthis.element.classList.remove(\"tabulator-block-select\");\r\n\t}\r\n\r\n\t//create table\r\n\t_create(){\r\n\t\tthis.externalEvents.dispatch(\"tableBuilding\");\r\n\t\tthis.eventBus.dispatch(\"table-building\");\r\n\r\n\t\tthis._rtlCheck();\r\n\r\n\t\tthis._buildElement();\r\n\r\n\t\tthis._initializeTable();\r\n\r\n\t\tthis._loadInitialData();\r\n\r\n\t\tthis.initialized = true;\r\n\r\n\t\tthis.externalEvents.dispatch(\"tableBuilt\");\r\n\t}\r\n\r\n\t_rtlCheck(){\r\n\t\tvar style = window.getComputedStyle(this.element);\r\n\r\n\t\tswitch(this.options.textDirection){\r\n\t\t\tcase\"auto\":\r\n\t\t\tif(style.direction !== \"rtl\"){\r\n\t\t\t\tbreak;\r\n\t\t\t};\r\n\r\n\t\t\tcase \"rtl\":\r\n\t\t\tthis.element.classList.add(\"tabulator-rtl\");\r\n\t\t\tthis.rtl = true;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ltr\":\r\n\t\t\tthis.element.classList.add(\"tabulator-ltr\");\r\n\r\n\t\t\tdefault:\r\n\t\t\tthis.rtl = false;\r\n\t\t}\r\n\t}\r\n\r\n\t//clear pointers to objects in default config object\r\n\t_clearObjectPointers(){\r\n\t\tthis.options.columns = this.options.columns.slice(0);\r\n\r\n\t\tif(this.options.data && !this.options.reactiveData){\r\n\t\t\tthis.options.data = this.options.data.slice(0);\r\n\t\t}\r\n\t}\r\n\r\n\t//build tabulator element\r\n\t_buildElement(){\r\n\t\tvar element = this.element,\r\n\t\toptions = this.options,\r\n\t\tnewElement;\r\n\r\n\t\tif(element.tagName === \"TABLE\"){\r\n\t\t\tthis.originalElement = this.element;\r\n\t\t\tnewElement = document.createElement(\"div\");\r\n\r\n\t\t\t//transfer attributes to new element\r\n\t\t\tvar attributes = element.attributes;\r\n\r\n\t\t\t// loop through attributes and apply them on div\r\n\t\t\tfor(var i in attributes){\r\n\t\t\t\tif(typeof attributes[i] == \"object\"){\r\n\t\t\t\t\tnewElement.setAttribute(attributes[i].name, attributes[i].value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// replace table with div element\r\n\t\t\telement.parentNode.replaceChild(newElement, element);\r\n\r\n\t\t\tthis.element = element = newElement;\r\n\t\t}\r\n\r\n\t\telement.classList.add(\"tabulator\");\r\n\t\telement.setAttribute(\"role\", \"grid\");\r\n\r\n\t\t//empty element\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\t//set table height\r\n\t\tif(options.height){\r\n\t\t\toptions.height = isNaN(options.height) ? options.height : options.height + \"px\";\r\n\t\t\telement.style.height = options.height;\r\n\t\t}\r\n\r\n\t\t//set table min height\r\n\t\tif(options.minHeight !== false){\r\n\t\t\toptions.minHeight = isNaN(options.minHeight) ? options.minHeight : options.minHeight + \"px\";\r\n\t\t\telement.style.minHeight = options.minHeight;\r\n\t\t}\r\n\r\n\t\t//set table maxHeight\r\n\t\tif(options.maxHeight !== false){\r\n\t\t\toptions.maxHeight = isNaN(options.maxHeight) ? options.maxHeight : options.maxHeight + \"px\";\r\n\t\t\telement.style.maxHeight = options.maxHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize core systems and modules\r\n\t_initializeTable(){\r\n\t\tvar element = this.element,\r\n\t\toptions = this.options;\r\n\r\n\t\tthis.interactionMonitor.initialize();\r\n\r\n\t\tthis.columnManager.initialize();\r\n\t\tthis.rowManager.initialize();\r\n\r\n\t\tthis._detectBrowser();\r\n\r\n\t\t//initialize core modules\r\n\t\tfor (let key in this.modulesCore){\r\n\t\t\tlet mod = this.modulesCore[key];\r\n\r\n\t\t\tmod.initialize();\r\n\t\t}\r\n\r\n\t\t//configure placeholder element\r\n\t\tif(typeof options.placeholder == \"string\"){\r\n\t\t\tvar el = document.createElement(\"div\");\r\n\t\t\tel.classList.add(\"tabulator-placeholder\");\r\n\r\n\t\t\tvar span = document.createElement(\"span\");\r\n\t\t\tspan.innerHTML = options.placeholder;\r\n\r\n\t\t\tel.appendChild(span);\r\n\r\n\t\t\toptions.placeholder = el;\r\n\t\t}\r\n\r\n\t\t//build table elements\r\n\t\telement.appendChild(this.columnManager.getElement());\r\n\t\telement.appendChild(this.rowManager.getElement());\r\n\r\n\t\tif(options.footerElement){\r\n\t\t\tthis.footerManager.activate();\r\n\t\t}\r\n\r\n\t\tif(options.autoColumns && options.data){\r\n\r\n\t\t\tthis.columnManager.generateColumnsFromRowData(this.options.data);\r\n\t\t}\r\n\r\n\t\t//initialize regular modules\r\n\t\tfor (let key in this.modulesRegular){\r\n\t\t\tlet mod = this.modulesRegular[key];\r\n\r\n\t\t\tmod.initialize();\r\n\t\t}\r\n\r\n\t\tthis.columnManager.setColumns(options.columns);\r\n\r\n\t\tthis.eventBus.dispatch(\"table-built\");\r\n\t}\r\n\r\n\t_loadInitialData(){\r\n\t\tthis.dataLoader.load(this.options.data);\r\n\t}\r\n\r\n\t//deconstructor\r\n\tdestroy(){\r\n\t\tvar element = this.element;\r\n\r\n\t\tTableRegistry.deregister(this); //deregister table from inter-device communication\r\n\r\n\t\tthis.eventBus.dispatch(\"table-destroy\");\r\n\r\n\t\t//clear row data\r\n\t\tthis.rowManager.rows.forEach(function(row){\r\n\t\t\trow.wipe();\r\n\t\t});\r\n\r\n\t\tthis.rowManager.rows = [];\r\n\t\tthis.rowManager.activeRows = [];\r\n\t\tthis.rowManager.displayRows = [];\r\n\r\n\t\t//clear DOM\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\t\telement.classList.remove(\"tabulator\");\r\n\t}\r\n\r\n\t_detectBrowser(){\r\n\t\tvar ua = navigator.userAgent||navigator.vendor||window.opera;\r\n\r\n\t\tif(ua.indexOf(\"Trident\") > -1){\r\n\t\t\tthis.browser = \"ie\";\r\n\t\t\tthis.browserSlow = true;\r\n\t\t}else if(ua.indexOf(\"Edge\") > -1){\r\n\t\t\tthis.browser = \"edge\";\r\n\t\t\tthis.browserSlow = true;\r\n\t\t}else if(ua.indexOf(\"Firefox\") > -1){\r\n\t\t\tthis.browser = \"firefox\";\r\n\t\t\tthis.browserSlow = false;\r\n\t\t}else{\r\n\t\t\tthis.browser = \"other\";\r\n\t\t\tthis.browserSlow = false;\r\n\t\t}\r\n\r\n\t\tthis.browserMobile = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(ua)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(ua.substr(0,4));\r\n\t}\r\n\r\n\t////////////////// Data Handling //////////////////\r\n\t//block table redrawing\r\n\tblockRedraw(){\r\n\t\treturn this.rowManager.blockRedraw();\r\n\t}\r\n\r\n\t//restore table redrawing\r\n\trestoreRedraw(){\r\n\t\treturn this.rowManager.restoreRedraw();\r\n\t}\r\n\r\n\t//local data from local file\r\n\tsetDataFromLocalFile(extensions){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar input = document.createElement(\"input\");\r\n\t\t\tinput.type = \"file\";\r\n\t\t\tinput.accept = extensions || \".json,application/json\";\r\n\r\n\t\t\tinput.addEventListener(\"change\", (e) => {\r\n\t\t\t\tvar file = input.files[0],\r\n\t\t\t\treader = new FileReader(),\r\n\t\t\t\tdata;\r\n\r\n\t\t\t\treader.readAsText(file);\r\n\r\n\t\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tdata = JSON.parse(reader.result);\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.warn(\"File Load Error - File contents is invalid JSON\", e);\r\n\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setData(data)\r\n\t\t\t\t\t.then((data) => {\r\n\t\t\t\t\t\tresolve(data);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tresolve(err);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\treader.onerror = (e) => {\r\n\t\t\t\t\tconsole.warn(\"File Load Error - Unable to read file\");\r\n\t\t\t\t\treject();\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tinput.click();\r\n\t\t});\r\n\t}\r\n\r\n\t//load data\r\n\tsetData(data, params, config){\r\n\t\tif(this.initialized){\r\n\t\t\treturn this.dataLoader.load(data, params, config, false);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"setData failed - table not yet initialized. To set initial data please use the 'data' property in the table constructor.\")\r\n\t\t}\r\n\t}\r\n\r\n\t//clear data\r\n\tclearData(){\r\n\t\tthis.dataLoader.blockActiveLoad();\r\n\t\tthis.rowManager.clearData();\r\n\t}\r\n\r\n\t//get table data array\r\n\tgetData(active){\r\n\t\treturn this.rowManager.getData(active);\r\n\t}\r\n\r\n\t//get table data array count\r\n\tgetDataCount(active){\r\n\t\treturn this.rowManager.getDataCount(active);\r\n\t}\r\n\r\n\t//replace data, keeping table in position with same sort\r\n\treplaceData(data, params, config){\r\n\t\tif(this.initialized){\r\n\t\t\treturn this.dataLoader.load(data, params, config, true, true);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"replaceData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\t//update table data\r\n\tupdateData(data){\r\n\t\tvar responses = 0;\r\n\r\n\t\tif(this.initialized){\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.dataLoader.blockActiveLoad();\r\n\r\n\t\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(data){\r\n\t\t\t\t\tdata.forEach((item) => {\r\n\t\t\t\t\t\tvar row = this.rowManager.findRow(item[this.options.index]);\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\tresponses++;\r\n\r\n\t\t\t\t\t\t\trow.updateData(item)\r\n\t\t\t\t\t\t\t.then(()=>{\r\n\t\t\t\t\t\t\t\tresponses--;\r\n\r\n\t\t\t\t\t\t\t\tif(!responses){\r\n\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Update Error - No data provided\");\r\n\t\t\t\t\treject(\"Update Error - No data provided\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"updateData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\taddData(data, pos, index){\r\n\t\tif(this.initialized){\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.dataLoader.blockActiveLoad();\r\n\r\n\t\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(data){\r\n\t\t\t\t\tthis.rowManager.addRows(data, pos, index)\r\n\t\t\t\t\t.then((rows) => {\r\n\t\t\t\t\t\tvar output = [];\r\n\r\n\t\t\t\t\t\trows.forEach(function(row){\r\n\t\t\t\t\t\t\toutput.push(row.getComponent());\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tresolve(output);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Update Error - No data provided\");\r\n\t\t\t\t\treject(\"Update Error - No data provided\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"addData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\t//update table data\r\n\tupdateOrAddData(data){\r\n\t\tvar rows = [],\r\n\t\tresponses = 0;\r\n\r\n\t\tif(this.initialized){\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.dataLoader.blockActiveLoad();\r\n\r\n\t\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(data){\r\n\t\t\t\t\tdata.forEach((item) => {\r\n\t\t\t\t\t\tvar row = this.rowManager.findRow(item[this.options.index]);\r\n\r\n\t\t\t\t\t\tresponses++;\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\trow.updateData(item)\r\n\t\t\t\t\t\t\t.then(()=>{\r\n\t\t\t\t\t\t\t\tresponses--;\r\n\t\t\t\t\t\t\t\trows.push(row.getComponent());\r\n\r\n\t\t\t\t\t\t\t\tif(!responses){\r\n\t\t\t\t\t\t\t\t\tresolve(rows);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.rowManager.addRows(item)\r\n\t\t\t\t\t\t\t.then((newRows)=>{\r\n\t\t\t\t\t\t\t\tresponses--;\r\n\t\t\t\t\t\t\t\trows.push(newRows[0].getComponent());\r\n\r\n\t\t\t\t\t\t\t\tif(!responses){\r\n\t\t\t\t\t\t\t\t\tresolve(rows);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Update Error - No data provided\");\r\n\t\t\t\t\treject(\"Update Error - No data provided\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"updateOrAddData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\t//get row object\r\n\tgetRow(index){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(row){\r\n\t\t\treturn row.getComponent();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Find Error - No matching row found:\", index);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//get row object\r\n\tgetRowFromPosition(position, active){\r\n\t\tvar row = this.rowManager.getRowFromPosition(position, active);\r\n\r\n\t\tif(row){\r\n\t\t\treturn row.getComponent();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Find Error - No matching row found:\", position);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//delete row from table\r\n\tdeleteRow(index){\r\n\t\tvar foundRows = [];\r\n\r\n\t\tif(!Array.isArray(index)){\r\n\t\t\tindex = [index];\r\n\t\t}\r\n\r\n\t\t//find matching rows\r\n\t\tfor(let item of index){\r\n\t\t\tlet row = this.rowManager.findRow(item, true);\r\n\r\n\t\t\tif(row){\r\n\t\t\t\tfoundRows.push(row);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Delete Error - No matching row found:\", item);\r\n\t\t\t\treturn Promise.reject(\"Delete Error - No matching row found\")\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//sort rows into correct order to ensure smooth delete from table\r\n\t\tfoundRows.sort((a, b) => {\r\n\t\t\treturn this.rowManager.rows.indexOf(a) > this.rowManager.rows.indexOf(b) ? 1 : -1;\r\n\t\t});\r\n\r\n\t\t//delete rows\r\n\t\tfoundRows.forEach((row) =>{\r\n\t\t\trow.delete()\r\n\t\t});\r\n\r\n\t\tthis.rowManager.reRenderInPosition();\r\n\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\t//add row to table\r\n\taddRow(data, pos, index){\r\n\t\tif(this.initialized){\r\n\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.rowManager.addRows(data, pos, index)\r\n\t\t\t.then((rows)=>{\r\n\t\t\t\treturn rows[0].getComponent();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"addRow failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\t//update a row if it exitsts otherwise create it\r\n\tupdateOrAddRow(index, data){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(row){\r\n\t\t\treturn row.updateData(data)\r\n\t\t\t.then(()=>{\r\n\t\t\t\treturn row.getComponent();\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\treturn this.rowManager.addRows(data)\r\n\t\t\t.then((rows)=>{\r\n\t\t\t\treturn rows[0].getComponent();\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t//update row data\r\n\tupdateRow(index, data){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(row){\r\n\t\t\treturn row.updateData(data)\r\n\t\t\t.then(()=>{\r\n\t\t\t\treturn Promise.resolve(row.getComponent());\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Update Error - No matching row found:\", index);\r\n\t\t\treturn Promise.reject(\"Update Error - No matching row found\");\r\n\t\t}\r\n\t}\r\n\r\n\t//scroll to row in DOM\r\n\tscrollToRow(index, position, ifVisible){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(row){\r\n\t\t\treturn this.rowManager.scrollToRow(row, position, ifVisible)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Scroll Error - No matching row found:\", index);\r\n\t\t\treturn Promise.reject(\"Scroll Error - No matching row found\");\r\n\t\t}\r\n\t}\r\n\r\n\tmoveRow(from, to, after){\r\n\t\tvar fromRow = this.rowManager.findRow(from);\r\n\r\n\t\tif(fromRow){\r\n\t\t\tfromRow.moveToRow(to, after);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching row found:\", from);\r\n\t\t}\r\n\t}\r\n\r\n\tgetRows(active){\r\n\t\treturn this.rowManager.getComponents(active);\r\n\t}\r\n\r\n\t//get position of row in table\r\n\tgetRowPosition(index, active){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(row){\r\n\t\t\treturn this.rowManager.getRowPosition(row, active);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Position Error - No matching row found:\", index);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/////////////// Column Functions  ///////////////\r\n\tsetColumns(definition){\r\n\t\tif(this.initialized){\r\n\t\t\tthis.columnManager.setColumns(definition);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"setColumns failed - table not yet initialized. To set initial data please use the 'columns' property in the table constructor.\")\r\n\t\t}\r\n\t}\r\n\r\n\tgetColumns(structured){\r\n\t\treturn this.columnManager.getComponents(structured);\r\n\t}\r\n\r\n\tgetColumn(field){\r\n\t\tvar col = this.columnManager.findColumn(field);\r\n\r\n\t\tif(col){\r\n\t\t\treturn col.getComponent();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Find Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tgetColumnDefinitions(){\r\n\t\treturn this.columnManager.getDefinitionTree();\r\n\t}\r\n\r\n\tshowColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tcolumn.show();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Show Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\thideColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tcolumn.hide();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Hide Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tif(column.visible){\r\n\t\t\t\tcolumn.hide();\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.show();\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Visibility Toggle Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\taddColumn(definition, before, field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\treturn this.columnManager.addColumn(definition, before, column)\r\n\t\t.then((column) => {\r\n\t\t\treturn column.getComponent();\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\treturn column.delete();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Delete Error - No matching column found:\", field);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateColumnDefinition(field, definition){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\treturn column.updateDefinition(definition)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Update Error - No matching column found:\", field);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\tmoveColumn(from, to, after){\r\n\t\tvar fromColumn = this.columnManager.findColumn(from);\r\n\t\tvar toColumn = this.columnManager.findColumn(to);\r\n\r\n\t\tif(fromColumn){\r\n\t\t\tif(toColumn){\r\n\t\t\t\tthis.columnManager.moveColumn(fromColumn, toColumn, after)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Move Error - No matching column found:\", toColumn);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching column found:\", from);\r\n\t\t}\r\n\t}\r\n\r\n\t//scroll to column in DOM\r\n\tscrollToColumn(field, position, ifVisible){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\t\tif(column){\r\n\t\t\t\treturn this.columnManager.scrollToColumn(column, position, ifVisible)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Scroll Error - No matching column found:\", field);\r\n\t\t\t\treturn Promise.reject(\"Scroll Error - No matching column found\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//////////// General Public Functions ////////////\r\n\t//redraw list without updating data\r\n\tredraw(force){\r\n\t\tif(this.initialized){\r\n\t\t\tthis.columnManager.redraw(force);\r\n\t\t\tthis.rowManager.redraw(force);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"redraw failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\tsetHeight(height){\r\n\t\tthis.options.height = isNaN(height) ? height : height + \"px\";\r\n\t\tthis.element.style.height = this.options.height;\r\n\t\tthis.rowManager.initializeRenderer();\r\n\t\tthis.rowManager.redraw();\r\n\t}\r\n\r\n\t//////////////////// Event Bus ///////////////////\r\n\r\n\ton(key, callback){\r\n\t\tthis.externalEvents.subscribe(key, callback);\r\n\t}\r\n\r\n\toff(key, callback){\r\n\t\tthis.externalEvents.unsubscribe(key, callback);\r\n\t}\r\n\r\n\tdispatchEvent(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args.shift();\r\n\r\n\t\tthis.externalEvents.dispatch(...arguments)\r\n\t}\r\n\r\n\t////////////// Extension Management //////////////\r\n\tmodExists(plugin, required){\r\n\t\tif(this.modules[plugin]){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tif(required){\r\n\t\t\t\tconsole.error(\"Tabulator Module Not Installed: \" + plugin);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tmodule(key){\r\n\t\tvar mod = this.modules[key];\r\n\r\n\t\tif(!mod){\r\n\t\t\tconsole.error(\"Tabulator module not installed: \" + key);\r\n\t\t}\r\n\r\n\t\treturn mod;\r\n\t}\r\n}\r\n\r\n//default setup options\r\nTabulator.defaultOptions = defaultOptions;\r\n\r\n//bind modules and static functionality\r\nnew ModuleBinder(Tabulator);\r\n\r\nexport default Tabulator;","//tabulator with all modules installed\r\nimport {default as Tabulator} from './Tabulator.js';\r\nimport * as modules from '../core/modules/optional.js';\r\nimport ModuleBinder from './tools/ModuleBinder.js';\r\n\r\nclass TabulatorFull extends Tabulator {};\r\n\r\n//bind modules and static functionality\r\nnew ModuleBinder(TabulatorFull, modules);\r\n\r\nexport default TabulatorFull;","export default class PseudoRow {\r\n\r\n\tconstructor (type){\r\n\t\tthis.type = type;\r\n\t\tthis.element = this._createElement();\r\n\t}\r\n\r\n\t_createElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\tel.classList.add(\"tabulator-row\");\r\n\t\treturn el;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tgetComponent(){\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetData(){\r\n\t\treturn {};\r\n\t}\r\n\r\n\tgetHeight(){\r\n\t\treturn this.element.outerHeight;\r\n\t}\r\n\r\n\tinitialize(){}\r\n\r\n\treinitialize(){}\r\n\r\n\tnormalizeHeight(){}\r\n\r\n\tgenerateCells(){}\r\n\r\n\treinitializeHeight(){}\r\n\r\n\tcalcHeight(){}\r\n\r\n\tsetCellHeight(){}\r\n\r\n\tclearCellHeight(){}\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}