{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { nanoid } from \"nanoid\";\nconst initialState = {\n  entities: [],\n  status: \"idle\"\n};\nexport const usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    startLoading: () => {\n      return {\n        entities: [],\n        status: \"loading\"\n      };\n    },\n    successLoading: (state, action) => {\n      const {\n        entities,\n        ids\n      } = action.payload;\n      return {\n        entities,\n        ids,\n        status: \"success\"\n      };\n    },\n    failLoading: () => {\n      return {\n        entities: [],\n        status: \"fail\"\n      };\n    },\n    addUser: (state, action) => {\n      const {\n        email,\n        name,\n        phone,\n        city,\n        pass,\n        role,\n        balance\n      } = action.payload;\n      state.entities[nanoid()] = {\n        'EMAIL': email,\n        'NAME': name,\n        \"PHONE\": phone,\n        'CITY': city,\n        'PASS': pass,\n        'ROLENAME': role,\n        'BALANCE': balance\n      };\n      return state;\n    }\n  }\n});\nexport const usersSliceActions = usersSlice.actions;","map":{"version":3,"names":["createSlice","nanoid","initialState","entities","status","usersSlice","name","reducers","startLoading","successLoading","state","action","ids","payload","failLoading","addUser","email","phone","city","pass","role","balance","usersSliceActions","actions"],"sources":["C:/Development/11312/client/src/store/Users/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst initialState = {\r\n  entities: [],\r\n  status: \"idle\",\r\n};\r\n\r\nexport const usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    startLoading: () => {\r\n      return {\r\n        entities: [],\r\n        status: \"loading\",\r\n      };\r\n    },\r\n    successLoading: (state, action) => {\r\n      const { entities, ids } = action.payload;\r\n      return {\r\n        entities,\r\n        ids,\r\n        status: \"success\",\r\n      };\r\n    },\r\n    failLoading: () => {\r\n      return {\r\n        entities: [],\r\n        status: \"fail\",\r\n      };\r\n    },\r\n    addUser: (state, action) => {\r\n      const { email, name, phone, city, pass, role, balance } = action.payload;\r\n\r\n      state.entities[nanoid()] = {\r\n        'EMAIL': email,\r\n        'NAME': name,\r\n        \"PHONE\": phone,\r\n        'CITY': city,\r\n        'PASS': pass,\r\n        'ROLENAME': role,\r\n        'BALANCE': balance,\r\n      };\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const usersSliceActions = usersSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;EACpCM,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACRC,YAAY,EAAE,MAAM;MAClB,OAAO;QACLL,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDK,cAAc,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAER,QAAQ;QAAES;MAAI,CAAC,GAAGD,MAAM,CAACE,OAAO;MACxC,OAAO;QACLV,QAAQ;QACRS,GAAG;QACHR,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDU,WAAW,EAAE,MAAM;MACjB,OAAO;QACLX,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDW,OAAO,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAM;QAAEK,KAAK;QAAEV,IAAI;QAAEW,KAAK;QAAEC,IAAI;QAAEC,IAAI;QAAEC,IAAI;QAAEC;MAAQ,CAAC,GAAGV,MAAM,CAACE,OAAO;MAExEH,KAAK,CAACP,QAAQ,CAACF,MAAM,EAAE,CAAC,GAAG;QACzB,OAAO,EAAEe,KAAK;QACd,MAAM,EAAEV,IAAI;QACZ,OAAO,EAAEW,KAAK;QACd,MAAM,EAAEC,IAAI;QACZ,MAAM,EAAEC,IAAI;QACZ,UAAU,EAAEC,IAAI;QAChB,SAAS,EAAEC;MACb,CAAC;MACD,OAAOX,KAAK;IACd;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMY,iBAAiB,GAAGjB,UAAU,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}