{"ast":null,"code":"export const addUserIfValidate = _ref => {\n  let {\n    userId,\n    email,\n    role,\n    name,\n    phone,\n    city,\n    pass\n  } = _ref;\n  const isDataValid = true;\n  if (isDataValid) {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify({\n        user: `insert into peoples(pid,name,email,pass,idaccess) values(${userId},'${name}','${email}','${pass}',${role});`\n      })\n    };\n    fetch(\"http://localhost:4000/addUser\", options).then(res => res.text()).catch(err => console.log(err));\n  }\n};","map":{"version":3,"names":["addUserIfValidate","userId","email","role","name","phone","city","pass","isDataValid","options","method","headers","body","JSON","stringify","user","fetch","then","res","text","catch","err","console","log"],"sources":["C:/Development/11312/client/src/store/Users/Thunks/addUserIfValidate.js"],"sourcesContent":["export const addUserIfValidate = ({userId, email, role, name, phone, city, pass}) => {\r\n    \r\n  const isDataValid = true;\r\n\r\n  if (isDataValid) {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        user: `insert into peoples(pid,name,email,pass,idaccess) values(${userId},'${name}','${email}','${pass}',${role});`,\r\n      }),\r\n    };\r\n\r\n    fetch(\"http://localhost:4000/addUser\", options)\r\n      .then((res) => res.text())\r\n      .catch((err) => console.log(err));\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,QAAoD;EAAA,IAAnD;IAACC,MAAM;IAAEC,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAI,CAAC;EAE9E,MAAMC,WAAW,GAAG,IAAI;EAExB,IAAIA,WAAW,EAAE;IACf,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAG,4DAA2Dd,MAAO,KAAIG,IAAK,MAAKF,KAAM,MAAKK,IAAK,KAAIJ,IAAK;MAClH,CAAC;IACH,CAAC;IAEDa,KAAK,CAAC,+BAA+B,EAAEP,OAAO,CAAC,CAC5CQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}