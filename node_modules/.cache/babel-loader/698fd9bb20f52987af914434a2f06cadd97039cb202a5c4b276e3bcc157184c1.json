{"ast":null,"code":"import { usersSliceActions } from \"..\";\nimport { normolizeEntities } from \"../../helpers/normalizeEntites\";\nimport { selectUsersIds } from \"../selectors\";\nexport const loadUsersIfNotExist = (dispatch, getState) => {\n  // if (selectUsersIds(getState())?.length > 0) {\n  //     return;\n  //   }\n\n  const options = {\n    method: \"POST\",\n    mode: 'no-cors',\n    headers: {\n      'Content-Type': 'text/json;charset=UTF-8'\n    },\n    body: JSON.stringify({\n      getCity: \"SELECT * FROM tbcity;\"\n    })\n  };\n\n  // dispatch(usersSliceActions.startLoading());\n\n  const url = new URL(\"http://localhost:4000/getUsers\");\n  fetch(url, options).then(res => res.text()).then(data => console.log(data)).catch(err => {\n    console.log(err);\n    // dispatch(usersSliceActions.failLoading());\n  });\n};","map":{"version":3,"names":["usersSliceActions","normolizeEntities","selectUsersIds","loadUsersIfNotExist","dispatch","getState","options","method","mode","headers","body","JSON","stringify","getCity","url","URL","fetch","then","res","text","data","console","log","catch","err"],"sources":["C:/Development/uno/client/src/store/Users/middlewares/loadUsersIfNotExist.js"],"sourcesContent":["import { usersSliceActions } from \"..\";\r\nimport { normolizeEntities } from \"../../helpers/normalizeEntites\";\r\nimport { selectUsersIds } from \"../selectors\";\r\n\r\nexport const loadUsersIfNotExist = (dispatch, getState) => {\r\n  // if (selectUsersIds(getState())?.length > 0) {\r\n  //     return;\r\n  //   }\r\n\r\n  const options = {\r\n    method: \"POST\",\r\n    mode: 'no-cors',\r\n    headers: {\r\n      'Content-Type': 'text/json;charset=UTF-8'\r\n    },\r\n    body: JSON.stringify({\r\n      getCity: \"SELECT * FROM tbcity;\",\r\n    }),\r\n  };\r\n\r\n  // dispatch(usersSliceActions.startLoading());\r\n\r\n  const url = new URL(\"http://localhost:4000/getUsers\");\r\n\r\n  fetch(url, options)\r\n    .then((res) => res.text())\r\n    .then((data) => console.log(data))\r\n    .catch((err) => {\r\n      console.log(err);\r\n      // dispatch(usersSliceActions.failLoading());\r\n    })\r\n};\r\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,IAAI;AACtC,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,cAAc,QAAQ,cAAc;AAE7C,OAAO,MAAMC,mBAAmB,GAAG,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EACzD;EACA;EACA;;EAEA,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,SAAS;IACfC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;;EAED;;EAEA,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,gCAAgC,CAAC;EAErDC,KAAK,CAACF,GAAG,EAAER,OAAO,CAAC,CAChBW,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CACjCG,KAAK,CAAEC,GAAG,IAAK;IACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IAChB;EACF,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}