{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\11312\\\\client\\\\src\\\\Components\\\\Users\\\\Users.jsx\",\n  _s = $RefreshSig$();\nimport classNames from 'classnames';\nimport styles from './styles.module.css';\nimport { nanoid } from 'nanoid';\nimport addIMG from './images/add.svg';\nimport editIMG from './images/edit.svg';\nimport deleteIMG from './images/delete.svg';\nimport { EditPopup } from '../EditPopup/EditPopup';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { usersSliceActions } from '../../store/Users';\nimport { selectUsers, selectUsersIds, selectUsersIsLoading } from '../../store/Users/selectors';\nimport { loadUsersIfNotExist } from '../../store/Users/middlewares/loadUsersIfNotExist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Users = _ref => {\n  _s();\n  let {\n    asideIsOpened\n  } = _ref;\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => selectUsersIsLoading(state));\n  useEffect(() => {\n    // dispatch(data.map(el => usersSliceActions.addUser(el)));\n    dispatch(loadUsersIfNotExist);\n  }, []);\n  const usersIds = useSelector(state => selectUsersIds(state));\n  const usersData = useSelector(state => selectUsers(state));\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\n  const togglePopup = () => {\n    setIsPopupOpened(!isPopupOpened);\n  };\n  const headers = ['#', 'НАИМЕНОВАНИЕ', 'E-mail', 'Телефон', 'Роль', 'Франшиза', 'Баланс'];\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: styles.table,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: styles.table_header,\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: styles.table_row,\n        children: headers.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            className: classNames(styles.table_cell, styles.table_cell__header),\n            children: el\n          }, nanoid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      className: styles.table_content,\n      children: usersIds.map((el, row) => {\n        const user = usersData[el];\n        const {\n          AMOUNT,\n          CITY,\n          PAKET,\n          NAME,\n          PHONE,\n          ORG_OWNER\n        } = el;\n        console.log(user);\n\n        // return (\n        //   <tr key={nanoid()} className={styles.table_row}>\n        //     {.map((_, idx) => {\n        //       switch (idx) {\n        //         default: return (\n        //           <td key={nanoid()} className={styles.table_cell}>\n        //           </td>\n        //         );\n        //         case 0:\n        //           return (\n        //             <td key={nanoid()} className={styles.table_cell}>\n        //               {+row + 1}\n        //             </td>\n        //           );\n        //         case 1:\n        //           return (\n        //             <td key={nanoid()} className={styles.table_cell}>\n        //               {NAME}\n        //             </td>\n        //           );\n        //         case 2:\n        //           return (\n        //             <td key={nanoid()} className={styles.table_cell}>\n        //               {PAKET}\n        //             </td>\n        //           );\n        //         case 3:\n        //           return (\n        //             <td key={nanoid()} className={styles.table_cell}>\n        //               {PHONE}\n        //             </td>\n        //           );\n        //         case 4:\n        //           return (\n        //             <td key={nanoid()} className={styles.table_cell}>\n        //               {ORG_OWNER}\n        //             </td>\n        //           );\n        //         case 5:\n        //           return (\n        //             <td key={nanoid()} className={styles.table_cell}>\n        //               {CITY}\n        //             </td>\n        //           );\n        //         case 6:\n        //           return (\n        //             <td key={nanoid()} className={styles.table_cell}>\n        //               <div className={styles.table_cell__balance}>{AMOUNT ? AMOUNT.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : 0}</div>\n        //             </td>\n        //           );\n        //       }\n        //     })}\n        //   </tr>\n        // );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames(styles.bar_container, {\n        [styles.bar_moved]: !asideIsOpened\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.bar_button,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: addIMG,\n          alt: \"add button\",\n          className: styles.bar_buttonImage,\n          onClick: () => togglePopup()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.bar_button,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: editIMG,\n          alt: \"add button\",\n          className: styles.bar_buttonImage,\n          onClick: () => console.log('add')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames(styles.bar_button, styles.bar_button__delete),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: deleteIMG,\n          alt: \"add button\",\n          className: styles.bar_buttonImage,\n          onClick: () => console.log('add')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), isPopupOpened && /*#__PURE__*/_jsxDEV(EditPopup, {\n      isPopupOpened: isPopupOpened,\n      togglePopup: togglePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"jwBf5RFcbvGphUNR3SGh19Q6Zt4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["classNames","styles","nanoid","addIMG","editIMG","deleteIMG","EditPopup","useState","useDispatch","useSelector","useEffect","usersSliceActions","selectUsers","selectUsersIds","selectUsersIsLoading","loadUsersIfNotExist","Users","asideIsOpened","dispatch","isLoading","state","usersIds","usersData","isPopupOpened","setIsPopupOpened","togglePopup","headers","table","table_header","table_row","map","el","table_cell","table_cell__header","table_content","row","user","AMOUNT","CITY","PAKET","NAME","PHONE","ORG_OWNER","console","log","bar_container","bar_moved","bar_button","bar_buttonImage","bar_button__delete"],"sources":["C:/Development/11312/client/src/Components/Users/Users.jsx"],"sourcesContent":["import classNames from 'classnames';\r\nimport styles from './styles.module.css';\r\nimport { nanoid } from 'nanoid';\r\nimport addIMG from './images/add.svg';\r\nimport editIMG from './images/edit.svg';\r\nimport deleteIMG from './images/delete.svg';\r\nimport { EditPopup } from '../EditPopup/EditPopup';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { usersSliceActions } from '../../store/Users';\r\nimport { selectUsers, selectUsersIds, selectUsersIsLoading } from '../../store/Users/selectors';\r\nimport { loadUsersIfNotExist } from '../../store/Users/middlewares/loadUsersIfNotExist';\r\n\r\nexport const Users = ({ asideIsOpened }) => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => selectUsersIsLoading(state))\r\n  useEffect(() => {\r\n    // dispatch(data.map(el => usersSliceActions.addUser(el)));\r\n    dispatch(loadUsersIfNotExist);\r\n  }, []);\r\n  const usersIds = useSelector(state => selectUsersIds(state));\r\n  const usersData = useSelector((state) => selectUsers(state));\r\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\r\n  const togglePopup = () => {\r\n    setIsPopupOpened(!isPopupOpened);\r\n  };\r\n\r\n  const headers = ['#', 'НАИМЕНОВАНИЕ', 'E-mail', 'Телефон', 'Роль', 'Франшиза', 'Баланс'];\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <table className={styles.table}>\r\n      <thead className={styles.table_header}>\r\n        <tr className={styles.table_row}>\r\n          {headers.map((el) => {\r\n            return (\r\n              <th\r\n                key={nanoid()}\r\n                className={classNames(styles.table_cell, styles.table_cell__header)}\r\n              >\r\n                {el}\r\n              </th>\r\n            );\r\n          })}\r\n        </tr>\r\n      </thead>\r\n      <tbody className={styles.table_content}>\r\n        {usersIds.map((el, row) => {\r\n          const user = usersData[el]\r\n          const { AMOUNT, CITY, PAKET, NAME, PHONE, ORG_OWNER } = el;\r\n\r\n          console.log(user)\r\n\r\n          // return (\r\n          //   <tr key={nanoid()} className={styles.table_row}>\r\n          //     {.map((_, idx) => {\r\n          //       switch (idx) {\r\n          //         default: return (\r\n          //           <td key={nanoid()} className={styles.table_cell}>\r\n          //           </td>\r\n          //         );\r\n          //         case 0:\r\n          //           return (\r\n          //             <td key={nanoid()} className={styles.table_cell}>\r\n          //               {+row + 1}\r\n          //             </td>\r\n          //           );\r\n          //         case 1:\r\n          //           return (\r\n          //             <td key={nanoid()} className={styles.table_cell}>\r\n          //               {NAME}\r\n          //             </td>\r\n          //           );\r\n          //         case 2:\r\n          //           return (\r\n          //             <td key={nanoid()} className={styles.table_cell}>\r\n          //               {PAKET}\r\n          //             </td>\r\n          //           );\r\n          //         case 3:\r\n          //           return (\r\n          //             <td key={nanoid()} className={styles.table_cell}>\r\n          //               {PHONE}\r\n          //             </td>\r\n          //           );\r\n          //         case 4:\r\n          //           return (\r\n          //             <td key={nanoid()} className={styles.table_cell}>\r\n          //               {ORG_OWNER}\r\n          //             </td>\r\n          //           );\r\n          //         case 5:\r\n          //           return (\r\n          //             <td key={nanoid()} className={styles.table_cell}>\r\n          //               {CITY}\r\n          //             </td>\r\n          //           );\r\n          //         case 6:\r\n          //           return (\r\n          //             <td key={nanoid()} className={styles.table_cell}>\r\n          //               <div className={styles.table_cell__balance}>{AMOUNT ? AMOUNT.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : 0}</div>\r\n          //             </td>\r\n          //           );\r\n          //       }\r\n          //     })}\r\n          //   </tr>\r\n          // );\r\n        })}\r\n      </tbody>\r\n      <div className={classNames(styles.bar_container, {\r\n        [styles.bar_moved]: !asideIsOpened\r\n      })}>\r\n        <div className={styles.bar_button}>\r\n          <img\r\n            src={addIMG}\r\n            alt=\"add button\"\r\n            className={styles.bar_buttonImage}\r\n            onClick={() => togglePopup()}\r\n          />\r\n        </div>\r\n        <div className={styles.bar_button}>\r\n          <img\r\n            src={editIMG}\r\n            alt=\"add button\"\r\n            className={styles.bar_buttonImage}\r\n            onClick={() => console.log('add')}\r\n          />\r\n        </div>\r\n        <div className={classNames(styles.bar_button, styles.bar_button__delete)}>\r\n          <img\r\n            src={deleteIMG}\r\n            alt=\"add button\"\r\n            className={styles.bar_buttonImage}\r\n            onClick={() => console.log('add')}\r\n          />\r\n        </div>\r\n      </div>\r\n      {isPopupOpened && <EditPopup isPopupOpened={isPopupOpened} togglePopup={togglePopup}/>}\r\n    </table>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,iBAAiB,QAAQ,mBAAmB;AACrD,SAASC,WAAW,EAAEC,cAAc,EAAEC,oBAAoB,QAAQ,6BAA6B;AAC/F,SAASC,mBAAmB,QAAQ,mDAAmD;AAAC;AAExF,OAAO,MAAMC,KAAK,GAAG,QAAuB;EAAA;EAAA,IAAtB;IAAEC;EAAc,CAAC;EACrC,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,SAAS,GAAGV,WAAW,CAAEW,KAAK,IAAKN,oBAAoB,CAACM,KAAK,CAAC,CAAC;EACrEV,SAAS,CAAC,MAAM;IACd;IACAQ,QAAQ,CAACH,mBAAmB,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EACN,MAAMM,QAAQ,GAAGZ,WAAW,CAACW,KAAK,IAAIP,cAAc,CAACO,KAAK,CAAC,CAAC;EAC5D,MAAME,SAAS,GAAGb,WAAW,CAAEW,KAAK,IAAKR,WAAW,CAACQ,KAAK,CAAC,CAAC;EAC5D,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMkB,WAAW,GAAG,MAAM;IACxBD,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,MAAMG,OAAO,GAAG,CAAC,GAAG,EAAE,cAAc,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC;EAExF,IAAIP,SAAS,EAAE;IACb,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAC9B;EAEA,oBACE;IAAO,SAAS,EAAElB,MAAM,CAAC0B,KAAM;IAAA,wBAC7B;MAAO,SAAS,EAAE1B,MAAM,CAAC2B,YAAa;MAAA,uBACpC;QAAI,SAAS,EAAE3B,MAAM,CAAC4B,SAAU;QAAA,UAC7BH,OAAO,CAACI,GAAG,CAAEC,EAAE,IAAK;UACnB,oBACE;YAEE,SAAS,EAAE/B,UAAU,CAACC,MAAM,CAAC+B,UAAU,EAAE/B,MAAM,CAACgC,kBAAkB,CAAE;YAAA,UAEnEF;UAAE,GAHE7B,MAAM,EAAE;YAAA;YAAA;YAAA;UAAA,QAIV;QAET,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QACC,eACR;MAAO,SAAS,EAAED,MAAM,CAACiC,aAAc;MAAA,UACpCb,QAAQ,CAACS,GAAG,CAAC,CAACC,EAAE,EAAEI,GAAG,KAAK;QACzB,MAAMC,IAAI,GAAGd,SAAS,CAACS,EAAE,CAAC;QAC1B,MAAM;UAAEM,MAAM;UAAEC,IAAI;UAAEC,KAAK;UAAEC,IAAI;UAAEC,KAAK;UAAEC;QAAU,CAAC,GAAGX,EAAE;QAE1DY,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;;QAEjB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACI,eACR;MAAK,SAAS,EAAEpC,UAAU,CAACC,MAAM,CAAC4C,aAAa,EAAE;QAC/C,CAAC5C,MAAM,CAAC6C,SAAS,GAAG,CAAC7B;MACvB,CAAC,CAAE;MAAA,wBACD;QAAK,SAAS,EAAEhB,MAAM,CAAC8C,UAAW;QAAA,uBAChC;UACE,GAAG,EAAE5C,MAAO;UACZ,GAAG,EAAC,YAAY;UAChB,SAAS,EAAEF,MAAM,CAAC+C,eAAgB;UAClC,OAAO,EAAE,MAAMvB,WAAW;QAAG;UAAA;UAAA;UAAA;QAAA;MAC7B;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAExB,MAAM,CAAC8C,UAAW;QAAA,uBAChC;UACE,GAAG,EAAE3C,OAAQ;UACb,GAAG,EAAC,YAAY;UAChB,SAAS,EAAEH,MAAM,CAAC+C,eAAgB;UAClC,OAAO,EAAE,MAAML,OAAO,CAACC,GAAG,CAAC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA;MAClC;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAE5C,UAAU,CAACC,MAAM,CAAC8C,UAAU,EAAE9C,MAAM,CAACgD,kBAAkB,CAAE;QAAA,uBACvE;UACE,GAAG,EAAE5C,SAAU;UACf,GAAG,EAAC,YAAY;UAChB,SAAS,EAAEJ,MAAM,CAAC+C,eAAgB;UAClC,OAAO,EAAE,MAAML,OAAO,CAACC,GAAG,CAAC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA;MAClC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,EACLrB,aAAa,iBAAI,QAAC,SAAS;MAAC,aAAa,EAAEA,aAAc;MAAC,WAAW,EAAEE;IAAY;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAChF;AAEZ,CAAC;AAAC,GAlIWT,KAAK;EAAA,QACCR,WAAW,EACVC,WAAW,EAKZA,WAAW,EACVA,WAAW;AAAA;AAAA,KARlBO,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}