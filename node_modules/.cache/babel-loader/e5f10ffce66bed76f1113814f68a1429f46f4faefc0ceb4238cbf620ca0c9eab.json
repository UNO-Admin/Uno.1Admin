{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\uno\\\\src\\\\Pages\\\\Objects\\\\Objects.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OBJECT_HEADERS = [\"ID\", \"Название\", \"Город\", \"Телефон\", \"Дата\", \"Партнер\", \"Баланс\"];\nexport const Objects = () => {\n  _s();\n  const isLoading = useSelector(state => selectObjectsIsLoading(state));\n  const objectsIds = useSelector(state => selectObjectsIds(state));\n  const [isRowSelected, setIsRowSelected] = useState(false);\n  const [filter, setFilter] = useState({\n    name: \"\",\n    city: \"\"\n  });\n  const setName = e => {\n    setFilter({\n      ...filter,\n      name: e.target.value\n    });\n  };\n  let userId = useSelector(state => selectUserId(state));\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\n  const togglePopup = () => {\n    setIsPopupOpened(!isPopupOpened);\n  };\n  if (localStorage.userId) {\n    userId = localStorage.userId;\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.objects_wrapper,\n    children: [!isRowSelected && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n          headers: OBJECT_HEADERS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), objectsIds === null || objectsIds === void 0 ? void 0 : objectsIds.map(id => /*#__PURE__*/_jsxDEV(ObjectDataContainer, {\n          id: id,\n          filter: filter,\n          onclick: setIsRowSelected\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonBar, {\n        onClicks: [togglePopup]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isRowSelected && /*#__PURE__*/_jsxDEV(Object, {\n      toggleObject: setIsRowSelected,\n      id: isRowSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), isPopupOpened && /*#__PURE__*/_jsxDEV(PopupContainer, {\n      togglePopup: togglePopup,\n      children: /*#__PURE__*/_jsxDEV(AddObjectForm, {\n        togglePopup: togglePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Objects, \"nWWPDvY0/8kFOFTKAdl83WrRnTM=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = Objects;\nvar _c;\n$RefreshReg$(_c, \"Objects\");","map":{"version":3,"names":["useState","useSelector","styles","OBJECT_HEADERS","Objects","isLoading","state","selectObjectsIsLoading","objectsIds","selectObjectsIds","isRowSelected","setIsRowSelected","filter","setFilter","name","city","setName","e","target","value","userId","selectUserId","isPopupOpened","setIsPopupOpened","togglePopup","localStorage","objects_wrapper","map","id"],"sources":["D:/dev/uno/src/Pages/Objects/Objects.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst OBJECT_HEADERS = [\r\n  \"ID\",\r\n  \"Название\",\r\n  \"Город\",\r\n  \"Телефон\",\r\n  \"Дата\",\r\n  \"Партнер\",\r\n  \"Баланс\",\r\n];\r\n\r\nexport const Objects = () => {\r\n  const isLoading = useSelector((state) => selectObjectsIsLoading(state));\r\n  const objectsIds = useSelector((state) => selectObjectsIds(state));\r\n  const [isRowSelected, setIsRowSelected] = useState(false);\r\n  const [filter, setFilter] = useState({ name: \"\", city: \"\" });\r\n  const setName = (e) => {\r\n    setFilter({ ...filter, name: e.target.value });\r\n  };\r\n  let userId = useSelector((state) => selectUserId(state));\r\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\r\n  const togglePopup = () => {\r\n    setIsPopupOpened(!isPopupOpened);\r\n  };\r\n  if (localStorage.userId) {\r\n    userId = localStorage.userId;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className={styles.objects_wrapper}>\r\n      {!isRowSelected && (\r\n        <>\r\n          <Table>\r\n            <TableHeader headers={OBJECT_HEADERS} />\r\n            {objectsIds?.map((id) => (\r\n              <ObjectDataContainer\r\n                key={id}\r\n                id={id}\r\n                filter={filter}\r\n                onclick={setIsRowSelected}\r\n              />\r\n            ))}\r\n          </Table>\r\n          <ButtonBar onClicks={[togglePopup]} />\r\n        </>\r\n      )}\r\n      {isRowSelected && (\r\n        <Object\r\n          toggleObject={setIsRowSelected}\r\n          id={isRowSelected}\r\n        />\r\n      )}\r\n\r\n      {isPopupOpened && (\r\n        <PopupContainer togglePopup={togglePopup}>\r\n          <AddObjectForm togglePopup={togglePopup} />\r\n        </PopupContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAAA;AAEzC,MAAMC,cAAc,GAAG,CACrB,IAAI,EACJ,UAAU,EACV,OAAO,EACP,SAAS,EACT,MAAM,EACN,SAAS,EACT,QAAQ,CACT;AAED,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EAC3B,MAAMC,SAAS,GAAGJ,WAAW,CAAEK,KAAK,IAAKC,sBAAsB,CAACD,KAAK,CAAC,CAAC;EACvE,MAAME,UAAU,GAAGP,WAAW,CAAEK,KAAK,IAAKG,gBAAgB,CAACH,KAAK,CAAC,CAAC;EAClE,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC;IAAEc,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAC5D,MAAMC,OAAO,GAAIC,CAAC,IAAK;IACrBJ,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEE,IAAI,EAAEG,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAChD,CAAC;EACD,IAAIC,MAAM,GAAGnB,WAAW,CAAEK,KAAK,IAAKe,YAAY,CAACf,KAAK,CAAC,CAAC;EACxD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMwB,WAAW,GAAG,MAAM;IACxBD,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EACD,IAAIG,YAAY,CAACL,MAAM,EAAE;IACvBA,MAAM,GAAGK,YAAY,CAACL,MAAM;EAC9B;EAEA,IAAIf,SAAS,EAAE;IACb,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAC9B;EACA,oBACE;IAAK,SAAS,EAAEH,MAAM,CAACwB,eAAgB;IAAA,WACpC,CAAChB,aAAa,iBACb;MAAA,wBACE,QAAC,KAAK;QAAA,wBACJ,QAAC,WAAW;UAAC,OAAO,EAAEP;QAAe;UAAA;UAAA;UAAA;QAAA,QAAG,EACvCK,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEmB,GAAG,CAAEC,EAAE,iBAClB,QAAC,mBAAmB;UAElB,EAAE,EAAEA,EAAG;UACP,MAAM,EAAEhB,MAAO;UACf,OAAO,EAAED;QAAiB,GAHrBiB,EAAE;UAAA;UAAA;UAAA;QAAA,QAKV,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACI,eACR,QAAC,SAAS;QAAC,QAAQ,EAAE,CAACJ,WAAW;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA,gBAEzC,EACAd,aAAa,iBACZ,QAAC,MAAM;MACL,YAAY,EAAEC,gBAAiB;MAC/B,EAAE,EAAED;IAAc;MAAA;MAAA;MAAA;IAAA,QAErB,EAEAY,aAAa,iBACZ,QAAC,cAAc;MAAC,WAAW,EAAEE,WAAY;MAAA,uBACvC,QAAC,aAAa;QAAC,WAAW,EAAEA;MAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAE9C;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GApDWpB,OAAO;EAAA,QACAH,WAAW,EACVA,WAAW,EAMjBA,WAAW;AAAA;AAAA,KARbG,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}