{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\11312\\\\client\\\\src\\\\Components\\\\Users\\\\Users.jsx\",\n  _s = $RefreshSig$();\nimport classNames from \"classnames\";\nimport styles from \"./styles.module.css\";\nimport { nanoid } from \"nanoid\";\nimport { AddPopup } from \"../AddPopup/AddPopup\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { selectUsersIds, selectUsersIsLoading } from \"../../store/Users/selectors\";\nimport { loadUsers } from \"../../store/Users/Thunks/loadUsers\";\nimport { DeletePopup } from \"../DeletePopup/DeletePopup\";\nimport { EditPopup } from \"../EditPopup/EditPopup\";\nimport { ButtonBar } from \"../ButtonsBar/ButtonsBar\";\nimport { UserData } from \"../UserData/UserData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Users = _ref => {\n  _s();\n  let {\n    asideIsOpened\n  } = _ref;\n  const barStyles = {\n    button: classNames(styles.bar_button, styles.button),\n    delete: classNames(styles.bar_button, styles.bar_button__delete, styles.button),\n    img: styles.bar_buttonImage,\n    wrapper: classNames(styles.bar_container, {\n      [styles.bar_moved]: !asideIsOpened\n    })\n  };\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => selectUsersIsLoading(state));\n  useEffect(() => {\n    dispatch(loadUsers({\n      userId\n    }));\n    setIsRowSelected(false);\n  }, [userId, dispatch]);\n  const usersIds = useSelector(state => selectUsersIds(state));\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\n  const [isRowSelected, setIsRowSelected] = useState(false);\n  const [isEditPopupOpened, setIsEditPopupOpened] = useState(false);\n  const [isDeletePopupOpened, setIsDeletePopupOpened] = useState(false);\n  const [selectedRow, setSelectedRow] = useState(false);\n  const userId = localStorage.userId / 1;\n  const toggleAddPopup = () => {\n    setIsPopupOpened(!isPopupOpened);\n  };\n  const resetSelectedRow = () => {\n    setSelectedRow(false);\n    setIsRowSelected(false);\n  };\n  const toggleDeletePopup = () => {\n    setIsDeletePopupOpened(!isDeletePopupOpened);\n  };\n  const toggleEditPopup = () => {\n    setIsEditPopupOpened(!isEditPopupOpened);\n  };\n  const toggleSelectedRow = el => {\n    if (userId / 1 !== el) {\n      if (!!el) {\n        if (selectedRow === el) {\n          resetSelectedRow();\n        } else {\n          setIsRowSelected(true);\n          setSelectedRow(el);\n        }\n      } else {\n        resetSelectedRow();\n      }\n    }\n  };\n  const headers = [\"#\", \"НАИМЕНОВАНИЕ\", \"E-mail\", \"Телефон\", \"Роль\", \"Франшиза\", \"Баланс\"];\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.users_wrapper,\n    children: [true ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: styles.table_header,\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: styles.table_row,\n          children: headers === null || headers === void 0 ? void 0 : headers.map(el => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              className: classNames(styles.table_cell, styles.table_cell__header),\n              children: el\n            }, nanoid(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: styles.table_content,\n        children: usersIds === null || usersIds === void 0 ? void 0 : usersIds.map(el => {\n          return /*#__PURE__*/_jsxDEV(UserData, {\n            onclick: toggleSelectedRow,\n            userId: el,\n            selectedRow: selectedRow\n          }, nanoid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyData,\n      children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBar, {\n      onClicks: [toggleAddPopup, toggleEditPopup, toggleDeletePopup],\n      disabled: !isRowSelected,\n      styles: barStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), isPopupOpened && /*#__PURE__*/_jsxDEV(AddPopup, {\n      toggleAddPopup: toggleAddPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }, this), isDeletePopupOpened && /*#__PURE__*/_jsxDEV(DeletePopup, {\n      id: selectedRow,\n      toggleDeletePopup: toggleDeletePopup,\n      resetSelectedRow: resetSelectedRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), isEditPopupOpened && /*#__PURE__*/_jsxDEV(EditPopup, {\n      id: selectedRow,\n      togglePopup: toggleEditPopup,\n      resetSelectedRow: resetSelectedRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"gHKeEWE/JwLkZJtVeCdELBjj4Iw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["classNames","styles","nanoid","AddPopup","useState","useDispatch","useSelector","useEffect","selectUsersIds","selectUsersIsLoading","loadUsers","DeletePopup","EditPopup","ButtonBar","UserData","Users","asideIsOpened","barStyles","button","bar_button","delete","bar_button__delete","img","bar_buttonImage","wrapper","bar_container","bar_moved","dispatch","isLoading","state","userId","setIsRowSelected","usersIds","isPopupOpened","setIsPopupOpened","isRowSelected","isEditPopupOpened","setIsEditPopupOpened","isDeletePopupOpened","setIsDeletePopupOpened","selectedRow","setSelectedRow","localStorage","toggleAddPopup","resetSelectedRow","toggleDeletePopup","toggleEditPopup","toggleSelectedRow","el","headers","users_wrapper","table","table_header","table_row","map","table_cell","table_cell__header","table_content","emptyData"],"sources":["C:/Development/11312/client/src/Components/Users/Users.jsx"],"sourcesContent":["import classNames from \"classnames\";\r\nimport styles from \"./styles.module.css\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { AddPopup } from \"../AddPopup/AddPopup\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  selectUsersIds,\r\n  selectUsersIsLoading,\r\n} from \"../../store/Users/selectors\";\r\nimport { loadUsers } from \"../../store/Users/Thunks/loadUsers\";\r\nimport { DeletePopup } from \"../DeletePopup/DeletePopup\";\r\nimport { EditPopup } from \"../EditPopup/EditPopup\";\r\nimport { ButtonBar } from \"../ButtonsBar/ButtonsBar\";\r\nimport { UserData } from \"../UserData/UserData\";\r\n\r\nexport const Users = ({ asideIsOpened }) => {\r\n  const barStyles = {\r\n    button: classNames(styles.bar_button, styles.button),\r\n    delete: classNames(\r\n      styles.bar_button,\r\n      styles.bar_button__delete,\r\n      styles.button\r\n    ),\r\n    img: styles.bar_buttonImage,\r\n    wrapper: classNames(styles.bar_container, {\r\n      [styles.bar_moved]: !asideIsOpened,\r\n    }),\r\n  };\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => selectUsersIsLoading(state));\r\n  useEffect(() => {\r\n    dispatch(loadUsers({ userId }));\r\n    setIsRowSelected(false);\r\n  }, [userId, dispatch]);\r\n  const usersIds = useSelector((state) => selectUsersIds(state));\r\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\r\n  const [isRowSelected, setIsRowSelected] = useState(false);\r\n  const [isEditPopupOpened, setIsEditPopupOpened] = useState(false);\r\n  const [isDeletePopupOpened, setIsDeletePopupOpened] = useState(false);\r\n  const [selectedRow, setSelectedRow] = useState(false);\r\n\r\n  const userId = localStorage.userId / 1;\r\n\r\n  const toggleAddPopup = () => {\r\n    setIsPopupOpened(!isPopupOpened);\r\n  };\r\n  const resetSelectedRow = () => {\r\n    setSelectedRow(false);\r\n    setIsRowSelected(false);\r\n  };\r\n  const toggleDeletePopup = () => {\r\n    setIsDeletePopupOpened(!isDeletePopupOpened);\r\n  };\r\n\r\n  const toggleEditPopup = () => {\r\n    setIsEditPopupOpened(!isEditPopupOpened);\r\n  };\r\n\r\n  const toggleSelectedRow = (el) => {\r\n    if (userId / 1 !== el) {\r\n      if (!!el) {\r\n        if (selectedRow === el) {\r\n          resetSelectedRow();\r\n        } else {\r\n          setIsRowSelected(true);\r\n          setSelectedRow(el);\r\n        }\r\n      } else {\r\n        resetSelectedRow();\r\n      }\r\n    }\r\n  };\r\n\r\n  const headers = [\r\n    \"#\",\r\n    \"НАИМЕНОВАНИЕ\",\r\n    \"E-mail\",\r\n    \"Телефон\",\r\n    \"Роль\",\r\n    \"Франшиза\",\r\n    \"Баланс\",\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.users_wrapper}>\r\n      {true ? (\r\n        <table className={styles.table}>\r\n          <thead className={styles.table_header}>\r\n            <tr className={styles.table_row}>\r\n              {headers?.map((el) => {\r\n                return (\r\n                  <th\r\n                    key={nanoid()}\r\n                    className={classNames(\r\n                      styles.table_cell,\r\n                      styles.table_cell__header\r\n                    )}\r\n                  >\r\n                    {el}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody className={styles.table_content}>\r\n            {usersIds?.map((el) => {\r\n              return (\r\n                <UserData\r\n                  onclick={toggleSelectedRow}\r\n                  userId={el}\r\n                  selectedRow={selectedRow}\r\n                  key={nanoid()}\r\n                />\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div className={styles.emptyData}>Данные отсутствуют</div>\r\n      )}\r\n\r\n      <ButtonBar\r\n        onClicks={[toggleAddPopup, toggleEditPopup, toggleDeletePopup]}\r\n        disabled={!isRowSelected}\r\n        styles={barStyles}\r\n      />\r\n      {isPopupOpened && <AddPopup toggleAddPopup={toggleAddPopup} />}\r\n      {isDeletePopupOpened && (\r\n        <DeletePopup\r\n          id={selectedRow}\r\n          toggleDeletePopup={toggleDeletePopup}\r\n          resetSelectedRow={resetSelectedRow}\r\n        />\r\n      )}\r\n      {isEditPopupOpened && (\r\n        <EditPopup\r\n          id={selectedRow}\r\n          togglePopup={toggleEditPopup}\r\n          resetSelectedRow={resetSelectedRow}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}