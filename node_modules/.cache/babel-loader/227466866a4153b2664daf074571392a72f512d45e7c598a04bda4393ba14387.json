{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  userData: {},\n  isAuthenticated: false,\n  status: \"idle\"\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    startLoadingUser: () => {\n      return {\n        userData: {},\n        isAuthenticated: false,\n        status: \"loading\"\n      };\n    },\n    login: (state, action) => {\n      const userData = action.payload;\n      localStorage.setItem(\"user\", userData.NAME);\n      localStorage.setItem(\"userId\", userData.ID);\n      localStorage.setItem(\"userIdAccess\", userData.IDACCESS);\n      state = {\n        userData,\n        isAuthenticated: true,\n        status: \"successLoading\"\n      };\n      return state;\n    },\n    errorLoading: (state, action) => {\n      const {\n        err\n      } = action.payload;\n      return {\n        userData: {},\n        isAuthenticated: false,\n        status: \"failLoading\",\n        err\n      };\n    },\n    logout: state => {\n      state = initialState;\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"userIdAccess\");\n      return state;\n    },\n    setErrorChangePass: (state, action) => {\n      console.log(action.payload);\n      const errorMessage = action.payload;\n\n      // return {\n      //   ...state,\n      //   errorMessage,\n      // };\n      return state;\n    },\n    successChangePass: (state, action) => {\n      const mess = action.payload;\n      console.log('successmessage: ', mess);\n      return {\n        ...state,\n        mess: '123'\n      };\n    }\n  }\n});\nexport const authSliceActions = authSlice.actions;","map":{"version":3,"names":["createSlice","initialState","userData","isAuthenticated","status","authSlice","name","reducers","startLoadingUser","login","state","action","payload","localStorage","setItem","NAME","ID","IDACCESS","errorLoading","err","logout","removeItem","setErrorChangePass","console","log","errorMessage","successChangePass","mess","authSliceActions","actions"],"sources":["C:/Development/11312/client/src/store/Auth/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  userData: {},\r\n  isAuthenticated: false,\r\n  status: \"idle\",\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    startLoadingUser: () => {\r\n      return {\r\n        userData: {},\r\n        isAuthenticated: false,\r\n        status: \"loading\",\r\n      };\r\n    },\r\n    login: (state, action) => {\r\n      const userData = action.payload;\r\n      localStorage.setItem(\"user\", userData.NAME);\r\n      localStorage.setItem(\"userId\", userData.ID);\r\n      localStorage.setItem(\"userIdAccess\", userData.IDACCESS);\r\n      state = {\r\n        userData,\r\n        isAuthenticated: true,\r\n        status: \"successLoading\",\r\n      };\r\n      return state;\r\n    },\r\n    errorLoading: (state, action) => {\r\n      const { err } = action.payload;\r\n      return {\r\n        userData: {},\r\n        isAuthenticated: false,\r\n        status: \"failLoading\",\r\n        err,\r\n      };\r\n    },\r\n    logout: (state) => {\r\n      state = initialState;\r\n\r\n      localStorage.removeItem(\"user\");\r\n      localStorage.removeItem(\"userId\");\r\n      localStorage.removeItem(\"userIdAccess\");\r\n\r\n      return state;\r\n    },\r\n    setErrorChangePass: (state, action) => {\r\n      console.log(action.payload)\r\n      const errorMessage = action.payload;\r\n\r\n      // return {\r\n      //   ...state,\r\n      //   errorMessage,\r\n      // };\r\n      return state\r\n    },\r\n    successChangePass: (state, action) => {\r\n      const mess = action.payload;\r\n      console.log('successmessage: ', mess)\r\n      return {\r\n        ...state,\r\n        mess: '123'\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const authSliceActions = authSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,CAAC,CAAC;EACZC,eAAe,EAAE,KAAK;EACtBC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;EACnCM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,gBAAgB,EAAE,MAAM;MACtB,OAAO;QACLN,QAAQ,EAAE,CAAC,CAAC;QACZC,eAAe,EAAE,KAAK;QACtBC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDK,KAAK,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxB,MAAMT,QAAQ,GAAGS,MAAM,CAACC,OAAO;MAC/BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEZ,QAAQ,CAACa,IAAI,CAAC;MAC3CF,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEZ,QAAQ,CAACc,EAAE,CAAC;MAC3CH,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEZ,QAAQ,CAACe,QAAQ,CAAC;MACvDP,KAAK,GAAG;QACNR,QAAQ;QACRC,eAAe,EAAE,IAAI;QACrBC,MAAM,EAAE;MACV,CAAC;MACD,OAAOM,KAAK;IACd,CAAC;IACDQ,YAAY,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAM;QAAEQ;MAAI,CAAC,GAAGR,MAAM,CAACC,OAAO;MAC9B,OAAO;QACLV,QAAQ,EAAE,CAAC,CAAC;QACZC,eAAe,EAAE,KAAK;QACtBC,MAAM,EAAE,aAAa;QACrBe;MACF,CAAC;IACH,CAAC;IACDC,MAAM,EAAGV,KAAK,IAAK;MACjBA,KAAK,GAAGT,YAAY;MAEpBY,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;MAC/BR,YAAY,CAACQ,UAAU,CAAC,QAAQ,CAAC;MACjCR,YAAY,CAACQ,UAAU,CAAC,cAAc,CAAC;MAEvC,OAAOX,KAAK;IACd,CAAC;IACDY,kBAAkB,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAK;MACrCY,OAAO,CAACC,GAAG,CAACb,MAAM,CAACC,OAAO,CAAC;MAC3B,MAAMa,YAAY,GAAGd,MAAM,CAACC,OAAO;;MAEnC;MACA;MACA;MACA;MACA,OAAOF,KAAK;IACd,CAAC;IACDgB,iBAAiB,EAAE,CAAChB,KAAK,EAAEC,MAAM,KAAK;MACpC,MAAMgB,IAAI,GAAGhB,MAAM,CAACC,OAAO;MAC3BW,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEG,IAAI,CAAC;MACrC,OAAO;QACL,GAAGjB,KAAK;QACRiB,IAAI,EAAE;MACR,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAGvB,SAAS,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}