{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  entities: {},\n  ids: [],\n  status: 'idle'\n};\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    startLoading: () => {\n      return {\n        entities: {},\n        ids: [],\n        status: 'loading'\n      };\n    },\n    successLoading: (state, action) => {\n      const {\n        entities,\n        ids\n      } = action.payload;\n      return {\n        entities,\n        ids,\n        status: 'success'\n      };\n    },\n    failLoading: () => {\n      return {\n        entities: {},\n        ids: [],\n        status: 'fail'\n      };\n    },\n    addUser: (state, action) => {\n      const {\n        email,\n        name,\n        phone,\n        city,\n        password,\n        role\n      } = action.payload;\n      state.email = {\n        Наименование: name,\n        'E-mail': email,\n        Телефон: '+77007007070',\n        Роль: 'admin',\n        Франшиза: 'Шымкент, Сарыагаш',\n        баланс: '250000'\n      };\n    }\n  }\n});\nexport const usersSliceActions = usersSlice.actions;\n\n// Наименование: 'UM System Group',\n//       'E-mail': 'example@mail.ru',\n//       Телефон: '+77007007070',\n//       Роль: 'admin',\n//       Франшиза: 'Шымкент, Сарыагаш',\n//       баланс: '250000',","map":{"version":3,"names":["createSlice","initialState","entities","ids","status","usersSlice","name","reducers","startLoading","successLoading","state","action","payload","failLoading","addUser","email","phone","city","password","role","Наименование","Телефон","Роль","Франшиза","баланс","usersSliceActions","actions"],"sources":["C:/Development/uno/src/store/Users/index.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  entities: {},\r\n  ids: [],\r\n  status: 'idle',\r\n};\r\n\r\nexport const usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    startLoading: () => {\r\n      return {\r\n        entities: {},\r\n        ids: [],\r\n        status: 'loading',\r\n      };\r\n    },\r\n    successLoading: (state, action) => {\r\n      const { entities, ids } = action.payload;\r\n      return {\r\n        entities,\r\n        ids,\r\n        status: 'success',\r\n      };\r\n    },\r\n    failLoading: () => {\r\n      return {\r\n        entities: {},\r\n        ids: [],\r\n        status: 'fail',\r\n      };\r\n    },\r\n    addUser: (state, action) => {\r\n      const { email, name, phone, city, password, role } = action.payload;\r\n\r\n      state.email = {\r\n        Наименование: name,\r\n        'E-mail': email,\r\n        Телефон: '+77007007070',\r\n        Роль: 'admin',\r\n        Франшиза: 'Шымкент, Сарыагаш',\r\n        баланс: '250000',\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const usersSliceActions = usersSlice.actions;\r\n\r\n// Наименование: 'UM System Group',\r\n//       'E-mail': 'example@mail.ru',\r\n//       Телефон: '+77007007070',\r\n//       Роль: 'admin',\r\n//       Франшиза: 'Шымкент, Сарыагаш',\r\n//       баланс: '250000',\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,CAAC,CAAC;EACZC,GAAG,EAAE,EAAE;EACPC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;EACpCM,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACRC,YAAY,EAAE,MAAM;MAClB,OAAO;QACLN,QAAQ,EAAE,CAAC,CAAC;QACZC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDK,cAAc,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAET,QAAQ;QAAEC;MAAI,CAAC,GAAGQ,MAAM,CAACC,OAAO;MACxC,OAAO;QACLV,QAAQ;QACRC,GAAG;QACHC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDS,WAAW,EAAE,MAAM;MACjB,OAAO;QACLX,QAAQ,EAAE,CAAC,CAAC;QACZC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDU,OAAO,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAM;QAAEI,KAAK;QAAET,IAAI;QAAEU,KAAK;QAAEC,IAAI;QAAEC,QAAQ;QAAEC;MAAK,CAAC,GAAGR,MAAM,CAACC,OAAO;MAEnEF,KAAK,CAACK,KAAK,GAAG;QACZK,YAAY,EAAEd,IAAI;QAClB,QAAQ,EAAES,KAAK;QACfM,OAAO,EAAE,cAAc;QACvBC,IAAI,EAAE,OAAO;QACbC,QAAQ,EAAE,mBAAmB;QAC7BC,MAAM,EAAE;MACV,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,iBAAiB,GAAGpB,UAAU,CAACqB,OAAO;;AAEnD;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}