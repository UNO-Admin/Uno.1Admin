{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\uno\\\\client\\\\src\\\\Components\\\\obj\\\\Objects.js\",\n  _s = $RefreshSig$();\nimport classNames from \"classnames\";\nimport { nanoid } from \"nanoid\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectObjectData, selectObjectsIds, selectObjectsIsLoading } from \"../../store/Objects/selectors\";\nimport { getObjects } from \"../../store/Objects/Thunks/getObjects\";\nimport styles from \"./styles.module.css\";\nimport { Object } from \"../Object/Object\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Objects = () => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => selectObjectsIsLoading(state));\n  const objectsIds = useSelector(state => selectObjectsIds(state));\n  const objectsData = useSelector(state => selectObjectData(state));\n  const [selectedRow, setSelectedRow] = useState(false);\n  //   const [isRowSelected, setIsRowSelected] = useState(false);\n  useEffect(() => {\n    dispatch(getObjects);\n  }, []);\n  const headers = [\"ID\", \"Название\", \"Город\", \"Телефон\", \"Дата\", \"Партнер\", \"Баланс\"];\n  const resetSelectedRow = () => {\n    setSelectedRow(false);\n    setIsRowSelected(false);\n  };\n  const toggleSelectedRow = el => {\n    if (!!el) {\n      if (selectedRow === el) {\n        resetSelectedRow();\n      } else {\n        setIsRowSelected(true);\n        setSelectedRow(el);\n      }\n    } else {\n      resetSelectedRow();\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.objects_wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: styles.table_header,\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: styles.table_row,\n          children: headers === null || headers === void 0 ? void 0 : headers.map(el => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              className: classNames(styles.table_cell, styles.table_cell__header),\n              children: el\n            }, nanoid(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: styles.table_content,\n        children: objectsIds === null || objectsIds === void 0 ? void 0 : objectsIds.map((el, row) => {\n          const object = objectsData[el];\n          const {\n            IDSRV,\n            AMOUNT,\n            CITY,\n            NAME,\n            PHONE,\n            DT\n          } = object;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: classNames(styles.table_row, {\n              [styles.table_row__selected]: selectedRow === el\n            }),\n            onClick: () => toggleSelectedRow(el),\n            children: headers.map((_, idx) => {\n              switch (idx) {\n                default:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles.table_cell\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 27\n                  }, this);\n                case 0:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classNames(styles.table_cell, styles.table_cell__num),\n                    children: IDSRV\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 27\n                  }, this);\n                case 1:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles.table_cell,\n                    children: NAME\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 27\n                  }, this);\n                case 2:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles.table_cell,\n                    children: CITY\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 27\n                  }, this);\n                case 3:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles.table_cell,\n                    children: PHONE\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 27\n                  }, this);\n                case 4:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classNames(styles.table_cell, styles.table_cell__num),\n                    children: DT.substr(0, DT.indexOf(\"T\"))\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 27\n                  }, this);\n                case 5:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles.table_cell,\n                    children: \"UM System Group\"\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 27\n                  }, this);\n                case 6:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classNames(styles.table_cell, styles.table_cell__num),\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: styles.table_cell__balance,\n                      children: AMOUNT\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 29\n                    }, this)\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 27\n                  }, this);\n              }\n            })\n          }, el, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), isRowSelected && /*#__PURE__*/_jsxDEV(Object, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Objects, \"9mi30fcDamNstZ9n5BspO4NoOpg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Objects;\nvar _c;\n$RefreshReg$(_c, \"Objects\");","map":{"version":3,"names":["classNames","nanoid","useEffect","useState","useDispatch","useSelector","selectObjectData","selectObjectsIds","selectObjectsIsLoading","getObjects","styles","Object","Objects","dispatch","isLoading","state","objectsIds","objectsData","selectedRow","setSelectedRow","headers","resetSelectedRow","setIsRowSelected","toggleSelectedRow","el","objects_wrapper","table","table_header","table_row","map","table_cell","table_cell__header","table_content","row","object","IDSRV","AMOUNT","CITY","NAME","PHONE","DT","table_row__selected","_","idx","table_cell__num","substr","indexOf","table_cell__balance","isRowSelected"],"sources":["D:/dev/uno/client/src/Components/obj/Objects.js"],"sourcesContent":["import classNames from \"classnames\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectObjectData,\r\n  selectObjectsIds,\r\n  selectObjectsIsLoading,\r\n} from \"../../store/Objects/selectors\";\r\nimport { getObjects } from \"../../store/Objects/Thunks/getObjects\";\r\nimport styles from \"./styles.module.css\";\r\nimport { Object } from \"../Object/Object\";\r\n\r\nexport const Objects = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => selectObjectsIsLoading(state));\r\n  const objectsIds = useSelector((state) => selectObjectsIds(state));\r\n  const objectsData = useSelector((state) => selectObjectData(state));\r\n  const [selectedRow, setSelectedRow] = useState(false);\r\n//   const [isRowSelected, setIsRowSelected] = useState(false);\r\n  useEffect(() => {\r\n    dispatch(getObjects);\r\n  }, []);\r\n\r\n  const headers = [\r\n    \"ID\",\r\n    \"Название\",\r\n    \"Город\",\r\n    \"Телефон\",\r\n    \"Дата\",\r\n    \"Партнер\",\r\n    \"Баланс\",\r\n  ];\r\n  const resetSelectedRow = () => {\r\n    setSelectedRow(false);\r\n    setIsRowSelected(false);\r\n  };\r\n\r\n  const toggleSelectedRow = (el) => {\r\n    if (!!el) {\r\n      if (selectedRow === el) {\r\n        resetSelectedRow();\r\n      } else {\r\n        setIsRowSelected(true);\r\n        setSelectedRow(el);\r\n      }\r\n    } else {\r\n      resetSelectedRow();\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className={styles.objects_wrapper}>\r\n        <table className={styles.table}>\r\n          <thead className={styles.table_header}>\r\n            <tr className={styles.table_row}>\r\n              {headers?.map((el) => {\r\n                return (\r\n                  <th\r\n                    key={nanoid()}\r\n                    className={classNames(\r\n                      styles.table_cell,\r\n                      styles.table_cell__header\r\n                    )}>\r\n                    {el}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody className={styles.table_content}>\r\n            {objectsIds?.map((el, row) => {\r\n              const object = objectsData[el];\r\n              const { IDSRV, AMOUNT, CITY, NAME, PHONE, DT } = object;\r\n\r\n              return (\r\n                <tr\r\n                  key={el}\r\n                  className={classNames(styles.table_row, {\r\n                    [styles.table_row__selected]: selectedRow === el,\r\n                  })}\r\n                  onClick={() => toggleSelectedRow(el)}>\r\n                  {headers.map((_, idx) => {\r\n                    switch (idx) {\r\n                      default:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={styles.table_cell}></td>\r\n                        );\r\n                      case 0:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={classNames(\r\n                              styles.table_cell,\r\n                              styles.table_cell__num\r\n                            )}>\r\n                            {IDSRV}\r\n                          </td>\r\n                        );\r\n                      case 1:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={styles.table_cell}>\r\n                            {NAME}\r\n                          </td>\r\n                        );\r\n                      case 2:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={styles.table_cell}>\r\n                            {CITY}\r\n                          </td>\r\n                        );\r\n                      case 3:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={styles.table_cell}>\r\n                            {PHONE}\r\n                          </td>\r\n                        );\r\n                      case 4:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={classNames(\r\n                              styles.table_cell,\r\n                              styles.table_cell__num\r\n                            )}>\r\n                            {DT.substr(0, DT.indexOf(\"T\"))}\r\n                          </td>\r\n                        );\r\n                      case 5:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={styles.table_cell}>\r\n                            {\"UM System Group\"}\r\n                          </td>\r\n                        );\r\n                      case 6:\r\n                        return (\r\n                          <td\r\n                            key={nanoid()}\r\n                            className={classNames(\r\n                              styles.table_cell,\r\n                              styles.table_cell__num\r\n                            )}>\r\n                            <div className={styles.table_cell__balance}>\r\n                              {AMOUNT}\r\n                            </div>\r\n                          </td>\r\n                        );\r\n                    }\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n          {isRowSelected && <Object />}\r\n        </table>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}