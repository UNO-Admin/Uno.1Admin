{"ast":null,"code":"import { authSliceActions } from \"..\";\nexport const setNewPassword = _ref => {\n  let {\n    pass,\n    id,\n    newPass\n  } = _ref;\n  return dispatch => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify({\n        pass,\n        newPass,\n        id\n      })\n    };\n    fetch(\"http://localhost:4000/setNewPassword\", options).then(res => res.text()).then(data => {\n      if (data.length > 3) {\n        dispatch(authSliceActions.successChangePass({\n          mess: \"Пароль изменен\"\n        }));\n      } else {\n        dispatch(authSliceActions.setErrorChangePass(data));\n      }\n    }).catch(err => {\n      dispatch(authSliceActions.setErrorChangePass('Ошибка запроса на сервер'));\n    });\n  };\n};","map":{"version":3,"names":["authSliceActions","setNewPassword","pass","id","newPass","dispatch","options","method","headers","body","JSON","stringify","fetch","then","res","text","data","length","successChangePass","mess","setErrorChangePass","catch","err"],"sources":["C:/Development/11312/client/src/store/Auth/Thunks/setNewPassword.js"],"sourcesContent":["import { authSliceActions } from \"..\";\r\n\r\nexport const setNewPassword =\r\n  ({ pass, id, newPass }) =>\r\n  (dispatch) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        pass,\r\n        newPass,\r\n        id,\r\n      }),\r\n    };\r\n\r\n    fetch(\"http://localhost:4000/setNewPassword\", options)\r\n      .then((res) => res.text())\r\n      .then((data) => {\r\n        if (data.length > 3) {\r\n          dispatch(\r\n            authSliceActions.successChangePass({ mess: \"Пароль изменен\" })\r\n          );\r\n        } else {\r\n          dispatch(authSliceActions.setErrorChangePass(data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(authSliceActions.setErrorChangePass('Ошибка запроса на сервер'));\r\n      });\r\n  };\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,IAAI;AAErC,OAAO,MAAMC,cAAc,GACzB;EAAA,IAAC;IAAEC,IAAI;IAAEC,EAAE;IAAEC;EAAQ,CAAC;EAAA,OACrBC,QAAQ,IAAK;IACZ,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBT,IAAI;QACJE,OAAO;QACPD;MACF,CAAC;IACH,CAAC;IAEDS,KAAK,CAAC,sCAAsC,EAAEN,OAAO,CAAC,CACnDO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QACnBZ,QAAQ,CACNL,gBAAgB,CAACkB,iBAAiB,CAAC;UAAEC,IAAI,EAAE;QAAiB,CAAC,CAAC,CAC/D;MACH,CAAC,MAAM;QACLd,QAAQ,CAACL,gBAAgB,CAACoB,kBAAkB,CAACJ,IAAI,CAAC,CAAC;MACrD;IACF,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAK;MACdjB,QAAQ,CAACL,gBAAgB,CAACoB,kBAAkB,CAAC,0BAA0B,CAAC,CAAC;IAC3E,CAAC,CAAC;EACN,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}