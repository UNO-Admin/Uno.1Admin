{"ast":null,"code":"import { objectsSliceActions } from \"..\";\nexport const getFransheses = _ref => {\n  let {\n    userId\n  } = _ref;\n  return dispatch => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify({\n        userId\n      })\n    };\n    fetch(\"/getFranshises\", options).then(res => res.json()).then(data => {\n      dispatch(objectsSliceActions.addFranshises(data));\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"names":["objectsSliceActions","getFransheses","userId","dispatch","options","method","headers","body","JSON","stringify","fetch","then","res","json","data","addFranshises","catch","err","console","log"],"sources":["C:/Development/11312/client/src/store/Objects/Thunks/getFransheses.js"],"sourcesContent":["import { objectsSliceActions } from \"..\";\r\n\r\nexport const getFransheses = ({userId}) => (dispatch) => {\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify({\r\n          userId,\r\n        }),\r\n      };\r\n\r\n    fetch(\"/getFranshises\", options)\r\n    .then(res => res.json()) \r\n    .then(data => {\r\n        dispatch(objectsSliceActions.addFranshises(data))\r\n    })\r\n    .catch(err => console.log(err))\r\n}"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,IAAI;AAExC,OAAO,MAAMC,aAAa,GAAG;EAAA,IAAC;IAACC;EAAM,CAAC;EAAA,OAAMC,QAAQ,IAAK;IACrD,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBP;MACF,CAAC;IACH,CAAC;IAEHQ,KAAK,CAAC,gBAAgB,EAAEN,OAAO,CAAC,CAC/BO,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACVX,QAAQ,CAACH,mBAAmB,CAACe,aAAa,CAACD,IAAI,CAAC,CAAC;IACrD,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}