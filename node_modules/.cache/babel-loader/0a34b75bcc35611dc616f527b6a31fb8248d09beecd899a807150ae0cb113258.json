{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\uno\\\\src\\\\Components\\\\Users\\\\Users.jsx\",\n  _s = $RefreshSig$();\nimport classNames from 'classnames';\nimport styles from './style.module.css';\nimport { nanoid } from 'nanoid';\nimport addIMG from './images/add.svg';\nimport editIMG from './images/edit.svg';\nimport deleteIMG from './images/delete.svg';\nimport { EditPopup } from '../EditPopup/EditPopup';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { usersSliceActions } from '../../store/Users';\nimport { selectUsers } from '../../store/Users/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Users = _ref => {\n  _s();\n  let {\n    asideIsOpened\n  } = _ref;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    data.forEach(el => dispatch(usersSliceActions.addUser(el)));\n  }, []);\n  const users = useSelector(state => selectUsers(state));\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\n  const togglePopup = () => {\n    setIsPopupOpened(!isPopupOpened);\n  };\n  const data = [];\n  for (let i = 0; i < 50; i++) {\n    data.push({\n      'name': 'UM System Group',\n      'email': 'example@mail.ru',\n      'phone': '+77007007070',\n      'role': 'admin',\n      'city': 'Шымкент, Сарыагаш',\n      'balance': '250000'\n    });\n  }\n  const headers = ['#', 'НАИМЕНОВАНИЕ', 'E-mail', 'Телефон', 'Роль', 'Франшиза', 'баланс'];\n\n  // return users ? (\n  //   <table className={styles.table}>\n  //     <thead className={styles.table_header}>\n  //       {headers.map((el) => {\n  //         return (\n  //           <th key={nanoid()} className={classNames(styles.table_cell, styles.table_title)}>\n  //             {el.toUpperCase()}\n  //           </th>\n  //         );\n  //       })}\n  //     </thead>\n  //     <tbody className={styles.table_content}>\n  //       {users.map((el, index) => {\n  //         const cellsValues = Object.values(el);\n\n  //         return (\n  //           <tr key={nanoid()} className={styles.table_row}>\n  //             <td className={classNames(styles.table_cell, styles.table_cell_count)}>\n  //               {index + 1}\n  //             </td>\n  //             {cellsValues.map((cell, idx) => {\n  //               if (idx === cellsValues.length - 1) {\n  //                 const balance = cell ? cell.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') : 0; // add ',' separator at balance column\n  //                 return (\n  //                   <td key={nanoid()} className={styles.table_cell}>\n  //                     <div className={styles.table_cell__balance}>{balance}</div>\n  //                   </td>\n  //                 );\n  //               }\n  //               return (\n  //                 <td key={nanoid()} className={styles.table_cell}>\n  //                   {cell}\n  //                 </td>\n  //               );\n  //             })}\n  //           </tr>\n  //         );\n  //       })}\n  //     </tbody>\n  //     <div\n  //       className={classNames(styles.bar_container, {\n  //         [styles.bar_moved]: !asideIsOpened,\n  //       })}\n  //     >\n  //       <button\n  //         className={classNames(styles.button, styles.bar_button, styles.bar_button__add)}\n  //         onClick={() => togglePopup()}\n  //       >\n  //         <img src={addIMG} alt=\"\" className={styles.bar_buttonImage} />\n  //       </button>\n  //       <button\n  //         className={classNames(styles.button, styles.bar_button, styles.bar_button__edit)}\n  //         onClick={() => console.log('edit')}\n  //       >\n  //         <img src={editIMG} alt=\"\" className={styles.bar_buttonImage} />\n  //       </button>\n  //       <button\n  //         className={classNames(styles.button, styles.bar_button, styles.bar_button__delete)}\n  //         onClick={() => console.log('delete')}\n  //       >\n  //         <img src={deleteIMG} alt=\"\" className={styles.bar_buttonImage} />\n  //       </button>\n  //     </div>\n  //     <EditPopup isPopupOpened={isPopupOpened} togglePopup={togglePopup} />\n  //   </table>\n  // ) : (\n  //   <div>no data</div>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: styles.table,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: styles.table_header,\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: styles.table_row,\n        children: headers.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            className: classNames(styles.table_cell, styles.table_cell__header),\n            children: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      className: styles.table_content,\n      children: users.map(el => {\n        const cellsValues = Object.values(el);\n        return cellsValues.map((item, el) => {\n          return null;\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"JcQQqRuyfJih/m43kZNk3yLII3E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["classNames","styles","nanoid","addIMG","editIMG","deleteIMG","EditPopup","useState","useDispatch","useSelector","useEffect","usersSliceActions","selectUsers","Users","asideIsOpened","dispatch","data","forEach","el","addUser","users","state","isPopupOpened","setIsPopupOpened","togglePopup","i","push","headers","table","table_header","table_row","map","table_cell","table_cell__header","table_content","cellsValues","Object","values","item"],"sources":["C:/Development/uno/src/Components/Users/Users.jsx"],"sourcesContent":["import classNames from 'classnames';\r\nimport styles from './style.module.css';\r\nimport { nanoid } from 'nanoid';\r\nimport addIMG from './images/add.svg';\r\nimport editIMG from './images/edit.svg';\r\nimport deleteIMG from './images/delete.svg';\r\nimport { EditPopup } from '../EditPopup/EditPopup';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { usersSliceActions } from '../../store/Users';\r\nimport { selectUsers } from '../../store/Users/selectors'\r\n\r\nexport const Users = ({ asideIsOpened }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    data.forEach(el => dispatch(usersSliceActions.addUser(el)))\r\n  }, [])\r\n  const users = useSelector((state) => selectUsers(state))\r\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\r\n  const togglePopup = () => {\r\n    setIsPopupOpened(!isPopupOpened);\r\n  };\r\n  \r\n  const data = [];\r\n\r\n  for (let i = 0; i < 50; i++) {\r\n    data.push({\r\n      'name': 'UM System Group',\r\n      'email': 'example@mail.ru',\r\n      'phone': '+77007007070',\r\n      'role': 'admin',\r\n      'city': 'Шымкент, Сарыагаш',\r\n      'balance': '250000',\r\n    });\r\n  }\r\n\r\n  const headers = ['#', 'НАИМЕНОВАНИЕ', 'E-mail', 'Телефон', 'Роль', 'Франшиза', 'баланс'];\r\n\r\n  // return users ? (\r\n  //   <table className={styles.table}>\r\n  //     <thead className={styles.table_header}>\r\n  //       {headers.map((el) => {\r\n  //         return (\r\n  //           <th key={nanoid()} className={classNames(styles.table_cell, styles.table_title)}>\r\n  //             {el.toUpperCase()}\r\n  //           </th>\r\n  //         );\r\n  //       })}\r\n  //     </thead>\r\n  //     <tbody className={styles.table_content}>\r\n  //       {users.map((el, index) => {\r\n  //         const cellsValues = Object.values(el);\r\n\r\n  //         return (\r\n  //           <tr key={nanoid()} className={styles.table_row}>\r\n  //             <td className={classNames(styles.table_cell, styles.table_cell_count)}>\r\n  //               {index + 1}\r\n  //             </td>\r\n  //             {cellsValues.map((cell, idx) => {\r\n  //               if (idx === cellsValues.length - 1) {\r\n  //                 const balance = cell ? cell.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') : 0; // add ',' separator at balance column\r\n  //                 return (\r\n  //                   <td key={nanoid()} className={styles.table_cell}>\r\n  //                     <div className={styles.table_cell__balance}>{balance}</div>\r\n  //                   </td>\r\n  //                 );\r\n  //               }\r\n  //               return (\r\n  //                 <td key={nanoid()} className={styles.table_cell}>\r\n  //                   {cell}\r\n  //                 </td>\r\n  //               );\r\n  //             })}\r\n  //           </tr>\r\n  //         );\r\n  //       })}\r\n  //     </tbody>\r\n  //     <div\r\n  //       className={classNames(styles.bar_container, {\r\n  //         [styles.bar_moved]: !asideIsOpened,\r\n  //       })}\r\n  //     >\r\n  //       <button\r\n  //         className={classNames(styles.button, styles.bar_button, styles.bar_button__add)}\r\n  //         onClick={() => togglePopup()}\r\n  //       >\r\n  //         <img src={addIMG} alt=\"\" className={styles.bar_buttonImage} />\r\n  //       </button>\r\n  //       <button\r\n  //         className={classNames(styles.button, styles.bar_button, styles.bar_button__edit)}\r\n  //         onClick={() => console.log('edit')}\r\n  //       >\r\n  //         <img src={editIMG} alt=\"\" className={styles.bar_buttonImage} />\r\n  //       </button>\r\n  //       <button\r\n  //         className={classNames(styles.button, styles.bar_button, styles.bar_button__delete)}\r\n  //         onClick={() => console.log('delete')}\r\n  //       >\r\n  //         <img src={deleteIMG} alt=\"\" className={styles.bar_buttonImage} />\r\n  //       </button>\r\n  //     </div>\r\n  //     <EditPopup isPopupOpened={isPopupOpened} togglePopup={togglePopup} />\r\n  //   </table>\r\n  // ) : (\r\n  //   <div>no data</div>\r\n  // );\r\n\r\n  return (\r\n    <table className={styles.table} >\r\n      <thead className={styles.table_header}>\r\n        <tr className={styles.table_row}>\r\n        {headers.map(el => {\r\n          return <th className={classNames(styles.table_cell, styles.table_cell__header)}>{el}</th>\r\n        })}\r\n        </tr>\r\n      </thead>\r\n      <tbody className={styles.table_content}>\r\n        {users.map(el => {\r\n          const cellsValues = Object.values(el);\r\n\r\n          return cellsValues.map((item, el) => {\r\n            return null\r\n          })\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  )\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}