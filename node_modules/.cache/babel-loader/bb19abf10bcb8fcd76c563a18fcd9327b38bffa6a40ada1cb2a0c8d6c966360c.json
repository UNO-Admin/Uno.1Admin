{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { selectUserErrorMessage } from \"../../../store/Auth/selectors\";\nexport const useValidate = (email, password) => {\n  _s();\n  const errorMessage = useSelector(state => selectUserErrorMessage(state));\n  let lastAtPos = email === null || email === void 0 ? void 0 : email.lastIndexOf(\"@\");\n  let lastDotPos = email === null || email === void 0 ? void 0 : email.lastIndexOf(\".\");\n  // console.log(setValidate)\n  // if (!email || !password) {\n  //   setValidate({ isValid: false, errorMessage: \"Введите логин и пароль!\" });\n  // } else if (\n  //   !(\n  //     lastAtPos < lastDotPos &&\n  //     lastAtPos > 0 &&\n  //     email.indexOf(\"@@\") === -1 &&\n  //     lastDotPos > 2 &&\n  //     email.length - lastDotPos > 2\n  //   )\n  // ) {\n  //   setValidate({\n  //     isValid: false,\n  //     errorMessage: \"Неверный формат электронной почты\",\n  //   });\n  // } else if (errorMessage) {\n  //   setValidate({\n  //     isValid: false,\n  //     errorMessage: \"Неверный логин или пароль!\",\n  //   });\n  // } else {\n  //   setValidate({ isValid: true, errorMessage: \" \" });\n  // }\n};\n_s(useValidate, \"MgWRP49ur9B2NGzqLuPi0w+Io9Y=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"names":["useSelector","selectUserErrorMessage","useValidate","email","password","errorMessage","state","lastAtPos","lastIndexOf","lastDotPos"],"sources":["C:/Development/11312/client/src/Components/FormElement/hooks/useValidate.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { selectUserErrorMessage } from \"../../../store/Auth/selectors\";\r\n\r\nexport const useValidate = (email, password) => {\r\n    const errorMessage = useSelector((state) => selectUserErrorMessage(state));\r\n    let lastAtPos = email?.lastIndexOf(\"@\");\r\n    let lastDotPos = email?.lastIndexOf(\".\");\r\n    // console.log(setValidate)\r\n    // if (!email || !password) {\r\n    //   setValidate({ isValid: false, errorMessage: \"Введите логин и пароль!\" });\r\n    // } else if (\r\n    //   !(\r\n    //     lastAtPos < lastDotPos &&\r\n    //     lastAtPos > 0 &&\r\n    //     email.indexOf(\"@@\") === -1 &&\r\n    //     lastDotPos > 2 &&\r\n    //     email.length - lastDotPos > 2\r\n    //   )\r\n    // ) {\r\n    //   setValidate({\r\n    //     isValid: false,\r\n    //     errorMessage: \"Неверный формат электронной почты\",\r\n    //   });\r\n    // } else if (errorMessage) {\r\n    //   setValidate({\r\n    //     isValid: false,\r\n    //     errorMessage: \"Неверный логин или пароль!\",\r\n    //   });\r\n    // } else {\r\n    //   setValidate({ isValid: true, errorMessage: \" \" });\r\n    // }\r\n  };"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,sBAAsB,QAAQ,+BAA+B;AAEtE,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAAA;EAC5C,MAAMC,YAAY,GAAGL,WAAW,CAAEM,KAAK,IAAKL,sBAAsB,CAACK,KAAK,CAAC,CAAC;EAC1E,IAAIC,SAAS,GAAGJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,WAAW,CAAC,GAAG,CAAC;EACvC,IAAIC,UAAU,GAAGN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,WAAW,CAAC,GAAG,CAAC;EACxC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAC,GA5BSN,WAAW;EAAA,QACCF,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}