{"ast":null,"code":"export const useValidate = _ref => {\n  let {\n    setValidate,\n    form\n  } = _ref;\n  let lastAtPos = form.email.lastIndexOf(\"@\");\n  let lastDotPos = form.email.lastIndexOf(\".\");\n  if (!form.city.length || !form.email.length || !form.name.length || !form.pass.length || !form.phone.length) {\n    setValidate({\n      isValid: false,\n      errorMessage: \"Пожалуйста, заполните все поля\"\n    });\n  } else if (!(lastAtPos < lastDotPos && lastAtPos > 0 && form.email.indexOf(\"@@\") === -1 && lastDotPos > 2 && form.email.length - lastDotPos > 2)) {\n    setValidate({\n      isValid: false,\n      errorMessage: \"Неверный формат почты\"\n    });\n  } else if (!form.phone.match(/^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/)) {\n    setValidate({\n      isValid: false,\n      errorMessage: \"Длинна номер телефона должна быть не менее 10 символов\"\n    });\n  } else {\n    console.log('last');\n    setValidate({\n      isValid: true,\n      errorMessage: \"   \"\n    });\n  }\n};","map":{"version":3,"names":["useValidate","setValidate","form","lastAtPos","email","lastIndexOf","lastDotPos","city","length","name","pass","phone","isValid","errorMessage","indexOf","match","console","log"],"sources":["C:/Development/11312/client/src/Components/AddPopup/hooks/useValidate.js"],"sourcesContent":["export const useValidate = ({setValidate, form}) => {\r\n    let lastAtPos = form.email.lastIndexOf(\"@\");\r\n    let lastDotPos = form.email.lastIndexOf(\".\");\r\n    if (!form.city.length || !form.email.length || !form.name.length || !form.pass.length || !form.phone.length) {\r\n      setValidate({ isValid: false, errorMessage: \"Пожалуйста, заполните все поля\" });\r\n    } else if (\r\n      !(\r\n        lastAtPos < lastDotPos &&\r\n        lastAtPos > 0 &&\r\n        form.email.indexOf(\"@@\") === -1 &&\r\n        lastDotPos > 2 &&\r\n        form.email.length - lastDotPos > 2\r\n      )\r\n    ) {\r\n      setValidate({ isValid: false, errorMessage: \"Неверный формат почты\" });\r\n    } else if (\r\n      !form.phone.match(/^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/)\r\n    ) {\r\n      setValidate({ isValid: false, errorMessage: \"Длинна номер телефона должна быть не менее 10 символов\" });\r\n    } else {\r\n      console.log('last')\r\n      setValidate({ isValid: true, errorMessage: \"   \" });\r\n    }\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,QAAyB;EAAA,IAAxB;IAACC,WAAW;IAAEC;EAAI,CAAC;EAC3C,IAAIC,SAAS,GAAGD,IAAI,CAACE,KAAK,CAACC,WAAW,CAAC,GAAG,CAAC;EAC3C,IAAIC,UAAU,GAAGJ,IAAI,CAACE,KAAK,CAACC,WAAW,CAAC,GAAG,CAAC;EAC5C,IAAI,CAACH,IAAI,CAACK,IAAI,CAACC,MAAM,IAAI,CAACN,IAAI,CAACE,KAAK,CAACI,MAAM,IAAI,CAACN,IAAI,CAACO,IAAI,CAACD,MAAM,IAAI,CAACN,IAAI,CAACQ,IAAI,CAACF,MAAM,IAAI,CAACN,IAAI,CAACS,KAAK,CAACH,MAAM,EAAE;IAC3GP,WAAW,CAAC;MAAEW,OAAO,EAAE,KAAK;MAAEC,YAAY,EAAE;IAAiC,CAAC,CAAC;EACjF,CAAC,MAAM,IACL,EACEV,SAAS,GAAGG,UAAU,IACtBH,SAAS,GAAG,CAAC,IACbD,IAAI,CAACE,KAAK,CAACU,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAC/BR,UAAU,GAAG,CAAC,IACdJ,IAAI,CAACE,KAAK,CAACI,MAAM,GAAGF,UAAU,GAAG,CAAC,CACnC,EACD;IACAL,WAAW,CAAC;MAAEW,OAAO,EAAE,KAAK;MAAEC,YAAY,EAAE;IAAwB,CAAC,CAAC;EACxE,CAAC,MAAM,IACL,CAACX,IAAI,CAACS,KAAK,CAACI,KAAK,CAAC,sDAAsD,CAAC,EACzE;IACAd,WAAW,CAAC;MAAEW,OAAO,EAAE,KAAK;MAAEC,YAAY,EAAE;IAAyD,CAAC,CAAC;EACzG,CAAC,MAAM;IACLG,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBhB,WAAW,CAAC;MAAEW,OAAO,EAAE,IAAI;MAAEC,YAAY,EAAE;IAAM,CAAC,CAAC;EACrD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}