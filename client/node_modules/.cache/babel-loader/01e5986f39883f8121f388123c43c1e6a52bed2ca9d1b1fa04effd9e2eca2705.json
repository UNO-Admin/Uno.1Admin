{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\11312\\\\client\\\\src\\\\Components\\\\Objects\\\\Objects.js\",\n  _s = $RefreshSig$();\nimport classNames from \"classnames\";\nimport { nanoid } from \"nanoid\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectObjectData, selectObjectsIds, selectObjectsIsLoading } from \"../../store/Objects/selectors\";\nimport { getObjects } from \"../../store/Objects/Thunks/getObjects\";\nimport styles from \"./styles.module.css\";\nimport { Object } from \"../Object/Object\";\nimport { selectUserId } from \"../../store/Auth/selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Objects = () => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => selectObjectsIsLoading(state));\n  const objectsIds = useSelector(state => selectObjectsIds(state));\n  const objectsData = useSelector(state => selectObjectData(state));\n  const [isRowSelected, setIsRowSelected] = useState(false);\n  let userId = useSelector(state => selectUserId(state));\n  if (localStorage.getItem(\"userId\")) {\n    userId = localStorage.getItem(\"userId\");\n  }\n  useEffect(() => {\n    dispatch(getObjects(userId));\n  }, []);\n  const headers = [\"ID\", \"Название\", \"Город\", \"Телефон\", \"Дата\", \"Партнер\", \"Баланс\"];\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.objects_wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: styles.table_header,\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: styles.table_row,\n          children: headers === null || headers === void 0 ? void 0 : headers.map(el => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              className: classNames(styles.table_cell, styles.table_cell__header),\n              children: el\n            }, nanoid(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: styles.table_content,\n        children: objectsIds === null || objectsIds === void 0 ? void 0 : objectsIds.map((el, row) => {\n          const object = objectsData[el];\n          const {\n            IDSRV,\n            AMOUNT,\n            CITY,\n            NAME,\n            PHONE,\n            DT\n          } = object;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: classNames(styles.table_row),\n            onClick: () => setIsRowSelected(IDSRV),\n            children: headers.map((_, idx) => {\n              switch (idx) {\n                default:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles.table_cell\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 25\n                  }, this);\n                case 0:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classNames(styles.table_cell, styles.table_cell__num),\n                    children: IDSRV\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this);\n                case 1:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles.table_cell,\n                    children: NAME\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 25\n                  }, this);\n                case 2:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles.table_cell,\n                    children: CITY\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 25\n                  }, this);\n                case 3:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles.table_cell,\n                    children: PHONE\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 25\n                  }, this);\n                case 4:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classNames(styles.table_cell, styles.table_cell__num),\n                    children: DT.substr(0, DT.indexOf(\"T\"))\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 25\n                  }, this);\n                case 5:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: styles.table_cell,\n                    children: \"UM System Group\"\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 25\n                  }, this);\n                case 6:\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: classNames(styles.table_cell, styles.table_cell__num),\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: styles.table_cell__balance,\n                      children: AMOUNT\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 27\n                    }, this)\n                  }, nanoid(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 25\n                  }, this);\n              }\n            })\n          }, el, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), isRowSelected && /*#__PURE__*/_jsxDEV(Object, {\n        toggleObject: setIsRowSelected,\n        id: isRowSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Objects, \"7k0FZVOSWUfsmg25usJfw7XNEyY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Objects;\nvar _c;\n$RefreshReg$(_c, \"Objects\");","map":{"version":3,"names":["classNames","nanoid","useEffect","useState","useDispatch","useSelector","selectObjectData","selectObjectsIds","selectObjectsIsLoading","getObjects","styles","Object","selectUserId","Objects","dispatch","isLoading","state","objectsIds","objectsData","isRowSelected","setIsRowSelected","userId","localStorage","getItem","headers","objects_wrapper","table","table_header","table_row","map","el","table_cell","table_cell__header","table_content","row","object","IDSRV","AMOUNT","CITY","NAME","PHONE","DT","_","idx","table_cell__num","substr","indexOf","table_cell__balance"],"sources":["C:/Development/11312/client/src/Components/Objects/Objects.js"],"sourcesContent":["import classNames from \"classnames\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectObjectData,\r\n  selectObjectsIds,\r\n  selectObjectsIsLoading,\r\n} from \"../../store/Objects/selectors\";\r\nimport { getObjects } from \"../../store/Objects/Thunks/getObjects\";\r\nimport styles from \"./styles.module.css\";\r\nimport { Object } from \"../Object/Object\";\r\nimport { selectUserId } from \"../../store/Auth/selectors\";\r\n\r\nexport const Objects = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => selectObjectsIsLoading(state));\r\n  const objectsIds = useSelector((state) => selectObjectsIds(state));\r\n  const objectsData = useSelector((state) => selectObjectData(state));\r\n  const [isRowSelected, setIsRowSelected] = useState(false);\r\n  let userId = useSelector((state) => selectUserId(state));\r\n  if (localStorage.getItem(\"userId\")) {\r\n    userId = localStorage.getItem(\"userId\");\r\n  }\r\n  useEffect(() => {\r\n    dispatch(getObjects(userId));\r\n  }, []);\r\n\r\n  const headers = [\r\n    \"ID\",\r\n    \"Название\",\r\n    \"Город\",\r\n    \"Телефон\",\r\n    \"Дата\",\r\n    \"Партнер\",\r\n    \"Баланс\",\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className={styles.objects_wrapper}>\r\n      <table className={styles.table}>\r\n        <thead className={styles.table_header}>\r\n          <tr className={styles.table_row}>\r\n            {headers?.map((el) => {\r\n              return (\r\n                <th\r\n                  key={nanoid()}\r\n                  className={classNames(\r\n                    styles.table_cell,\r\n                    styles.table_cell__header\r\n                  )}\r\n                >\r\n                  {el}\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody className={styles.table_content}>\r\n          {objectsIds?.map((el, row) => {\r\n            const object = objectsData[el];\r\n            const { IDSRV, AMOUNT, CITY, NAME, PHONE, DT } = object;\r\n\r\n            return (\r\n              <tr\r\n                key={el}\r\n                className={classNames(styles.table_row)}\r\n                onClick={() => setIsRowSelected(IDSRV)}\r\n              >\r\n                {headers.map((_, idx) => {\r\n                  switch (idx) {\r\n                    default:\r\n                      return (\r\n                        <td key={nanoid()} className={styles.table_cell}></td>\r\n                      );\r\n                    case 0:\r\n                      return (\r\n                        <td\r\n                          key={nanoid()}\r\n                          className={classNames(\r\n                            styles.table_cell,\r\n                            styles.table_cell__num\r\n                          )}\r\n                        >\r\n                          {IDSRV}\r\n                        </td>\r\n                      );\r\n                    case 1:\r\n                      return (\r\n                        <td key={nanoid()} className={styles.table_cell}>\r\n                          {NAME}\r\n                        </td>\r\n                      );\r\n                    case 2:\r\n                      return (\r\n                        <td key={nanoid()} className={styles.table_cell}>\r\n                          {CITY}\r\n                        </td>\r\n                      );\r\n                    case 3:\r\n                      return (\r\n                        <td key={nanoid()} className={styles.table_cell}>\r\n                          {PHONE}\r\n                        </td>\r\n                      );\r\n                    case 4:\r\n                      return (\r\n                        <td\r\n                          key={nanoid()}\r\n                          className={classNames(\r\n                            styles.table_cell,\r\n                            styles.table_cell__num\r\n                          )}\r\n                        >\r\n                          {DT.substr(0, DT.indexOf(\"T\"))}\r\n                        </td>\r\n                      );\r\n                    case 5:\r\n                      return (\r\n                        <td key={nanoid()} className={styles.table_cell}>\r\n                          {\"UM System Group\"}\r\n                        </td>\r\n                      );\r\n                    case 6:\r\n                      return (\r\n                        <td\r\n                          key={nanoid()}\r\n                          className={classNames(\r\n                            styles.table_cell,\r\n                            styles.table_cell__num\r\n                          )}\r\n                        >\r\n                          <div className={styles.table_cell__balance}>\r\n                            {AMOUNT}\r\n                          </div>\r\n                        </td>\r\n                      );\r\n                  }\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        {isRowSelected && (\r\n          <Object toggleObject={setIsRowSelected} id={isRowSelected} />\r\n        )}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}