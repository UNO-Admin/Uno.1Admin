{"ast":null,"code":"import { selectUserId } from \"../../Auth/selectors\";\nexport const getObjects = (dispatch, getState) => {\n  const userId = selectUserId(getState());\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    body: JSON.stringify({\n      getObjects: `select g.* from (select o.id, o.idsrv, o.name, c.name as city, o.dt, o.org_owner, o.phone, p.name as fran_name, o.worker, (select i.name from tblicense l join tbitems i on l.iditem = i.id where l.idorg = o.id and lastrec = true) as paket, (select klv from tblicense l where l.idorg = o.id and lastrec = true) as klv, (select sum(i.klv) from tblicense l join tblicense_item i on l.id = i.pid where l.idorg = o.id and l.lastrec = true and i.iditem = 4 and current_date between l.dtstart and l.dtend) as mob, coalesce((select sum(i.klv) > 0   from tblicense l   join tblicense_item i on l.id = i.pid   where l.idorg = o.id and   l.lastrec = true and   i.iditem = 5 and   current_date between i.dtstart and i.dtend), false) as tarif, coalesce((select sum(i.klv) > 0      from tblicense l      join tblicense_item i on l.id = i.pid      where l.idorg = o.id and      l.lastrec = true and      i.iditem = 6 and      current_date between i.dtstart and i.dtend), false) as qr, (select min(dtstart) from tblicense where idorg = o.id and lastrec = true) as startdt, (select max(dtend) from tblicense where idorg = o.id and lastrec = true) as enddt, (select sum(amount) from tblicense where idorg = o.id and lastrec = true) as amount, o.tmpcode from tborgs o join franchisee f on o.idfran = f.id join tbcity c on f.idcity = c.id join peoples p on f.idpeople = p.id where coalesce(p.bdel, false) = false and decode((select idaccess from peoples where id = 1), 1, p.id, 1) in (p.pid, p.id)) g;`\n    })\n  };\n  const url = new URL(\"http://localhost:4000/getObjects\");\n  fetch(url, options).then(res => res.json()).then(data => {\n    console.log(data);\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"names":["selectUserId","getObjects","dispatch","getState","userId","options","method","headers","body","JSON","stringify","url","URL","fetch","then","res","json","data","console","log","catch","err"],"sources":["C:/Development/11312/client/src/store/Objects/Thunks/getObjectsById.js"],"sourcesContent":["import { selectUserId } from \"../../Auth/selectors\";\r\n\r\nexport const getObjects = (dispatch, getState) => {\r\n    const userId = selectUserId(getState());\r\n\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify({\r\n          getObjects: `select g.* from (select o.id, o.idsrv, o.name, c.name as city, o.dt, o.org_owner, o.phone, p.name as fran_name, o.worker, (select i.name from tblicense l join tbitems i on l.iditem = i.id where l.idorg = o.id and lastrec = true) as paket, (select klv from tblicense l where l.idorg = o.id and lastrec = true) as klv, (select sum(i.klv) from tblicense l join tblicense_item i on l.id = i.pid where l.idorg = o.id and l.lastrec = true and i.iditem = 4 and current_date between l.dtstart and l.dtend) as mob, coalesce((select sum(i.klv) > 0   from tblicense l   join tblicense_item i on l.id = i.pid   where l.idorg = o.id and   l.lastrec = true and   i.iditem = 5 and   current_date between i.dtstart and i.dtend), false) as tarif, coalesce((select sum(i.klv) > 0      from tblicense l      join tblicense_item i on l.id = i.pid      where l.idorg = o.id and      l.lastrec = true and      i.iditem = 6 and      current_date between i.dtstart and i.dtend), false) as qr, (select min(dtstart) from tblicense where idorg = o.id and lastrec = true) as startdt, (select max(dtend) from tblicense where idorg = o.id and lastrec = true) as enddt, (select sum(amount) from tblicense where idorg = o.id and lastrec = true) as amount, o.tmpcode from tborgs o join franchisee f on o.idfran = f.id join tbcity c on f.idcity = c.id join peoples p on f.idpeople = p.id where coalesce(p.bdel, false) = false and decode((select idaccess from peoples where id = 1), 1, p.id, 1) in (p.pid, p.id)) g;`,\r\n        }),\r\n      };\r\n\r\n      const url = new URL(\"http://localhost:4000/getObjects\");\r\n\r\n      fetch(url, options)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(data)\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n}"],"mappings":"AAAA,SAASA,YAAY,QAAQ,sBAAsB;AAEnD,OAAO,MAAMC,UAAU,GAAG,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAC9C,MAAMC,MAAM,GAAGJ,YAAY,CAACG,QAAQ,EAAE,CAAC;EAEvC,MAAME,OAAO,GAAG;IACZC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBT,UAAU,EAAG;IACf,CAAC;EACH,CAAC;EAED,MAAMU,GAAG,GAAG,IAAIC,GAAG,CAAC,kCAAkC,CAAC;EAEvDC,KAAK,CAACF,GAAG,EAAEN,OAAO,CAAC,CACpBS,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;IACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAK;IACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;EAClB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}