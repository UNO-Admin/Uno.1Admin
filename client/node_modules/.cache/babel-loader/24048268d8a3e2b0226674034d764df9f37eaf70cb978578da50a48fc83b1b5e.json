{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\11312\\\\client\\\\src\\\\Components\\\\FormElement\\\\FormElement.jsx\",\n  _s = $RefreshSig$();\nimport classNames from \"classnames\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authUserIfUserExist } from \"../../store/Auth/Thunks/authUserIfUserExist\";\nimport { selectIsUserLoading, selectIsUserSuccess, selectUserAuthenticated } from \"../../store/Auth/selectors\";\nimport logo from './images/logo.png';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormElement = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userAuthSuccess = useSelector(state => selectIsUserSuccess(state));\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authUserIfUserExist({\n      email,\n      password\n    }));\n    if (userAuthSuccess) {\n      navigate('/cabinet');\n    }\n  };\n  const togglePasswordVisible = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.login_formWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        className: styles.form_logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input_container,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"new-password\",\n          id: \"login\",\n          type: \"text\",\n          className: styles.form_input,\n          required: true,\n          placeholder: \" \",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          className: styles.form_label,\n          children: \"\\u041B\\u043E\\u0433\\u0438\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input_container,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"new-password\",\n          id: \"password\",\n          type: passwordVisible ? 'text' : 'password',\n          className: styles.form_input,\n          required: true,\n          placeholder: \" \",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: styles.form_label,\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classNames({\n            [styles.form_hideButton]: passwordVisible,\n            [styles.form_hidePuttonFilled]: !passwordVisible\n          }),\n          type: \"button\",\n          onClick: togglePasswordVisible\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 87\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.form_submit,\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.form_forget,\n        type: \"button\",\n        children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(FormElement, \"AmUzngh3HBlit2sq+w0rYGxl2/0=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = FormElement;\nvar _c;\n$RefreshReg$(_c, \"FormElement\");","map":{"version":3,"names":["classNames","useState","useDispatch","useSelector","useNavigate","authUserIfUserExist","selectIsUserLoading","selectIsUserSuccess","selectUserAuthenticated","logo","styles","FormElement","email","setEmail","password","setPassword","passwordVisible","setPasswordVisible","navigate","dispatch","userAuthSuccess","state","handleSubmit","event","preventDefault","togglePasswordVisible","login_formWrapper","form","form_logo","input_container","form_input","target","value","form_label","form_hideButton","form_hidePuttonFilled","form_submit","form_forget"],"sources":["C:/Development/11312/client/src/Components/FormElement/FormElement.jsx"],"sourcesContent":["import classNames from \"classnames\"\r\nimport { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { authUserIfUserExist } from \"../../store/Auth/Thunks/authUserIfUserExist\"\r\nimport { selectIsUserLoading, selectIsUserSuccess, selectUserAuthenticated } from \"../../store/Auth/selectors\"\r\nimport logo from './images/logo.png'\r\nimport styles from './styles.module.css'\r\n\r\nexport const FormElement = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('')\r\n    const [passwordVisible, setPasswordVisible] = useState(false)\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const userAuthSuccess = useSelector(state => selectIsUserSuccess(state))\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        dispatch(authUserIfUserExist({email, password}))\r\n        if (userAuthSuccess) {\r\n        navigate('/cabinet');\r\n        }\r\n    }\r\n\r\n    const togglePasswordVisible = () => {\r\n        setPasswordVisible(!passwordVisible);\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.login_formWrapper}>\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n            <img src={logo} alt='logo' className={styles.form_logo} />\r\n            <div className={styles.input_container}>\r\n                <input autoComplete=\"new-password\" id=\"login\" type=\"text\" className={styles.form_input} required placeholder=' ' value={email} onChange={(event) => setEmail(event.target.value)}/>\r\n                <label htmlFor=\"login\" className={styles.form_label}>Логин</label>\r\n            </div>\r\n            <div className={styles.input_container}>\r\n                <input autoComplete=\"new-password\" id=\"password\" type={passwordVisible ? 'text' : 'password'} className={styles.form_input} required placeholder=' ' value={password} onChange={(event) => setPassword(event.target.value)}/>\r\n                <label htmlFor=\"password\" className={styles.form_label}>Пароль</label><button className={classNames({[styles.form_hideButton]: passwordVisible,\r\n                    [styles.form_hidePuttonFilled]: !passwordVisible})} type=\"button\" onClick={togglePasswordVisible}></button>\r\n            </div>\r\n            <button className={styles.form_submit} type=\"submit\">Войти</button>\r\n            <button className={styles.form_forget} type=\"button\">Забыли пароль?</button>\r\n        </form>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}