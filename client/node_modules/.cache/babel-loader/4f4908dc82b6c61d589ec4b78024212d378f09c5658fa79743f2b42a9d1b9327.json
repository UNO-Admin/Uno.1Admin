{"ast":null,"code":"import { authSliceActions } from \"..\";\nexport const setNewPassword = _ref => {\n  let {\n    pass,\n    id,\n    newPass\n  } = _ref;\n  return dispatch => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify({\n        pass,\n        newPass,\n        id\n      })\n    };\n    fetch(\"http://wsuno.xyz:8111/setNewPassword\", options).then(res => res.json()).then(data => {\n      console.log(data);\n      // data ? dispatch(authSliceActions.successChangePass('Пароль изменен успешно')) : dispatch(authSliceActions.setErrorChangePass('Неверный текущий пароль!'))\n    }).catch(err => {\n      dispatch(authSliceActions.setErrorChangePass(\"Ошибка запроса на сервер\"));\n    });\n  };\n};","map":{"version":3,"names":["authSliceActions","setNewPassword","pass","id","newPass","dispatch","options","method","headers","body","JSON","stringify","fetch","then","res","json","data","console","log","catch","err","setErrorChangePass"],"sources":["C:/Development/11312/client/src/store/Auth/Thunks/setNewPassword.js"],"sourcesContent":["import { authSliceActions } from \"..\";\r\n\r\nexport const setNewPassword =\r\n  ({ pass, id, newPass }) =>\r\n  (dispatch) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        pass,\r\n        newPass,\r\n        id,\r\n      }),\r\n    };\r\n\r\n    fetch(\"http://wsuno.xyz:8111/setNewPassword\", options)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data)\r\n        // data ? dispatch(authSliceActions.successChangePass('Пароль изменен успешно')) : dispatch(authSliceActions.setErrorChangePass('Неверный текущий пароль!'))\r\n      })\r\n      .catch((err) => {   \r\n        dispatch(\r\n          authSliceActions.setErrorChangePass(\"Ошибка запроса на сервер\")\r\n        );\r\n      });\r\n  };\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,IAAI;AAErC,OAAO,MAAMC,cAAc,GACzB;EAAA,IAAC;IAAEC,IAAI;IAAEC,EAAE;IAAEC;EAAQ,CAAC;EAAA,OACrBC,QAAQ,IAAK;IACZ,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBT,IAAI;QACJE,OAAO;QACPD;MACF,CAAC;IACH,CAAC;IAEDS,KAAK,CAAC,sCAAsC,EAAEN,OAAO,CAAC,CACnDO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB;IACF,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAK;MACdf,QAAQ,CACNL,gBAAgB,CAACqB,kBAAkB,CAAC,0BAA0B,CAAC,CAChE;IACH,CAAC,CAAC;EACN,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}