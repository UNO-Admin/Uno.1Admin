{"ast":null,"code":"import{usersSliceActions}from\"..\";import{normolizeEntities}from\"../../helpers/normalizeEntites\";export var loadUsers=function loadUsers(_ref){var userId=_ref.userId;return function(dispatch){var options={method:\"POST\",headers:{\"Content-Type\":\"application/json;charset=utf-8\"},body:JSON.stringify({getCity:\"select p.id,p.pid,p.name,p.phone,p.email,p.phone,p.pass,p.idaccess,decode(p.idaccess,1,'admin',2,'master franchises',3,'user')as rolename, (select list(c.name,', ') from franchisee f join tbcity c on f.idcity=c.id where f.idpeople=p.id)as franch, balance, bdel from peoples p where coalesce(p.bdel, false) = false and coalesce(pid,0) = decode((select idaccess from peoples where id=\".concat(userId,\"),1,coalesce(pid,0),2,(select id from peoples where id=\").concat(userId,\"))\")})};dispatch(usersSliceActions.startLoading());var url=new URL(\"http://localhost:4000/getUsers\");fetch(url,options).then(function(res){return res.json();}).then(function(data){dispatch(usersSliceActions.successLoading(normolizeEntities(data)));}).catch(function(err){console.log(err);dispatch(usersSliceActions.failLoading());});};};","map":{"version":3,"names":["usersSliceActions","normolizeEntities","loadUsers","userId","dispatch","options","method","headers","body","JSON","stringify","getCity","startLoading","url","URL","fetch","then","res","json","data","successLoading","catch","err","console","log","failLoading"],"sources":["C:/Development/11312/client/src/store/Users/Thunks/loadUsers.js"],"sourcesContent":["import { usersSliceActions } from \"..\";\r\nimport { normolizeEntities } from \"../../helpers/normalizeEntites\";\r\n\r\nexport const loadUsers = ({userId}) => (dispatch) => {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json;charset=utf-8\",\r\n    },\r\n    body: JSON.stringify({\r\n      getCity: `select p.id,p.pid,p.name,p.phone,p.email,p.phone,p.pass,p.idaccess,decode(p.idaccess,1,'admin',2,'master franchises',3,'user')as rolename, (select list(c.name,', ') from franchisee f join tbcity c on f.idcity=c.id where f.idpeople=p.id)as franch, balance, bdel from peoples p where coalesce(p.bdel, false) = false and coalesce(pid,0) = decode((select idaccess from peoples where id=${userId}),1,coalesce(pid,0),2,(select id from peoples where id=${userId}))`,\r\n    }),\r\n  };\r\n\r\n  dispatch(usersSliceActions.startLoading());\r\n\r\n  const url = new URL(\"http://localhost:4000/getUsers\");\r\n\r\n  fetch(url, options)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      dispatch(usersSliceActions.successLoading(normolizeEntities(data)));\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(usersSliceActions.failLoading());\r\n    })\r\n};\r\n"],"mappings":"AAAA,OAASA,iBAAiB,KAAQ,IAAI,CACtC,OAASC,iBAAiB,KAAQ,gCAAgC,CAElE,MAAO,IAAMC,UAAS,CAAG,QAAZA,UAAS,UAAKC,OAAM,MAANA,MAAM,OAAM,UAACC,QAAQ,CAAK,CACnD,GAAMC,QAAO,CAAG,CACdC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,gCAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,OAAO,yYAAmYR,MAAM,mEAA0DA,MAAM,MACld,CAAC,CACH,CAAC,CAEDC,QAAQ,CAACJ,iBAAiB,CAACY,YAAY,EAAE,CAAC,CAE1C,GAAMC,IAAG,CAAG,GAAIC,IAAG,CAAC,gCAAgC,CAAC,CAErDC,KAAK,CAACF,GAAG,CAAER,OAAO,CAAC,CAChBW,IAAI,CAAC,SAACC,GAAG,QAAKA,IAAG,CAACC,IAAI,EAAE,GAAC,CACzBF,IAAI,CAAC,SAACG,IAAI,CAAK,CACdf,QAAQ,CAACJ,iBAAiB,CAACoB,cAAc,CAACnB,iBAAiB,CAACkB,IAAI,CAAC,CAAC,CAAC,CACrE,CAAC,CAAC,CACDE,KAAK,CAAC,SAACC,GAAG,CAAK,CACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAChBlB,QAAQ,CAACJ,iBAAiB,CAACyB,WAAW,EAAE,CAAC,CAC3C,CAAC,CAAC,CACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}