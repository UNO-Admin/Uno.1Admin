{"ast":null,"code":"import { usersSliceActions } from \"..\";\nimport { normolizeEntities } from \"../../helpers/normalizeEntites\";\nimport { selectUsersIds } from \"../selectors\";\nconst REQ_PARAM = \"select g.*, iif(datediff(day,current_date,g.enddt)<=0,0, iif(datediff(day,current_date,g.enddt)>30,3, iif(g.amount=0,1,2)))as status from ( select o.id,o.idsrv, o.name, c.name as city, o.dt, o.org_owner, o.phone, p.name as fran_name, o.worker, (select i.name from tblicense l join tbitems i on l.iditem=i.id where l.idorg=o.id and lastrec=true) as paket, (select klv from tblicense l where l.idorg=o.id and lastrec=true)as klv, (select sum(i.klv)from tblicense l join tblicense_item i on l.id=i.pid where l.idorg=o.id and l.lastrec=true and i.iditem=4 and current_date between l.dtstart and l.dtend) as mob, coalesce((select sum(i.klv)>0from tblicense l join tblicense_item i on l.id=i.pid where l.idorg=o.id and l.lastrec=true and i.iditem=5 and current_date between i.dtstart and i.dtend),false)as tarif, coalesce((select sum(i.klv)>0from tblicense l join tblicense_item i on l.id=i.pid where l.idorg=o.id and l.lastrec=true and i.iditem=6 and current_date between i.dtstart and i.dtend),false) as qr, (select min(dtstart)from tblicense where idorg=o.id and lastrec=true)as startdt, (select max(dtend)from tblicense where idorg=o.id and lastrec=true) as enddt, (select sum(amount)from tblicense where idorg=o.id and lastrec=true) as amount,o.tmpcode from tborgs o join franchisee f on o.idfran=f.id join tbcity c on f.idcity=c.id join peoples p on f.idpeople=p.id where coalesce(p.bdel, false) = false and decode((select idaccess from peoples where id=:id),1,p.id,:id)in(p.pid,p.id))g;\";\nexport const loadUsersIfNotExist = (dispatch, getState) => {\n  // if (selectUsersIds(getState())?.length > 0) {\n  //     return;\n  //   }\n\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    body: JSON.stringify({\n      getCity: REQ_PARAM\n    })\n  };\n  dispatch(usersSliceActions.startLoading());\n  const url = new URL(\"http://localhost:4000/getUsers\");\n  fetch(url, options).then(res => res.json()).then(data => console.log(data)).catch(err => {\n    console.log(err);\n    dispatch(usersSliceActions.failLoading());\n  });\n};","map":{"version":3,"names":["usersSliceActions","normolizeEntities","selectUsersIds","REQ_PARAM","loadUsersIfNotExist","dispatch","getState","options","method","headers","body","JSON","stringify","getCity","startLoading","url","URL","fetch","then","res","json","data","console","log","catch","err","failLoading"],"sources":["C:/Development/11312/client/src/store/Users/middlewares/loadUsersIfNotExist.js"],"sourcesContent":["import { usersSliceActions } from \"..\";\r\nimport { normolizeEntities } from \"../../helpers/normalizeEntites\";\r\nimport { selectUsersIds } from \"../selectors\";\r\n\r\nconst REQ_PARAM =\r\n  \"select g.*, iif(datediff(day,current_date,g.enddt)<=0,0, iif(datediff(day,current_date,g.enddt)>30,3, iif(g.amount=0,1,2)))as status from ( select o.id,o.idsrv, o.name, c.name as city, o.dt, o.org_owner, o.phone, p.name as fran_name, o.worker, (select i.name from tblicense l join tbitems i on l.iditem=i.id where l.idorg=o.id and lastrec=true) as paket, (select klv from tblicense l where l.idorg=o.id and lastrec=true)as klv, (select sum(i.klv)from tblicense l join tblicense_item i on l.id=i.pid where l.idorg=o.id and l.lastrec=true and i.iditem=4 and current_date between l.dtstart and l.dtend) as mob, coalesce((select sum(i.klv)>0from tblicense l join tblicense_item i on l.id=i.pid where l.idorg=o.id and l.lastrec=true and i.iditem=5 and current_date between i.dtstart and i.dtend),false)as tarif, coalesce((select sum(i.klv)>0from tblicense l join tblicense_item i on l.id=i.pid where l.idorg=o.id and l.lastrec=true and i.iditem=6 and current_date between i.dtstart and i.dtend),false) as qr, (select min(dtstart)from tblicense where idorg=o.id and lastrec=true)as startdt, (select max(dtend)from tblicense where idorg=o.id and lastrec=true) as enddt, (select sum(amount)from tblicense where idorg=o.id and lastrec=true) as amount,o.tmpcode from tborgs o join franchisee f on o.idfran=f.id join tbcity c on f.idcity=c.id join peoples p on f.idpeople=p.id where coalesce(p.bdel, false) = false and decode((select idaccess from peoples where id=:id),1,p.id,:id)in(p.pid,p.id))g;\";\r\n\r\nexport const loadUsersIfNotExist = (dispatch, getState) => {\r\n  // if (selectUsersIds(getState())?.length > 0) {\r\n  //     return;\r\n  //   }\r\n\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json;charset=utf-8\",\r\n    },\r\n    body: JSON.stringify({\r\n      getCity: REQ_PARAM,\r\n    }),\r\n  };\r\n\r\n  dispatch(usersSliceActions.startLoading());\r\n\r\n  const url = new URL(\"http://localhost:4000/getUsers\");\r\n\r\n  fetch(url, options)\r\n    .then((res) => res.json())\r\n    .then((data) => console.log(data))\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(usersSliceActions.failLoading());\r\n    });\r\n};\r\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,IAAI;AACtC,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,cAAc,QAAQ,cAAc;AAE7C,MAAMC,SAAS,GACb,i9CAAi9C;AAEn9C,OAAO,MAAMC,mBAAmB,GAAG,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EACzD;EACA;EACA;;EAEA,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,OAAO,EAAEV;IACX,CAAC;EACH,CAAC;EAEDE,QAAQ,CAACL,iBAAiB,CAACc,YAAY,EAAE,CAAC;EAE1C,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,gCAAgC,CAAC;EAErDC,KAAK,CAACF,GAAG,EAAER,OAAO,CAAC,CAChBW,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CACjCG,KAAK,CAAEC,GAAG,IAAK;IACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IAChBpB,QAAQ,CAACL,iBAAiB,CAAC0B,WAAW,EAAE,CAAC;EAC3C,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}