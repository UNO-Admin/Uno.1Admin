{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  entities: [],\n  status: 'idle'\n};\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    startLoading: () => {\n      return {\n        entities: [],\n        status: 'loading'\n      };\n    },\n    successLoading: (state, action) => {\n      const {\n        entities\n      } = action.payload;\n      return {\n        entities,\n        status: 'success'\n      };\n    },\n    failLoading: () => {\n      return {\n        entities: [],\n        status: 'fail'\n      };\n    },\n    addUser: (state, action) => {\n      const {\n        email,\n        name,\n        phone,\n        city,\n        password,\n        role\n      } = action.payload;\n      state.entities.push({\n        email,\n        name,\n        phone,\n        city,\n        password,\n        role\n      });\n      return state;\n    }\n  }\n});\nexport const usersSliceActions = usersSlice.actions;","map":{"version":3,"names":["createSlice","initialState","entities","status","usersSlice","name","reducers","startLoading","successLoading","state","action","payload","failLoading","addUser","email","phone","city","password","role","push","usersSliceActions","actions"],"sources":["C:/Development/uno/src/store/Users/index.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  entities: [],\r\n  status: 'idle',\r\n};\r\n\r\nexport const usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    startLoading: () => {\r\n      return {\r\n        entities: [],\r\n        status: 'loading',\r\n      };\r\n    },\r\n    successLoading: (state, action) => {\r\n      const { entities } = action.payload;\r\n      return {\r\n        entities,\r\n        status: 'success',\r\n      };\r\n    },\r\n    failLoading: () => {\r\n      return {\r\n        entities: [],\r\n        status: 'fail',\r\n      };\r\n    },\r\n    addUser: (state, action) => {\r\n        const {email, name, phone, city, password, role } = action.payload;\r\n\r\n        state.entities.push({email, name, phone, city, password, role})\r\n\r\n        return state\r\n    },\r\n  },\r\n});\r\n\r\nexport const usersSliceActions = usersSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EACpCK,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACRC,YAAY,EAAE,MAAM;MAClB,OAAO;QACLL,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDK,cAAc,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAER;MAAS,CAAC,GAAGQ,MAAM,CAACC,OAAO;MACnC,OAAO;QACLT,QAAQ;QACRC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDS,WAAW,EAAE,MAAM;MACjB,OAAO;QACLV,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDU,OAAO,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACxB,MAAM;QAACI,KAAK;QAAET,IAAI;QAAEU,KAAK;QAAEC,IAAI;QAAEC,QAAQ;QAAEC;MAAK,CAAC,GAAGR,MAAM,CAACC,OAAO;MAElEF,KAAK,CAACP,QAAQ,CAACiB,IAAI,CAAC;QAACL,KAAK;QAAET,IAAI;QAAEU,KAAK;QAAEC,IAAI;QAAEC,QAAQ;QAAEC;MAAI,CAAC,CAAC;MAE/D,OAAOT,KAAK;IAChB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMW,iBAAiB,GAAGhB,UAAU,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}