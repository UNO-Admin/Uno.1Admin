{"ast":null,"code":"import { authSliceActions } from \"..\";\nexport const authUserIfUserExist = userData => dispatch => {\n  const {\n    email,\n    password\n  } = userData;\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    body: JSON.stringify({\n      getAuth: `select id,name,idaccess,balance from peoples where upper(email)=upper('${email}')and pass = hash(cast('${password}' as varchar(50)));`\n    })\n  };\n  fetch('http://localhost:4000/authUser', options).then(res => res.json()).then(data => {\n    if (data.length === 0) {\n      console.log('handleErrorMessage');\n    } else {\n      dispatch(authSliceActions.login(data[0]));\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"names":["authSliceActions","authUserIfUserExist","userData","dispatch","email","password","options","method","headers","body","JSON","stringify","getAuth","fetch","then","res","json","data","length","console","log","login","catch","err"],"sources":["D:/dev/uno/client/src/store/Auth/middlewres/authUserIfUserExist.js"],"sourcesContent":["import { authSliceActions } from \"..\";\r\n\r\nexport const authUserIfUserExist = (userData) => (dispatch) => {\r\n    const {email, password} = userData;\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify({\r\n          getAuth: `select id,name,idaccess,balance from peoples where upper(email)=upper('${email}')and pass = hash(cast('${password}' as varchar(50)));`,\r\n        }),\r\n      };\r\n\r\n    fetch('http://localhost:4000/authUser', options)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        if (data.length === 0) {\r\n            console.log('handleErrorMessage')\r\n        }\r\n        else {\r\n            dispatch(authSliceActions.login(data[0]))\r\n        }\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,IAAI;AAErC,OAAO,MAAMC,mBAAmB,GAAIC,QAAQ,IAAMC,QAAQ,IAAK;EAC3D,MAAM;IAACC,KAAK;IAAEC;EAAQ,CAAC,GAAGH,QAAQ;EAClC,MAAMI,OAAO,GAAG;IACZC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,OAAO,EAAG,0EAAyER,KAAM,2BAA0BC,QAAS;IAC9H,CAAC;EACH,CAAC;EAEHQ,KAAK,CAAC,gCAAgC,EAAEP,OAAO,CAAC,CAC/CQ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;IACV,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;MACnBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACrC,CAAC,MACI;MACDjB,QAAQ,CAACH,gBAAgB,CAACqB,KAAK,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C;EACJ,CAAC,CAAC,CACDK,KAAK,CAACC,GAAG,IAAI;IACVJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;EACpB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}